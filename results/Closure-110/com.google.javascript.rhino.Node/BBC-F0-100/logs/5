* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 12248
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 1151512652
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 12:59:40.513 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 12:59:49.522 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 13:01:48.746 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
[MASTER] 13:02:25.338 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 13:08:16.594 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - true: 496,0,0| Number of FF evals: 676
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: Line 2263: 496,0,0| Number of FF evals: 265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 22654,18812,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 44,0,0| Number of FF evals: 310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 131,0,0| Number of FF evals: 305
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 6235,5188,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: Line 2311: 208,0,0| Number of FF evals: 124
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 267,0,0| Number of FF evals: 840
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - true: 5347,0,0| Number of FF evals: 1814
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 1903,1493,3| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - true: 44,0,0| Number of FF evals: 334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 898,563,18| Number of FF evals: 7787
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 709: 139,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 13844,10609,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 708: 139,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 707: 139,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - false: 3,0,0| Number of FF evals: 1745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 4716,0,0| Number of FF evals: 1350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 704: 139,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 2665,1523,0| Number of FF evals: 4712
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - true: 2720,0,0| Number of FF evals: 1113
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 948,0,0| Number of FF evals: 1815
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 13638,11412,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: Line 1365: 866,0,0| Number of FF evals: 368
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - false: 87,0,0| Number of FF evals: 405
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 130,0,0| Number of FF evals: 440
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1958: 295,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 14669,9876,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - true: 14,0,0| Number of FF evals: 415
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1959: 295,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 13526,10580,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - false: 1298,0,0| Number of FF evals: 537
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 389,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - true: 208,0,0| Number of FF evals: 346
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 1438,1048,295| Number of FF evals: 7709
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 1604,0,0| Number of FF evals: 588
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 1002,277,0| Number of FF evals: 3142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 19,0,0| Number of FF evals: 152
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 24,0,0| Number of FF evals: 153
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - false: 130,0,0| Number of FF evals: 445
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - false: 1457,0,0| Number of FF evals: 1986
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 9191,7782,14| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 1651,1305,13| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 2170,1478,477| Number of FF evals: 5520
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 221,0,0| Number of FF evals: 526
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 8266,7541,120| Number of FF evals: 13191
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 2720,0,0| Number of FF evals: 1096
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 1155,1076,239| Number of FF evals: 7988
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: Line 223: 130,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 1217,0,0| Number of FF evals: 1213
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mergeLineCharNo(II)I: I15 Branch 141 IFEQ L1197 - false: 460,0,0| Number of FF evals: 717
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 2545,0,0| Number of FF evals: 2118
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 4159,0,0| Number of FF evals: 1519
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 9297,7657,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 4229,781,0| Number of FF evals: 2853
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 1570,845,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 9274,7335,103| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 6147,2966,0| Number of FF evals: 4537
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - true: 1005,0,0| Number of FF evals: 877
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 309,0,0| Number of FF evals: 366
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 5479,1017,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 483,334,48| Number of FF evals: 7424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: root-Branch: 389,0,0| Number of FF evals: 798
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 1506,1154,2| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 389,0,0| Number of FF evals: 219
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 8101,7062,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 4636,683,0| Number of FF evals: 2996
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 2873,2484,859| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1356: 389,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 30311,20887,0| Number of FF evals: 6490
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - true: 14,0,0| Number of FF evals: 398
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 6257,3022,0| Number of FF evals: 4537
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1180: 389,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 2720,0,0| Number of FF evals: 1114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1182: 389,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 6257,3022,0| Number of FF evals: 4523
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 1567,1166,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1186: 389,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1827: 2057,0,0| Number of FF evals: 749
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1826: 2057,0,0| Number of FF evals: 749
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 2332,0,0| Number of FF evals: 1793
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1473: 130,0,0| Number of FF evals: 104
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 1973,1715,28| Number of FF evals: 11959
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 389,0,0| Number of FF evals: 1033
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 5304,4064,0| Number of FF evals: 9609
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 6916,3681,0| Number of FF evals: 5066
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1358: 389,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1357: 389,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 5292,3647,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: Line 2331: 295,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.getDouble()D: Line 162: 130,0,0| Number of FF evals: 115
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 978,0,0| Number of FF evals: 461
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: root-Branch: 1005,0,0| Number of FF evals: 510
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - true: 496,0,0| Number of FF evals: 641
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 640: 866,0,0| Number of FF evals: 368
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 2692,0,0| Number of FF evals: 1888
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 2547,1339,0| Number of FF evals: 7274
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 978,0,0| Number of FF evals: 461
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: Line 2303: 496,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 6459,5297,48| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - true: 1005,0,0| Number of FF evals: 941
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 8427,7729,323| Number of FF evals: 13418
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 15300,12621,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - true: 742,0,0| Number of FF evals: 1528
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 8999,7136,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - true: 1298,0,0| Number of FF evals: 959
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 61024,51600,37915| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 47022,37598,0| Number of FF evals: 10140
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 731,0,0| Number of FF evals: 344
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 94,0,0| Number of FF evals: 491
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 61024,51600,38155| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 983,637,5| Number of FF evals: 9700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 492: 8,0,0| Number of FF evals: 155
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 2897,0,0| Number of FF evals: 1382
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 244,0,0| Number of FF evals: 1269
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 1944,19,0| Number of FF evals: 2334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 12,0,0| Number of FF evals: 528
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 1509,1123,13| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 44,0,0| Number of FF evals: 605
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 7743,5103,0| Number of FF evals: 6347
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 494: 8,0,0| Number of FF evals: 155
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLineno()I: Line 1140: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 17020,12961,0| Number of FF evals: 9560
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - true: 3786,0,0| Number of FF evals: 1449
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 1005,0,0| Number of FF evals: 411
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 106,0,0| Number of FF evals: 741
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: Line 1344: 389,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 10992,5280,0| Number of FF evals: 8520
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 19010,18467,0| Number of FF evals: 13458
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - true: 866,0,0| Number of FF evals: 499
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: Line 2367: 5099,0,0| Number of FF evals: 1402
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 978,0,0| Number of FF evals: 575
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 9259,5384,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 44,0,0| Number of FF evals: 65
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - true: 2,0,0| Number of FF evals: 737
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: Line 2335: 44,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 10760,5944,0| Number of FF evals: 7779
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2035: 2386,0,0| Number of FF evals: 807
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 1567,1166,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 496,0,0| Number of FF evals: 265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: Line 1258: 1898,0,0| Number of FF evals: 661
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 1976,1587,368| Number of FF evals: 11865
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 1922,1521,2| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: root-Branch: 2720,0,0| Number of FF evals: 919
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 3430,0,0| Number of FF evals: 1067
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - false: 1124,735,138| Number of FF evals: 5645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I94 Branch 54 IFNONNULL L488 - true: 11,0,0| Number of FF evals: 236
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 3548,3123,1514| Number of FF evals: 13458
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 1826,1514,103| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: Line 2161: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 1002,277,0| Number of FF evals: 3142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 11261,10562,0| Number of FF evals: 13439
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 2720,0,0| Number of FF evals: 908
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 4053,184,0| Number of FF evals: 2595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 3673,3166,629| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - false: 654,0,0| Number of FF evals: 479
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 1604,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 1147,0,0| Number of FF evals: 459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 61024,51600,0| Number of FF evals: 13448
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 1604,0,0| Number of FF evals: 693
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 611,0,0| Number of FF evals: 300
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 75,0,0| Number of FF evals: 222
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - true: 389,0,0| Number of FF evals: 287
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: Line 2223: 1298,0,0| Number of FF evals: 531
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1271: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1270: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1273: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 496,0,0| Number of FF evals: 678
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1272: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 28472,25700,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: Line 2407: 1447,0,0| Number of FF evals: 550
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 1721,1375,1| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1274: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 2692,0,0| Number of FF evals: 1928
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 15958,14551,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 872: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: Line 1839: 130,0,0| Number of FF evals: 104
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 8119,6232,0| Number of FF evals: 10708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: Line 2291: 295,0,0| Number of FF evals: 160
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 10251,8364,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: Line 2239: 3976,0,0| Number of FF evals: 1191
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 1604,0,0| Number of FF evals: 871
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - false: 114,0,0| Number of FF evals: 261
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 4341,2236,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 2715,8,1| Number of FF evals: 2329
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 6363,4844,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 978,0,0| Number of FF evals: 480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 884: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 978,0,0| Number of FF evals: 521
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 883: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - false: 389,0,0| Number of FF evals: 874
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 878: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 877: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 44,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 2617,0,0| Number of FF evals: 1929
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 873: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: root-Branch: 1005,0,0| Number of FF evals: 622
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2026: 295,0,0| Number of FF evals: 160
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 295,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - true: 2720,0,0| Number of FF evals: 1143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 1447,0,0| Number of FF evals: 812
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 61024,51600,38345| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 5429,3513,0| Number of FF evals: 7265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: root-Branch: 866,0,0| Number of FF evals: 521
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 13782,9643,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 6,0,0| Number of FF evals: 141
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 496,0,0| Number of FF evals: 273
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 7676,5484,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1177: 1147,0,0| Number of FF evals: 474
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1176: 1147,0,0| Number of FF evals: 474
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - true: 44,0,0| Number of FF evals: 332
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 1604,0,0| Number of FF evals: 780
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - false: 496,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 5429,3513,0| Number of FF evals: 7265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - true: 496,0,0| Number of FF evals: 730
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 633,0,0| Number of FF evals: 425
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 3194,2459,0| Number of FF evals: 12173
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 1509,1167,1| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 31822,26298,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: root-Branch: 295,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 291,0,0| Number of FF evals: 886
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 9021,0,0| Number of FF evals: 2220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 30311,20887,0| Number of FF evals: 6491
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - false: 1298,0,0| Number of FF evals: 545
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: Line 2427: 1604,0,0| Number of FF evals: 622
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 1147,0,0| Number of FF evals: 575
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 9175,7768,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: Line 2419: 130,0,0| Number of FF evals: 110
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 6372,5636,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 5209,3839,0| Number of FF evals: 8201
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 130,0,0| Number of FF evals: 110
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 6948,5689,0| Number of FF evals: 11880
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 130,0,0| Number of FF evals: 110
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.getDouble()D: root-Branch: 130,0,0| Number of FF evals: 496
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 123,0,0| Number of FF evals: 293
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - true: 1298,0,0| Number of FF evals: 542
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 389,0,0| Number of FF evals: 216
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1039: 1,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 3445,0,0| Number of FF evals: 1786
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 1517,1171,1| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: root-Branch: 2386,0,0| Number of FF evals: 847
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1033: 1,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1832: 2057,0,0| Number of FF evals: 749
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 469,0,0| Number of FF evals: 357
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1034: 1,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 1791,1405,5| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 44,0,0| Number of FF evals: 629
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: Line 2279: 866,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - false: 3,0,0| Number of FF evals: 1838
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 1037,0,0| Number of FF evals: 2147
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: Line 2135: 130,0,0| Number of FF evals: 117
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 2220,0,0| Number of FF evals: 798
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 1315,933,1| Number of FF evals: 11712
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 1484,726,0| Number of FF evals: 4344
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 1374,619,0| Number of FF evals: 3990
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: Line 2235: 1005,0,0| Number of FF evals: 407
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 472,323,48| Number of FF evals: 7230
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 61024,51600,0| Number of FF evals: 13448
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - true: 159,0,0| Number of FF evals: 598
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: Line 2399: 1005,0,0| Number of FF evals: 407
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 3667,3026,0| Number of FF evals: 13455
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 20759,16214,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 1320,172,0| Number of FF evals: 2634
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 13416,9898,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 3667,3026,0| Number of FF evals: 13455
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 61024,51600,0| Number of FF evals: 13448
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 1826,1514,103| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 44,0,0| Number of FF evals: 375
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: Line 1362: 866,0,0| Number of FF evals: 368
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 502,0,0| Number of FF evals: 1010
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 3858,2812,0| Number of FF evals: 8201
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 10744,9230,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1791: 44,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1792: 44,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: Line 2403: 2220,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 1826,1514,103| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 154,0,0| Number of FF evals: 615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 2220,0,0| Number of FF evals: 782
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1797: 44,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 374,0,0| Number of FF evals: 1563
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 601: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 604: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 9646,6984,0| Number of FF evals: 10679
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 2220,0,0| Number of FF evals: 824
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 389,0,0| Number of FF evals: 579
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 44,0,0| Number of FF evals: 593
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 285,0,0| Number of FF evals: 1621
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - true: 3976,0,0| Number of FF evals: 1359
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 5486,0,0| Number of FF evals: 1518
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 596: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 2827,2269,0| Number of FF evals: 13456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 5957,4840,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 598: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 44,0,0| Number of FF evals: 594
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 52,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 597: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 600: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 599: 496,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 52,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 389,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 52,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 22545,17753,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 52,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 14059,8754,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 164,0,0| Number of FF evals: 548
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - true: 5099,0,0| Number of FF evals: 1566
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 472,323,48| Number of FF evals: 7230
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 1994,1570,1| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 9226,3643,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - false: 3,0,0| Number of FF evals: 1062
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: Line 2383: 4716,0,0| Number of FF evals: 1319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: Line 2156: 611,0,0| Number of FF evals: 305
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 12476,11243,0| Number of FF evals: 13456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 611,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 12254,8350,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 14258,12508,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 10145,8656,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 130,0,0| Number of FF evals: 476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 1604,0,0| Number of FF evals: 584
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 44,0,0| Number of FF evals: 630
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 4616,0,0| Number of FF evals: 1585
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - true: 130,0,0| Number of FF evals: 299
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - true: 2057,0,0| Number of FF evals: 811
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - true: 383,0,0| Number of FF evals: 1743
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: Line 2181: 1005,0,0| Number of FF evals: 424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 1330,963,4| Number of FF evals: 12414
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 1019,350,0| Number of FF evals: 3562
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 208,0,0| Number of FF evals: 475
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 447,0,0| Number of FF evals: 469
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: root-Branch: 130,0,0| Number of FF evals: 134
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: Line 925: 44,0,0| Number of FF evals: 74
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 2170,1106,0| Number of FF evals: 4073
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 9952,8943,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(ZZZ)Ljava/lang/String;: Line 944: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 1162,307,0| Number of FF evals: 3983
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 7654,4410,0| Number of FF evals: 11558
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 170,0,0| Number of FF evals: 392
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - false: 14,0,0| Number of FF evals: 399
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 44,0,0| Number of FF evals: 585
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - true: 1604,0,0| Number of FF evals: 1171
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1944: 389,0,0| Number of FF evals: 232
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 8029,0,0| Number of FF evals: 2047
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: Line 2355: 496,0,0| Number of FF evals: 255
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 8679,1853,0| Number of FF evals: 8589
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 12233,11011,0| Number of FF evals: 13456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 1039,0,0| Number of FF evals: 2150
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: Line 2351: 389,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: root-Branch: 130,0,0| Number of FF evals: 440
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - false: 69,0,0| Number of FF evals: 242
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 338,0,0| Number of FF evals: 1260
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 9145,7232,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 5486,0,0| Number of FF evals: 1948
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - false: 295,0,0| Number of FF evals: 570
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 10936,9791,7092| Number of FF evals: 13289
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - false: 611,0,0| Number of FF evals: 414
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 16692,11668,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 731,0,0| Number of FF evals: 608
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 9187,7493,0| Number of FF evals: 10897
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 1386,645,0| Number of FF evals: 4043
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 22,0,0| Number of FF evals: 146
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 7215,4260,0| Number of FF evals: 6490
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - true: 2057,0,0| Number of FF evals: 1154
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - false: 866,0,0| Number of FF evals: 581
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 4709,3826,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - false: 14,0,0| Number of FF evals: 293
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.<init>(Lcom/google/javascript/rhino/Node$AncestorIterable;)V: root-Branch: 866,0,0| Number of FF evals: 521
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 61024,51600,37834| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 1154,0,0| Number of FF evals: 637
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 4562,2675,0| Number of FF evals: 5510
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 130,0,0| Number of FF evals: 143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 9295,7869,101| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 16,0,0| Number of FF evals: 554
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 286,0,0| Number of FF evals: 781
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 2535,2150,541| Number of FF evals: 13418
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 8651,7395,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 14,0,0| Number of FF evals: 205
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 1424,1039,287| Number of FF evals: 7669
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 130,0,0| Number of FF evals: 110
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 11551,9081,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 44,0,0| Number of FF evals: 601
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 130,0,0| Number of FF evals: 110
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - true: 295,0,0| Number of FF evals: 469
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 44,0,0| Number of FF evals: 615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 611,0,0| Number of FF evals: 428
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: I4 Branch 142 IF_ICMPNE L1209 - false: 44,0,0| Number of FF evals: 1334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: I4 Branch 142 IF_ICMPNE L1209 - true: 116,0,0| Number of FF evals: 962
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - false: 1298,0,0| Number of FF evals: 960
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 2077,346,0| Number of FF evals: 3046
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1943: 389,0,0| Number of FF evals: 232
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 641,259,0| Number of FF evals: 4195
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 18717,15003,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: root-Branch: 1898,0,0| Number of FF evals: 743
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 8119,6232,0| Number of FF evals: 10686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 44,0,0| Number of FF evals: 85
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 587,0,0| Number of FF evals: 2127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: Line 2267: 2720,0,0| Number of FF evals: 908
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 5498,4826,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 5498,4826,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - true: 14,0,0| Number of FF evals: 415
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - true: 44,0,0| Number of FF evals: 1837
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 389,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 1447,0,0| Number of FF evals: 560
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1017: 1,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 10759,9243,13| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1025: 1,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - true: 208,0,0| Number of FF evals: 171
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 4562,2675,0| Number of FF evals: 5559
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 7975,6088,0| Number of FF evals: 10708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - false: 357,0,0| Number of FF evals: 319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 44,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 4575,3038,0| Number of FF evals: 7171
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 44,0,0| Number of FF evals: 630
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1646: 389,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 903,568,18| Number of FF evals: 7797
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1647: 389,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - false: 80,0,0| Number of FF evals: 900
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - true: 1298,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - false: 109,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 250,0,0| Number of FF evals: 1566
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 1730,1395,152| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 6060,0,0| Number of FF evals: 1686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 5085,3394,0| Number of FF evals: 8704
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: Line 2423: 44,0,0| Number of FF evals: 47
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1650: 389,0,0| Number of FF evals: 234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 45 IFNONNULL L421 - true: 121,0,0| Number of FF evals: 427
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 9625,201,0| Number of FF evals: 2347
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: Line 902: 496,0,0| Number of FF evals: 279
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 710,0,0| Number of FF evals: 976
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: root-Branch: 1147,0,0| Number of FF evals: 571
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 1005,0,0| Number of FF evals: 904
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 469,0,0| Number of FF evals: 359
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 947,0,0| Number of FF evals: 1977
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 3411,2767,0| Number of FF evals: 12524
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 389,0,0| Number of FF evals: 222
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 137,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 1246,602,0| Number of FF evals: 4721
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 13193,10723,278| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 4616,0,0| Number of FF evals: 1568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 10263,7817,0| Number of FF evals: 10818
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 4616,0,0| Number of FF evals: 1568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1634: 2057,0,0| Number of FF evals: 749
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - false: 389,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 4465,2596,0| Number of FF evals: 5582
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 171,0,0| Number of FF evals: 306
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: Line 1598: 1298,0,0| Number of FF evals: 497
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - false: 383,0,0| Number of FF evals: 1743
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 571,0,0| Number of FF evals: 645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I70 Branch 122 IF_ICMPNE L966 - false: 6,0,0| Number of FF evals: 436
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 9230,7808,40| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - true: 14,0,0| Number of FF evals: 293
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 16006,11183,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 7660,5612,0| Number of FF evals: 5599
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 496,0,0| Number of FF evals: 241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: Line 2124: 1005,0,0| Number of FF evals: 440
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 1138,742,147| Number of FF evals: 5685
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 812,716,41| Number of FF evals: 6467
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 3667,3026,0| Number of FF evals: 13455
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 6344,4724,1| Number of FF evals: 6478
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLineno()I: root-Branch: 44,0,0| Number of FF evals: 1900
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 14076,11578,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 7462,6501,0| Number of FF evals: 10542
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - true: 1501,0,0| Number of FF evals: 1509
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - true: 130,0,0| Number of FF evals: 639
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: Line 1966: 389,0,0| Number of FF evals: 239
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 1586,1204,11| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 2962,2577,882| Number of FF evals: 13418
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 14258,12508,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - true: 3,0,0| Number of FF evals: 1224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 44,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 9178,7261,29| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1679: 208,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1678: 208,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1677: 208,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: Line 2076: 731,0,0| Number of FF evals: 360
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1671: 208,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 1244,909,88| Number of FF evals: 10759
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 531: 611,0,0| Number of FF evals: 311
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 530: 611,0,0| Number of FF evals: 311
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 9021,0,0| Number of FF evals: 2513
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 16969,7723,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 16060,12818,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - false: 1298,0,0| Number of FF evals: 960
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: Line 2347: 2057,0,0| Number of FF evals: 731
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 1447,0,0| Number of FF evals: 581
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 1817,12,0| Number of FF evals: 2333
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 108,0,0| Number of FF evals: 740
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 1538,31,0| Number of FF evals: 2345
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1801: 6060,0,0| Number of FF evals: 1632
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 1242,616,0| Number of FF evals: 4722
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 129,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 1253,642,0| Number of FF evals: 4323
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 44,0,0| Number of FF evals: 139
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 44,0,0| Number of FF evals: 700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - false: 8,0,0| Number of FF evals: 271
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 620: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 1084,709,2| Number of FF evals: 8814
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 8116,7070,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - false: 3,0,0| Number of FF evals: 1841
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: Line 1137: 1005,0,0| Number of FF evals: 417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 1154,1075,239| Number of FF evals: 7988
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: Line 1136: 1005,0,0| Number of FF evals: 417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 624: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 625: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 626: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 627: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 8116,7070,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 308,0,0| Number of FF evals: 1603
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 630: 1298,0,0| Number of FF evals: 516
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 44,0,0| Number of FF evals: 630
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 267,0,0| Number of FF evals: 834
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.<init>(ILjava/lang/String;II)V: I11 Branch 285 IF_ACMPNE L202 - false: 171,0,0| Number of FF evals: 381
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 997: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 9625,201,0| Number of FF evals: 2331
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 1534,1177,12| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 3714,1639,0| Number of FF evals: 5620
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 626,0,0| Number of FF evals: 942
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 6950,3715,0| Number of FF evals: 5053
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 2170,1106,0| Number of FF evals: 4074
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 14262,11027,50| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - true: 866,0,0| Number of FF evals: 507
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 6950,3715,0| Number of FF evals: 5053
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 6950,3715,0| Number of FF evals: 5053
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - true: 8,0,0| Number of FF evals: 270
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 44,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 25666,23584,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 208,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 2720,0,0| Number of FF evals: 915
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 6257,3022,0| Number of FF evals: 4487
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 183,0,0| Number of FF evals: 221
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 6257,3022,0| Number of FF evals: 4487
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 7604,6248,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 1006: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 7604,6248,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 10581,8964,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 10840,9189,225| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 295,0,0| Number of FF evals: 177
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSyntheticBlock()Z: root-Branch: 1751,0,0| Number of FF evals: 820
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 953: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - false: 157,0,0| Number of FF evals: 602
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 7588,5539,0| Number of FF evals: 5536
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 6348,5865,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSyntheticBlock()Z: Line 1951: 1751,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 978: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 25561,24062,54| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: Line 2247: 130,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 970: 3,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: Line 534: 3786,0,0| Number of FF evals: 1143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - true: 208,0,0| Number of FF evals: 645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: root-Branch: 389,0,0| Number of FF evals: 305
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 6751,5509,2541| Number of FF evals: 13458
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 47022,37598,0| Number of FF evals: 10140
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 3430,0,0| Number of FF evals: 1190
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 3405,2163,1285| Number of FF evals: 5960
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 9322,7952,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 13167,11933,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: Line 2323: 3786,0,0| Number of FF evals: 1125
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 8341,6683,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 14258,12508,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 2220,0,0| Number of FF evals: 774
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 44,0,0| Number of FF evals: 540
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 2220,0,0| Number of FF evals: 774
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 2397,1951,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - false: 1298,0,0| Number of FF evals: 961
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 10680,6067,0| Number of FF evals: 8045
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - true: 496,0,0| Number of FF evals: 615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - true: 1447,0,0| Number of FF evals: 903
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 79,0,0| Number of FF evals: 211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: Line 2327: 208,0,0| Number of FF evals: 125
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - true: 967,0,0| Number of FF evals: 515
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 11358,9946,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 731,0,0| Number of FF evals: 438
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 757,483,20| Number of FF evals: 7709
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 2897,0,0| Number of FF evals: 955
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 3629,2009,0| Number of FF evals: 4928
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - false: 139,0,0| Number of FF evals: 340
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 5066,2575,0| Number of FF evals: 8067
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - true: 130,0,0| Number of FF evals: 447
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - true: 295,0,0| Number of FF evals: 364
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 2622,0,0| Number of FF evals: 1424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 611,0,0| Number of FF evals: 400
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 21758,19489,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: root-Branch: 611,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: root-Branch: 611,0,0| Number of FF evals: 422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - true: 2057,0,0| Number of FF evals: 855
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 16047,12746,0| Number of FF evals: 13456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 52,0,0| Number of FF evals: 288
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: Line 244: 496,0,0| Number of FF evals: 265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 208,0,0| Number of FF evals: 121
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 26262,17479,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 16047,12746,0| Number of FF evals: 13456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 21353,16708,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 8029,0,0| Number of FF evals: 2370
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 8716,1451,0| Number of FF evals: 2938
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 3405,2163,1276| Number of FF evals: 5960
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 4942,3561,0| Number of FF evals: 13434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 44,0,0| Number of FF evals: 596
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 172,0,0| Number of FF evals: 846
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - false: 496,0,0| Number of FF evals: 383
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 837: 611,0,0| Number of FF evals: 301
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - false: 496,0,0| Number of FF evals: 382
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 129,0,0| Number of FF evals: 252
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 838: 611,0,0| Number of FF evals: 301
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 1447,0,0| Number of FF evals: 553
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: root-Branch: 130,0,0| Number of FF evals: 237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 18419,14863,0| Number of FF evals: 13255
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 61024,51600,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 1447,0,0| Number of FF evals: 553
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: root-Branch: 1005,0,0| Number of FF evals: 658
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 44,0,0| Number of FF evals: 586
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 667,0,0| Number of FF evals: 557
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1116: 2720,0,0| Number of FF evals: 872
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: Line 1209: 44,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1117: 2720,0,0| Number of FF evals: 872
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 9347,8802,0| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: root-Branch: 496,0,0| Number of FF evals: 518
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 596,239,0| Number of FF evals: 3865
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 44,0,0| Number of FF evals: 603
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 61024,51600,0| Number of FF evals: 13448
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 1509,1123,13| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 44,0,0| Number of FF evals: 631
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - true: 44,0,0| Number of FF evals: 463
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 18419,14863,0| Number of FF evals: 13255
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 275,0,0| Number of FF evals: 787
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 43,0,0| Number of FF evals: 288
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 61024,51600,37868| Number of FF evals: 13453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - false: 28,0,0| Number of FF evals: 248
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 2599,2111,271| Number of FF evals: 13457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I97 Branch 124 IF_ICMPEQ L972 - false: 7,0,0| Number of FF evals: 913
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 389,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: Line 2415: 2720,0,0| Number of FF evals: 879
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: root-Branch: 389,0,0| Number of FF evals: 372
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: Line 1173: 130,0,0| Number of FF evals: 89
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: Line 1172: 130,0,0| Number of FF evals: 89
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - false: 44,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 3786,0,0| Number of FF evals: 1179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 4159,0,0| Number of FF evals: 1233
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 4263,81,0| Number of FF evals: 2348
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 1028,502,0| Number of FF evals: 5078
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - false: 4401,0,0| Number of FF evals: 1315
* Search finished after 605s and 319 generations, 165232 statements, best individual has fitness: 3112.0
* Minimizing test suite
[MASTER] 13:11:15.559 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 853
* Number of covered goals: 786
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 714
* Number of covered goals: 582
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 97
* Number of covered goals: 97
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 84%
* Total number of goals: 530
* Number of covered goals: 445
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 4536
* Number of covered goals: 2056
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 233
* Number of covered goals: 213
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 75%
* Total number of goals: 714
* Number of covered goals: 533
* Generated 628 tests with total length 8907
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:12:23.039 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6725333333333333% of time used, but only 46/628 tests minimized), falling back to using all assertions
[MASTER] 13:12:42.778 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 13:12:56.037 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 13 seconds more than allowed.
[MASTER] 13:13:12.986 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_122_1628255592843/com/google/javascript/rhino/Node_122_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_122_1628255592843/com/google/javascript/rhino/Node_122_tmp__ESTest_scaffolding.java]]
[MASTER] 13:13:12.986 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:13:12.986 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:13:12.991 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 230
[MASTER] 13:13:12.994 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_122_1628255592843/com/google/javascript/rhino/Node_122_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:13:12 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_122_tmp__ESTest extends Node_122_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newNumber((double) 0, 0, 0);
22:       assertEquals(48, Node.DIRECTIVES);
23:       assertEquals(8, Node.FLAG_NO_THROWS);
24:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
25:       assertEquals(4095, Node.COLUMN_MASK);
26:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
27:       assertEquals(40, Node.ORIGINALNAME_PROP);
28:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
29:       assertEquals(52, Node.LENGTH);
30:       assertEquals(57, Node.LAST_PROP);
31:       assertEquals(36, Node.QUOTED_PROP);
32:       assertEquals(57, Node.REFLECTED_OBJECT);
33:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
34:       assertEquals(15, Node.NO_SIDE_EFFECTS);
35:       assertEquals(55, Node.INFERRED_FUNCTION);
36:       assertEquals(29, Node.JSDOC_INFO_PROP);
37:       assertEquals(39, Node.EMPTY_BLOCK);
38:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
39:       assertEquals(53, Node.INPUT_ID);
40:       assertEquals(37, Node.OPT_ARG_NAME);
41:       assertEquals(2, Node.POST_FLAG);
42:       assertEquals(32, Node.INCRDECR_PROP);
43:       assertEquals(46, Node.IS_NAMESPACE);
44:       assertEquals(47, Node.IS_DISPATCHER);
45:       assertEquals(56, Node.CHANGE_TIME);
46:       assertEquals(51, Node.STATIC_SOURCE_FILE);
47:       assertEquals(12, Node.COLUMN_BITS);
48:       assertEquals(30, Node.VAR_ARGS_NAME);
49:       assertEquals(49, Node.DIRECT_EVAL);
50:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
51:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
52:       assertEquals(54, Node.SLASH_V);
53:       assertEquals(43, Node.IS_CONSTANT_NAME);
54:       assertEquals(1, Node.DECR_FLAG);
55:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
56:       assertEquals(50, Node.FREE_CALL);
57:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
58:       assertNotNull(node0);
59:       assertFalse(node0.isEmpty());
60:       assertFalse(node0.isFor());
61:       assertFalse(node0.isGetterDef());
62:       assertFalse(node0.isVoid());
63:       assertFalse(node0.isTrue());
64:       assertFalse(node0.isDebugger());
65:       assertFalse(node0.isArrayLit());
66:       assertFalse(node0.isNE());
67:       assertFalse(node0.isDelProp());
68:       assertFalse(node0.isIf());
69:       assertEquals(0, node0.getChildCount());
70:       assertFalse(node0.isFunction());
71:       assertFalse(node0.isIn());
72:       assertFalse(node0.isSetterDef());
73:       assertFalse(node0.isInc());
74:       assertFalse(node0.isDefaultCase());
75:       assertFalse(node0.isStringKey());
76:       assertFalse(node0.isParamList());
77:       assertFalse(node0.isSwitch());
78:       assertFalse(node0.isCase());
79:       assertEquals(39, node0.getType());
80:       assertFalse(node0.isRegExp());
81:       assertFalse(node0.isInstanceOf());
82:       assertFalse(node0.isCatch());
83:       assertFalse(node0.isScript());
84:       assertFalse(node0.hasMoreThanOneChild());
85:       assertFalse(node0.isWith());
86:       assertFalse(node0.isBlock());
87:       assertFalse(node0.isTry());
88:       assertFalse(node0.isThis());
89:       assertFalse(node0.isHook());
90:       assertFalse(node0.hasOneChild());
91:       assertFalse(node0.isGetElem());
92:       assertFalse(node0.isLabelName());
93:       assertFalse(node0.isAssign());
94:       assertFalse(node0.hasChildren());
95:       assertFalse(node0.isTypeOf());
96:       assertFalse(node0.isDec());
97:       assertFalse(node0.isCast());
98:       assertFalse(node0.isOr());
99:       assertEquals(0, node0.getCharno());
100:       assertFalse(node0.isExprResult());
101:       assertFalse(node0.isDo());
102:       assertFalse(node0.isContinue());
103:       assertFalse(node0.isAdd());
104:       assertFalse(node0.isNew());
105:       assertFalse(node0.isLabel());
106:       assertFalse(node0.isVar());
107:       assertFalse(node0.isAssignAdd());
108:       assertFalse(node0.isName());
109:       assertFalse(node0.isFalse());
110:       assertFalse(node0.isThrow());
111:       assertFalse(node0.isCall());
112:       assertFalse(node0.isBreak());
113:       assertEquals(0, node0.getSourcePosition());
114:       assertEquals(0, node0.getLineno());
115:       assertFalse(node0.isNull());
116:       assertFalse(node0.isAnd());
117:       assertFalse(node0.isNot());
118:       assertFalse(node0.isObjectLit());
119:       assertFalse(node0.isString());
120:       assertTrue(node0.isNumber());
121:       assertFalse(node0.isComma());
122:       assertFalse(node0.isReturn());
123:       assertFalse(node0.isGetProp());
124:       assertFalse(node0.isWhile());
125:       
126:       Iterable<Node> iterable0 = node0.children();
127:       assertEquals(48, Node.DIRECTIVES);
128:       assertEquals(8, Node.FLAG_NO_THROWS);
129:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
130:       assertEquals(4095, Node.COLUMN_MASK);
131:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
132:       assertEquals(40, Node.ORIGINALNAME_PROP);
133:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
134:       assertEquals(52, Node.LENGTH);
135:       assertEquals(57, Node.LAST_PROP);
136:       assertEquals(36, Node.QUOTED_PROP);
137:       assertEquals(57, Node.REFLECTED_OBJECT);
138:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
139:       assertEquals(15, Node.NO_SIDE_EFFECTS);
140:       assertEquals(55, Node.INFERRED_FUNCTION);
141:       assertEquals(29, Node.JSDOC_INFO_PROP);
142:       assertEquals(39, Node.EMPTY_BLOCK);
143:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
144:       assertEquals(53, Node.INPUT_ID);
145:       assertEquals(37, Node.OPT_ARG_NAME);
146:       assertEquals(2, Node.POST_FLAG);
147:       assertEquals(32, Node.INCRDECR_PROP);
148:       assertEquals(46, Node.IS_NAMESPACE);
149:       assertEquals(47, Node.IS_DISPATCHER);
150:       assertEquals(56, Node.CHANGE_TIME);
151:       assertEquals(51, Node.STATIC_SOURCE_FILE);
152:       assertEquals(12, Node.COLUMN_BITS);
153:       assertEquals(30, Node.VAR_ARGS_NAME);
154:       assertEquals(49, Node.DIRECT_EVAL);
155:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
156:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
157:       assertEquals(54, Node.SLASH_V);
158:       assertEquals(43, Node.IS_CONSTANT_NAME);
159:       assertEquals(1, Node.DECR_FLAG);
160:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
161:       assertEquals(50, Node.FREE_CALL);
162:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
163:       assertNotNull(iterable0);
164:       assertFalse(node0.isEmpty());
165:       assertFalse(node0.isFor());
166:       assertFalse(node0.isGetterDef());
167:       assertFalse(node0.isVoid());
168:       assertFalse(node0.isTrue());
169:       assertFalse(node0.isDebugger());
170:       assertFalse(node0.isArrayLit());
171:       assertFalse(node0.isNE());
172:       assertFalse(node0.isDelProp());
173:       assertFalse(node0.isIf());
174:       assertEquals(0, node0.getChildCount());
175:       assertFalse(node0.isFunction());
176:       assertFalse(node0.isIn());
177:       assertFalse(node0.isSetterDef());
178:       assertFalse(node0.isInc());
179:       assertFalse(node0.isDefaultCase());
180:       assertFalse(node0.isStringKey());
181:       assertFalse(node0.isParamList());
182:       assertFalse(node0.isSwitch());
183:       assertFalse(node0.isCase());
184:       assertEquals(39, node0.getType());
185:       assertFalse(node0.isRegExp());
186:       assertFalse(node0.isInstanceOf());
187:       assertFalse(node0.isCatch());
188:       assertFalse(node0.isScript());
189:       assertFalse(node0.hasMoreThanOneChild());
190:       assertFalse(node0.isWith());
191:       assertFalse(node0.isBlock());
192:       assertFalse(node0.isTry());
193:       assertFalse(node0.isThis());
194:       assertFalse(node0.isHook());
195:       assertFalse(node0.hasOneChild());
196:       assertFalse(node0.isGetElem());
197:       assertFalse(node0.isLabelName());
198:       assertFalse(node0.isAssign());
199:       assertFalse(node0.hasChildren());
200:       assertFalse(node0.isTypeOf());
201:       assertFalse(node0.isDec());
202:       assertFalse(node0.isCast());
203:       assertFalse(node0.isOr());
204:       assertEquals(0, node0.getCharno());
205:       assertFalse(node0.isExprResult());
206:       assertFalse(node0.isDo());
207:       assertFalse(node0.isContinue());
208:       assertFalse(node0.isAdd());
209:       assertFalse(node0.isNew());
210:       assertFalse(node0.isLabel());
211:       assertFalse(node0.isVar());
212:       assertFalse(node0.isAssignAdd());
213:       assertFalse(node0.isName());
214:       assertFalse(node0.isFalse());
215:       assertFalse(node0.isThrow());
216:       assertFalse(node0.isCall());
217:       assertFalse(node0.isBreak());
218:       assertEquals(0, node0.getSourcePosition());
219:       assertEquals(0, node0.getLineno());
220:       assertFalse(node0.isNull());
221:       assertFalse(node0.isAnd());
222:       assertFalse(node0.isNot());
223:       assertFalse(node0.isObjectLit());
224:       assertFalse(node0.isString());
225:       assertTrue(node0.isNumber());
226:       assertFalse(node0.isComma());
227:       assertFalse(node0.isReturn());
228:       assertFalse(node0.isGetProp());
229:       assertFalse(node0.isWhile());
230:       assertFalse(iterable0.contains(node0));
231:       
232:       Node node1 = Node.newString(147, "");
233:       assertEquals(50, Node.FREE_CALL);
234:       assertEquals(52, Node.LENGTH);
235:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
236:       assertEquals(40, Node.ORIGINALNAME_PROP);
237:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
238:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
239:       assertEquals(39, Node.EMPTY_BLOCK);
240:       assertEquals(57, Node.LAST_PROP);
241:       assertEquals(30, Node.VAR_ARGS_NAME);
242:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
243:       assertEquals(51, Node.STATIC_SOURCE_FILE);
244:       assertEquals(1, Node.DECR_FLAG);
245:       assertEquals(32, Node.INCRDECR_PROP);
246:       assertEquals(43, Node.IS_CONSTANT_NAME);
247:       assertEquals(46, Node.IS_NAMESPACE);
248:       assertEquals(54, Node.SLASH_V);
249:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
250:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
251:       assertEquals(29, Node.JSDOC_INFO_PROP);
252:       assertEquals(53, Node.INPUT_ID);
253:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
254:       assertEquals(2, Node.POST_FLAG);
255:       assertEquals(47, Node.IS_DISPATCHER);
256:       assertEquals(12, Node.COLUMN_BITS);
257:       assertEquals(55, Node.INFERRED_FUNCTION);
258:       assertEquals(4095, Node.COLUMN_MASK);
259:       assertEquals(49, Node.DIRECT_EVAL);
260:       assertEquals(15, Node.NO_SIDE_EFFECTS);
261:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
262:       assertEquals(8, Node.FLAG_NO_THROWS);
263:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
264:       assertEquals(37, Node.OPT_ARG_NAME);
265:       assertEquals(36, Node.QUOTED_PROP);
266:       assertEquals(48, Node.DIRECTIVES);
267:       assertEquals(56, Node.CHANGE_TIME);
268:       assertEquals(57, Node.REFLECTED_OBJECT);
269:       assertNotNull(node1);
270:       assertFalse(node1.isExprResult());
271:       assertFalse(node1.isScript());
272:       assertFalse(node1.hasOneChild());
273:       assertFalse(node1.isCast());
274:       assertFalse(node1.isGetElem());
275:       assertFalse(node1.hasChildren());
276:       assertFalse(node1.isInstanceOf());
277:       assertFalse(node1.isDec());
278:       assertFalse(node1.isTypeOf());
279:       assertFalse(node1.isAssign());
280:       assertFalse(node1.isWith());
281:       assertFalse(node1.isComma());
282:       assertTrue(node1.isGetterDef());
283:       assertFalse(node1.isThis());
284:       assertFalse(node1.isReturn());
285:       assertFalse(node1.isGetProp());
286:       assertFalse(node1.isLabelName());
287:       assertFalse(node1.isObjectLit());
288:       assertFalse(node1.isAnd());
289:       assertEquals((-1), node1.getSourcePosition());
290:       assertFalse(node1.isNot());
291:       assertFalse(node1.isNumber());
292:       assertEquals((-1), node1.getCharno());
293:       assertFalse(node1.isNew());
294:       assertFalse(node1.isAdd());
295:       assertFalse(node1.isWhile());
296:       assertFalse(node1.isDo());
297:       assertFalse(node1.isSwitch());
298:       assertFalse(node1.isCall());
299:       assertFalse(node1.isVar());
300:       assertFalse(node1.isNull());
301:       assertFalse(node1.isLabel());
302:       assertFalse(node1.isBreak());
303:       assertFalse(node1.isDelProp());
304:       assertFalse(node1.isName());
305:       assertFalse(node1.isAssignAdd());
306:       assertFalse(node1.isEmpty());
307:       assertFalse(node1.isOr());
308:       assertFalse(node1.isVoid());
309:       assertFalse(node1.isTrue());
310:       assertFalse(node1.isDebugger());
311:       assertFalse(node1.isTry());
312:       assertFalse(node1.isDefaultCase());
313:       assertFalse(node1.isCatch());
314:       assertFalse(node1.isArrayLit());
315:       assertFalse(node1.isFor());
316:       assertEquals(0, node1.getChildCount());
317:       assertFalse(node1.isRegExp());
318:       assertFalse(node1.isFunction());
319:       assertFalse(node1.isParamList());
320:       assertFalse(node1.isStringKey());
321:       assertFalse(node1.isCase());
322:       assertFalse(node1.isString());
323:       assertFalse(node1.isBlock());
324:       assertFalse(node1.isInc());
325:       assertFalse(node1.isContinue());
326:       assertFalse(node1.isThrow());
327:       assertFalse(node1.isHook());
328:       assertFalse(node1.hasMoreThanOneChild());
329:       assertFalse(node1.isFalse());
330:       assertFalse(node1.isNE());
331:       assertFalse(node1.isSetterDef());
332:       assertFalse(node1.isIf());
333:       assertEquals((-1), node1.getLineno());
334:       assertFalse(node1.isIn());
335:       assertEquals(147, node1.getType());
336:       assertFalse(node1.equals((Object)node0));
337:       
338:       Node node2 = new Node(2);
339:       assertEquals(12, Node.COLUMN_BITS);
340:       assertEquals(30, Node.VAR_ARGS_NAME);
341:       assertEquals(46, Node.IS_NAMESPACE);
342:       assertEquals(51, Node.STATIC_SOURCE_FILE);
343:       assertEquals(37, Node.OPT_ARG_NAME);
344:       assertEquals(2, Node.POST_FLAG);
345:       assertEquals(54, Node.SLASH_V);
346:       assertEquals(56, Node.CHANGE_TIME);
347:       assertEquals(49, Node.DIRECT_EVAL);
348:       assertEquals(40, Node.ORIGINALNAME_PROP);
349:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
350:       assertEquals(57, Node.REFLECTED_OBJECT);
351:       assertEquals(47, Node.IS_DISPATCHER);
352:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
353:       assertEquals(8, Node.FLAG_NO_THROWS);
354:       assertEquals(39, Node.EMPTY_BLOCK);
355:       assertEquals(52, Node.LENGTH);
356:       assertEquals(57, Node.LAST_PROP);
357:       assertEquals(29, Node.JSDOC_INFO_PROP);
358:       assertEquals(15, Node.NO_SIDE_EFFECTS);
359:       assertEquals(53, Node.INPUT_ID);
360:       assertEquals(55, Node.INFERRED_FUNCTION);
361:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
362:       assertEquals(4095, Node.COLUMN_MASK);
363:       assertEquals(36, Node.QUOTED_PROP);
364:       assertEquals(48, Node.DIRECTIVES);
365:       assertEquals(43, Node.IS_CONSTANT_NAME);
366:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
367:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
368:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
369:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
370:       assertEquals(50, Node.FREE_CALL);
371:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
372:       assertEquals(32, Node.INCRDECR_PROP);
373:       assertEquals(1, Node.DECR_FLAG);
374:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
375:       assertNotNull(node2);
376:       assertFalse(node2.isGetProp());
377:       assertFalse(node2.isThis());
378:       assertFalse(node2.isComma());
379:       assertFalse(node2.isBreak());
380:       assertFalse(node2.isInstanceOf());
381:       assertFalse(node2.isObjectLit());
382:       assertFalse(node2.isAnd());
383:       assertFalse(node2.isNot());
384:       assertFalse(node2.isInc());
385:       assertFalse(node2.isCast());
386:       assertFalse(node2.isThrow());
387:       assertFalse(node2.isFalse());
388:       assertFalse(node2.isLabel());
389:       assertEquals((-1), node2.getLineno());
390:       assertFalse(node2.isIn());
391:       assertFalse(node2.isGetterDef());
392:       assertFalse(node2.isNumber());
393:       assertFalse(node2.isLabelName());
394:       assertFalse(node2.isArrayLit());
395:       assertFalse(node2.isIf());
396:       assertFalse(node2.isNE());
397:       assertFalse(node2.isSwitch());
398:       assertEquals((-1), node2.getCharno());
399:       assertFalse(node2.isBlock());
400:       assertFalse(node2.isTry());
401:       assertFalse(node2.isRegExp());
402:       assertFalse(node2.isWith());
403:       assertFalse(node2.isScript());
404:       assertEquals(2, node2.getType());
405:       assertFalse(node2.hasMoreThanOneChild());
406:       assertFalse(node2.hasOneChild());
407:       assertFalse(node2.isCase());
408:       assertFalse(node2.isHook());
409:       assertFalse(node2.isFor());
410:       assertFalse(node2.isSetterDef());
411:       assertEquals(0, node2.getChildCount());
412:       assertFalse(node2.isCatch());
413:       assertFalse(node2.isName());
414:       assertFalse(node2.isCall());
415:       assertFalse(node2.isNull());
416:       assertFalse(node2.isParamList());
417:       assertFalse(node2.isStringKey());
418:       assertFalse(node2.isFunction());
419:       assertFalse(node2.isTrue());
420:       assertFalse(node2.isNew());
421:       assertFalse(node2.isAdd());
422:       assertFalse(node2.isContinue());
423:       assertFalse(node2.isDo());
424:       assertFalse(node2.isDefaultCase());
425:       assertFalse(node2.isVar());
426:       assertFalse(node2.isAssignAdd());
427:       assertFalse(node2.isOr());
428:       assertEquals((-1), node2.getSourcePosition());
429:       assertFalse(node2.isDec());
430:       assertFalse(node2.isTypeOf());
431:       assertFalse(node2.isEmpty());
432:       assertFalse(node2.isGetElem());
433:       assertFalse(node2.isDelProp());
434:       assertFalse(node2.isVoid());
435:       assertFalse(node2.isDebugger());
436:       assertFalse(node2.isExprResult());
437:       assertFalse(node2.isString());
438:       assertFalse(node2.isAssign());
439:       assertFalse(node2.hasChildren());
440:       assertFalse(node2.isReturn());
441:       assertFalse(node2.isWhile());
442:       assertFalse(node2.equals((Object)node0));
443:       assertFalse(node2.equals((Object)node1));
444:       
445:       node1.setChangeTime(1);
446:       assertEquals(50, Node.FREE_CALL);
447:       assertEquals(52, Node.LENGTH);
448:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
449:       assertEquals(40, Node.ORIGINALNAME_PROP);
450:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
451:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
452:       assertEquals(39, Node.EMPTY_BLOCK);
453:       assertEquals(57, Node.LAST_PROP);
454:       assertEquals(30, Node.VAR_ARGS_NAME);
455:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
456:       assertEquals(51, Node.STATIC_SOURCE_FILE);
457:       assertEquals(1, Node.DECR_FLAG);
458:       assertEquals(32, Node.INCRDECR_PROP);
459:       assertEquals(43, Node.IS_CONSTANT_NAME);
460:       assertEquals(46, Node.IS_NAMESPACE);
461:       assertEquals(54, Node.SLASH_V);
462:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
463:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
464:       assertEquals(29, Node.JSDOC_INFO_PROP);
465:       assertEquals(53, Node.INPUT_ID);
466:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
467:       assertEquals(2, Node.POST_FLAG);
468:       assertEquals(47, Node.IS_DISPATCHER);
469:       assertEquals(12, Node.COLUMN_BITS);
470:       assertEquals(55, Node.INFERRED_FUNCTION);
471:       assertEquals(4095, Node.COLUMN_MASK);
472:       assertEquals(49, Node.DIRECT_EVAL);
473:       assertEquals(15, Node.NO_SIDE_EFFECTS);
474:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
475:       assertEquals(8, Node.FLAG_NO_THROWS);
476:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
477:       assertEquals(37, Node.OPT_ARG_NAME);
478:       assertEquals(36, Node.QUOTED_PROP);
479:       assertEquals(48, Node.DIRECTIVES);
480:       assertEquals(56, Node.CHANGE_TIME);
481:       assertEquals(57, Node.REFLECTED_OBJECT);
482:       assertFalse(node1.isExprResult());
483:       assertFalse(node1.isScript());
484:       assertFalse(node1.hasOneChild());
485:       assertFalse(node1.isCast());
486:       assertFalse(node1.isGetElem());
487:       assertFalse(node1.hasChildren());
488:       assertFalse(node1.isInstanceOf());
489:       assertFalse(node1.isDec());
490:       assertFalse(node1.isTypeOf());
491:       assertFalse(node1.isAssign());
492:       assertFalse(node1.isWith());
493:       assertFalse(node1.isComma());
494:       assertTrue(node1.isGetterDef());
495:       assertFalse(node1.isThis());
496:       assertFalse(node1.isReturn());
497:       assertFalse(node1.isGetProp());
498:       assertFalse(node1.isLabelName());
499:       assertFalse(node1.isObjectLit());
500:       assertFalse(node1.isAnd());
501:       assertEquals((-1), node1.getSourcePosition());
502:       assertFalse(node1.isNot());
503:       assertFalse(node1.isNumber());
504:       assertEquals((-1), node1.getCharno());
505:       assertFalse(node1.isNew());
506:       assertFalse(node1.isAdd());
507:       assertFalse(node1.isWhile());
508:       assertFalse(node1.isDo());
509:       assertFalse(node1.isSwitch());
510:       assertFalse(node1.isCall());
511:       assertFalse(node1.isVar());
512:       assertFalse(node1.isNull());
513:       assertFalse(node1.isLabel());
514:       assertFalse(node1.isBreak());
515:       assertFalse(node1.isDelProp());
516:       assertFalse(node1.isName());
517:       assertFalse(node1.isAssignAdd());
518:       assertFalse(node1.isEmpty());
519:       assertFalse(node1.isOr());
520:       assertFalse(node1.isVoid());
521:       assertFalse(node1.isTrue());
522:       assertFalse(node1.isDebugger());
523:       assertFalse(node1.isTry());
524:       assertFalse(node1.isDefaultCase());
525:       assertFalse(node1.isCatch());
526:       assertFalse(node1.isArrayLit());
527:       assertFalse(node1.isFor());
528:       assertEquals(0, node1.getChildCount());
529:       assertFalse(node1.isRegExp());
530:       assertFalse(node1.isFunction());
531:       assertFalse(node1.isParamList());
532:       assertFalse(node1.isStringKey());
533:       assertFalse(node1.isCase());
534:       assertFalse(node1.isString());
535:       assertFalse(node1.isBlock());
536:       assertFalse(node1.isInc());
537:       assertFalse(node1.isContinue());
538:       assertFalse(node1.isThrow());
539:       assertFalse(node1.isHook());
540:       assertFalse(node1.hasMoreThanOneChild());
541:       assertFalse(node1.isFalse());
542:       assertFalse(node1.isNE());
543:       assertFalse(node1.isSetterDef());
544:       assertFalse(node1.isIf());
545:       assertEquals((-1), node1.getLineno());
546:       assertFalse(node1.isIn());
547:       assertEquals(147, node1.getType());
548:       assertFalse(node1.equals((Object)node2));
549:       assertFalse(node1.equals((Object)node0));
550:       
551:       boolean boolean0 = node2.isBreak();
552:       assertEquals(12, Node.COLUMN_BITS);
553:       assertEquals(30, Node.VAR_ARGS_NAME);
554:       assertEquals(46, Node.IS_NAMESPACE);
555:       assertEquals(51, Node.STATIC_SOURCE_FILE);
556:       assertEquals(37, Node.OPT_ARG_NAME);
557:       assertEquals(2, Node.POST_FLAG);
558:       assertEquals(54, Node.SLASH_V);
559:       assertEquals(56, Node.CHANGE_TIME);
560:       assertEquals(49, Node.DIRECT_EVAL);
561:       assertEquals(40, Node.ORIGINALNAME_PROP);
562:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
563:       assertEquals(57, Node.REFLECTED_OBJECT);
564:       assertEquals(47, Node.IS_DISPATCHER);
565:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
566:       assertEquals(8, Node.FLAG_NO_THROWS);
567:       assertEquals(39, Node.EMPTY_BLOCK);
568:       assertEquals(52, Node.LENGTH);
569:       assertEquals(57, Node.LAST_PROP);
570:       assertEquals(29, Node.JSDOC_INFO_PROP);
571:       assertEquals(15, Node.NO_SIDE_EFFECTS);
572:       assertEquals(53, Node.INPUT_ID);
573:       assertEquals(55, Node.INFERRED_FUNCTION);
574:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
575:       assertEquals(4095, Node.COLUMN_MASK);
576:       assertEquals(36, Node.QUOTED_PROP);
577:       assertEquals(48, Node.DIRECTIVES);
578:       assertEquals(43, Node.IS_CONSTANT_NAME);
579:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
580:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
581:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
582:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
583:       assertEquals(50, Node.FREE_CALL);
584:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
585:       assertEquals(32, Node.INCRDECR_PROP);
586:       assertEquals(1, Node.DECR_FLAG);
587:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
588:       assertFalse(node2.isGetProp());
589:       assertFalse(node2.isThis());
590:       assertFalse(node2.isComma());
591:       assertFalse(node2.isBreak());
592:       assertFalse(node2.isInstanceOf());
593:       assertFalse(node2.isObjectLit());
594:       assertFalse(node2.isAnd());
595:       assertFalse(node2.isNot());
596:       assertFalse(node2.isInc());
597:       assertFalse(node2.isCast());
598:       assertFalse(node2.isThrow());
599:       assertFalse(node2.isFalse());
600:       assertFalse(node2.isLabel());
601:       assertEquals((-1), node2.getLineno());
602:       assertFalse(node2.isIn());
603:       assertFalse(node2.isGetterDef());
604:       assertFalse(node2.isNumber());
605:       assertFalse(node2.isLabelName());
606:       assertFalse(node2.isArrayLit());
607:       assertFalse(node2.isIf());
608:       assertFalse(node2.isNE());
609:       assertFalse(node2.isSwitch());
610:       assertEquals((-1), node2.getCharno());
611:       assertFalse(node2.isBlock());
612:       assertFalse(node2.isTry());
613:       assertFalse(node2.isRegExp());
614:       assertFalse(node2.isWith());
615:       assertFalse(node2.isScript());
616:       assertEquals(2, node2.getType());
617:       assertFalse(node2.hasMoreThanOneChild());
618:       assertFalse(node2.hasOneChild());
619:       assertFalse(node2.isCase());
620:       assertFalse(node2.isHook());
621:       assertFalse(node2.isFor());
622:       assertFalse(node2.isSetterDef());
623:       assertEquals(0, node2.getChildCount());
624:       assertFalse(node2.isCatch());
625:       assertFalse(node2.isName());
626:       assertFalse(node2.isCall());
627:       assertFalse(node2.isNull());
628:       assertFalse(node2.isParamList());
629:       assertFalse(node2.isStringKey());
630:       assertFalse(node2.isFunction());
631:       assertFalse(node2.isTrue());
632:       assertFalse(node2.isNew());
633:       assertFalse(node2.isAdd());
634:       assertFalse(node2.isContinue());
635:       assertFalse(node2.isDo());
636:       assertFalse(node2.isDefaultCase());
637:       assertFalse(node2.isVar());
638:       assertFalse(node2.isAssignAdd());
639:       assertFalse(node2.isOr());
640:       assertEquals((-1), node2.getSourcePosition());
641:       assertFalse(node2.isDec());
642:       assertFalse(node2.isTypeOf());
643:       assertFalse(node2.isEmpty());
644:       assertFalse(node2.isGetElem());
645:       assertFalse(node2.isDelProp());
646:       assertFalse(node2.isVoid());
647:       assertFalse(node2.isDebugger());
648:       assertFalse(node2.isExprResult());
649:       assertFalse(node2.isString());
650:       assertFalse(node2.isAssign());
651:       assertFalse(node2.hasChildren());
652:       assertFalse(node2.isReturn());
653:       assertFalse(node2.isWhile());
654:       assertFalse(boolean0);
655:       assertFalse(node2.equals((Object)node0));
656:       assertFalse(node2.equals((Object)node1));
657:       
658:       int int0 = node1.getIntProp((-3460));
659:       assertEquals(50, Node.FREE_CALL);
660:       assertEquals(52, Node.LENGTH);
661:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
662:       assertEquals(40, Node.ORIGINALNAME_PROP);
663:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
664:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
665:       assertEquals(39, Node.EMPTY_BLOCK);
666:       assertEquals(57, Node.LAST_PROP);
667:       assertEquals(30, Node.VAR_ARGS_NAME);
668:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
669:       assertEquals(51, Node.STATIC_SOURCE_FILE);
670:       assertEquals(1, Node.DECR_FLAG);
671:       assertEquals(32, Node.INCRDECR_PROP);
672:       assertEquals(43, Node.IS_CONSTANT_NAME);
673:       assertEquals(46, Node.IS_NAMESPACE);
674:       assertEquals(54, Node.SLASH_V);
675:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
676:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
677:       assertEquals(29, Node.JSDOC_INFO_PROP);
678:       assertEquals(53, Node.INPUT_ID);
679:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
680:       assertEquals(2, Node.POST_FLAG);
681:       assertEquals(47, Node.IS_DISPATCHER);
682:       assertEquals(12, Node.COLUMN_BITS);
683:       assertEquals(55, Node.INFERRED_FUNCTION);
684:       assertEquals(4095, Node.COLUMN_MASK);
685:       assertEquals(49, Node.DIRECT_EVAL);
686:       assertEquals(15, Node.NO_SIDE_EFFECTS);
687:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
688:       assertEquals(8, Node.FLAG_NO_THROWS);
689:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
690:       assertEquals(37, Node.OPT_ARG_NAME);
691:       assertEquals(36, Node.QUOTED_PROP);
692:       assertEquals(48, Node.DIRECTIVES);
693:       assertEquals(56, Node.CHANGE_TIME);
694:       assertEquals(57, Node.REFLECTED_OBJECT);
695:       assertFalse(node1.isExprResult());
696:       assertFalse(node1.isScript());
697:       assertFalse(node1.hasOneChild());
698:       assertFalse(node1.isCast());
699:       assertFalse(node1.isGetElem());
700:       assertFalse(node1.hasChildren());
701:       assertFalse(node1.isInstanceOf());
702:       assertFalse(node1.isDec());
703:       assertFalse(node1.isTypeOf());
704:       assertFalse(node1.isAssign());
705:       assertFalse(node1.isWith());
706:       assertFalse(node1.isComma());
707:       assertTrue(node1.isGetterDef());
708:       assertFalse(node1.isThis());
709:       assertFalse(node1.isReturn());
710:       assertFalse(node1.isGetProp());
711:       assertFalse(node1.isLabelName());
712:       assertFalse(node1.isObjectLit());
713:       assertFalse(node1.isAnd());
714:       assertEquals((-1), node1.getSourcePosition());
715:       assertFalse(node1.isNot());
716:       assertFalse(node1.isNumber());
717:       assertEquals((-1), node1.getCharno());
718:       assertFalse(node1.isNew());
719:       assertFalse(node1.isAdd());
720:       assertFalse(node1.isWhile());
721:       assertFalse(node1.isDo());
722:       assertFalse(node1.isSwitch());
723:       assertFalse(node1.isCall());
724:       assertFalse(node1.isVar());
725:       assertFalse(node1.isNull());
726:       assertFalse(node1.isLabel());
727:       assertFalse(node1.isBreak());
728:       assertFalse(node1.isDelProp());
729:       assertFalse(node1.isName());
730:       assertFalse(node1.isAssignAdd());
731:       assertFalse(node1.isEmpty());
732:       assertFalse(node1.isOr());
733:       assertFalse(node1.isVoid());
734:       assertFalse(node1.isTrue());
735:       assertFalse(node1.isDebugger());
736:       assertFalse(node1.isTry());
737:       assertFalse(node1.isDefaultCase());
738:       assertFalse(node1.isCatch());
739:       assertFalse(node1.isArrayLit());
740:       assertFalse(node1.isFor());
741:       assertEquals(0, node1.getChildCount());
742:       assertFalse(node1.isRegExp());
743:       assertFalse(node1.isFunction());
744:       assertFalse(node1.isParamList());
745:       assertFalse(node1.isStringKey());
746:       assertFalse(node1.isCase());
747:       assertFalse(node1.isString());
748:       assertFalse(node1.isBlock());
749:       assertFalse(node1.isInc());
750:       assertFalse(node1.isContinue());
751:       assertFalse(node1.isThrow());
752:       assertFalse(node1.isHook());
753:       assertFalse(node1.hasMoreThanOneChild());
754:       assertFalse(node1.isFalse());
755:       assertFalse(node1.isNE());
756:       assertFalse(node1.isSetterDef());
757:       assertFalse(node1.isIf());
758:       assertEquals((-1), node1.getLineno());
759:       assertFalse(node1.isIn());
760:       assertEquals(147, node1.getType());
761:       assertEquals(0, int0);
762:       assertFalse(node1.equals((Object)node2));
763:       assertFalse(node1.equals((Object)node0));
764:       
765:       Node node3 = node0.getLastSibling();
766:       assertEquals(48, Node.DIRECTIVES);
767:       assertEquals(8, Node.FLAG_NO_THROWS);
768:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
769:       assertEquals(4095, Node.COLUMN_MASK);
770:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
771:       assertEquals(40, Node.ORIGINALNAME_PROP);
772:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
773:       assertEquals(52, Node.LENGTH);
774:       assertEquals(57, Node.LAST_PROP);
775:       assertEquals(36, Node.QUOTED_PROP);
776:       assertEquals(57, Node.REFLECTED_OBJECT);
777:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
778:       assertEquals(15, Node.NO_SIDE_EFFECTS);
779:       assertEquals(55, Node.INFERRED_FUNCTION);
780:       assertEquals(29, Node.JSDOC_INFO_PROP);
781:       assertEquals(39, Node.EMPTY_BLOCK);
782:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
783:       assertEquals(53, Node.INPUT_ID);
784:       assertEquals(37, Node.OPT_ARG_NAME);
785:       assertEquals(2, Node.POST_FLAG);
786:       assertEquals(32, Node.INCRDECR_PROP);
787:       assertEquals(46, Node.IS_NAMESPACE);
788:       assertEquals(47, Node.IS_DISPATCHER);
789:       assertEquals(56, Node.CHANGE_TIME);
790:       assertEquals(51, Node.STATIC_SOURCE_FILE);
791:       assertEquals(12, Node.COLUMN_BITS);
792:       assertEquals(30, Node.VAR_ARGS_NAME);
793:       assertEquals(49, Node.DIRECT_EVAL);
794:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
795:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
796:       assertEquals(54, Node.SLASH_V);
797:       assertEquals(43, Node.IS_CONSTANT_NAME);
798:       assertEquals(1, Node.DECR_FLAG);
799:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
800:       assertEquals(50, Node.FREE_CALL);
801:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
802:       assertEquals(29, Node.JSDOC_INFO_PROP);
803:       assertEquals(47, Node.IS_DISPATCHER);
804:       assertEquals(56, Node.CHANGE_TIME);
805:       assertEquals(37, Node.OPT_ARG_NAME);
806:       assertEquals(2, Node.POST_FLAG);
807:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
808:       assertEquals(30, Node.VAR_ARGS_NAME);
809:       assertEquals(49, Node.DIRECT_EVAL);
810:       assertEquals(15, Node.NO_SIDE_EFFECTS);
811:       assertEquals(36, Node.QUOTED_PROP);
812:       assertEquals(57, Node.LAST_PROP);
813:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
814:       assertEquals(52, Node.LENGTH);
815:       assertEquals(53, Node.INPUT_ID);
816:       assertEquals(55, Node.INFERRED_FUNCTION);
817:       assertEquals(8, Node.FLAG_NO_THROWS);
818:       assertEquals(39, Node.EMPTY_BLOCK);
819:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
820:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
821:       assertEquals(50, Node.FREE_CALL);
822:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
823:       assertEquals(57, Node.REFLECTED_OBJECT);
824:       assertEquals(48, Node.DIRECTIVES);
825:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
826:       assertEquals(40, Node.ORIGINALNAME_PROP);
827:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
828:       assertEquals(4095, Node.COLUMN_MASK);
829:       assertEquals(1, Node.DECR_FLAG);
830:       assertEquals(12, Node.COLUMN_BITS);
831:       assertEquals(54, Node.SLASH_V);
832:       assertEquals(43, Node.IS_CONSTANT_NAME);
833:       assertEquals(32, Node.INCRDECR_PROP);
834:       assertEquals(46, Node.IS_NAMESPACE);
835:       assertEquals(51, Node.STATIC_SOURCE_FILE);
836:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
837:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
838:       assertNotNull(node3);
839:       assertFalse(node0.isEmpty());
840:       assertFalse(node0.isFor());
841:       assertFalse(node0.isGetterDef());
842:       assertFalse(node0.isVoid());
843:       assertFalse(node0.isTrue());
844:       assertFalse(node0.isDebugger());
845:       assertFalse(node0.isArrayLit());
846:       assertFalse(node0.isNE());
847:       assertFalse(node0.isDelProp());
848:       assertFalse(node0.isIf());
849:       assertEquals(0, node0.getChildCount());
850:       assertFalse(node0.isFunction());
851:       assertFalse(node0.isIn());
852:       assertFalse(node0.isSetterDef());
853:       assertFalse(node0.isInc());
854:       assertFalse(node0.isDefaultCase());
855:       assertFalse(node0.isStringKey());
856:       assertFalse(node0.isParamList());
857:       assertFalse(node0.isSwitch());
858:       assertFalse(node0.isCase());
859:       assertEquals(39, node0.getType());
860:       assertFalse(node0.isRegExp());
861:       assertFalse(node0.isInstanceOf());
862:       assertFalse(node0.isCatch());
863:       assertFalse(node0.isScript());
864:       assertFalse(node0.hasMoreThanOneChild());
865:       assertFalse(node0.isWith());
866:       assertFalse(node0.isBlock());
867:       assertFalse(node0.isTry());
868:       assertFalse(node0.isThis());
869:       assertFalse(node0.isHook());
870:       assertFalse(node0.hasOneChild());
871:       assertFalse(node0.isGetElem());
872:       assertFalse(node0.isLabelName());
873:       assertFalse(node0.isAssign());
874:       assertFalse(node0.hasChildren());
875:       assertFalse(node0.isTypeOf());
876:       assertFalse(node0.isDec());
877:       assertFalse(node0.isCast());
878:       assertFalse(node0.isOr());
879:       assertEquals(0, node0.getCharno());
880:       assertFalse(node0.isExprResult());
881:       assertFalse(node0.isDo());
882:       assertFalse(node0.isContinue());
883:       assertFalse(node0.isAdd());
884:       assertFalse(node0.isNew());
885:       assertFalse(node0.isLabel());
886:       assertFalse(node0.isVar());
887:       assertFalse(node0.isAssignAdd());
888:       assertFalse(node0.isName());
889:       assertFalse(node0.isFalse());
890:       assertFalse(node0.isThrow());
891:       assertFalse(node0.isCall());
892:       assertFalse(node0.isBreak());
893:       assertEquals(0, node0.getSourcePosition());
894:       assertEquals(0, node0.getLineno());
895:       assertFalse(node0.isNull());
896:       assertFalse(node0.isAnd());
897:       assertFalse(node0.isNot());
898:       assertFalse(node0.isObjectLit());
899:       assertFalse(node0.isString());
900:       assertTrue(node0.isNumber());
901:       assertFalse(node0.isComma());
902:       assertFalse(node0.isReturn());
903:       assertFalse(node0.isGetProp());
904:       assertFalse(node0.isWhile());
905:       assertFalse(node3.isHook());
906:       assertFalse(node3.isFalse());
907:       assertFalse(node3.isBreak());
908:       assertFalse(node3.isSwitch());
909:       assertFalse(node3.isIn());
910:       assertFalse(node3.isEmpty());
911:       assertFalse(node3.isThrow());
912:       assertFalse(node3.isInc());
913:       assertEquals(0, node3.getCharno());
914:       assertFalse(node3.isRegExp());
915:       assertFalse(node3.isIf());
916:       assertFalse(node3.isWith());
917:       assertFalse(node3.isNE());
918:       assertFalse(node3.isArrayLit());
919:       assertFalse(node3.isLabelName());
920:       assertFalse(node3.isCatch());
921:       assertFalse(node3.isInstanceOf());
922:       assertFalse(node3.isThis());
923:       assertFalse(node3.hasMoreThanOneChild());
924:       assertFalse(node3.isGetterDef());
925:       assertEquals(39, node3.getType());
926:       assertFalse(node3.isFor());
927:       assertFalse(node3.isScript());
928:       assertFalse(node3.hasOneChild());
929:       assertFalse(node3.isCase());
930:       assertFalse(node3.isTry());
931:       assertFalse(node3.isAdd());
932:       assertFalse(node3.isBlock());
933:       assertFalse(node3.isVar());
934:       assertEquals(0, node3.getSourcePosition());
935:       assertFalse(node3.isNull());
936:       assertFalse(node3.isStringKey());
937:       assertFalse(node3.isParamList());
938:       assertFalse(node3.isCall());
939:       assertFalse(node3.isName());
940:       assertFalse(node3.isLabel());
941:       assertFalse(node3.isAssignAdd());
942:       assertEquals(0, node3.getLineno());
943:       assertFalse(node3.isContinue());
944:       assertFalse(node3.isOr());
945:       assertEquals(0, node3.getChildCount());
946:       assertFalse(node3.isDefaultCase());
947:       assertFalse(node3.isSetterDef());
948:       assertFalse(node3.isNew());
949:       assertFalse(node3.isDo());
950:       assertFalse(node3.isCast());
951:       assertFalse(node3.isFunction());
952:       assertFalse(node3.isTrue());
953:       assertFalse(node3.isDebugger());
954:       assertFalse(node3.isAssign());
955:       assertFalse(node3.isDelProp());
956:       assertFalse(node3.isGetElem());
957:       assertFalse(node3.isAnd());
958:       assertFalse(node3.isExprResult());
959:       assertFalse(node3.isVoid());
960:       assertFalse(node3.isReturn());
961:       assertFalse(node3.isComma());
962:       assertFalse(node3.isObjectLit());
963:       assertFalse(node3.isTypeOf());
964:       assertFalse(node3.isDec());
965:       assertFalse(node3.isNot());
966:       assertFalse(node3.isString());
967:       assertFalse(node3.isWhile());
968:       assertFalse(node3.hasChildren());
969:       assertFalse(node3.isGetProp());
970:       assertTrue(node3.isNumber());
971:       assertSame(node0, node3);
972:       assertSame(node3, node0);
973:       assertFalse(node0.equals((Object)node1));
974:       assertFalse(node0.equals((Object)node2));
975:       assertFalse(node3.equals((Object)node1));
976:       assertFalse(node3.equals((Object)node2));
977:       
978:       node1.setString("ug#DQ$&)$cA23");
979:       assertEquals(50, Node.FREE_CALL);
980:       assertEquals(52, Node.LENGTH);
981:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
982:       assertEquals(40, Node.ORIGINALNAME_PROP);
983:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
984:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
985:       assertEquals(39, Node.EMPTY_BLOCK);
986:       assertEquals(57, Node.LAST_PROP);
987:       assertEquals(30, Node.VAR_ARGS_NAME);
988:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
989:       assertEquals(51, Node.STATIC_SOURCE_FILE);
990:       assertEquals(1, Node.DECR_FLAG);
991:       assertEquals(32, Node.INCRDECR_PROP);
992:       assertEquals(43, Node.IS_CONSTANT_NAME);
993:       assertEquals(46, Node.IS_NAMESPACE);
994:       assertEquals(54, Node.SLASH_V);
995:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
996:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
997:       assertEquals(29, Node.JSDOC_INFO_PROP);
998:       assertEquals(53, Node.INPUT_ID);
999:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1000:       assertEquals(2, Node.POST_FLAG);
1001:       assertEquals(47, Node.IS_DISPATCHER);
1002:       assertEquals(12, Node.COLUMN_BITS);
1003:       assertEquals(55, Node.INFERRED_FUNCTION);
1004:       assertEquals(4095, Node.COLUMN_MASK);
1005:       assertEquals(49, Node.DIRECT_EVAL);
1006:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1007:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1008:       assertEquals(8, Node.FLAG_NO_THROWS);
1009:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1010:       assertEquals(37, Node.OPT_ARG_NAME);
1011:       assertEquals(36, Node.QUOTED_PROP);
1012:       assertEquals(48, Node.DIRECTIVES);
1013:       assertEquals(56, Node.CHANGE_TIME);
1014:       assertEquals(57, Node.REFLECTED_OBJECT);
1015:       assertFalse(node1.isExprResult());
1016:       assertFalse(node1.isScript());
1017:       assertFalse(node1.hasOneChild());
1018:       assertFalse(node1.isCast());
1019:       assertFalse(node1.isGetElem());
1020:       assertFalse(node1.hasChildren());
1021:       assertFalse(node1.isInstanceOf());
1022:       assertFalse(node1.isDec());
1023:       assertFalse(node1.isTypeOf());
1024:       assertFalse(node1.isAssign());
1025:       assertFalse(node1.isWith());
1026:       assertFalse(node1.isComma());
1027:       assertTrue(node1.isGetterDef());
1028:       assertFalse(node1.isThis());
1029:       assertFalse(node1.isReturn());
1030:       assertFalse(node1.isGetProp());
1031:       assertFalse(node1.isLabelName());
1032:       assertFalse(node1.isObjectLit());
1033:       assertFalse(node1.isAnd());
1034:       assertEquals((-1), node1.getSourcePosition());
1035:       assertFalse(node1.isNot());
1036:       assertFalse(node1.isNumber());
1037:       assertEquals((-1), node1.getCharno());
1038:       assertFalse(node1.isNew());
1039:       assertFalse(node1.isAdd());
1040:       assertFalse(node1.isWhile());
1041:       assertFalse(node1.isDo());
1042:       assertFalse(node1.isSwitch());
1043:       assertFalse(node1.isCall());
1044:       assertFalse(node1.isVar());
1045:       assertFalse(node1.isNull());
1046:       assertFalse(node1.isLabel());
1047:       assertFalse(node1.isBreak());
1048:       assertFalse(node1.isDelProp());
1049:       assertFalse(node1.isName());
1050:       assertFalse(node1.isAssignAdd());
1051:       assertFalse(node1.isEmpty());
1052:       assertFalse(node1.isOr());
1053:       assertFalse(node1.isVoid());
1054:       assertFalse(node1.isTrue());
1055:       assertFalse(node1.isDebugger());
1056:       assertFalse(node1.isTry());
1057:       assertFalse(node1.isDefaultCase());
1058:       assertFalse(node1.isCatch());
1059:       assertFalse(node1.isArrayLit());
1060:       assertFalse(node1.isFor());
1061:       assertEquals(0, node1.getChildCount());
1062:       assertFalse(node1.isRegExp());
1063:       assertFalse(node1.isFunction());
1064:       assertFalse(node1.isParamList());
1065:       assertFalse(node1.isStringKey());
1066:       assertFalse(node1.isCase());
1067:       assertFalse(node1.isString());
1068:       assertFalse(node1.isBlock());
1069:       assertFalse(node1.isInc());
1070:       assertFalse(node1.isContinue());
1071:       assertFalse(node1.isThrow());
1072:       assertFalse(node1.isHook());
1073:       assertFalse(node1.hasMoreThanOneChild());
1074:       assertFalse(node1.isFalse());
1075:       assertFalse(node1.isNE());
1076:       assertFalse(node1.isSetterDef());
1077:       assertFalse(node1.isIf());
1078:       assertEquals((-1), node1.getLineno());
1079:       assertFalse(node1.isIn());
1080:       assertEquals(147, node1.getType());
1081:       assertFalse(node1.equals((Object)node2));
1082:       assertFalse(node1.equals((Object)node0));
1083:       assertFalse(node1.equals((Object)node3));
1084:       
1085:       node2.setSourceEncodedPositionForTree(1734);
1086:       assertEquals(12, Node.COLUMN_BITS);
1087:       assertEquals(30, Node.VAR_ARGS_NAME);
1088:       assertEquals(46, Node.IS_NAMESPACE);
1089:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1090:       assertEquals(37, Node.OPT_ARG_NAME);
1091:       assertEquals(2, Node.POST_FLAG);
1092:       assertEquals(54, Node.SLASH_V);
1093:       assertEquals(56, Node.CHANGE_TIME);
1094:       assertEquals(49, Node.DIRECT_EVAL);
1095:       assertEquals(40, Node.ORIGINALNAME_PROP);
1096:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1097:       assertEquals(57, Node.REFLECTED_OBJECT);
1098:       assertEquals(47, Node.IS_DISPATCHER);
1099:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1100:       assertEquals(8, Node.FLAG_NO_THROWS);
1101:       assertEquals(39, Node.EMPTY_BLOCK);
1102:       assertEquals(52, Node.LENGTH);
1103:       assertEquals(57, Node.LAST_PROP);
1104:       assertEquals(29, Node.JSDOC_INFO_PROP);
1105:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1106:       assertEquals(53, Node.INPUT_ID);
1107:       assertEquals(55, Node.INFERRED_FUNCTION);
1108:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1109:       assertEquals(4095, Node.COLUMN_MASK);
1110:       assertEquals(36, Node.QUOTED_PROP);
1111:       assertEquals(48, Node.DIRECTIVES);
1112:       assertEquals(43, Node.IS_CONSTANT_NAME);
1113:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1114:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1115:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1116:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1117:       assertEquals(50, Node.FREE_CALL);
1118:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1119:       assertEquals(32, Node.INCRDECR_PROP);
1120:       assertEquals(1, Node.DECR_FLAG);
1121:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1122:       assertFalse(node2.isGetProp());
1123:       assertFalse(node2.isThis());
1124:       assertFalse(node2.isComma());
1125:       assertFalse(node2.isBreak());
1126:       assertFalse(node2.isInstanceOf());
1127:       assertEquals(1734, node2.getCharno());
1128:       assertFalse(node2.isObjectLit());
1129:       assertFalse(node2.isAnd());
1130:       assertFalse(node2.isNot());
1131:       assertFalse(node2.isInc());
1132:       assertFalse(node2.isCast());
1133:       assertFalse(node2.isThrow());
1134:       assertFalse(node2.isFalse());
1135:       assertFalse(node2.isLabel());
1136:       assertFalse(node2.isIn());
1137:       assertFalse(node2.isGetterDef());
1138:       assertFalse(node2.isNumber());
1139:       assertFalse(node2.isLabelName());
1140:       assertFalse(node2.isArrayLit());
1141:       assertFalse(node2.isIf());
1142:       assertFalse(node2.isNE());
1143:       assertFalse(node2.isSwitch());
1144:       assertFalse(node2.isBlock());
1145:       assertFalse(node2.isTry());
1146:       assertFalse(node2.isRegExp());
1147:       assertFalse(node2.isWith());
1148:       assertFalse(node2.isScript());
1149:       assertEquals(2, node2.getType());
1150:       assertFalse(node2.hasMoreThanOneChild());
1151:       assertFalse(node2.hasOneChild());
1152:       assertFalse(node2.isCase());
1153:       assertFalse(node2.isHook());
1154:       assertFalse(node2.isFor());
1155:       assertFalse(node2.isSetterDef());
1156:       assertEquals(0, node2.getLineno());
1157:       assertEquals(0, node2.getChildCount());
1158:       assertFalse(node2.isCatch());
1159:       assertFalse(node2.isName());
1160:       assertFalse(node2.isCall());
1161:       assertFalse(node2.isNull());
1162:       assertEquals(1734, node2.getSourcePosition());
1163:       assertFalse(node2.isParamList());
1164:       assertFalse(node2.isStringKey());
1165:       assertFalse(node2.isFunction());
1166:       assertFalse(node2.isTrue());
1167:       assertFalse(node2.isNew());
1168:       assertFalse(node2.isAdd());
1169:       assertFalse(node2.isContinue());
1170:       assertFalse(node2.isDo());
1171:       assertFalse(node2.isDefaultCase());
1172:       assertFalse(node2.isVar());
1173:       assertFalse(node2.isAssignAdd());
1174:       assertFalse(node2.isOr());
1175:       assertFalse(node2.isDec());
1176:       assertFalse(node2.isTypeOf());
1177:       assertFalse(node2.isEmpty());
1178:       assertFalse(node2.isGetElem());
1179:       assertFalse(node2.isDelProp());
1180:       assertFalse(node2.isVoid());
1181:       assertFalse(node2.isDebugger());
1182:       assertFalse(node2.isExprResult());
1183:       assertFalse(node2.isString());
1184:       assertFalse(node2.isAssign());
1185:       assertFalse(node2.hasChildren());
1186:       assertFalse(node2.isReturn());
1187:       assertFalse(node2.isWhile());
1188:       assertFalse(node2.equals((Object)node0));
1189:       assertFalse(node2.equals((Object)node3));
1190:       assertFalse(node2.equals((Object)node1));
1191:       
1192:       try { 
1193:         node1.getDouble();
1194:         fail("Expecting exception: UnsupportedOperationException");
1195:       
1196:       } catch(UnsupportedOperationException e) {
1197:          //
1198:          // GETTER_DEF ug#DQ$&)$cA23 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
1199:          //
1200:          verifyException("com.google.javascript.rhino.Node", e);
1201:       }
1202:   }
1203: }
RegularFileObject[/tmp/EvoSuite_122_1628255592843/com/google/javascript/rhino/Node_122_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:13:12 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_122_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_122_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.javascript.rhino.JSDocInfo$StringPosition",
72:       "com.google.common.collect.ImmutableList$SubList",
73:       "com.google.javascript.rhino.jstype.NoType",
74:       "com.google.javascript.rhino.JSDocInfo$Visibility",
75:       "com.google.common.collect.ListMultimap",
76:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
77:       "com.google.javascript.rhino.jstype.ArrowType",
78:       "com.google.javascript.rhino.SimpleErrorReporter",
79:       "com.google.common.collect.Lists$RandomAccessPartition",
80:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
81:       "com.google.common.collect.Collections2",
82:       "com.google.javascript.rhino.jstype.NumberType",
83:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
86:       "com.google.common.collect.RegularImmutableList",
87:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
88:       "com.google.javascript.rhino.jstype.StaticScope",
89:       "com.google.javascript.rhino.jstype.InstanceObjectType",
90:       "com.google.common.collect.Lists$TransformingRandomAccessList",
91:       "com.google.javascript.rhino.Node$PropListItem",
92:       "com.google.javascript.rhino.Node$IntPropListItem",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Maps$KeySet",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.LinkedHashMultimap",
98:       "com.google.javascript.rhino.Node",
99:       "com.google.javascript.rhino.jstype.ObjectType",
100:       "com.google.javascript.rhino.SourcePosition",
101:       "com.google.common.collect.Sets$1",
102:       "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition",
103:       "com.google.common.collect.ImmutableMapKeySet",
104:       "com.google.javascript.rhino.JSDocInfo$Marker",
105:       "com.google.common.collect.RegularImmutableMap",
106:       "com.google.common.collect.RegularImmutableBiMap",
107:       "com.google.javascript.rhino.Node$NodeMismatch",
108:       "com.google.javascript.rhino.jstype.RecordType",
109:       "com.google.common.collect.SortedMapDifference",
110:       "com.google.javascript.rhino.jstype.ModificationVisitor",
111:       "com.google.javascript.rhino.jstype.PropertyMap$1",
112:       "com.google.common.collect.AbstractMapEntry",
113:       "com.google.javascript.rhino.Node$AncestorIterable$1",
114:       "com.google.common.collect.Iterators$12",
115:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
116:       "com.google.common.collect.Iterators$11",
117:       "com.google.javascript.rhino.jstype.JSType$1",
118:       "com.google.common.collect.EmptyImmutableBiMap",
119:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.javascript.rhino.jstype.VoidType",
122:       "com.google.common.base.Joiner",
123:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
124:       "com.google.common.collect.AbstractListMultimap",
125:       "com.google.javascript.rhino.jstype.JSType",
126:       "com.google.common.collect.ImmutableAsList",
127:       "com.google.javascript.rhino.Node$StringNode",
128:       "com.google.javascript.rhino.jstype.ProxyObjectType",
129:       "com.google.common.collect.Sets$SetView",
130:       "com.google.common.collect.RegularImmutableAsList",
131:       "com.google.javascript.rhino.jstype.TemplateType",
132:       "com.google.javascript.rhino.jstype.NamedType",
133:       "com.google.common.collect.Iterators$13",
134:       "com.google.javascript.rhino.InputId",
135:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
136:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
137:       "com.google.common.collect.AbstractMapBasedMultimap",
138:       "com.google.common.collect.Lists$Partition",
139:       "com.google.common.collect.Lists",
140:       "com.google.javascript.rhino.Node$SideEffectFlags",
141:       "com.google.common.collect.UnmodifiableListIterator",
142:       "com.google.javascript.rhino.jstype.NullType",
143:       "com.google.common.collect.Lists$TransformingSequentialList",
144:       "com.google.javascript.rhino.ErrorReporter",
145:       "com.google.javascript.rhino.jstype.UnknownType",
146:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
147:       "com.google.javascript.rhino.jstype.ValueType",
148:       "com.google.javascript.rhino.jstype.PropertyMap",
149:       "com.google.javascript.rhino.Token",
150:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.javascript.rhino.jstype.StaticSourceFile",
153:       "com.google.javascript.rhino.jstype.BooleanType",
154:       "com.google.javascript.rhino.jstype.NoObjectType",
155:       "com.google.common.collect.AbstractIterator",
156:       "com.google.javascript.rhino.jstype.FunctionBuilder",
157:       "com.google.javascript.rhino.jstype.JSType$TypePair",
158:       "com.google.common.base.Joiner$MapJoiner",
159:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
160:       "com.google.common.collect.ImmutableList$1",
161:       "com.google.common.collect.MapDifference",
162:       "com.google.javascript.rhino.JSDocInfo$1",
163:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
164:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
165:       "com.google.common.collect.Sets$ImprovedAbstractSet",
166:       "com.google.javascript.rhino.jstype.FunctionType",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.javascript.rhino.JSDocInfo",
170:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
171:       "com.google.javascript.rhino.jstype.Property",
172:       "com.google.common.collect.ImmutableMapValues",
173:       "com.google.common.collect.ImmutableEntry",
174:       "com.google.common.base.Joiner$1",
175:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
176:       "com.google.common.base.Joiner$2",
177:       "com.google.common.collect.ImmutableCollection",
178:       "com.google.common.collect.ImmutableEnumMap",
179:       "com.google.javascript.rhino.jstype.TernaryValue",
180:       "com.google.javascript.rhino.Node$AncestorIterable",
181:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
182:       "com.google.common.collect.Lists$RandomAccessListWrapper",
183:       "com.google.common.collect.ImmutableEnumSet",
184:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
185:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
186:       "com.google.javascript.rhino.jstype.EnumElementType",
187:       "com.google.javascript.rhino.jstype.UnionType",
188:       "com.google.common.base.Objects",
189:       "com.google.javascript.rhino.Node$NumberNode",
190:       "com.google.common.collect.SingletonImmutableList",
191:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
192:       "com.google.common.collect.ImmutableCollection$Builder",
193:       "com.google.javascript.rhino.jstype.StaticSlot",
194:       "com.google.common.collect.Iterators$6",
195:       "com.google.common.collect.BiMap",
196:       "com.google.common.collect.Iterators$7",
197:       "com.google.common.collect.AbstractSetMultimap",
198:       "com.google.common.base.Function",
199:       "com.google.common.collect.ImmutableSet",
200:       "com.google.common.collect.Lists$AbstractListWrapper",
201:       "com.google.common.collect.ImmutableMap",
202:       "com.google.common.collect.AbstractIndexedListIterator",
203:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
204:       "com.google.common.collect.Maps$1",
205:       "com.google.javascript.rhino.jstype.EnumType",
206:       "com.google.javascript.rhino.JSDocInfo$TypePosition",
207:       "com.google.common.collect.Iterators$1",
208:       "com.google.common.collect.Iterators$2",
209:       "com.google.javascript.rhino.jstype.NamespaceType",
210:       "com.google.common.collect.Iterators$3",
211:       "com.google.common.collect.Sets",
212:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
213:       "com.google.javascript.rhino.Node$ObjectPropListItem",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.javascript.rhino.jstype.StaticReference",
220:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
221:       "com.google.common.collect.Multiset",
222:       "com.google.common.collect.AbstractMultimap",
223:       "com.google.common.collect.Multimap",
224:       "com.google.common.collect.Iterators",
225:       "com.google.common.collect.Maps$ImprovedAbstractMap",
226:       "com.google.common.collect.ImmutableBiMap",
227:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
228:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
229:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
230:       "com.google.common.collect.ImmutableList",
231:       "com.google.common.collect.SingletonImmutableBiMap",
232:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
233:       "com.google.javascript.rhino.jstype.StringType",
234:       "com.google.javascript.rhino.Node$AbstractPropListItem",
235:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
236:       "com.google.javascript.rhino.jstype.TemplatizedType",
237:       "com.google.javascript.rhino.jstype.Visitor",
238:       "com.google.javascript.rhino.jstype.NoResolvedType",
239:       "com.google.javascript.rhino.jstype.JSTypeNative",
240:       "com.google.javascript.rhino.jstype.AllType",
241:       "com.google.common.collect.Maps",
242:       "com.google.common.collect.SetMultimap",
243:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
244:       "com.google.common.collect.Maps$EntryTransformer",
245:       "com.google.javascript.rhino.JSTypeExpression",
246:       "com.google.common.collect.Iterators$MergingIterator"
247:     );
248:   } 
249: 
250:   private static void resetClasses() {
251:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_122_tmp__ESTest_scaffolding.class.getClassLoader()); 
252: 
253:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
254:       "com.google.javascript.rhino.Node",
255:       "com.google.javascript.rhino.Node$NumberNode",
256:       "com.google.javascript.rhino.Node$StringNode",
257:       "com.google.javascript.rhino.Node$AbstractPropListItem",
258:       "com.google.javascript.rhino.Node$ObjectPropListItem",
259:       "com.google.javascript.rhino.Node$IntPropListItem",
260:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
261:       "com.google.javascript.rhino.Node$AncestorIterable",
262:       "com.google.javascript.rhino.Node$NodeMismatch",
263:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
264:       "com.google.javascript.rhino.Node$SideEffectFlags",
265:       "com.google.javascript.rhino.Token",
266:       "com.google.common.base.Preconditions",
267:       "com.google.javascript.rhino.SimpleErrorReporter",
268:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
269:       "com.google.common.base.Joiner",
270:       "com.google.common.base.Joiner$1",
271:       "com.google.common.collect.Collections2",
272:       "com.google.common.base.Joiner$MapJoiner",
273:       "com.google.common.collect.Maps",
274:       "com.google.common.collect.AbstractMultimap",
275:       "com.google.common.collect.AbstractMapBasedMultimap",
276:       "com.google.common.collect.AbstractSetMultimap",
277:       "com.google.common.collect.LinkedHashMultimap",
278:       "com.google.common.collect.AbstractMapEntry",
279:       "com.google.common.collect.ImmutableEntry",
280:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
281:       "com.google.common.collect.AbstractListMultimap",
282:       "com.google.common.collect.ArrayListMultimap",
283:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
284:       "com.google.common.collect.ImmutableCollection",
285:       "com.google.common.collect.RegularImmutableList",
286:       "com.google.common.collect.ObjectArrays",
287:       "com.google.common.collect.ImmutableList",
288:       "com.google.javascript.rhino.jstype.ModificationVisitor",
289:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
290:       "com.google.common.collect.ImmutableCollection$Builder",
291:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
292:       "com.google.common.collect.ImmutableList$Builder",
293:       "com.google.common.collect.UnmodifiableIterator",
294:       "com.google.common.collect.UnmodifiableListIterator",
295:       "com.google.common.collect.Iterators$1",
296:       "com.google.common.collect.Iterators$2",
297:       "com.google.common.collect.Iterators",
298:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
299:       "com.google.javascript.rhino.jstype.JSType$1",
300:       "com.google.javascript.rhino.jstype.JSType",
301:       "com.google.javascript.rhino.jstype.ObjectType",
302:       "com.google.javascript.rhino.jstype.ProxyObjectType",
303:       "com.google.javascript.rhino.jstype.TemplateType",
304:       "com.google.javascript.rhino.jstype.ValueType",
305:       "com.google.javascript.rhino.jstype.BooleanType",
306:       "com.google.javascript.rhino.jstype.NullType",
307:       "com.google.javascript.rhino.jstype.NumberType",
308:       "com.google.javascript.rhino.jstype.StringType",
309:       "com.google.javascript.rhino.jstype.UnknownType",
310:       "com.google.javascript.rhino.jstype.VoidType",
311:       "com.google.javascript.rhino.jstype.AllType",
312:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
313:       "com.google.common.collect.ImmutableMap",
314:       "com.google.common.collect.ImmutableBiMap",
315:       "com.google.common.collect.EmptyImmutableBiMap",
316:       "com.google.javascript.rhino.jstype.PropertyMap$1",
317:       "com.google.javascript.rhino.jstype.PropertyMap",
318:       "com.google.javascript.rhino.jstype.FunctionType",
319:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
320:       "com.google.javascript.rhino.jstype.ArrowType",
321:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
322:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
323:       "com.google.javascript.rhino.jstype.InstanceObjectType",
324:       "com.google.javascript.rhino.jstype.Property",
325:       "com.google.common.collect.Lists",
326:       "com.google.javascript.rhino.jstype.NoObjectType",
327:       "com.google.javascript.rhino.jstype.NoType",
328:       "com.google.javascript.rhino.jstype.NoResolvedType",
329:       "com.google.common.collect.SingletonImmutableList",
330:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
331:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
332:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
333:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
334:       "com.google.javascript.rhino.jstype.UnionType",
335:       "com.google.javascript.rhino.jstype.FunctionBuilder",
336:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
337:       "com.google.javascript.rhino.JSDocInfo",
338:       "com.google.common.collect.Iterables",
339:       "com.google.javascript.rhino.jstype.EnumType",
340:       "com.google.javascript.rhino.jstype.EnumElementType",
341:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
342:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
343:       "com.google.common.collect.Sets",
344:       "com.google.common.base.Objects",
345:       "com.google.javascript.rhino.InputId",
346:       "com.google.common.collect.ImmutableSet",
347:       "com.google.common.collect.EmptyImmutableSet",
348:       "com.google.javascript.rhino.Node$AncestorIterable$1",
349:       "com.google.javascript.rhino.jstype.TemplatizedType",
350:       "com.google.common.collect.AbstractMultimap$Values",
351:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
352:       "com.google.common.collect.AbstractMapBasedMultimap$1",
353:       "com.google.common.collect.Multimaps$Entries",
354:       "com.google.common.collect.AbstractMultimap$Entries",
355:       "com.google.common.collect.AbstractMapBasedMultimap$2",
356:       "com.google.common.collect.AbstractIndexedListIterator",
357:       "com.google.common.collect.Iterators$11",
358:       "com.google.javascript.rhino.JSTypeExpression",
359:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
360:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
361:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
362:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
363:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
364:       "com.google.javascript.rhino.jstype.NamedType",
365:       "com.google.common.collect.Sets$ImprovedAbstractSet",
366:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
367:       "com.google.common.collect.Hashing",
368:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
369:       "com.google.common.collect.Iterators$12",
370:       "com.google.common.collect.ImmutableList$1",
371:       "com.google.common.collect.Platform",
372:       "com.google.javascript.rhino.jstype.BooleanLiteralSet"
373:     );
374:   }
375: }

[MASTER] 13:13:13.135 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newNumber((double) 0, 0, 0);
assertEquals(48, Node.DIRECTIVES);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertNotNull(node0);
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNE());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isFunction());
assertFalse(node0.isIn());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isStringKey());
assertFalse(node0.isParamList());
assertFalse(node0.isSwitch());
assertFalse(node0.isCase());
assertEquals(39, node0.getType());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isScript());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isThis());
assertFalse(node0.isHook());
assertFalse(node0.hasOneChild());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isCast());
assertFalse(node0.isOr());
assertEquals(0, node0.getCharno());
assertFalse(node0.isExprResult());
assertFalse(node0.isDo());
assertFalse(node0.isContinue());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isName());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertEquals(0, node0.getSourcePosition());
assertEquals(0, node0.getLineno());
assertFalse(node0.isNull());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isGetProp());
assertFalse(node0.isWhile());

Iterable<Node> iterable0 = node0.children();
assertEquals(48, Node.DIRECTIVES);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertNotNull(iterable0);
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNE());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isFunction());
assertFalse(node0.isIn());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isStringKey());
assertFalse(node0.isParamList());
assertFalse(node0.isSwitch());
assertFalse(node0.isCase());
assertEquals(39, node0.getType());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isScript());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isThis());
assertFalse(node0.isHook());
assertFalse(node0.hasOneChild());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isCast());
assertFalse(node0.isOr());
assertEquals(0, node0.getCharno());
assertFalse(node0.isExprResult());
assertFalse(node0.isDo());
assertFalse(node0.isContinue());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isName());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertEquals(0, node0.getSourcePosition());
assertEquals(0, node0.getLineno());
assertFalse(node0.isNull());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isGetProp());
assertFalse(node0.isWhile());
assertFalse(iterable0.contains(node0));

Node node1 = Node.newString(147, "");
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.POST_FLAG);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertNotNull(node1);
assertFalse(node1.isExprResult());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isCast());
assertFalse(node1.isGetElem());
assertFalse(node1.hasChildren());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isComma());
assertTrue(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isReturn());
assertFalse(node1.isGetProp());
assertFalse(node1.isLabelName());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isNot());
assertFalse(node1.isNumber());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isDo());
assertFalse(node1.isSwitch());
assertFalse(node1.isCall());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isEmpty());
assertFalse(node1.isOr());
assertFalse(node1.isVoid());
assertFalse(node1.isTrue());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isCatch());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isParamList());
assertFalse(node1.isStringKey());
assertFalse(node1.isCase());
assertFalse(node1.isString());
assertFalse(node1.isBlock());
assertFalse(node1.isInc());
assertFalse(node1.isContinue());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isFalse());
assertFalse(node1.isNE());
assertFalse(node1.isSetterDef());
assertFalse(node1.isIf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIn());
assertEquals(147, node1.getType());
assertFalse(node1.equals((Object)node0));

Node node2 = new Node(2);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(54, Node.SLASH_V);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertNotNull(node2);
assertFalse(node2.isGetProp());
assertFalse(node2.isThis());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isObjectLit());
assertFalse(node2.isAnd());
assertFalse(node2.isNot());
assertFalse(node2.isInc());
assertFalse(node2.isCast());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertFalse(node2.isLabel());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertFalse(node2.isArrayLit());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isSwitch());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isBlock());
assertFalse(node2.isTry());
assertFalse(node2.isRegExp());
assertFalse(node2.isWith());
assertFalse(node2.isScript());
assertEquals(2, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.hasOneChild());
assertFalse(node2.isCase());
assertFalse(node2.isHook());
assertFalse(node2.isFor());
assertFalse(node2.isSetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isCatch());
assertFalse(node2.isName());
assertFalse(node2.isCall());
assertFalse(node2.isNull());
assertFalse(node2.isParamList());
assertFalse(node2.isStringKey());
assertFalse(node2.isFunction());
assertFalse(node2.isTrue());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isContinue());
assertFalse(node2.isDo());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isVar());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isString());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.isReturn());
assertFalse(node2.isWhile());
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

node1.setChangeTime(1);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.POST_FLAG);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertFalse(node1.isExprResult());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isCast());
assertFalse(node1.isGetElem());
assertFalse(node1.hasChildren());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isComma());
assertTrue(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isReturn());
assertFalse(node1.isGetProp());
assertFalse(node1.isLabelName());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isNot());
assertFalse(node1.isNumber());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isDo());
assertFalse(node1.isSwitch());
assertFalse(node1.isCall());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isEmpty());
assertFalse(node1.isOr());
assertFalse(node1.isVoid());
assertFalse(node1.isTrue());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isCatch());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isParamList());
assertFalse(node1.isStringKey());
assertFalse(node1.isCase());
assertFalse(node1.isString());
assertFalse(node1.isBlock());
assertFalse(node1.isInc());
assertFalse(node1.isContinue());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isFalse());
assertFalse(node1.isNE());
assertFalse(node1.isSetterDef());
assertFalse(node1.isIf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIn());
assertEquals(147, node1.getType());
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));

boolean boolean0 = node2.isBreak();
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(54, Node.SLASH_V);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertFalse(node2.isGetProp());
assertFalse(node2.isThis());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isObjectLit());
assertFalse(node2.isAnd());
assertFalse(node2.isNot());
assertFalse(node2.isInc());
assertFalse(node2.isCast());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertFalse(node2.isLabel());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertFalse(node2.isArrayLit());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isSwitch());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isBlock());
assertFalse(node2.isTry());
assertFalse(node2.isRegExp());
assertFalse(node2.isWith());
assertFalse(node2.isScript());
assertEquals(2, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.hasOneChild());
assertFalse(node2.isCase());
assertFalse(node2.isHook());
assertFalse(node2.isFor());
assertFalse(node2.isSetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isCatch());
assertFalse(node2.isName());
assertFalse(node2.isCall());
assertFalse(node2.isNull());
assertFalse(node2.isParamList());
assertFalse(node2.isStringKey());
assertFalse(node2.isFunction());
assertFalse(node2.isTrue());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isContinue());
assertFalse(node2.isDo());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isVar());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isString());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.isReturn());
assertFalse(node2.isWhile());
assertFalse(boolean0);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

int int0 = node1.getIntProp((-3460));
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.POST_FLAG);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertFalse(node1.isExprResult());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isCast());
assertFalse(node1.isGetElem());
assertFalse(node1.hasChildren());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isComma());
assertTrue(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isReturn());
assertFalse(node1.isGetProp());
assertFalse(node1.isLabelName());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isNot());
assertFalse(node1.isNumber());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isDo());
assertFalse(node1.isSwitch());
assertFalse(node1.isCall());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isEmpty());
assertFalse(node1.isOr());
assertFalse(node1.isVoid());
assertFalse(node1.isTrue());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isCatch());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isParamList());
assertFalse(node1.isStringKey());
assertFalse(node1.isCase());
assertFalse(node1.isString());
assertFalse(node1.isBlock());
assertFalse(node1.isInc());
assertFalse(node1.isContinue());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isFalse());
assertFalse(node1.isNE());
assertFalse(node1.isSetterDef());
assertFalse(node1.isIf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIn());
assertEquals(147, node1.getType());
assertEquals(0, int0);
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));

Node node3 = node0.getLastSibling();
assertEquals(48, Node.DIRECTIVES);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertNotNull(node3);
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNE());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isFunction());
assertFalse(node0.isIn());
assertFalse(node0.isSetterDef());
assertFalse(node0.isInc());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isStringKey());
assertFalse(node0.isParamList());
assertFalse(node0.isSwitch());
assertFalse(node0.isCase());
assertEquals(39, node0.getType());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isScript());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isThis());
assertFalse(node0.isHook());
assertFalse(node0.hasOneChild());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isCast());
assertFalse(node0.isOr());
assertEquals(0, node0.getCharno());
assertFalse(node0.isExprResult());
assertFalse(node0.isDo());
assertFalse(node0.isContinue());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isName());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertEquals(0, node0.getSourcePosition());
assertEquals(0, node0.getLineno());
assertFalse(node0.isNull());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isGetProp());
assertFalse(node0.isWhile());
assertFalse(node3.isHook());
assertFalse(node3.isFalse());
assertFalse(node3.isBreak());
assertFalse(node3.isSwitch());
assertFalse(node3.isIn());
assertFalse(node3.isEmpty());
assertFalse(node3.isThrow());
assertFalse(node3.isInc());
assertEquals(0, node3.getCharno());
assertFalse(node3.isRegExp());
assertFalse(node3.isIf());
assertFalse(node3.isWith());
assertFalse(node3.isNE());
assertFalse(node3.isArrayLit());
assertFalse(node3.isLabelName());
assertFalse(node3.isCatch());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isThis());
assertFalse(node3.hasMoreThanOneChild());
assertFalse(node3.isGetterDef());
assertEquals(39, node3.getType());
assertFalse(node3.isFor());
assertFalse(node3.isScript());
assertFalse(node3.hasOneChild());
assertFalse(node3.isCase());
assertFalse(node3.isTry());
assertFalse(node3.isAdd());
assertFalse(node3.isBlock());
assertFalse(node3.isVar());
assertEquals(0, node3.getSourcePosition());
assertFalse(node3.isNull());
assertFalse(node3.isStringKey());
assertFalse(node3.isParamList());
assertFalse(node3.isCall());
assertFalse(node3.isName());
assertFalse(node3.isLabel());
assertFalse(node3.isAssignAdd());
assertEquals(0, node3.getLineno());
assertFalse(node3.isContinue());
assertFalse(node3.isOr());
assertEquals(0, node3.getChildCount());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isSetterDef());
assertFalse(node3.isNew());
assertFalse(node3.isDo());
assertFalse(node3.isCast());
assertFalse(node3.isFunction());
assertFalse(node3.isTrue());
assertFalse(node3.isDebugger());
assertFalse(node3.isAssign());
assertFalse(node3.isDelProp());
assertFalse(node3.isGetElem());
assertFalse(node3.isAnd());
assertFalse(node3.isExprResult());
assertFalse(node3.isVoid());
assertFalse(node3.isReturn());
assertFalse(node3.isComma());
assertFalse(node3.isObjectLit());
assertFalse(node3.isTypeOf());
assertFalse(node3.isDec());
assertFalse(node3.isNot());
assertFalse(node3.isString());
assertFalse(node3.isWhile());
assertFalse(node3.hasChildren());
assertFalse(node3.isGetProp());
assertTrue(node3.isNumber());
assertSame(node0, node3);
assertSame(node3, node0);
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));
assertFalse(node3.equals((Object)node1));
assertFalse(node3.equals((Object)node2));

node1.setString("ug#DQ$&)$cA23");
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.POST_FLAG);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertFalse(node1.isExprResult());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isCast());
assertFalse(node1.isGetElem());
assertFalse(node1.hasChildren());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isComma());
assertTrue(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isReturn());
assertFalse(node1.isGetProp());
assertFalse(node1.isLabelName());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isNot());
assertFalse(node1.isNumber());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isDo());
assertFalse(node1.isSwitch());
assertFalse(node1.isCall());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isEmpty());
assertFalse(node1.isOr());
assertFalse(node1.isVoid());
assertFalse(node1.isTrue());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isCatch());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isParamList());
assertFalse(node1.isStringKey());
assertFalse(node1.isCase());
assertFalse(node1.isString());
assertFalse(node1.isBlock());
assertFalse(node1.isInc());
assertFalse(node1.isContinue());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isFalse());
assertFalse(node1.isNE());
assertFalse(node1.isSetterDef());
assertFalse(node1.isIf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIn());
assertEquals(147, node1.getType());
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertFalse(node1.equals((Object)node3));

node2.setSourceEncodedPositionForTree(1734);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(54, Node.SLASH_V);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertFalse(node2.isGetProp());
assertFalse(node2.isThis());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isInstanceOf());
assertEquals(1734, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isAnd());
assertFalse(node2.isNot());
assertFalse(node2.isInc());
assertFalse(node2.isCast());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertFalse(node2.isLabel());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertFalse(node2.isArrayLit());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isSwitch());
assertFalse(node2.isBlock());
assertFalse(node2.isTry());
assertFalse(node2.isRegExp());
assertFalse(node2.isWith());
assertFalse(node2.isScript());
assertEquals(2, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.hasOneChild());
assertFalse(node2.isCase());
assertFalse(node2.isHook());
assertFalse(node2.isFor());
assertFalse(node2.isSetterDef());
assertEquals(0, node2.getLineno());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isCatch());
assertFalse(node2.isName());
assertFalse(node2.isCall());
assertFalse(node2.isNull());
assertEquals(1734, node2.getSourcePosition());
assertFalse(node2.isParamList());
assertFalse(node2.isStringKey());
assertFalse(node2.isFunction());
assertFalse(node2.isTrue());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isContinue());
assertFalse(node2.isDo());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isVar());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isString());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.isReturn());
assertFalse(node2.isWhile());
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node3));
assertFalse(node2.equals((Object)node1));

node1.getDouble();

[MASTER] 13:13:34.979 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_217_1628255614878/com/google/javascript/rhino/Node_217_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_217_1628255614878/com/google/javascript/rhino/Node_217_tmp__ESTest_scaffolding.java]]
[MASTER] 13:13:34.979 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:13:34.979 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:13:34.981 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1171
[MASTER] 13:13:34.983 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_217_1628255614878/com/google/javascript/rhino/Node_217_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:13:34 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.testdata.EvoSuiteFile;
15: import org.evosuite.runtime.testdata.FileSystemHandling;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class Node_217_tmp__ESTest extends Node_217_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.Maps$1");
24:       assertFalse(boolean0);
25:       
26:       Node node0 = Node.newNumber((double) (-2523), (-2523), (-2889));
27:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
28:       assertEquals(55, Node.INFERRED_FUNCTION);
29:       assertEquals(43, Node.IS_CONSTANT_NAME);
30:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
31:       assertEquals(39, Node.EMPTY_BLOCK);
32:       assertEquals(53, Node.INPUT_ID);
33:       assertEquals(36, Node.QUOTED_PROP);
34:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
35:       assertEquals(50, Node.FREE_CALL);
36:       assertEquals(8, Node.FLAG_NO_THROWS);
37:       assertEquals(29, Node.JSDOC_INFO_PROP);
38:       assertEquals(40, Node.ORIGINALNAME_PROP);
39:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
40:       assertEquals(47, Node.IS_DISPATCHER);
41:       assertEquals(2, Node.POST_FLAG);
42:       assertEquals(30, Node.VAR_ARGS_NAME);
43:       assertEquals(1, Node.DECR_FLAG);
44:       assertEquals(12, Node.COLUMN_BITS);
45:       assertEquals(57, Node.LAST_PROP);
46:       assertEquals(32, Node.INCRDECR_PROP);
47:       assertEquals(46, Node.IS_NAMESPACE);
48:       assertEquals(49, Node.DIRECT_EVAL);
49:       assertEquals(54, Node.SLASH_V);
50:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
51:       assertEquals(15, Node.NO_SIDE_EFFECTS);
52:       assertEquals(51, Node.STATIC_SOURCE_FILE);
53:       assertEquals(52, Node.LENGTH);
54:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
55:       assertEquals(57, Node.REFLECTED_OBJECT);
56:       assertEquals(56, Node.CHANGE_TIME);
57:       assertEquals(48, Node.DIRECTIVES);
58:       assertEquals(37, Node.OPT_ARG_NAME);
59:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
60:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
61:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
62:       assertEquals(4095, Node.COLUMN_MASK);
63:       assertNotNull(node0);
64:       assertFalse(node0.isIn());
65:       assertFalse(node0.isNE());
66:       assertFalse(node0.isGetterDef());
67:       assertFalse(node0.isCase());
68:       assertFalse(node0.isEmpty());
69:       assertFalse(node0.isFor());
70:       assertFalse(node0.isString());
71:       assertTrue(node0.isNumber());
72:       assertFalse(node0.isInc());
73:       assertFalse(node0.isFunction());
74:       assertFalse(node0.isSwitch());
75:       assertEquals((-1), node0.getCharno());
76:       assertFalse(node0.isDebugger());
77:       assertFalse(node0.isFalse());
78:       assertFalse(node0.isArrayLit());
79:       assertFalse(node0.isNull());
80:       assertEquals(0, node0.getChildCount());
81:       assertFalse(node0.isComma());
82:       assertFalse(node0.isObjectLit());
83:       assertFalse(node0.isNot());
84:       assertFalse(node0.isDefaultCase());
85:       assertFalse(node0.isGetProp());
86:       assertFalse(node0.isVoid());
87:       assertFalse(node0.isAdd());
88:       assertFalse(node0.isTrue());
89:       assertFalse(node0.isName());
90:       assertFalse(node0.isGetElem());
91:       assertFalse(node0.isAssign());
92:       assertFalse(node0.isDelProp());
93:       assertFalse(node0.isCall());
94:       assertFalse(node0.isExprResult());
95:       assertFalse(node0.isBreak());
96:       assertFalse(node0.isOr());
97:       assertFalse(node0.isAssignAdd());
98:       assertEquals((-1), node0.getSourcePosition());
99:       assertFalse(node0.isTypeOf());
100:       assertFalse(node0.isDec());
101:       assertFalse(node0.isReturn());
102:       assertFalse(node0.isLabel());
103:       assertFalse(node0.hasChildren());
104:       assertFalse(node0.isDo());
105:       assertFalse(node0.isWhile());
106:       assertFalse(node0.hasOneChild());
107:       assertFalse(node0.isNew());
108:       assertFalse(node0.isVar());
109:       assertFalse(node0.isStringKey());
110:       assertFalse(node0.isLabelName());
111:       assertFalse(node0.isAnd());
112:       assertFalse(node0.isContinue());
113:       assertFalse(node0.isCast());
114:       assertFalse(node0.isParamList());
115:       assertFalse(node0.isThis());
116:       assertFalse(node0.isThrow());
117:       assertFalse(node0.isScript());
118:       assertFalse(node0.isSetterDef());
119:       assertFalse(node0.isBlock());
120:       assertFalse(node0.isTry());
121:       assertFalse(node0.isHook());
122:       assertFalse(node0.isRegExp());
123:       assertEquals(39, node0.getType());
124:       assertFalse(node0.isCatch());
125:       assertFalse(node0.hasMoreThanOneChild());
126:       assertFalse(node0.isWith());
127:       assertFalse(node0.isIf());
128:       assertFalse(node0.isInstanceOf());
129:       assertEquals((-1), node0.getLineno());
130:       
131:       Node node1 = new Node((-2523), node0, node0, node0);
132:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
133:       assertEquals(55, Node.INFERRED_FUNCTION);
134:       assertEquals(43, Node.IS_CONSTANT_NAME);
135:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
136:       assertEquals(39, Node.EMPTY_BLOCK);
137:       assertEquals(53, Node.INPUT_ID);
138:       assertEquals(36, Node.QUOTED_PROP);
139:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
140:       assertEquals(50, Node.FREE_CALL);
141:       assertEquals(8, Node.FLAG_NO_THROWS);
142:       assertEquals(29, Node.JSDOC_INFO_PROP);
143:       assertEquals(40, Node.ORIGINALNAME_PROP);
144:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
145:       assertEquals(47, Node.IS_DISPATCHER);
146:       assertEquals(2, Node.POST_FLAG);
147:       assertEquals(30, Node.VAR_ARGS_NAME);
148:       assertEquals(1, Node.DECR_FLAG);
149:       assertEquals(12, Node.COLUMN_BITS);
150:       assertEquals(57, Node.LAST_PROP);
151:       assertEquals(32, Node.INCRDECR_PROP);
152:       assertEquals(46, Node.IS_NAMESPACE);
153:       assertEquals(49, Node.DIRECT_EVAL);
154:       assertEquals(54, Node.SLASH_V);
155:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
156:       assertEquals(15, Node.NO_SIDE_EFFECTS);
157:       assertEquals(51, Node.STATIC_SOURCE_FILE);
158:       assertEquals(52, Node.LENGTH);
159:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
160:       assertEquals(57, Node.REFLECTED_OBJECT);
161:       assertEquals(56, Node.CHANGE_TIME);
162:       assertEquals(48, Node.DIRECTIVES);
163:       assertEquals(37, Node.OPT_ARG_NAME);
164:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
165:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
166:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
167:       assertEquals(4095, Node.COLUMN_MASK);
168:       assertEquals(12, Node.COLUMN_BITS);
169:       assertEquals(32, Node.INCRDECR_PROP);
170:       assertEquals(46, Node.IS_NAMESPACE);
171:       assertEquals(51, Node.STATIC_SOURCE_FILE);
172:       assertEquals(1, Node.DECR_FLAG);
173:       assertEquals(49, Node.DIRECT_EVAL);
174:       assertEquals(56, Node.CHANGE_TIME);
175:       assertEquals(15, Node.NO_SIDE_EFFECTS);
176:       assertEquals(57, Node.LAST_PROP);
177:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
178:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
179:       assertEquals(29, Node.JSDOC_INFO_PROP);
180:       assertEquals(52, Node.LENGTH);
181:       assertEquals(54, Node.SLASH_V);
182:       assertEquals(43, Node.IS_CONSTANT_NAME);
183:       assertEquals(47, Node.IS_DISPATCHER);
184:       assertEquals(2, Node.POST_FLAG);
185:       assertEquals(30, Node.VAR_ARGS_NAME);
186:       assertEquals(40, Node.ORIGINALNAME_PROP);
187:       assertEquals(48, Node.DIRECTIVES);
188:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
189:       assertEquals(39, Node.EMPTY_BLOCK);
190:       assertEquals(36, Node.QUOTED_PROP);
191:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
192:       assertEquals(50, Node.FREE_CALL);
193:       assertEquals(53, Node.INPUT_ID);
194:       assertEquals(55, Node.INFERRED_FUNCTION);
195:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
196:       assertEquals(8, Node.FLAG_NO_THROWS);
197:       assertEquals(57, Node.REFLECTED_OBJECT);
198:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
199:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
200:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
201:       assertEquals(37, Node.OPT_ARG_NAME);
202:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
203:       assertEquals(4095, Node.COLUMN_MASK);
204:       assertNotNull(node1);
205:       assertFalse(node0.isIn());
206:       assertFalse(node0.isNE());
207:       assertFalse(node0.isGetterDef());
208:       assertFalse(node0.isCase());
209:       assertFalse(node0.isEmpty());
210:       assertFalse(node0.isFor());
211:       assertFalse(node0.isString());
212:       assertTrue(node0.isNumber());
213:       assertFalse(node0.isInc());
214:       assertFalse(node0.isFunction());
215:       assertFalse(node0.isSwitch());
216:       assertEquals((-1), node0.getCharno());
217:       assertFalse(node0.isDebugger());
218:       assertFalse(node0.isFalse());
219:       assertFalse(node0.isArrayLit());
220:       assertFalse(node0.isNull());
221:       assertEquals(0, node0.getChildCount());
222:       assertFalse(node0.isComma());
223:       assertFalse(node0.isObjectLit());
224:       assertFalse(node0.isNot());
225:       assertFalse(node0.isDefaultCase());
226:       assertFalse(node0.isGetProp());
227:       assertFalse(node0.isVoid());
228:       assertFalse(node0.isAdd());
229:       assertFalse(node0.isTrue());
230:       assertFalse(node0.isName());
231:       assertFalse(node0.isGetElem());
232:       assertFalse(node0.isAssign());
233:       assertFalse(node0.isDelProp());
234:       assertFalse(node0.isCall());
235:       assertFalse(node0.isExprResult());
236:       assertFalse(node0.isBreak());
237:       assertFalse(node0.isOr());
238:       assertFalse(node0.isAssignAdd());
239:       assertEquals((-1), node0.getSourcePosition());
240:       assertFalse(node0.isTypeOf());
241:       assertFalse(node0.isDec());
242:       assertFalse(node0.isReturn());
243:       assertFalse(node0.isLabel());
244:       assertFalse(node0.hasChildren());
245:       assertFalse(node0.isDo());
246:       assertFalse(node0.isWhile());
247:       assertFalse(node0.hasOneChild());
248:       assertFalse(node0.isNew());
249:       assertFalse(node0.isVar());
250:       assertFalse(node0.isStringKey());
251:       assertFalse(node0.isLabelName());
252:       assertFalse(node0.isAnd());
253:       assertFalse(node0.isContinue());
254:       assertFalse(node0.isCast());
255:       assertFalse(node0.isParamList());
256:       assertFalse(node0.isThis());
257:       assertFalse(node0.isThrow());
258:       assertFalse(node0.isScript());
259:       assertFalse(node0.isSetterDef());
260:       assertFalse(node0.isBlock());
261:       assertFalse(node0.isTry());
262:       assertFalse(node0.isHook());
263:       assertFalse(node0.isRegExp());
264:       assertEquals(39, node0.getType());
265:       assertFalse(node0.isCatch());
266:       assertFalse(node0.hasMoreThanOneChild());
267:       assertFalse(node0.isWith());
268:       assertFalse(node0.isIf());
269:       assertFalse(node0.isInstanceOf());
270:       assertEquals((-1), node0.getLineno());
271:       assertFalse(node1.isThis());
272:       assertFalse(node1.isFalse());
273:       assertFalse(node1.isComma());
274:       assertFalse(node1.isHook());
275:       assertFalse(node1.isThrow());
276:       assertFalse(node1.isGetProp());
277:       assertFalse(node1.isScript());
278:       assertFalse(node1.isSwitch());
279:       assertFalse(node1.isString());
280:       assertEquals((-1), node1.getCharno());
281:       assertFalse(node1.isObjectLit());
282:       assertFalse(node1.isNot());
283:       assertFalse(node1.isAnd());
284:       assertFalse(node1.isCast());
285:       assertFalse(node1.isLabelName());
286:       assertFalse(node1.isIf());
287:       assertFalse(node1.isNumber());
288:       assertFalse(node1.isNE());
289:       assertFalse(node1.isFor());
290:       assertFalse(node1.isGetterDef());
291:       assertEquals(1, node1.getChildCount());
292:       assertFalse(node1.isIn());
293:       assertFalse(node1.isTry());
294:       assertFalse(node1.isCase());
295:       assertFalse(node1.isRegExp());
296:       assertFalse(node1.isInc());
297:       assertFalse(node1.isBlock());
298:       assertFalse(node1.isWith());
299:       assertFalse(node1.hasMoreThanOneChild());
300:       assertFalse(node1.isCatch());
301:       assertFalse(node1.isInstanceOf());
302:       assertTrue(node1.hasChildren());
303:       assertEquals((-1), node1.getLineno());
304:       assertFalse(node1.isNull());
305:       assertFalse(node1.isSetterDef());
306:       assertFalse(node1.isParamList());
307:       assertFalse(node1.isVar());
308:       assertFalse(node1.isAdd());
309:       assertFalse(node1.isNew());
310:       assertFalse(node1.isDefaultCase());
311:       assertFalse(node1.isFunction());
312:       assertFalse(node1.isDebugger());
313:       assertFalse(node1.isArrayLit());
314:       assertFalse(node1.isContinue());
315:       assertFalse(node1.isStringKey());
316:       assertEquals((-1), node1.getSourcePosition());
317:       assertFalse(node1.isTypeOf());
318:       assertFalse(node1.isLabel());
319:       assertTrue(node1.hasOneChild());
320:       assertFalse(node1.isReturn());
321:       assertFalse(node1.isOr());
322:       assertFalse(node1.isDec());
323:       assertFalse(node1.isAssign());
324:       assertFalse(node1.isEmpty());
325:       assertFalse(node1.isAssignAdd());
326:       assertFalse(node1.isDo());
327:       assertEquals((-2523), node1.getType());
328:       assertFalse(node1.isTrue());
329:       assertFalse(node1.isExprResult());
330:       assertFalse(node1.isWhile());
331:       assertFalse(node1.isCall());
332:       assertFalse(node1.isName());
333:       assertFalse(node1.isGetElem());
334:       assertFalse(node1.isVoid());
335:       assertFalse(node1.isBreak());
336:       assertFalse(node1.isDelProp());
337:       assertFalse(node1.equals((Object)node0));
338:       
339:       boolean boolean1 = false;
340:       Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
341:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
342:       assertEquals(55, Node.INFERRED_FUNCTION);
343:       assertEquals(43, Node.IS_CONSTANT_NAME);
344:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
345:       assertEquals(39, Node.EMPTY_BLOCK);
346:       assertEquals(53, Node.INPUT_ID);
347:       assertEquals(36, Node.QUOTED_PROP);
348:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
349:       assertEquals(50, Node.FREE_CALL);
350:       assertEquals(8, Node.FLAG_NO_THROWS);
351:       assertEquals(29, Node.JSDOC_INFO_PROP);
352:       assertEquals(40, Node.ORIGINALNAME_PROP);
353:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
354:       assertEquals(47, Node.IS_DISPATCHER);
355:       assertEquals(2, Node.POST_FLAG);
356:       assertEquals(30, Node.VAR_ARGS_NAME);
357:       assertEquals(1, Node.DECR_FLAG);
358:       assertEquals(12, Node.COLUMN_BITS);
359:       assertEquals(57, Node.LAST_PROP);
360:       assertEquals(32, Node.INCRDECR_PROP);
361:       assertEquals(46, Node.IS_NAMESPACE);
362:       assertEquals(49, Node.DIRECT_EVAL);
363:       assertEquals(54, Node.SLASH_V);
364:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
365:       assertEquals(15, Node.NO_SIDE_EFFECTS);
366:       assertEquals(51, Node.STATIC_SOURCE_FILE);
367:       assertEquals(52, Node.LENGTH);
368:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
369:       assertEquals(57, Node.REFLECTED_OBJECT);
370:       assertEquals(56, Node.CHANGE_TIME);
371:       assertEquals(48, Node.DIRECTIVES);
372:       assertEquals(37, Node.OPT_ARG_NAME);
373:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
374:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
375:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
376:       assertEquals(4095, Node.COLUMN_MASK);
377:       assertEquals(12, Node.COLUMN_BITS);
378:       assertEquals(32, Node.INCRDECR_PROP);
379:       assertEquals(46, Node.IS_NAMESPACE);
380:       assertEquals(51, Node.STATIC_SOURCE_FILE);
381:       assertEquals(1, Node.DECR_FLAG);
382:       assertEquals(49, Node.DIRECT_EVAL);
383:       assertEquals(56, Node.CHANGE_TIME);
384:       assertEquals(15, Node.NO_SIDE_EFFECTS);
385:       assertEquals(57, Node.LAST_PROP);
386:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
387:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
388:       assertEquals(29, Node.JSDOC_INFO_PROP);
389:       assertEquals(52, Node.LENGTH);
390:       assertEquals(54, Node.SLASH_V);
391:       assertEquals(43, Node.IS_CONSTANT_NAME);
392:       assertEquals(47, Node.IS_DISPATCHER);
393:       assertEquals(2, Node.POST_FLAG);
394:       assertEquals(30, Node.VAR_ARGS_NAME);
395:       assertEquals(40, Node.ORIGINALNAME_PROP);
396:       assertEquals(48, Node.DIRECTIVES);
397:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
398:       assertEquals(39, Node.EMPTY_BLOCK);
399:       assertEquals(36, Node.QUOTED_PROP);
400:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
401:       assertEquals(50, Node.FREE_CALL);
402:       assertEquals(53, Node.INPUT_ID);
403:       assertEquals(55, Node.INFERRED_FUNCTION);
404:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
405:       assertEquals(8, Node.FLAG_NO_THROWS);
406:       assertEquals(57, Node.REFLECTED_OBJECT);
407:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
408:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
409:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
410:       assertEquals(37, Node.OPT_ARG_NAME);
411:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
412:       assertEquals(4095, Node.COLUMN_MASK);
413:       assertNotNull(node_AncestorIterable0);
414:       assertFalse(node0.isIn());
415:       assertFalse(node0.isNE());
416:       assertFalse(node0.isGetterDef());
417:       assertFalse(node0.isCase());
418:       assertFalse(node0.isEmpty());
419:       assertFalse(node0.isFor());
420:       assertFalse(node0.isString());
421:       assertTrue(node0.isNumber());
422:       assertFalse(node0.isInc());
423:       assertFalse(node0.isFunction());
424:       assertFalse(node0.isSwitch());
425:       assertEquals((-1), node0.getCharno());
426:       assertFalse(node0.isDebugger());
427:       assertFalse(node0.isFalse());
428:       assertFalse(node0.isArrayLit());
429:       assertFalse(node0.isNull());
430:       assertEquals(0, node0.getChildCount());
431:       assertFalse(node0.isComma());
432:       assertFalse(node0.isObjectLit());
433:       assertFalse(node0.isNot());
434:       assertFalse(node0.isDefaultCase());
435:       assertFalse(node0.isGetProp());
436:       assertFalse(node0.isVoid());
437:       assertFalse(node0.isAdd());
438:       assertFalse(node0.isTrue());
439:       assertFalse(node0.isName());
440:       assertFalse(node0.isGetElem());
441:       assertFalse(node0.isAssign());
442:       assertFalse(node0.isDelProp());
443:       assertFalse(node0.isCall());
444:       assertFalse(node0.isExprResult());
445:       assertFalse(node0.isBreak());
446:       assertFalse(node0.isOr());
447:       assertFalse(node0.isAssignAdd());
448:       assertEquals((-1), node0.getSourcePosition());
449:       assertFalse(node0.isTypeOf());
450:       assertFalse(node0.isDec());
451:       assertFalse(node0.isReturn());
452:       assertFalse(node0.isLabel());
453:       assertFalse(node0.hasChildren());
454:       assertFalse(node0.isDo());
455:       assertFalse(node0.isWhile());
456:       assertFalse(node0.hasOneChild());
457:       assertFalse(node0.isNew());
458:       assertFalse(node0.isVar());
459:       assertFalse(node0.isStringKey());
460:       assertFalse(node0.isLabelName());
461:       assertFalse(node0.isAnd());
462:       assertFalse(node0.isContinue());
463:       assertFalse(node0.isCast());
464:       assertFalse(node0.isParamList());
465:       assertFalse(node0.isThis());
466:       assertFalse(node0.isThrow());
467:       assertFalse(node0.isScript());
468:       assertFalse(node0.isSetterDef());
469:       assertFalse(node0.isBlock());
470:       assertFalse(node0.isTry());
471:       assertFalse(node0.isHook());
472:       assertFalse(node0.isRegExp());
473:       assertEquals(39, node0.getType());
474:       assertFalse(node0.isCatch());
475:       assertFalse(node0.hasMoreThanOneChild());
476:       assertFalse(node0.isWith());
477:       assertFalse(node0.isIf());
478:       assertFalse(node0.isInstanceOf());
479:       assertEquals((-1), node0.getLineno());
480:       assertFalse(node1.isThis());
481:       assertFalse(node1.isFalse());
482:       assertFalse(node1.isComma());
483:       assertFalse(node1.isHook());
484:       assertFalse(node1.isThrow());
485:       assertFalse(node1.isGetProp());
486:       assertFalse(node1.isScript());
487:       assertFalse(node1.isSwitch());
488:       assertFalse(node1.isString());
489:       assertEquals((-1), node1.getCharno());
490:       assertFalse(node1.isObjectLit());
491:       assertFalse(node1.isNot());
492:       assertFalse(node1.isAnd());
493:       assertFalse(node1.isCast());
494:       assertFalse(node1.isLabelName());
495:       assertFalse(node1.isIf());
496:       assertFalse(node1.isNumber());
497:       assertFalse(node1.isNE());
498:       assertFalse(node1.isFor());
499:       assertFalse(node1.isGetterDef());
500:       assertEquals(1, node1.getChildCount());
501:       assertFalse(node1.isIn());
502:       assertFalse(node1.isTry());
503:       assertFalse(node1.isCase());
504:       assertFalse(node1.isRegExp());
505:       assertFalse(node1.isInc());
506:       assertFalse(node1.isBlock());
507:       assertFalse(node1.isWith());
508:       assertFalse(node1.hasMoreThanOneChild());
509:       assertFalse(node1.isCatch());
510:       assertFalse(node1.isInstanceOf());
511:       assertTrue(node1.hasChildren());
512:       assertEquals((-1), node1.getLineno());
513:       assertFalse(node1.isNull());
514:       assertFalse(node1.isSetterDef());
515:       assertFalse(node1.isParamList());
516:       assertFalse(node1.isVar());
517:       assertFalse(node1.isAdd());
518:       assertFalse(node1.isNew());
519:       assertFalse(node1.isDefaultCase());
520:       assertFalse(node1.isFunction());
521:       assertFalse(node1.isDebugger());
522:       assertFalse(node1.isArrayLit());
523:       assertFalse(node1.isContinue());
524:       assertFalse(node1.isStringKey());
525:       assertEquals((-1), node1.getSourcePosition());
526:       assertFalse(node1.isTypeOf());
527:       assertFalse(node1.isLabel());
528:       assertTrue(node1.hasOneChild());
529:       assertFalse(node1.isReturn());
530:       assertFalse(node1.isOr());
531:       assertFalse(node1.isDec());
532:       assertFalse(node1.isAssign());
533:       assertFalse(node1.isEmpty());
534:       assertFalse(node1.isAssignAdd());
535:       assertFalse(node1.isDo());
536:       assertEquals((-2523), node1.getType());
537:       assertFalse(node1.isTrue());
538:       assertFalse(node1.isExprResult());
539:       assertFalse(node1.isWhile());
540:       assertFalse(node1.isCall());
541:       assertFalse(node1.isName());
542:       assertFalse(node1.isGetElem());
543:       assertFalse(node1.isVoid());
544:       assertFalse(node1.isBreak());
545:       assertFalse(node1.isDelProp());
546:       assertFalse(node0.equals((Object)node1));
547:       assertFalse(node1.equals((Object)node0));
548:       
549:       Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
550:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
551:       assertEquals(55, Node.INFERRED_FUNCTION);
552:       assertEquals(43, Node.IS_CONSTANT_NAME);
553:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
554:       assertEquals(39, Node.EMPTY_BLOCK);
555:       assertEquals(53, Node.INPUT_ID);
556:       assertEquals(36, Node.QUOTED_PROP);
557:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
558:       assertEquals(50, Node.FREE_CALL);
559:       assertEquals(8, Node.FLAG_NO_THROWS);
560:       assertEquals(29, Node.JSDOC_INFO_PROP);
561:       assertEquals(40, Node.ORIGINALNAME_PROP);
562:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
563:       assertEquals(47, Node.IS_DISPATCHER);
564:       assertEquals(2, Node.POST_FLAG);
565:       assertEquals(30, Node.VAR_ARGS_NAME);
566:       assertEquals(1, Node.DECR_FLAG);
567:       assertEquals(12, Node.COLUMN_BITS);
568:       assertEquals(57, Node.LAST_PROP);
569:       assertEquals(32, Node.INCRDECR_PROP);
570:       assertEquals(46, Node.IS_NAMESPACE);
571:       assertEquals(49, Node.DIRECT_EVAL);
572:       assertEquals(54, Node.SLASH_V);
573:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
574:       assertEquals(15, Node.NO_SIDE_EFFECTS);
575:       assertEquals(51, Node.STATIC_SOURCE_FILE);
576:       assertEquals(52, Node.LENGTH);
577:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
578:       assertEquals(57, Node.REFLECTED_OBJECT);
579:       assertEquals(56, Node.CHANGE_TIME);
580:       assertEquals(48, Node.DIRECTIVES);
581:       assertEquals(37, Node.OPT_ARG_NAME);
582:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
583:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
584:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
585:       assertEquals(4095, Node.COLUMN_MASK);
586:       assertEquals(12, Node.COLUMN_BITS);
587:       assertEquals(32, Node.INCRDECR_PROP);
588:       assertEquals(46, Node.IS_NAMESPACE);
589:       assertEquals(51, Node.STATIC_SOURCE_FILE);
590:       assertEquals(1, Node.DECR_FLAG);
591:       assertEquals(49, Node.DIRECT_EVAL);
592:       assertEquals(56, Node.CHANGE_TIME);
593:       assertEquals(15, Node.NO_SIDE_EFFECTS);
594:       assertEquals(57, Node.LAST_PROP);
595:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
596:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
597:       assertEquals(29, Node.JSDOC_INFO_PROP);
598:       assertEquals(52, Node.LENGTH);
599:       assertEquals(54, Node.SLASH_V);
600:       assertEquals(43, Node.IS_CONSTANT_NAME);
601:       assertEquals(47, Node.IS_DISPATCHER);
602:       assertEquals(2, Node.POST_FLAG);
603:       assertEquals(30, Node.VAR_ARGS_NAME);
604:       assertEquals(40, Node.ORIGINALNAME_PROP);
605:       assertEquals(48, Node.DIRECTIVES);
606:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
607:       assertEquals(39, Node.EMPTY_BLOCK);
608:       assertEquals(36, Node.QUOTED_PROP);
609:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
610:       assertEquals(50, Node.FREE_CALL);
611:       assertEquals(53, Node.INPUT_ID);
612:       assertEquals(55, Node.INFERRED_FUNCTION);
613:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
614:       assertEquals(8, Node.FLAG_NO_THROWS);
615:       assertEquals(57, Node.REFLECTED_OBJECT);
616:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
617:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
618:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
619:       assertEquals(37, Node.OPT_ARG_NAME);
620:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
621:       assertEquals(4095, Node.COLUMN_MASK);
622:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
623:       assertEquals(53, Node.INPUT_ID);
624:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
625:       assertEquals(55, Node.INFERRED_FUNCTION);
626:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
627:       assertEquals(43, Node.IS_CONSTANT_NAME);
628:       assertEquals(56, Node.CHANGE_TIME);
629:       assertEquals(36, Node.QUOTED_PROP);
630:       assertEquals(37, Node.OPT_ARG_NAME);
631:       assertEquals(48, Node.DIRECTIVES);
632:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
633:       assertEquals(32, Node.INCRDECR_PROP);
634:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
635:       assertEquals(1, Node.DECR_FLAG);
636:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
637:       assertEquals(4095, Node.COLUMN_MASK);
638:       assertEquals(12, Node.COLUMN_BITS);
639:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
640:       assertEquals(54, Node.SLASH_V);
641:       assertEquals(52, Node.LENGTH);
642:       assertEquals(57, Node.LAST_PROP);
643:       assertEquals(15, Node.NO_SIDE_EFFECTS);
644:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
645:       assertEquals(49, Node.DIRECT_EVAL);
646:       assertEquals(50, Node.FREE_CALL);
647:       assertEquals(46, Node.IS_NAMESPACE);
648:       assertEquals(51, Node.STATIC_SOURCE_FILE);
649:       assertEquals(57, Node.REFLECTED_OBJECT);
650:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
651:       assertEquals(2, Node.POST_FLAG);
652:       assertEquals(8, Node.FLAG_NO_THROWS);
653:       assertEquals(29, Node.JSDOC_INFO_PROP);
654:       assertEquals(39, Node.EMPTY_BLOCK);
655:       assertEquals(40, Node.ORIGINALNAME_PROP);
656:       assertEquals(30, Node.VAR_ARGS_NAME);
657:       assertEquals(47, Node.IS_DISPATCHER);
658:       assertNotNull(node2);
659:       assertFalse(node0.isIn());
660:       assertFalse(node0.isNE());
661:       assertFalse(node0.isGetterDef());
662:       assertFalse(node0.isCase());
663:       assertFalse(node0.isEmpty());
664:       assertFalse(node0.isFor());
665:       assertFalse(node0.isString());
666:       assertTrue(node0.isNumber());
667:       assertFalse(node0.isInc());
668:       assertFalse(node0.isFunction());
669:       assertFalse(node0.isSwitch());
670:       assertEquals((-1), node0.getCharno());
671:       assertFalse(node0.isDebugger());
672:       assertFalse(node0.isFalse());
673:       assertFalse(node0.isArrayLit());
674:       assertFalse(node0.isNull());
675:       assertEquals(0, node0.getChildCount());
676:       assertFalse(node0.isComma());
677:       assertFalse(node0.isObjectLit());
678:       assertFalse(node0.isNot());
679:       assertFalse(node0.isDefaultCase());
680:       assertFalse(node0.isGetProp());
681:       assertFalse(node0.isVoid());
682:       assertFalse(node0.isAdd());
683:       assertFalse(node0.isTrue());
684:       assertFalse(node0.isName());
685:       assertFalse(node0.isGetElem());
686:       assertFalse(node0.isAssign());
687:       assertFalse(node0.isDelProp());
688:       assertFalse(node0.isCall());
689:       assertFalse(node0.isExprResult());
690:       assertFalse(node0.isBreak());
691:       assertFalse(node0.isOr());
692:       assertFalse(node0.isAssignAdd());
693:       assertEquals((-1), node0.getSourcePosition());
694:       assertFalse(node0.isTypeOf());
695:       assertFalse(node0.isDec());
696:       assertFalse(node0.isReturn());
697:       assertFalse(node0.isLabel());
698:       assertFalse(node0.hasChildren());
699:       assertFalse(node0.isDo());
700:       assertFalse(node0.isWhile());
701:       assertFalse(node0.hasOneChild());
702:       assertFalse(node0.isNew());
703:       assertFalse(node0.isVar());
704:       assertFalse(node0.isStringKey());
705:       assertFalse(node0.isLabelName());
706:       assertFalse(node0.isAnd());
707:       assertFalse(node0.isContinue());
708:       assertFalse(node0.isCast());
709:       assertFalse(node0.isParamList());
710:       assertFalse(node0.isThis());
711:       assertFalse(node0.isThrow());
712:       assertFalse(node0.isScript());
713:       assertFalse(node0.isSetterDef());
714:       assertFalse(node0.isBlock());
715:       assertFalse(node0.isTry());
716:       assertFalse(node0.isHook());
717:       assertFalse(node0.isRegExp());
718:       assertEquals(39, node0.getType());
719:       assertFalse(node0.isCatch());
720:       assertFalse(node0.hasMoreThanOneChild());
721:       assertFalse(node0.isWith());
722:       assertFalse(node0.isIf());
723:       assertFalse(node0.isInstanceOf());
724:       assertEquals((-1), node0.getLineno());
725:       assertFalse(node1.isThis());
726:       assertFalse(node1.isFalse());
727:       assertFalse(node1.isComma());
728:       assertFalse(node1.isHook());
729:       assertFalse(node1.isThrow());
730:       assertFalse(node1.isGetProp());
731:       assertFalse(node1.isScript());
732:       assertFalse(node1.isSwitch());
733:       assertFalse(node1.isString());
734:       assertEquals((-1), node1.getCharno());
735:       assertFalse(node1.isObjectLit());
736:       assertFalse(node1.isNot());
737:       assertFalse(node1.isAnd());
738:       assertFalse(node1.isCast());
739:       assertFalse(node1.isLabelName());
740:       assertFalse(node1.isIf());
741:       assertFalse(node1.isNumber());
742:       assertFalse(node1.isNE());
743:       assertFalse(node1.isFor());
744:       assertFalse(node1.isGetterDef());
745:       assertEquals(1, node1.getChildCount());
746:       assertFalse(node1.isIn());
747:       assertFalse(node1.isTry());
748:       assertFalse(node1.isCase());
749:       assertFalse(node1.isRegExp());
750:       assertFalse(node1.isInc());
751:       assertFalse(node1.isBlock());
752:       assertFalse(node1.isWith());
753:       assertFalse(node1.hasMoreThanOneChild());
754:       assertFalse(node1.isCatch());
755:       assertFalse(node1.isInstanceOf());
756:       assertTrue(node1.hasChildren());
757:       assertEquals((-1), node1.getLineno());
758:       assertFalse(node1.isNull());
759:       assertFalse(node1.isSetterDef());
760:       assertFalse(node1.isParamList());
761:       assertFalse(node1.isVar());
762:       assertFalse(node1.isAdd());
763:       assertFalse(node1.isNew());
764:       assertFalse(node1.isDefaultCase());
765:       assertFalse(node1.isFunction());
766:       assertFalse(node1.isDebugger());
767:       assertFalse(node1.isArrayLit());
768:       assertFalse(node1.isContinue());
769:       assertFalse(node1.isStringKey());
770:       assertEquals((-1), node1.getSourcePosition());
771:       assertFalse(node1.isTypeOf());
772:       assertFalse(node1.isLabel());
773:       assertTrue(node1.hasOneChild());
774:       assertFalse(node1.isReturn());
775:       assertFalse(node1.isOr());
776:       assertFalse(node1.isDec());
777:       assertFalse(node1.isAssign());
778:       assertFalse(node1.isEmpty());
779:       assertFalse(node1.isAssignAdd());
780:       assertFalse(node1.isDo());
781:       assertEquals((-2523), node1.getType());
782:       assertFalse(node1.isTrue());
783:       assertFalse(node1.isExprResult());
784:       assertFalse(node1.isWhile());
785:       assertFalse(node1.isCall());
786:       assertFalse(node1.isName());
787:       assertFalse(node1.isGetElem());
788:       assertFalse(node1.isVoid());
789:       assertFalse(node1.isBreak());
790:       assertFalse(node1.isDelProp());
791:       assertFalse(node2.isCase());
792:       assertFalse(node2.isSwitch());
793:       assertTrue(node2.isNumber());
794:       assertFalse(node2.isInc());
795:       assertEquals((-1), node2.getCharno());
796:       assertFalse(node2.isGetterDef());
797:       assertFalse(node2.isIn());
798:       assertFalse(node2.isString());
799:       assertFalse(node2.isFor());
800:       assertFalse(node2.isBreak());
801:       assertFalse(node2.isHook());
802:       assertFalse(node2.isDelProp());
803:       assertFalse(node2.isNE());
804:       assertFalse(node2.isIf());
805:       assertFalse(node2.isVoid());
806:       assertFalse(node2.isComma());
807:       assertFalse(node2.isThis());
808:       assertFalse(node2.isInstanceOf());
809:       assertFalse(node2.isRegExp());
810:       assertFalse(node2.isDefaultCase());
811:       assertFalse(node2.isTrue());
812:       assertFalse(node2.isTry());
813:       assertFalse(node2.isScript());
814:       assertFalse(node2.isStringKey());
815:       assertFalse(node2.isEmpty());
816:       assertFalse(node2.isLabelName());
817:       assertFalse(node2.isArrayLit());
818:       assertFalse(node2.isVar());
819:       assertFalse(node2.isParamList());
820:       assertFalse(node2.isLabel());
821:       assertEquals(0, node2.getChildCount());
822:       assertFalse(node2.isDo());
823:       assertEquals(39, node2.getType());
824:       assertFalse(node2.isAssignAdd());
825:       assertFalse(node2.isWhile());
826:       assertFalse(node2.isNew());
827:       assertFalse(node2.isAdd());
828:       assertFalse(node2.isOr());
829:       assertEquals((-1), node2.getSourcePosition());
830:       assertFalse(node2.isGetElem());
831:       assertFalse(node2.isName());
832:       assertFalse(node2.isCall());
833:       assertFalse(node2.isAssign());
834:       assertFalse(node2.hasChildren());
835:       assertFalse(node2.hasOneChild());
836:       assertFalse(node2.isNull());
837:       assertFalse(node2.isBlock());
838:       assertFalse(node2.isExprResult());
839:       assertEquals((-1), node2.getLineno());
840:       assertFalse(node2.isReturn());
841:       assertFalse(node2.isDec());
842:       assertFalse(node2.isTypeOf());
843:       assertFalse(node2.isCatch());
844:       assertFalse(node2.hasMoreThanOneChild());
845:       assertFalse(node2.isWith());
846:       assertFalse(node2.isObjectLit());
847:       assertFalse(node2.isNot());
848:       assertFalse(node2.isAnd());
849:       assertFalse(node2.isGetProp());
850:       assertFalse(node2.isSetterDef());
851:       assertFalse(node2.isDebugger());
852:       assertFalse(node2.isFalse());
853:       assertFalse(node2.isThrow());
854:       assertFalse(node2.isFunction());
855:       assertFalse(node2.isCast());
856:       assertFalse(node2.isContinue());
857:       assertSame(node0, node2);
858:       assertSame(node2, node0);
859:       assertFalse(node0.equals((Object)node1));
860:       assertFalse(node1.equals((Object)node0));
861:       assertFalse(node2.equals((Object)node1));
862:       
863:       Iterable<Node> iterable0 = node2.children();
864:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
865:       assertEquals(55, Node.INFERRED_FUNCTION);
866:       assertEquals(43, Node.IS_CONSTANT_NAME);
867:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
868:       assertEquals(39, Node.EMPTY_BLOCK);
869:       assertEquals(53, Node.INPUT_ID);
870:       assertEquals(36, Node.QUOTED_PROP);
871:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
872:       assertEquals(50, Node.FREE_CALL);
873:       assertEquals(8, Node.FLAG_NO_THROWS);
874:       assertEquals(29, Node.JSDOC_INFO_PROP);
875:       assertEquals(40, Node.ORIGINALNAME_PROP);
876:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
877:       assertEquals(47, Node.IS_DISPATCHER);
878:       assertEquals(2, Node.POST_FLAG);
879:       assertEquals(30, Node.VAR_ARGS_NAME);
880:       assertEquals(1, Node.DECR_FLAG);
881:       assertEquals(12, Node.COLUMN_BITS);
882:       assertEquals(57, Node.LAST_PROP);
883:       assertEquals(32, Node.INCRDECR_PROP);
884:       assertEquals(46, Node.IS_NAMESPACE);
885:       assertEquals(49, Node.DIRECT_EVAL);
886:       assertEquals(54, Node.SLASH_V);
887:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
888:       assertEquals(15, Node.NO_SIDE_EFFECTS);
889:       assertEquals(51, Node.STATIC_SOURCE_FILE);
890:       assertEquals(52, Node.LENGTH);
891:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
892:       assertEquals(57, Node.REFLECTED_OBJECT);
893:       assertEquals(56, Node.CHANGE_TIME);
894:       assertEquals(48, Node.DIRECTIVES);
895:       assertEquals(37, Node.OPT_ARG_NAME);
896:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
897:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
898:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
899:       assertEquals(4095, Node.COLUMN_MASK);
900:       assertEquals(12, Node.COLUMN_BITS);
901:       assertEquals(32, Node.INCRDECR_PROP);
902:       assertEquals(46, Node.IS_NAMESPACE);
903:       assertEquals(51, Node.STATIC_SOURCE_FILE);
904:       assertEquals(1, Node.DECR_FLAG);
905:       assertEquals(49, Node.DIRECT_EVAL);
906:       assertEquals(56, Node.CHANGE_TIME);
907:       assertEquals(15, Node.NO_SIDE_EFFECTS);
908:       assertEquals(57, Node.LAST_PROP);
909:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
910:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
911:       assertEquals(29, Node.JSDOC_INFO_PROP);
912:       assertEquals(52, Node.LENGTH);
913:       assertEquals(54, Node.SLASH_V);
914:       assertEquals(43, Node.IS_CONSTANT_NAME);
915:       assertEquals(47, Node.IS_DISPATCHER);
916:       assertEquals(2, Node.POST_FLAG);
917:       assertEquals(30, Node.VAR_ARGS_NAME);
918:       assertEquals(40, Node.ORIGINALNAME_PROP);
919:       assertEquals(48, Node.DIRECTIVES);
920:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
921:       assertEquals(39, Node.EMPTY_BLOCK);
922:       assertEquals(36, Node.QUOTED_PROP);
923:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
924:       assertEquals(50, Node.FREE_CALL);
925:       assertEquals(53, Node.INPUT_ID);
926:       assertEquals(55, Node.INFERRED_FUNCTION);
927:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
928:       assertEquals(8, Node.FLAG_NO_THROWS);
929:       assertEquals(57, Node.REFLECTED_OBJECT);
930:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
931:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
932:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
933:       assertEquals(37, Node.OPT_ARG_NAME);
934:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
935:       assertEquals(4095, Node.COLUMN_MASK);
936:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
937:       assertEquals(53, Node.INPUT_ID);
938:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
939:       assertEquals(55, Node.INFERRED_FUNCTION);
940:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
941:       assertEquals(43, Node.IS_CONSTANT_NAME);
942:       assertEquals(56, Node.CHANGE_TIME);
943:       assertEquals(36, Node.QUOTED_PROP);
944:       assertEquals(37, Node.OPT_ARG_NAME);
945:       assertEquals(48, Node.DIRECTIVES);
946:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
947:       assertEquals(32, Node.INCRDECR_PROP);
948:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
949:       assertEquals(1, Node.DECR_FLAG);
950:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
951:       assertEquals(4095, Node.COLUMN_MASK);
952:       assertEquals(12, Node.COLUMN_BITS);
953:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
954:       assertEquals(54, Node.SLASH_V);
955:       assertEquals(52, Node.LENGTH);
956:       assertEquals(57, Node.LAST_PROP);
957:       assertEquals(15, Node.NO_SIDE_EFFECTS);
958:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
959:       assertEquals(49, Node.DIRECT_EVAL);
960:       assertEquals(50, Node.FREE_CALL);
961:       assertEquals(46, Node.IS_NAMESPACE);
962:       assertEquals(51, Node.STATIC_SOURCE_FILE);
963:       assertEquals(57, Node.REFLECTED_OBJECT);
964:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
965:       assertEquals(2, Node.POST_FLAG);
966:       assertEquals(8, Node.FLAG_NO_THROWS);
967:       assertEquals(29, Node.JSDOC_INFO_PROP);
968:       assertEquals(39, Node.EMPTY_BLOCK);
969:       assertEquals(40, Node.ORIGINALNAME_PROP);
970:       assertEquals(30, Node.VAR_ARGS_NAME);
971:       assertEquals(47, Node.IS_DISPATCHER);
972:       assertNotNull(iterable0);
973:       assertFalse(node0.isIn());
974:       assertFalse(node0.isNE());
975:       assertFalse(node0.isGetterDef());
976:       assertFalse(node0.isCase());
977:       assertFalse(node0.isEmpty());
978:       assertFalse(node0.isFor());
979:       assertFalse(node0.isString());
980:       assertTrue(node0.isNumber());
981:       assertFalse(node0.isInc());
982:       assertFalse(node0.isFunction());
983:       assertFalse(node0.isSwitch());
984:       assertEquals((-1), node0.getCharno());
985:       assertFalse(node0.isDebugger());
986:       assertFalse(node0.isFalse());
987:       assertFalse(node0.isArrayLit());
988:       assertFalse(node0.isNull());
989:       assertEquals(0, node0.getChildCount());
990:       assertFalse(node0.isComma());
991:       assertFalse(node0.isObjectLit());
992:       assertFalse(node0.isNot());
993:       assertFalse(node0.isDefaultCase());
994:       assertFalse(node0.isGetProp());
995:       assertFalse(node0.isVoid());
996:       assertFalse(node0.isAdd());
997:       assertFalse(node0.isTrue());
998:       assertFalse(node0.isName());
999:       assertFalse(node0.isGetElem());
1000:       assertFalse(node0.isAssign());
1001:       assertFalse(node0.isDelProp());
1002:       assertFalse(node0.isCall());
1003:       assertFalse(node0.isExprResult());
1004:       assertFalse(node0.isBreak());
1005:       assertFalse(node0.isOr());
1006:       assertFalse(node0.isAssignAdd());
1007:       assertEquals((-1), node0.getSourcePosition());
1008:       assertFalse(node0.isTypeOf());
1009:       assertFalse(node0.isDec());
1010:       assertFalse(node0.isReturn());
1011:       assertFalse(node0.isLabel());
1012:       assertFalse(node0.hasChildren());
1013:       assertFalse(node0.isDo());
1014:       assertFalse(node0.isWhile());
1015:       assertFalse(node0.hasOneChild());
1016:       assertFalse(node0.isNew());
1017:       assertFalse(node0.isVar());
1018:       assertFalse(node0.isStringKey());
1019:       assertFalse(node0.isLabelName());
1020:       assertFalse(node0.isAnd());
1021:       assertFalse(node0.isContinue());
1022:       assertFalse(node0.isCast());
1023:       assertFalse(node0.isParamList());
1024:       assertFalse(node0.isThis());
1025:       assertFalse(node0.isThrow());
1026:       assertFalse(node0.isScript());
1027:       assertFalse(node0.isSetterDef());
1028:       assertFalse(node0.isBlock());
1029:       assertFalse(node0.isTry());
1030:       assertFalse(node0.isHook());
1031:       assertFalse(node0.isRegExp());
1032:       assertEquals(39, node0.getType());
1033:       assertFalse(node0.isCatch());
1034:       assertFalse(node0.hasMoreThanOneChild());
1035:       assertFalse(node0.isWith());
1036:       assertFalse(node0.isIf());
1037:       assertFalse(node0.isInstanceOf());
1038:       assertEquals((-1), node0.getLineno());
1039:       assertFalse(node1.isThis());
1040:       assertFalse(node1.isFalse());
1041:       assertFalse(node1.isComma());
1042:       assertFalse(node1.isHook());
1043:       assertFalse(node1.isThrow());
1044:       assertFalse(node1.isGetProp());
1045:       assertFalse(node1.isScript());
1046:       assertFalse(node1.isSwitch());
1047:       assertFalse(node1.isString());
1048:       assertEquals((-1), node1.getCharno());
1049:       assertFalse(node1.isObjectLit());
1050:       assertFalse(node1.isNot());
1051:       assertFalse(node1.isAnd());
1052:       assertFalse(node1.isCast());
1053:       assertFalse(node1.isLabelName());
1054:       assertFalse(node1.isIf());
1055:       assertFalse(node1.isNumber());
1056:       assertFalse(node1.isNE());
1057:       assertFalse(node1.isFor());
1058:       assertFalse(node1.isGetterDef());
1059:       assertEquals(1, node1.getChildCount());
1060:       assertFalse(node1.isIn());
1061:       assertFalse(node1.isTry());
1062:       assertFalse(node1.isCase());
1063:       assertFalse(node1.isRegExp());
1064:       assertFalse(node1.isInc());
1065:       assertFalse(node1.isBlock());
1066:       assertFalse(node1.isWith());
1067:       assertFalse(node1.hasMoreThanOneChild());
1068:       assertFalse(node1.isCatch());
1069:       assertFalse(node1.isInstanceOf());
1070:       assertTrue(node1.hasChildren());
1071:       assertEquals((-1), node1.getLineno());
1072:       assertFalse(node1.isNull());
1073:       assertFalse(node1.isSetterDef());
1074:       assertFalse(node1.isParamList());
1075:       assertFalse(node1.isVar());
1076:       assertFalse(node1.isAdd());
1077:       assertFalse(node1.isNew());
1078:       assertFalse(node1.isDefaultCase());
1079:       assertFalse(node1.isFunction());
1080:       assertFalse(node1.isDebugger());
1081:       assertFalse(node1.isArrayLit());
1082:       assertFalse(node1.isContinue());
1083:       assertFalse(node1.isStringKey());
1084:       assertEquals((-1), node1.getSourcePosition());
1085:       assertFalse(node1.isTypeOf());
1086:       assertFalse(node1.isLabel());
1087:       assertTrue(node1.hasOneChild());
1088:       assertFalse(node1.isReturn());
1089:       assertFalse(node1.isOr());
1090:       assertFalse(node1.isDec());
1091:       assertFalse(node1.isAssign());
1092:       assertFalse(node1.isEmpty());
1093:       assertFalse(node1.isAssignAdd());
1094:       assertFalse(node1.isDo());
1095:       assertEquals((-2523), node1.getType());
1096:       assertFalse(node1.isTrue());
1097:       assertFalse(node1.isExprResult());
1098:       assertFalse(node1.isWhile());
1099:       assertFalse(node1.isCall());
1100:       assertFalse(node1.isName());
1101:       assertFalse(node1.isGetElem());
1102:       assertFalse(node1.isVoid());
1103:       assertFalse(node1.isBreak());
1104:       assertFalse(node1.isDelProp());
1105:       assertFalse(node2.isCase());
1106:       assertFalse(node2.isSwitch());
1107:       assertTrue(node2.isNumber());
1108:       assertFalse(node2.isInc());
1109:       assertEquals((-1), node2.getCharno());
1110:       assertFalse(node2.isGetterDef());
1111:       assertFalse(node2.isIn());
1112:       assertFalse(node2.isString());
1113:       assertFalse(node2.isFor());
1114:       assertFalse(node2.isBreak());
1115:       assertFalse(node2.isHook());
1116:       assertFalse(node2.isDelProp());
1117:       assertFalse(node2.isNE());
1118:       assertFalse(node2.isIf());
1119:       assertFalse(node2.isVoid());
1120:       assertFalse(node2.isComma());
1121:       assertFalse(node2.isThis());
1122:       assertFalse(node2.isInstanceOf());
1123:       assertFalse(node2.isRegExp());
1124:       assertFalse(node2.isDefaultCase());
1125:       assertFalse(node2.isTrue());
1126:       assertFalse(node2.isTry());
1127:       assertFalse(node2.isScript());
1128:       assertFalse(node2.isStringKey());
1129:       assertFalse(node2.isEmpty());
1130:       assertFalse(node2.isLabelName());
1131:       assertFalse(node2.isArrayLit());
1132:       assertFalse(node2.isVar());
1133:       assertFalse(node2.isParamList());
1134:       assertFalse(node2.isLabel());
1135:       assertEquals(0, node2.getChildCount());
1136:       assertFalse(node2.isDo());
1137:       assertEquals(39, node2.getType());
1138:       assertFalse(node2.isAssignAdd());
1139:       assertFalse(node2.isWhile());
1140:       assertFalse(node2.isNew());
1141:       assertFalse(node2.isAdd());
1142:       assertFalse(node2.isOr());
1143:       assertEquals((-1), node2.getSourcePosition());
1144:       assertFalse(node2.isGetElem());
1145:       assertFalse(node2.isName());
1146:       assertFalse(node2.isCall());
1147:       assertFalse(node2.isAssign());
1148:       assertFalse(node2.hasChildren());
1149:       assertFalse(node2.hasOneChild());
1150:       assertFalse(node2.isNull());
1151:       assertFalse(node2.isBlock());
1152:       assertFalse(node2.isExprResult());
1153:       assertEquals((-1), node2.getLineno());
1154:       assertFalse(node2.isReturn());
1155:       assertFalse(node2.isDec());
1156:       assertFalse(node2.isTypeOf());
1157:       assertFalse(node2.isCatch());
1158:       assertFalse(node2.hasMoreThanOneChild());
1159:       assertFalse(node2.isWith());
1160:       assertFalse(node2.isObjectLit());
1161:       assertFalse(node2.isNot());
1162:       assertFalse(node2.isAnd());
1163:       assertFalse(node2.isGetProp());
1164:       assertFalse(node2.isSetterDef());
1165:       assertFalse(node2.isDebugger());
1166:       assertFalse(node2.isFalse());
1167:       assertFalse(node2.isThrow());
1168:       assertFalse(node2.isFunction());
1169:       assertFalse(node2.isCast());
1170:       assertFalse(node2.isContinue());
1171:       assertFalse(iterable0.contains(node0));
1172:       assertSame(node0, node2);
1173:       assertSame(node2, node0);
1174:       assertFalse(node0.equals((Object)node1));
1175:       assertFalse(node1.equals((Object)node0));
1176:       assertFalse(node1.equals((Object)node2));
1177:       assertFalse(node2.equals((Object)node1));
1178:       
1179:       // Undeclared exception!
1180:       try { 
1181:         node1.detachFromParent();
1182:         fail("Expecting exception: IllegalStateException");
1183:       
1184:       } catch(IllegalStateException e) {
1185:          //
1186:          // no message in exception (getMessage() returned null)
1187:          //
1188:          verifyException("com.google.common.base.Preconditions", e);
1189:       }
1190:   }
1191: }
RegularFileObject[/tmp/EvoSuite_217_1628255614878/com/google/javascript/rhino/Node_217_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:13:34 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_217_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_217_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.javascript.rhino.JSDocInfo$StringPosition",
72:       "com.google.common.collect.ImmutableList$SubList",
73:       "com.google.javascript.rhino.jstype.NoType",
74:       "com.google.javascript.rhino.JSDocInfo$Visibility",
75:       "com.google.common.collect.ListMultimap",
76:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
77:       "com.google.javascript.rhino.jstype.ArrowType",
78:       "com.google.javascript.rhino.SimpleErrorReporter",
79:       "com.google.common.collect.Lists$RandomAccessPartition",
80:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
81:       "com.google.common.collect.Collections2",
82:       "com.google.javascript.rhino.jstype.NumberType",
83:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
86:       "com.google.common.collect.RegularImmutableList",
87:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
88:       "com.google.javascript.rhino.jstype.StaticScope",
89:       "com.google.javascript.rhino.jstype.InstanceObjectType",
90:       "com.google.common.collect.Lists$TransformingRandomAccessList",
91:       "com.google.javascript.rhino.Node$PropListItem",
92:       "com.google.javascript.rhino.Node$IntPropListItem",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Maps$KeySet",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.LinkedHashMultimap",
98:       "com.google.javascript.rhino.Node",
99:       "com.google.javascript.rhino.jstype.ObjectType",
100:       "com.google.javascript.rhino.SourcePosition",
101:       "com.google.common.collect.Sets$1",
102:       "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition",
103:       "com.google.common.collect.ImmutableMapKeySet",
104:       "com.google.javascript.rhino.JSDocInfo$Marker",
105:       "com.google.common.collect.RegularImmutableMap",
106:       "com.google.common.collect.RegularImmutableBiMap",
107:       "com.google.javascript.rhino.Node$NodeMismatch",
108:       "com.google.javascript.rhino.jstype.RecordType",
109:       "com.google.common.collect.SortedMapDifference",
110:       "com.google.javascript.rhino.jstype.ModificationVisitor",
111:       "com.google.javascript.rhino.jstype.PropertyMap$1",
112:       "com.google.common.collect.AbstractMapEntry",
113:       "com.google.javascript.rhino.Node$AncestorIterable$1",
114:       "com.google.common.collect.Iterators$12",
115:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
116:       "com.google.common.collect.Iterators$11",
117:       "com.google.javascript.rhino.jstype.JSType$1",
118:       "com.google.common.collect.EmptyImmutableBiMap",
119:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.javascript.rhino.jstype.VoidType",
122:       "com.google.common.base.Joiner",
123:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
124:       "com.google.common.collect.AbstractListMultimap",
125:       "com.google.javascript.rhino.jstype.JSType",
126:       "com.google.common.collect.ImmutableAsList",
127:       "com.google.javascript.rhino.Node$StringNode",
128:       "com.google.javascript.rhino.jstype.ProxyObjectType",
129:       "com.google.common.collect.Sets$SetView",
130:       "com.google.common.collect.RegularImmutableAsList",
131:       "com.google.javascript.rhino.jstype.TemplateType",
132:       "com.google.javascript.rhino.jstype.NamedType",
133:       "com.google.common.collect.Iterators$13",
134:       "com.google.javascript.rhino.InputId",
135:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
136:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
137:       "com.google.common.collect.AbstractMapBasedMultimap",
138:       "com.google.common.collect.Lists$Partition",
139:       "com.google.common.collect.Lists",
140:       "com.google.javascript.rhino.Node$SideEffectFlags",
141:       "com.google.common.collect.UnmodifiableListIterator",
142:       "com.google.javascript.rhino.jstype.NullType",
143:       "com.google.common.collect.Lists$TransformingSequentialList",
144:       "com.google.javascript.rhino.ErrorReporter",
145:       "com.google.javascript.rhino.jstype.UnknownType",
146:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
147:       "com.google.javascript.rhino.jstype.ValueType",
148:       "com.google.javascript.rhino.jstype.PropertyMap",
149:       "com.google.javascript.rhino.Token",
150:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.javascript.rhino.jstype.StaticSourceFile",
153:       "com.google.javascript.rhino.jstype.BooleanType",
154:       "com.google.javascript.rhino.jstype.NoObjectType",
155:       "com.google.common.collect.AbstractIterator",
156:       "com.google.javascript.rhino.jstype.FunctionBuilder",
157:       "com.google.javascript.rhino.jstype.JSType$TypePair",
158:       "com.google.common.base.Joiner$MapJoiner",
159:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
160:       "com.google.common.collect.ImmutableList$1",
161:       "com.google.common.collect.MapDifference",
162:       "com.google.javascript.rhino.JSDocInfo$1",
163:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
164:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
165:       "com.google.common.collect.Sets$ImprovedAbstractSet",
166:       "com.google.javascript.rhino.jstype.FunctionType",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.javascript.rhino.JSDocInfo",
170:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
171:       "com.google.javascript.rhino.jstype.Property",
172:       "com.google.common.collect.ImmutableMapValues",
173:       "com.google.common.collect.ImmutableEntry",
174:       "com.google.common.base.Joiner$1",
175:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
176:       "com.google.common.base.Joiner$2",
177:       "com.google.common.collect.ImmutableCollection",
178:       "com.google.common.collect.ImmutableEnumMap",
179:       "com.google.javascript.rhino.jstype.TernaryValue",
180:       "com.google.javascript.rhino.Node$AncestorIterable",
181:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
182:       "com.google.common.collect.Lists$RandomAccessListWrapper",
183:       "com.google.common.collect.ImmutableEnumSet",
184:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
185:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
186:       "com.google.javascript.rhino.jstype.EnumElementType",
187:       "com.google.javascript.rhino.jstype.UnionType",
188:       "com.google.common.base.Objects",
189:       "com.google.javascript.rhino.Node$NumberNode",
190:       "com.google.common.collect.SingletonImmutableList",
191:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
192:       "com.google.common.collect.ImmutableCollection$Builder",
193:       "com.google.javascript.rhino.jstype.StaticSlot",
194:       "com.google.common.collect.Iterators$6",
195:       "com.google.common.collect.BiMap",
196:       "com.google.common.collect.Iterators$7",
197:       "com.google.common.collect.AbstractSetMultimap",
198:       "com.google.common.base.Function",
199:       "com.google.common.collect.ImmutableSet",
200:       "com.google.common.collect.Lists$AbstractListWrapper",
201:       "com.google.common.collect.ImmutableMap",
202:       "com.google.common.collect.AbstractIndexedListIterator",
203:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
204:       "com.google.common.collect.Maps$1",
205:       "com.google.javascript.rhino.jstype.EnumType",
206:       "com.google.javascript.rhino.JSDocInfo$TypePosition",
207:       "com.google.common.collect.Iterators$1",
208:       "com.google.common.collect.Iterators$2",
209:       "com.google.javascript.rhino.jstype.NamespaceType",
210:       "com.google.common.collect.Iterators$3",
211:       "com.google.common.collect.Sets",
212:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
213:       "com.google.javascript.rhino.Node$ObjectPropListItem",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.javascript.rhino.jstype.StaticReference",
220:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
221:       "com.google.common.collect.Multiset",
222:       "com.google.common.collect.AbstractMultimap",
223:       "com.google.common.collect.Multimap",
224:       "com.google.common.collect.Iterators",
225:       "com.google.common.collect.Maps$ImprovedAbstractMap",
226:       "com.google.common.collect.ImmutableBiMap",
227:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
228:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
229:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
230:       "com.google.common.collect.ImmutableList",
231:       "com.google.common.collect.SingletonImmutableBiMap",
232:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
233:       "com.google.javascript.rhino.jstype.StringType",
234:       "com.google.javascript.rhino.Node$AbstractPropListItem",
235:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
236:       "com.google.javascript.rhino.jstype.TemplatizedType",
237:       "com.google.javascript.rhino.jstype.Visitor",
238:       "com.google.javascript.rhino.jstype.NoResolvedType",
239:       "com.google.javascript.rhino.jstype.JSTypeNative",
240:       "com.google.javascript.rhino.jstype.AllType",
241:       "com.google.common.collect.Maps",
242:       "com.google.common.collect.SetMultimap",
243:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
244:       "com.google.common.collect.Maps$EntryTransformer",
245:       "com.google.javascript.rhino.JSTypeExpression",
246:       "com.google.common.collect.Iterators$MergingIterator"
247:     );
248:   } 
249: 
250:   private static void resetClasses() {
251:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_217_tmp__ESTest_scaffolding.class.getClassLoader()); 
252: 
253:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
254:       "com.google.javascript.rhino.Node",
255:       "com.google.javascript.rhino.Node$NumberNode",
256:       "com.google.javascript.rhino.Node$StringNode",
257:       "com.google.javascript.rhino.Node$AbstractPropListItem",
258:       "com.google.javascript.rhino.Node$ObjectPropListItem",
259:       "com.google.javascript.rhino.Node$IntPropListItem",
260:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
261:       "com.google.javascript.rhino.Node$AncestorIterable",
262:       "com.google.javascript.rhino.Node$NodeMismatch",
263:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
264:       "com.google.javascript.rhino.Node$SideEffectFlags",
265:       "com.google.javascript.rhino.Token",
266:       "com.google.common.base.Preconditions",
267:       "com.google.javascript.rhino.SimpleErrorReporter",
268:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
269:       "com.google.common.base.Joiner",
270:       "com.google.common.base.Joiner$1",
271:       "com.google.common.collect.Collections2",
272:       "com.google.common.base.Joiner$MapJoiner",
273:       "com.google.common.collect.Maps",
274:       "com.google.common.collect.AbstractMultimap",
275:       "com.google.common.collect.AbstractMapBasedMultimap",
276:       "com.google.common.collect.AbstractSetMultimap",
277:       "com.google.common.collect.LinkedHashMultimap",
278:       "com.google.common.collect.AbstractMapEntry",
279:       "com.google.common.collect.ImmutableEntry",
280:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
281:       "com.google.common.collect.AbstractListMultimap",
282:       "com.google.common.collect.ArrayListMultimap",
283:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
284:       "com.google.common.collect.ImmutableCollection",
285:       "com.google.common.collect.RegularImmutableList",
286:       "com.google.common.collect.ObjectArrays",
287:       "com.google.common.collect.ImmutableList",
288:       "com.google.javascript.rhino.jstype.ModificationVisitor",
289:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
290:       "com.google.common.collect.ImmutableCollection$Builder",
291:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
292:       "com.google.common.collect.ImmutableList$Builder",
293:       "com.google.common.collect.UnmodifiableIterator",
294:       "com.google.common.collect.UnmodifiableListIterator",
295:       "com.google.common.collect.Iterators$1",
296:       "com.google.common.collect.Iterators$2",
297:       "com.google.common.collect.Iterators",
298:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
299:       "com.google.javascript.rhino.jstype.JSType$1",
300:       "com.google.javascript.rhino.jstype.JSType",
301:       "com.google.javascript.rhino.jstype.ObjectType",
302:       "com.google.javascript.rhino.jstype.ProxyObjectType",
303:       "com.google.javascript.rhino.jstype.TemplateType",
304:       "com.google.javascript.rhino.jstype.ValueType",
305:       "com.google.javascript.rhino.jstype.BooleanType",
306:       "com.google.javascript.rhino.jstype.NullType",
307:       "com.google.javascript.rhino.jstype.NumberType",
308:       "com.google.javascript.rhino.jstype.StringType",
309:       "com.google.javascript.rhino.jstype.UnknownType",
310:       "com.google.javascript.rhino.jstype.VoidType",
311:       "com.google.javascript.rhino.jstype.AllType",
312:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
313:       "com.google.common.collect.ImmutableMap",
314:       "com.google.common.collect.ImmutableBiMap",
315:       "com.google.common.collect.EmptyImmutableBiMap",
316:       "com.google.javascript.rhino.jstype.PropertyMap$1",
317:       "com.google.javascript.rhino.jstype.PropertyMap",
318:       "com.google.javascript.rhino.jstype.FunctionType",
319:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
320:       "com.google.javascript.rhino.jstype.ArrowType",
321:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
322:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
323:       "com.google.javascript.rhino.jstype.InstanceObjectType",
324:       "com.google.javascript.rhino.jstype.Property",
325:       "com.google.common.collect.Lists",
326:       "com.google.javascript.rhino.jstype.NoObjectType",
327:       "com.google.javascript.rhino.jstype.NoType",
328:       "com.google.javascript.rhino.jstype.NoResolvedType",
329:       "com.google.common.collect.SingletonImmutableList",
330:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
331:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
332:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
333:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
334:       "com.google.javascript.rhino.jstype.UnionType",
335:       "com.google.javascript.rhino.jstype.FunctionBuilder",
336:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
337:       "com.google.javascript.rhino.JSDocInfo",
338:       "com.google.common.collect.Iterables",
339:       "com.google.javascript.rhino.jstype.EnumType",
340:       "com.google.javascript.rhino.jstype.EnumElementType",
341:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
342:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
343:       "com.google.common.collect.Sets",
344:       "com.google.common.base.Objects",
345:       "com.google.javascript.rhino.InputId",
346:       "com.google.common.collect.ImmutableSet",
347:       "com.google.common.collect.EmptyImmutableSet",
348:       "com.google.javascript.rhino.Node$AncestorIterable$1",
349:       "com.google.javascript.rhino.jstype.TemplatizedType",
350:       "com.google.common.collect.AbstractMultimap$Values",
351:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
352:       "com.google.common.collect.AbstractMapBasedMultimap$1",
353:       "com.google.common.collect.Multimaps$Entries",
354:       "com.google.common.collect.AbstractMultimap$Entries",
355:       "com.google.common.collect.AbstractMapBasedMultimap$2",
356:       "com.google.common.collect.AbstractIndexedListIterator",
357:       "com.google.common.collect.Iterators$11",
358:       "com.google.javascript.rhino.JSTypeExpression",
359:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
360:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
361:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
362:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
363:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
364:       "com.google.javascript.rhino.jstype.NamedType",
365:       "com.google.common.collect.Sets$ImprovedAbstractSet",
366:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
367:       "com.google.common.collect.Hashing",
368:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
369:       "com.google.common.collect.Iterators$12",
370:       "com.google.common.collect.ImmutableList$1",
371:       "com.google.common.collect.Platform",
372:       "com.google.javascript.rhino.jstype.BooleanLiteralSet"
373:     );
374:   }
375: }

[MASTER] 13:13:35.061 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.Maps$1");
assertFalse(boolean0);

Node node0 = Node.newNumber((double) (-2523), (-2523), (-2889));
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(52, Node.LENGTH);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertNotNull(node0);
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isInc());
assertFalse(node0.isFunction());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNull());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isComma());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isGetProp());
assertFalse(node0.isVoid());
assertFalse(node0.isAdd());
assertFalse(node0.isTrue());
assertFalse(node0.isName());
assertFalse(node0.isGetElem());
assertFalse(node0.isAssign());
assertFalse(node0.isDelProp());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isBreak());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.hasChildren());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isParamList());
assertFalse(node0.isThis());
assertFalse(node0.isThrow());
assertFalse(node0.isScript());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertEquals(39, node0.getType());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());

Node node1 = new Node((-2523), node0, node0, node0);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(52, Node.LENGTH);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertNotNull(node1);
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isInc());
assertFalse(node0.isFunction());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNull());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isComma());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isGetProp());
assertFalse(node0.isVoid());
assertFalse(node0.isAdd());
assertFalse(node0.isTrue());
assertFalse(node0.isName());
assertFalse(node0.isGetElem());
assertFalse(node0.isAssign());
assertFalse(node0.isDelProp());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isBreak());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.hasChildren());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isParamList());
assertFalse(node0.isThis());
assertFalse(node0.isThrow());
assertFalse(node0.isScript());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertEquals(39, node0.getType());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node1.isThis());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isHook());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isSwitch());
assertFalse(node1.isString());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isAnd());
assertFalse(node1.isCast());
assertFalse(node1.isLabelName());
assertFalse(node1.isIf());
assertFalse(node1.isNumber());
assertFalse(node1.isNE());
assertFalse(node1.isFor());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertFalse(node1.isWith());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertTrue(node1.hasChildren());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isArrayLit());
assertFalse(node1.isContinue());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabel());
assertTrue(node1.hasOneChild());
assertFalse(node1.isReturn());
assertFalse(node1.isOr());
assertFalse(node1.isDec());
assertFalse(node1.isAssign());
assertFalse(node1.isEmpty());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals((-2523), node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.equals((Object)node0));

boolean boolean1 = false;
Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(52, Node.LENGTH);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertNotNull(node_AncestorIterable0);
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isInc());
assertFalse(node0.isFunction());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNull());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isComma());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isGetProp());
assertFalse(node0.isVoid());
assertFalse(node0.isAdd());
assertFalse(node0.isTrue());
assertFalse(node0.isName());
assertFalse(node0.isGetElem());
assertFalse(node0.isAssign());
assertFalse(node0.isDelProp());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isBreak());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.hasChildren());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isParamList());
assertFalse(node0.isThis());
assertFalse(node0.isThrow());
assertFalse(node0.isScript());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertEquals(39, node0.getType());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node1.isThis());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isHook());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isSwitch());
assertFalse(node1.isString());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isAnd());
assertFalse(node1.isCast());
assertFalse(node1.isLabelName());
assertFalse(node1.isIf());
assertFalse(node1.isNumber());
assertFalse(node1.isNE());
assertFalse(node1.isFor());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertFalse(node1.isWith());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertTrue(node1.hasChildren());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isArrayLit());
assertFalse(node1.isContinue());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabel());
assertTrue(node1.hasOneChild());
assertFalse(node1.isReturn());
assertFalse(node1.isOr());
assertFalse(node1.isDec());
assertFalse(node1.isAssign());
assertFalse(node1.isEmpty());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals((-2523), node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));

Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(52, Node.LENGTH);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(50, Node.FREE_CALL);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertNotNull(node2);
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isInc());
assertFalse(node0.isFunction());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNull());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isComma());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isGetProp());
assertFalse(node0.isVoid());
assertFalse(node0.isAdd());
assertFalse(node0.isTrue());
assertFalse(node0.isName());
assertFalse(node0.isGetElem());
assertFalse(node0.isAssign());
assertFalse(node0.isDelProp());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isBreak());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.hasChildren());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isParamList());
assertFalse(node0.isThis());
assertFalse(node0.isThrow());
assertFalse(node0.isScript());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertEquals(39, node0.getType());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node1.isThis());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isHook());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isSwitch());
assertFalse(node1.isString());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isAnd());
assertFalse(node1.isCast());
assertFalse(node1.isLabelName());
assertFalse(node1.isIf());
assertFalse(node1.isNumber());
assertFalse(node1.isNE());
assertFalse(node1.isFor());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertFalse(node1.isWith());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertTrue(node1.hasChildren());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isArrayLit());
assertFalse(node1.isContinue());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabel());
assertTrue(node1.hasOneChild());
assertFalse(node1.isReturn());
assertFalse(node1.isOr());
assertFalse(node1.isDec());
assertFalse(node1.isAssign());
assertFalse(node1.isEmpty());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals((-2523), node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node2.isCase());
assertFalse(node2.isSwitch());
assertTrue(node2.isNumber());
assertFalse(node2.isInc());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isGetterDef());
assertFalse(node2.isIn());
assertFalse(node2.isString());
assertFalse(node2.isFor());
assertFalse(node2.isBreak());
assertFalse(node2.isHook());
assertFalse(node2.isDelProp());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isComma());
assertFalse(node2.isThis());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isRegExp());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTrue());
assertFalse(node2.isTry());
assertFalse(node2.isScript());
assertFalse(node2.isStringKey());
assertFalse(node2.isEmpty());
assertFalse(node2.isLabelName());
assertFalse(node2.isArrayLit());
assertFalse(node2.isVar());
assertFalse(node2.isParamList());
assertFalse(node2.isLabel());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isDo());
assertEquals(39, node2.getType());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isWhile());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isGetElem());
assertFalse(node2.isName());
assertFalse(node2.isCall());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.hasOneChild());
assertFalse(node2.isNull());
assertFalse(node2.isBlock());
assertFalse(node2.isExprResult());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isReturn());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isObjectLit());
assertFalse(node2.isNot());
assertFalse(node2.isAnd());
assertFalse(node2.isGetProp());
assertFalse(node2.isSetterDef());
assertFalse(node2.isDebugger());
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertFalse(node2.isFunction());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertSame(node0, node2);
assertSame(node2, node0);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

Iterable<Node> iterable0 = node2.children();
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(52, Node.LENGTH);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(50, Node.FREE_CALL);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertNotNull(iterable0);
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isGetterDef());
assertFalse(node0.isCase());
assertFalse(node0.isEmpty());
assertFalse(node0.isFor());
assertFalse(node0.isString());
assertTrue(node0.isNumber());
assertFalse(node0.isInc());
assertFalse(node0.isFunction());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isNull());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isComma());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isGetProp());
assertFalse(node0.isVoid());
assertFalse(node0.isAdd());
assertFalse(node0.isTrue());
assertFalse(node0.isName());
assertFalse(node0.isGetElem());
assertFalse(node0.isAssign());
assertFalse(node0.isDelProp());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isBreak());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.hasChildren());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isParamList());
assertFalse(node0.isThis());
assertFalse(node0.isThrow());
assertFalse(node0.isScript());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBlock());
assertFalse(node0.isTry());
assertFalse(node0.isHook());
assertFalse(node0.isRegExp());
assertEquals(39, node0.getType());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node1.isThis());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isHook());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isSwitch());
assertFalse(node1.isString());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isAnd());
assertFalse(node1.isCast());
assertFalse(node1.isLabelName());
assertFalse(node1.isIf());
assertFalse(node1.isNumber());
assertFalse(node1.isNE());
assertFalse(node1.isFor());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertFalse(node1.isWith());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertTrue(node1.hasChildren());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isArrayLit());
assertFalse(node1.isContinue());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabel());
assertTrue(node1.hasOneChild());
assertFalse(node1.isReturn());
assertFalse(node1.isOr());
assertFalse(node1.isDec());
assertFalse(node1.isAssign());
assertFalse(node1.isEmpty());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals((-2523), node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node2.isCase());
assertFalse(node2.isSwitch());
assertTrue(node2.isNumber());
assertFalse(node2.isInc());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isGetterDef());
assertFalse(node2.isIn());
assertFalse(node2.isString());
assertFalse(node2.isFor());
assertFalse(node2.isBreak());
assertFalse(node2.isHook());
assertFalse(node2.isDelProp());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isComma());
assertFalse(node2.isThis());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isRegExp());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTrue());
assertFalse(node2.isTry());
assertFalse(node2.isScript());
assertFalse(node2.isStringKey());
assertFalse(node2.isEmpty());
assertFalse(node2.isLabelName());
assertFalse(node2.isArrayLit());
assertFalse(node2.isVar());
assertFalse(node2.isParamList());
assertFalse(node2.isLabel());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isDo());
assertEquals(39, node2.getType());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isWhile());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isGetElem());
assertFalse(node2.isName());
assertFalse(node2.isCall());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.hasOneChild());
assertFalse(node2.isNull());
assertFalse(node2.isBlock());
assertFalse(node2.isExprResult());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isReturn());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isObjectLit());
assertFalse(node2.isNot());
assertFalse(node2.isAnd());
assertFalse(node2.isGetProp());
assertFalse(node2.isSetterDef());
assertFalse(node2.isDebugger());
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertFalse(node2.isFunction());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertFalse(iterable0.contains(node0));
assertSame(node0, node2);
assertSame(node2, node0);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertFalse(node1.equals((Object)node2));
assertFalse(node2.equals((Object)node1));

node1.detachFromParent();

* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-100/tests/5
* Done!

* Computation finished
