* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 21033
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 3939603623
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 13:08:39.705 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 13:14:16.819 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: Line 2263: 761,0,0| Number of FF evals: 350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1871: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1870: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 13497,10645,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1872: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 401,0,0| Number of FF evals: 448
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1867: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1866: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 171,0,0| Number of FF evals: 468
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 455,119,0| Number of FF evals: 3961
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: Line 2311: 2242,0,0| Number of FF evals: 712
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 70,0,0| Number of FF evals: 416
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 939,703,9| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 1013,847,115| Number of FF evals: 9588
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 6740,5099,0| Number of FF evals: 6027
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1861: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1860: 306,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 933,0,0| Number of FF evals: 981
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 7604,6573,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 11499,9845,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - true: 215,0,0| Number of FF evals: 971
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: Line 1365: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - false: 318,0,0| Number of FF evals: 611
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 635,0,0| Number of FF evals: 502
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 43,0,0| Number of FF evals: 589
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - true: 118,0,0| Number of FF evals: 951
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - false: 2723,0,0| Number of FF evals: 943
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChangeTime()I: root-Branch: 42,0,0| Number of FF evals: 121
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 4638,1472,0| Number of FF evals: 2635
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - false: 401,0,0| Number of FF evals: 251
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 4252,0,0| Number of FF evals: 1342
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - true: 2242,0,0| Number of FF evals: 795
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 1236,1069,259| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 2723,0,0| Number of FF evals: 834
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 761,0,0| Number of FF evals: 339
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 374,93,0| Number of FF evals: 2143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 2723,0,0| Number of FF evals: 859
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 5769,2791,81| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - false: 9,0,0| Number of FF evals: 561
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 6640,6048,20| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 1140,903,6| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 70,0,0| Number of FF evals: 290
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 1380,1099,7| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 886,749,76| Number of FF evals: 5710
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - false: 2723,0,0| Number of FF evals: 954
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 1154,0,0| Number of FF evals: 675
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getParent()Lcom/google/javascript/rhino/Node;: Line 1323: 122,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 389,0,0| Number of FF evals: 286
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 42,0,0| Number of FF evals: 408
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 19198,14578,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 486,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: Line 1168: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 4726,314,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: Line 1169: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 5504,5004,70| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 332,0,0| Number of FF evals: 969
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 1636,0,0| Number of FF evals: 1285
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - true: 7581,2961,0| Number of FF evals: 2126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 37,0,0| Number of FF evals: 188
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 456,158,0| Number of FF evals: 4354
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 356,135,54| Number of FF evals: 5807
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: root-Branch: 122,0,0| Number of FF evals: 381
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 839,603,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 4252,0,0| Number of FF evals: 1163
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: Line 1164: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 7869,6766,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: Line 1165: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 14661,12850,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 1653,1472,236| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1356: 122,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 22084,17464,0| Number of FF evals: 4848
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 1641,0,0| Number of FF evals: 1284
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 890,0,0| Number of FF evals: 606
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 1641,0,0| Number of FF evals: 1268
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 654,422,25| Number of FF evals: 8341
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - true: 890,0,0| Number of FF evals: 753
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 3604,2119,0| Number of FF evals: 2949
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1827: 1765,0,0| Number of FF evals: 627
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1826: 1765,0,0| Number of FF evals: 627
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 1074,0,0| Number of FF evals: 782
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 3936,3843,73| Number of FF evals: 9416
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 122,0,0| Number of FF evals: 467
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 9703,7610,0| Number of FF evals: 9389
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 2537,896,0| Number of FF evals: 2344
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1358: 122,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1357: 122,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 192,0,0| Number of FF evals: 403
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1337: 2723,0,0| Number of FF evals: 838
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - true: 401,0,0| Number of FF evals: 446
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1333: 2723,0,0| Number of FF evals: 838
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 17880,14038,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1332: 2723,0,0| Number of FF evals: 838
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 472: 255,0,0| Number of FF evals: 352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 473: 255,0,0| Number of FF evals: 352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: Line 2331: 42,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 471: 255,0,0| Number of FF evals: 352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.getDouble()D: Line 162: 635,0,0| Number of FF evals: 306
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 207,0,0| Number of FF evals: 290
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: root-Branch: 1918,0,0| Number of FF evals: 779
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - true: 42,0,0| Number of FF evals: 418
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - false: 2302,1505,548| Number of FF evals: 3233
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 207,0,0| Number of FF evals: 290
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 1821,628,0| Number of FF evals: 2197
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 207,0,0| Number of FF evals: 290
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 13134,8514,0| Number of FF evals: 3046
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: Line 2303: 401,0,0| Number of FF evals: 240
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 3896,3403,194| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - true: 3388,0,0| Number of FF evals: 1263
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 1777,1441,234| Number of FF evals: 10429
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 12204,9710,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - true: 797,0,0| Number of FF evals: 1205
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 761,0,0| Number of FF evals: 701
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 7759,6402,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - true: 42,0,0| Number of FF evals: 814
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 46048,41428,33308| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 16462,11842,0| Number of FF evals: 3723
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 518,0,0| Number of FF evals: 258
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 64,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 46048,41428,33264| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 262,29,0| Number of FF evals: 1463
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 492: 33,0,0| Number of FF evals: 157
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 285,53,0| Number of FF evals: 1637
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 817,89,0| Number of FF evals: 1372
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 149,0,0| Number of FF evals: 309
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 1144,908,9| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - true: 42,0,0| Number of FF evals: 550
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 2990,1586,0| Number of FF evals: 2775
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 494: 33,0,0| Number of FF evals: 157
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 191,0,0| Number of FF evals: 656
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 518,0,0| Number of FF evals: 515
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - true: 635,0,0| Number of FF evals: 564
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 90,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: Line 1344: 122,0,0| Number of FF evals: 87
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 42,0,0| Number of FF evals: 92
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 10523,8678,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 1198,368,0| Number of FF evals: 3304
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - true: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: Line 2367: 122,0,0| Number of FF evals: 124
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 430,0,0| Number of FF evals: 1094
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I44 Branch 52 IF_ICMPGE L482 - true: 46,0,0| Number of FF evals: 292
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOptionalArg()Z: root-Branch: 122,0,0| Number of FF evals: 350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 4366,3895,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 401,0,0| Number of FF evals: 219
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 232: 42,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - true: 74,0,0| Number of FF evals: 343
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 11784,9669,0| Number of FF evals: 8459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2035: 635,0,0| Number of FF evals: 295
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 279,47,0| Number of FF evals: 1609
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 1315,0,0| Number of FF evals: 520
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: Line 1258: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 835,603,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 42,0,0| Number of FF evals: 80
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - false: 90,0,0| Number of FF evals: 806
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I94 Branch 54 IFNONNULL L488 - true: 163,0,0| Number of FF evals: 343
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 2811,2569,944| Number of FF evals: 10422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 24064,19444,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 1161,991,150| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 374,93,0| Number of FF evals: 2143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 13134,8514,0| Number of FF evals: 3084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 16799,14208,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 890,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 4681,4210,510| Number of FF evals: 10424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - false: 573,0,0| Number of FF evals: 745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 306,0,0| Number of FF evals: 168
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 7,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 42,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 15,0,0| Number of FF evals: 257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 338,0,0| Number of FF evals: 972
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: Line 2223: 7957,3337,0| Number of FF evals: 1968
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1271: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 1148,0,0| Number of FF evals: 528
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1270: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1273: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 1315,0,0| Number of FF evals: 824
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1272: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 26739,24271,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: Line 2407: 2723,0,0| Number of FF evals: 838
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 822,589,1| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1274: 401,0,0| Number of FF evals: 204
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 207,0,0| Number of FF evals: 339
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 13187,10426,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getCharno()I: Line 1144: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - true: 761,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: Line 1839: 306,0,0| Number of FF evals: 175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: Line 2291: 122,0,0| Number of FF evals: 82
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 761,0,0| Number of FF evals: 479
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - false: 213,0,0| Number of FF evals: 356
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 2865,1665,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 26778,24281,10| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 2882,2326,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 13134,8514,0| Number of FF evals: 3084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 311,0,0| Number of FF evals: 392
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 207,0,0| Number of FF evals: 352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 13134,8514,0| Number of FF evals: 3084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 1918,0,0| Number of FF evals: 640
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 207,0,0| Number of FF evals: 338
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2026: 42,0,0| Number of FF evals: 80
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 761,0,0| Number of FF evals: 614
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 24064,19444,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: root-Branch: 518,0,0| Number of FF evals: 712
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 306,0,0| Number of FF evals: 620
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 46048,41428,33227| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 13134,8514,0| Number of FF evals: 3084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 6607,5451,0| Number of FF evals: 8459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: root-Branch: 518,0,0| Number of FF evals: 278
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 5399,3610,0| Number of FF evals: 5162
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 28,0,0| Number of FF evals: 200
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 4074,0,0| Number of FF evals: 1142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 9362,7711,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1177: 42,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1176: 42,0,0| Number of FF evals: 58
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 306,0,0| Number of FF evals: 242
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 6607,5451,0| Number of FF evals: 8459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - true: 401,0,0| Number of FF evals: 466
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I6 Branch 165 IF_ICMPNE L1517 - false: 22,0,0| Number of FF evals: 877
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 578,0,0| Number of FF evals: 916
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 470,0,0| Number of FF evals: 1167
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 1379,955,0| Number of FF evals: 8130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 42,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 430,0,0| Number of FF evals: 1044
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 835,603,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 70,0,0| Number of FF evals: 357
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 1027,0,0| Number of FF evals: 431
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 167,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - true: 401,0,0| Number of FF evals: 349
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 22084,17464,0| Number of FF evals: 4850
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - false: 114,0,0| Number of FF evals: 345
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - false: 401,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 6620,6028,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: Line 1881: 122,0,0| Number of FF evals: 100
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: Line 2419: 42,0,0| Number of FF evals: 71
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: Line 1416: 761,0,0| Number of FF evals: 360
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 1178,43,0| Number of FF evals: 1288
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 7846,6679,0| Number of FF evals: 8865
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 401,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 2637,1464,0| Number of FF evals: 2577
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 401,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.getDouble()D: root-Branch: 635,0,0| Number of FF evals: 659
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 364,0,0| Number of FF evals: 825
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - true: 401,0,0| Number of FF evals: 263
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 260,0,0| Number of FF evals: 574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1039: 62,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 124,0,0| Number of FF evals: 272
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 836,603,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: root-Branch: 635,0,0| Number of FF evals: 349
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1033: 62,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1832: 1765,0,0| Number of FF evals: 627
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 42,0,0| Number of FF evals: 358
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1034: 62,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 1010,778,30| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 391,0,0| Number of FF evals: 877
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 433,197,10| Number of FF evals: 3654
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - false: 122,0,0| Number of FF evals: 645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 4309,3568,0| Number of FF evals: 10428
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 466,0,0| Number of FF evals: 446
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: Line 2235: 3388,0,0| Number of FF evals: 982
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 916,695,128| Number of FF evals: 10147
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 215,0,0| Number of FF evals: 637
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: Line 2399: 7581,2961,0| Number of FF evals: 1911
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 460: 11,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 461: 11,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 462: 11,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 460,141,0| Number of FF evals: 3518
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 3137,2238,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 2415,1573,0| Number of FF evals: 4521
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 11600,6980,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I18 Branch 51 IFEQ L478 - true: 1266,0,0| Number of FF evals: 1561
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 1362,1043,0| Number of FF evals: 10422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: Line 2166: 518,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 1161,991,150| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 5170,550,0| Number of FF evals: 1650
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: Line 1362: 518,0,0| Number of FF evals: 278
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I18 Branch 51 IFEQ L478 - false: 166,0,0| Number of FF evals: 587
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 1656,1064,0| Number of FF evals: 2554
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 6801,5698,0| Number of FF evals: 8865
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 6795,5989,0| Number of FF evals: 8260
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChangeTime()I: Line 1899: 42,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: Line 2343: 401,0,0| Number of FF evals: 240
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 120,0,0| Number of FF evals: 251
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 1161,991,150| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 2975,0,0| Number of FF evals: 1292
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 715: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 1570,812,0| Number of FF evals: 3532
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 717: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 721: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 4913,3888,0| Number of FF evals: 4382
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 1918,0,0| Number of FF evals: 700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 723: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 42,0,0| Number of FF evals: 266
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 724: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 725: 2723,0,0| Number of FF evals: 832
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 1918,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 387,151,1| Number of FF evals: 2434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 1614,0,0| Number of FF evals: 573
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: root-Branch: 518,0,0| Number of FF evals: 644
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 1359,978,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 3081,2764,0| Number of FF evals: 9738
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 5367,2389,0| Number of FF evals: 9175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 5367,2389,0| Number of FF evals: 9175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 26659,22039,0| Number of FF evals: 5856
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 5367,2389,0| Number of FF evals: 9175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 11649,9237,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 5367,2389,0| Number of FF evals: 9175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 1791,1366,0| Number of FF evals: 9194
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 221,0,0| Number of FF evals: 1209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - true: 122,0,0| Number of FF evals: 262
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 356,135,54| Number of FF evals: 5809
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - true: 761,0,0| Number of FF evals: 535
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 1139,907,25| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 3475,3204,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 158,0,0| Number of FF evals: 500
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - false: 70,0,0| Number of FF evals: 583
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: Line 2156: 2723,0,0| Number of FF evals: 846
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: root-Branch: 122,0,0| Number of FF evals: 778
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 6019,5277,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 7581,2961,0| Number of FF evals: 1911
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 7164,5501,0| Number of FF evals: 5764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 2795,2353,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 7455,5782,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 401,0,0| Number of FF evals: 443
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - true: 401,0,0| Number of FF evals: 822
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 2104,0,0| Number of FF evals: 909
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - true: 306,0,0| Number of FF evals: 237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: Line 2181: 1918,0,0| Number of FF evals: 670
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - true: 100,0,0| Number of FF evals: 512
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 353,119,0| Number of FF evals: 2438
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 191,0,0| Number of FF evals: 882
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.putBooleanProp(IZ)V: I5 Branch 109 IFEQ L852 - true: 76,0,0| Number of FF evals: 483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 13134,8514,0| Number of FF evals: 3046
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 1315,0,0| Number of FF evals: 825
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 10886,8304,7657| Number of FF evals: 4937
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: Line 925: 518,0,0| Number of FF evals: 244
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 383,0,0| Number of FF evals: 221
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 9447,8369,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - true: 27,0,0| Number of FF evals: 751
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 565: 890,0,0| Number of FF evals: 402
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 2310,106,0| Number of FF evals: 1413
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 7681,6348,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 890,0,0| Number of FF evals: 402
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - true: 3110,735,0| Number of FF evals: 2218
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - false: 5,0,0| Number of FF evals: 276
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - true: 1614,0,0| Number of FF evals: 646
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1944: 306,0,0| Number of FF evals: 190
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 42,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: Line 2355: 42,0,0| Number of FF evals: 60
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 6877,3908,0| Number of FF evals: 9048
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 5844,5125,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 391,0,0| Number of FF evals: 877
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: Line 2351: 42,0,0| Number of FF evals: 71
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: root-Branch: 306,0,0| Number of FF evals: 421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - false: 1614,0,0| Number of FF evals: 716
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 324,48,0| Number of FF evals: 1378
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 5401,4934,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: Line 1221: 1614,0,0| Number of FF evals: 568
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 1614,0,0| Number of FF evals: 837
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - false: 42,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 8669,8020,4461| Number of FF evals: 9177
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - false: 401,0,0| Number of FF evals: 316
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 12675,12168,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 518,0,0| Number of FF evals: 557
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 5798,4717,0| Number of FF evals: 8459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 560,147,0| Number of FF evals: 1930
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 4309,3568,0| Number of FF evals: 10428
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 518,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 479,12,0| Number of FF evals: 1305
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 5656,3878,0| Number of FF evals: 4848
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 5198,3413,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - true: 890,0,0| Number of FF evals: 467
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1682: 518,0,0| Number of FF evals: 281
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.<init>(Lcom/google/javascript/rhino/Node$AncestorIterable;)V: root-Branch: 518,0,0| Number of FF evals: 278
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - false: 75,0,0| Number of FF evals: 864
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 46048,41428,33226| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 10535,8024,20| Number of FF evals: 3805
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 518,0,0| Number of FF evals: 281
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 401,0,0| Number of FF evals: 507
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 6728,6127,99| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 115,0,0| Number of FF evals: 285
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 1977,584,0| Number of FF evals: 3724
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 1118,1035,251| Number of FF evals: 9595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 3696,1920,0| Number of FF evals: 3158
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 1476,1097,46| Number of FF evals: 6820
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 1118,1035,251| Number of FF evals: 9595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 635,0,0| Number of FF evals: 304
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 9416,8066,0| Number of FF evals: 9594
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - false: 1545,896,211| Number of FF evals: 2253
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 401,0,0| Number of FF evals: 213
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - true: 42,0,0| Number of FF evals: 287
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 7581,2961,0| Number of FF evals: 1983
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - false: 42,0,0| Number of FF evals: 826
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I54 Branch 53 IF_ACMPEQ L483 - false: 202,0,0| Number of FF evals: 421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 561,144,0| Number of FF evals: 1491
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1943: 306,0,0| Number of FF evals: 190
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 110,0,0| Number of FF evals: 657
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 19470,14850,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: root-Branch: 401,0,0| Number of FF evals: 554
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 9131,7411,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 518,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: Line 2275: 890,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: Line 2431: 401,0,0| Number of FF evals: 240
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 40,0,0| Number of FF evals: 375
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 3402,2988,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 3402,2988,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - true: 118,0,0| Number of FF evals: 952
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 401,0,0| Number of FF evals: 596
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 306,0,0| Number of FF evals: 188
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1017: 62,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 8901,8084,11| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - false: 28,0,0| Number of FF evals: 748
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1025: 62,0,0| Number of FF evals: 98
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 518,0,0| Number of FF evals: 331
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 8957,7273,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 26659,22039,0| Number of FF evals: 5856
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 6302,5216,0| Number of FF evals: 10430
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 1071,888,131| Number of FF evals: 9588
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - true: 7957,3337,0| Number of FF evals: 2181
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 890,0,0| Number of FF evals: 412
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getCharno()I: root-Branch: 1614,0,0| Number of FF evals: 885
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - false: 1037,0,0| Number of FF evals: 728
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 973,742,5| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 1163,980,132| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 635,0,0| Number of FF evals: 337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 9417,4797,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 1918,0,0| Number of FF evals: 670
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 1918,0,0| Number of FF evals: 670
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 45 IFNONNULL L421 - true: 187,0,0| Number of FF evals: 410
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 4074,0,0| Number of FF evals: 1239
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 2084,0,0| Number of FF evals: 731
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 11965,7576,0| Number of FF evals: 6508
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: root-Branch: 42,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 401,0,0| Number of FF evals: 497
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 215,0,0| Number of FF evals: 179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 177,0,0| Number of FF evals: 379
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 1377,1060,0| Number of FF evals: 10422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 328,0,0| Number of FF evals: 414
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 974,92,19| Number of FF evals: 1511
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 248,0,0| Number of FF evals: 1024
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 11123,9933,39| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 2104,0,0| Number of FF evals: 905
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 8630,5314,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 2104,0,0| Number of FF evals: 905
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 2723,0,0| Number of FF evals: 1223
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1634: 306,0,0| Number of FF evals: 193
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 518,0,0| Number of FF evals: 330
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 7635,6205,8| Number of FF evals: 6861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: Line 1598: 42,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - false: 306,0,0| Number of FF evals: 207
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - false: 100,0,0| Number of FF evals: 512
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 265,0,0| Number of FF evals: 548
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I70 Branch 122 IF_ICMPNE L966 - false: 45,0,0| Number of FF evals: 569
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 6685,6089,61| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - true: 75,0,0| Number of FF evals: 864
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - true: 631,0,0| Number of FF evals: 356
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 9981,7613,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 8656,7025,0| Number of FF evals: 8380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 4074,0,0| Number of FF evals: 1122
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 4074,0,0| Number of FF evals: 1147
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: Line 214: 518,0,0| Number of FF evals: 278
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 75,0,0| Number of FF evals: 645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 592,478,69| Number of FF evals: 4813
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 460,141,0| Number of FF evals: 3518
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - false: 560,446,68| Number of FF evals: 4538
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 2020,1076,1| Number of FF evals: 3522
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1978: 122,0,0| Number of FF evals: 100
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 9441,8414,0| Number of FF evals: 4275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 319,0,0| Number of FF evals: 401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - true: 751,0,0| Number of FF evals: 662
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1974: 122,0,0| Number of FF evals: 100
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1977: 122,0,0| Number of FF evals: 100
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - true: 42,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 19945,18304,27| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: Line 1966: 401,0,0| Number of FF evals: 230
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 19945,18304,28| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 962,726,115| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 1118,1035,251| Number of FF evals: 9595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 2795,2353,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: Line 2147: 518,0,0| Number of FF evals: 268
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getParent()Lcom/google/javascript/rhino/Node;: root-Branch: 122,0,0| Number of FF evals: 505
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 5170,550,0| Number of FF evals: 1390
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 5437,4965,31| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLength()I: root-Branch: 890,0,0| Number of FF evals: 428
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 963,805,42| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 531: 1315,0,0| Number of FF evals: 511
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 530: 1315,0,0| Number of FF evals: 511
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 1027,0,0| Number of FF evals: 595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 5653,3499,0| Number of FF evals: 2989
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 4,0,0| Number of FF evals: 174
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - false: 42,0,0| Number of FF evals: 825
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 3050,0,0| Number of FF evals: 1021
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 473,38,0| Number of FF evals: 1360
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 83,0,0| Number of FF evals: 374
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1762: 890,0,0| Number of FF evals: 401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1763: 890,0,0| Number of FF evals: 401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 383,0,0| Number of FF evals: 730
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1801: 635,0,0| Number of FF evals: 300
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 246,0,0| Number of FF evals: 1033
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1768: 890,0,0| Number of FF evals: 401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 110,0,0| Number of FF evals: 999
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 46,0,0| Number of FF evals: 171
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 1851,1189,0| Number of FF evals: 4768
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 1918,0,0| Number of FF evals: 949
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - false: 79,0,0| Number of FF evals: 295
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 620: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 7907,6804,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 984,753,5| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 1266,1147,124| Number of FF evals: 9918
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 624: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 42,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 625: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 626: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 7907,6804,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 627: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 365,133,25| Number of FF evals: 2372
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 58 IF_ACMPNE L550 - true: 106,0,0| Number of FF evals: 504
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - false: 90,0,0| Number of FF evals: 805
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 630: 401,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 70,0,0| Number of FF evals: 404
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 19945,18304,28| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I32 Branch 35 IFNONNULL L383 - true: 138,0,0| Number of FF evals: 447
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 2084,0,0| Number of FF evals: 691
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 865,630,10| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 19945,18304,28| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: Line 2391: 761,0,0| Number of FF evals: 338
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 19945,18304,28| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 19945,18304,29| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 1027,721,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 174,0,0| Number of FF evals: 319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 2576,935,0| Number of FF evals: 2327
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 19945,18304,27| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 383,0,0| Number of FF evals: 221
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 19945,18304,29| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 2576,935,0| Number of FF evals: 2327
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 2576,935,0| Number of FF evals: 2327
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - true: 33,0,0| Number of FF evals: 264
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 12821,11584,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - false: 306,0,0| Number of FF evals: 207
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 1641,0,0| Number of FF evals: 1256
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 241,0,0| Number of FF evals: 257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 1641,0,0| Number of FF evals: 1256
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 4909,4118,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLength()I: Line 1132: 890,0,0| Number of FF evals: 394
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 4909,4118,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 6000,5154,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 13134,8514,0| Number of FF evals: 3046
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOptionalArg()Z: Line 1935: 122,0,0| Number of FF evals: 91
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 6196,5295,141| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 761,0,0| Number of FF evals: 361
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - false: 518,0,0| Number of FF evals: 638
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: root-Branch: 122,0,0| Number of FF evals: 1435
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 4374,2743,3| Number of FF evals: 5582
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 962,620,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 9109,6883,97| Number of FF evals: 10226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: Line 534: 215,0,0| Number of FF evals: 141
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: root-Branch: 306,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 3171,2790,1578| Number of FF evals: 10422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 16462,11842,0| Number of FF evals: 3723
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: Line 1492: 215,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 42,0,0| Number of FF evals: 203
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 222,0,0| Number of FF evals: 666
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: Line 889: 1614,0,0| Number of FF evals: 590
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 8353,7180,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 16345,14652,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: Line 2323: 635,0,0| Number of FF evals: 318
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 6551,5075,0| Number of FF evals: 7885
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - false: 2723,0,0| Number of FF evals: 968
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 2492,2050,0| Number of FF evals: 8549
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 1918,0,0| Number of FF evals: 633
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 518,0,0| Number of FF evals: 578
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 1918,0,0| Number of FF evals: 633
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 5733,2755,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - true: 3276,0,0| Number of FF evals: 1135
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - false: 42,0,0| Number of FF evals: 817
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 482,0,0| Number of FF evals: 545
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - true: 761,0,0| Number of FF evals: 461
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - true: 2723,0,0| Number of FF evals: 1126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 2270,1839,196| Number of FF evals: 3724
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 6555,4910,0| Number of FF evals: 6197
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 86,0,0| Number of FF evals: 180
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 1467,1301,206| Number of FF evals: 10324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 9824,8880,0| Number of FF evals: 9256
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 33 IFNONNULL L379 - true: 42,0,0| Number of FF evals: 288
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: Line 1497: 761,0,0| Number of FF evals: 338
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 12910,9461,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - true: 122,0,0| Number of FF evals: 254
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 7848,7002,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 450: 212,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 42,0,0| Number of FF evals: 518
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 449: 212,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 16579,14319,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: root-Branch: 2723,0,0| Number of FF evals: 891
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: root-Branch: 1315,0,0| Number of FF evals: 901
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - true: 1765,0,0| Number of FF evals: 736
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 4,0,0| Number of FF evals: 169
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 5367,2389,0| Number of FF evals: 9179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: Line 244: 1165,0,0| Number of FF evals: 479
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 1315,0,0| Number of FF evals: 481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 6573,5304,0| Number of FF evals: 5112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 451: 212,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 594,301,0| Number of FF evals: 5746
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 8462,7556,14| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: Line 2359: 401,0,0| Number of FF evals: 232
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 42,0,0| Number of FF evals: 581
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 3008,46,0| Number of FF evals: 1317
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 222,0,0| Number of FF evals: 666
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1408: 215,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 4033,3719,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 984,753,5| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1411: 215,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 837: 401,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 207,0,0| Number of FF evals: 1183
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 838: 401,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 3050,0,0| Number of FF evals: 900
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 12097,10206,0| Number of FF evals: 8700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 3050,0,0| Number of FF evals: 900
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1407: 215,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - true: 5,0,0| Number of FF evals: 710
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 37,0,0| Number of FF evals: 185
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 10693,8021,0| Number of FF evals: 7118
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: root-Branch: 1165,0,0| Number of FF evals: 506
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 235,0,0| Number of FF evals: 1286
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 46048,41428,0| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 1144,908,9| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 12097,10206,0| Number of FF evals: 8700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 86,0,0| Number of FF evals: 324
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 5257,2291,0| Number of FF evals: 9179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 46048,41428,33284| Number of FF evals: 10421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - false: 1614,0,0| Number of FF evals: 819
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 4036,3852,73| Number of FF evals: 9705
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - true: 2496,121,0| Number of FF evals: 1470
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - true: 2723,0,0| Number of FF evals: 833
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 279,0,0| Number of FF evals: 454
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - false: 66,0,0| Number of FF evals: 931
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 215,0,0| Number of FF evals: 146
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: root-Branch: 401,0,0| Number of FF evals: 285
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - false: 518,0,0| Number of FF evals: 495
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 215,0,0| Number of FF evals: 307
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 42,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 831,0,0| Number of FF evals: 733
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 1581,257,0| Number of FF evals: 2740
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - false: 898,0,0| Number of FF evals: 608
* Search finished after 604s and 253 generations, 160678 statements, best individual has fitness: 3295.0
* Minimizing test suite
[MASTER] 13:19:53.287 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 853
* Number of covered goals: 784
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 82%
* Total number of goals: 714
* Number of covered goals: 585
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 100
* Number of covered goals: 100
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 530
* Number of covered goals: 452
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 4536
* Number of covered goals: 1861
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 233
* Number of covered goals: 210
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 714
* Number of covered goals: 540
* Generated 572 tests with total length 9735
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:20:59.588 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6763666666666667% of time used, but only 38/572 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 11%
[MASTER] 13:21:19.047 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Compiling and checking tests
[MASTER] 13:21:27.931 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 8 seconds more than allowed.
[MASTER] 13:21:30.446 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_40_1628256090357/com/google/javascript/rhino/Node_40_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_40_1628256090357/com/google/javascript/rhino/Node_40_tmp__ESTest_scaffolding.java]]
[MASTER] 13:21:30.446 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:21:30.446 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:21:30.449 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 194
[MASTER] 13:21:30.451 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_40_1628256090357/com/google/javascript/rhino/Node_40_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:21:30 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_40_tmp__ESTest extends Node_40_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       int int0 = (-2337);
22:       Node node0 = Node.newString((-2337), "");
23:       assertFalse(node0.isContinue());
24:       assertFalse(node0.hasMoreThanOneChild());
25:       assertFalse(node0.isReturn());
26:       assertFalse(node0.isLabel());
27:       assertFalse(node0.isOr());
28:       assertFalse(node0.isAdd());
29:       assertFalse(node0.isBlock());
30:       assertFalse(node0.isWhile());
31:       assertFalse(node0.isAssignAdd());
32:       assertFalse(node0.isNew());
33:       assertFalse(node0.isDo());
34:       assertFalse(node0.isVar());
35:       assertFalse(node0.isStringKey());
36:       assertFalse(node0.isCast());
37:       assertFalse(node0.isNumber());
38:       assertEquals((-1), node0.getSourcePosition());
39:       assertFalse(node0.isParamList());
40:       assertFalse(node0.isLabelName());
41:       assertFalse(node0.isInstanceOf());
42:       assertFalse(node0.isCatch());
43:       assertFalse(node0.isWith());
44:       assertFalse(node0.isRegExp());
45:       assertFalse(node0.isThis());
46:       assertFalse(node0.isSetterDef());
47:       assertFalse(node0.isScript());
48:       assertFalse(node0.isTry());
49:       assertFalse(node0.hasOneChild());
50:       assertFalse(node0.isFor());
51:       assertFalse(node0.isHook());
52:       assertFalse(node0.isNE());
53:       assertFalse(node0.isIf());
54:       assertEquals((-1), node0.getLineno());
55:       assertFalse(node0.isString());
56:       assertFalse(node0.isIn());
57:       assertFalse(node0.isInc());
58:       assertFalse(node0.isCase());
59:       assertFalse(node0.isFalse());
60:       assertFalse(node0.isThrow());
61:       assertFalse(node0.isGetterDef());
62:       assertEquals((-1), node0.getCharno());
63:       assertFalse(node0.isDebugger());
64:       assertFalse(node0.isSwitch());
65:       assertFalse(node0.isFunction());
66:       assertFalse(node0.isArrayLit());
67:       assertFalse(node0.isObjectLit());
68:       assertFalse(node0.isAnd());
69:       assertFalse(node0.isNot());
70:       assertEquals(0, node0.getChildCount());
71:       assertFalse(node0.isGetProp());
72:       assertFalse(node0.isDefaultCase());
73:       assertFalse(node0.isCall());
74:       assertFalse(node0.isGetElem());
75:       assertFalse(node0.isEmpty());
76:       assertFalse(node0.hasChildren());
77:       assertFalse(node0.isTypeOf());
78:       assertFalse(node0.isComma());
79:       assertFalse(node0.isDec());
80:       assertFalse(node0.isAssign());
81:       assertFalse(node0.isExprResult());
82:       assertFalse(node0.isTrue());
83:       assertFalse(node0.isVoid());
84:       assertFalse(node0.isNull());
85:       assertFalse(node0.isBreak());
86:       assertFalse(node0.isDelProp());
87:       assertEquals((-2337), node0.getType());
88:       assertFalse(node0.isName());
89:       assertNotNull(node0);
90:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
91:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
92:       assertEquals(43, Node.IS_CONSTANT_NAME);
93:       assertEquals(56, Node.CHANGE_TIME);
94:       assertEquals(47, Node.IS_DISPATCHER);
95:       assertEquals(37, Node.OPT_ARG_NAME);
96:       assertEquals(2, Node.POST_FLAG);
97:       assertEquals(51, Node.STATIC_SOURCE_FILE);
98:       assertEquals(4095, Node.COLUMN_MASK);
99:       assertEquals(32, Node.INCRDECR_PROP);
100:       assertEquals(12, Node.COLUMN_BITS);
101:       assertEquals(46, Node.IS_NAMESPACE);
102:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
103:       assertEquals(50, Node.FREE_CALL);
104:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
105:       assertEquals(1, Node.DECR_FLAG);
106:       assertEquals(57, Node.REFLECTED_OBJECT);
107:       assertEquals(52, Node.LENGTH);
108:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
109:       assertEquals(54, Node.SLASH_V);
110:       assertEquals(48, Node.DIRECTIVES);
111:       assertEquals(30, Node.VAR_ARGS_NAME);
112:       assertEquals(49, Node.DIRECT_EVAL);
113:       assertEquals(40, Node.ORIGINALNAME_PROP);
114:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
115:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
116:       assertEquals(15, Node.NO_SIDE_EFFECTS);
117:       assertEquals(36, Node.QUOTED_PROP);
118:       assertEquals(57, Node.LAST_PROP);
119:       assertEquals(8, Node.FLAG_NO_THROWS);
120:       assertEquals(53, Node.INPUT_ID);
121:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
122:       assertEquals(55, Node.INFERRED_FUNCTION);
123:       assertEquals(39, Node.EMPTY_BLOCK);
124:       assertEquals(29, Node.JSDOC_INFO_PROP);
125:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
126:       
127:       Iterable<Node> iterable0 = node0.children();
128:       assertFalse(node0.isContinue());
129:       assertFalse(node0.hasMoreThanOneChild());
130:       assertFalse(node0.isReturn());
131:       assertFalse(node0.isLabel());
132:       assertFalse(node0.isOr());
133:       assertFalse(node0.isAdd());
134:       assertFalse(node0.isBlock());
135:       assertFalse(node0.isWhile());
136:       assertFalse(node0.isAssignAdd());
137:       assertFalse(node0.isNew());
138:       assertFalse(node0.isDo());
139:       assertFalse(node0.isVar());
140:       assertFalse(node0.isStringKey());
141:       assertFalse(node0.isCast());
142:       assertFalse(node0.isNumber());
143:       assertEquals((-1), node0.getSourcePosition());
144:       assertFalse(node0.isParamList());
145:       assertFalse(node0.isLabelName());
146:       assertFalse(node0.isInstanceOf());
147:       assertFalse(node0.isCatch());
148:       assertFalse(node0.isWith());
149:       assertFalse(node0.isRegExp());
150:       assertFalse(node0.isThis());
151:       assertFalse(node0.isSetterDef());
152:       assertFalse(node0.isScript());
153:       assertFalse(node0.isTry());
154:       assertFalse(node0.hasOneChild());
155:       assertFalse(node0.isFor());
156:       assertFalse(node0.isHook());
157:       assertFalse(node0.isNE());
158:       assertFalse(node0.isIf());
159:       assertEquals((-1), node0.getLineno());
160:       assertFalse(node0.isString());
161:       assertFalse(node0.isIn());
162:       assertFalse(node0.isInc());
163:       assertFalse(node0.isCase());
164:       assertFalse(node0.isFalse());
165:       assertFalse(node0.isThrow());
166:       assertFalse(node0.isGetterDef());
167:       assertEquals((-1), node0.getCharno());
168:       assertFalse(node0.isDebugger());
169:       assertFalse(node0.isSwitch());
170:       assertFalse(node0.isFunction());
171:       assertFalse(node0.isArrayLit());
172:       assertFalse(node0.isObjectLit());
173:       assertFalse(node0.isAnd());
174:       assertFalse(node0.isNot());
175:       assertEquals(0, node0.getChildCount());
176:       assertFalse(node0.isGetProp());
177:       assertFalse(node0.isDefaultCase());
178:       assertFalse(node0.isCall());
179:       assertFalse(node0.isGetElem());
180:       assertFalse(node0.isEmpty());
181:       assertFalse(node0.hasChildren());
182:       assertFalse(node0.isTypeOf());
183:       assertFalse(node0.isComma());
184:       assertFalse(node0.isDec());
185:       assertFalse(node0.isAssign());
186:       assertFalse(node0.isExprResult());
187:       assertFalse(node0.isTrue());
188:       assertFalse(node0.isVoid());
189:       assertFalse(node0.isNull());
190:       assertFalse(node0.isBreak());
191:       assertFalse(node0.isDelProp());
192:       assertEquals((-2337), node0.getType());
193:       assertFalse(node0.isName());
194:       assertFalse(iterable0.contains(node0));
195:       assertNotNull(iterable0);
196:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
197:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
198:       assertEquals(43, Node.IS_CONSTANT_NAME);
199:       assertEquals(56, Node.CHANGE_TIME);
200:       assertEquals(47, Node.IS_DISPATCHER);
201:       assertEquals(37, Node.OPT_ARG_NAME);
202:       assertEquals(2, Node.POST_FLAG);
203:       assertEquals(51, Node.STATIC_SOURCE_FILE);
204:       assertEquals(4095, Node.COLUMN_MASK);
205:       assertEquals(32, Node.INCRDECR_PROP);
206:       assertEquals(12, Node.COLUMN_BITS);
207:       assertEquals(46, Node.IS_NAMESPACE);
208:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
209:       assertEquals(50, Node.FREE_CALL);
210:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
211:       assertEquals(1, Node.DECR_FLAG);
212:       assertEquals(57, Node.REFLECTED_OBJECT);
213:       assertEquals(52, Node.LENGTH);
214:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
215:       assertEquals(54, Node.SLASH_V);
216:       assertEquals(48, Node.DIRECTIVES);
217:       assertEquals(30, Node.VAR_ARGS_NAME);
218:       assertEquals(49, Node.DIRECT_EVAL);
219:       assertEquals(40, Node.ORIGINALNAME_PROP);
220:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
221:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
222:       assertEquals(15, Node.NO_SIDE_EFFECTS);
223:       assertEquals(36, Node.QUOTED_PROP);
224:       assertEquals(57, Node.LAST_PROP);
225:       assertEquals(8, Node.FLAG_NO_THROWS);
226:       assertEquals(53, Node.INPUT_ID);
227:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
228:       assertEquals(55, Node.INFERRED_FUNCTION);
229:       assertEquals(39, Node.EMPTY_BLOCK);
230:       assertEquals(29, Node.JSDOC_INFO_PROP);
231:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
232:       
233:       node0.setSourceFileForTesting("L~FS?o3");
234:       assertFalse(node0.isContinue());
235:       assertFalse(node0.hasMoreThanOneChild());
236:       assertFalse(node0.isReturn());
237:       assertFalse(node0.isLabel());
238:       assertFalse(node0.isOr());
239:       assertFalse(node0.isAdd());
240:       assertFalse(node0.isBlock());
241:       assertFalse(node0.isWhile());
242:       assertFalse(node0.isAssignAdd());
243:       assertFalse(node0.isNew());
244:       assertFalse(node0.isDo());
245:       assertFalse(node0.isVar());
246:       assertFalse(node0.isStringKey());
247:       assertFalse(node0.isCast());
248:       assertFalse(node0.isNumber());
249:       assertEquals((-1), node0.getSourcePosition());
250:       assertFalse(node0.isParamList());
251:       assertFalse(node0.isLabelName());
252:       assertFalse(node0.isInstanceOf());
253:       assertFalse(node0.isCatch());
254:       assertFalse(node0.isWith());
255:       assertFalse(node0.isRegExp());
256:       assertFalse(node0.isThis());
257:       assertFalse(node0.isSetterDef());
258:       assertFalse(node0.isScript());
259:       assertFalse(node0.isTry());
260:       assertFalse(node0.hasOneChild());
261:       assertFalse(node0.isFor());
262:       assertFalse(node0.isHook());
263:       assertFalse(node0.isNE());
264:       assertFalse(node0.isIf());
265:       assertEquals((-1), node0.getLineno());
266:       assertFalse(node0.isString());
267:       assertFalse(node0.isIn());
268:       assertFalse(node0.isInc());
269:       assertFalse(node0.isCase());
270:       assertFalse(node0.isFalse());
271:       assertFalse(node0.isThrow());
272:       assertFalse(node0.isGetterDef());
273:       assertEquals((-1), node0.getCharno());
274:       assertFalse(node0.isDebugger());
275:       assertFalse(node0.isSwitch());
276:       assertFalse(node0.isFunction());
277:       assertFalse(node0.isArrayLit());
278:       assertFalse(node0.isObjectLit());
279:       assertFalse(node0.isAnd());
280:       assertFalse(node0.isNot());
281:       assertEquals(0, node0.getChildCount());
282:       assertFalse(node0.isGetProp());
283:       assertFalse(node0.isDefaultCase());
284:       assertFalse(node0.isCall());
285:       assertFalse(node0.isGetElem());
286:       assertFalse(node0.isEmpty());
287:       assertFalse(node0.hasChildren());
288:       assertFalse(node0.isTypeOf());
289:       assertFalse(node0.isComma());
290:       assertFalse(node0.isDec());
291:       assertFalse(node0.isAssign());
292:       assertFalse(node0.isExprResult());
293:       assertFalse(node0.isTrue());
294:       assertFalse(node0.isVoid());
295:       assertFalse(node0.isNull());
296:       assertFalse(node0.isBreak());
297:       assertFalse(node0.isDelProp());
298:       assertEquals((-2337), node0.getType());
299:       assertFalse(node0.isName());
300:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
301:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
302:       assertEquals(43, Node.IS_CONSTANT_NAME);
303:       assertEquals(56, Node.CHANGE_TIME);
304:       assertEquals(47, Node.IS_DISPATCHER);
305:       assertEquals(37, Node.OPT_ARG_NAME);
306:       assertEquals(2, Node.POST_FLAG);
307:       assertEquals(51, Node.STATIC_SOURCE_FILE);
308:       assertEquals(4095, Node.COLUMN_MASK);
309:       assertEquals(32, Node.INCRDECR_PROP);
310:       assertEquals(12, Node.COLUMN_BITS);
311:       assertEquals(46, Node.IS_NAMESPACE);
312:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
313:       assertEquals(50, Node.FREE_CALL);
314:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
315:       assertEquals(1, Node.DECR_FLAG);
316:       assertEquals(57, Node.REFLECTED_OBJECT);
317:       assertEquals(52, Node.LENGTH);
318:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
319:       assertEquals(54, Node.SLASH_V);
320:       assertEquals(48, Node.DIRECTIVES);
321:       assertEquals(30, Node.VAR_ARGS_NAME);
322:       assertEquals(49, Node.DIRECT_EVAL);
323:       assertEquals(40, Node.ORIGINALNAME_PROP);
324:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
325:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
326:       assertEquals(15, Node.NO_SIDE_EFFECTS);
327:       assertEquals(36, Node.QUOTED_PROP);
328:       assertEquals(57, Node.LAST_PROP);
329:       assertEquals(8, Node.FLAG_NO_THROWS);
330:       assertEquals(53, Node.INPUT_ID);
331:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
332:       assertEquals(55, Node.INFERRED_FUNCTION);
333:       assertEquals(39, Node.EMPTY_BLOCK);
334:       assertEquals(29, Node.JSDOC_INFO_PROP);
335:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
336:       
337:       int int1 = node0.getSourceOffset();
338:       assertFalse(node0.isContinue());
339:       assertFalse(node0.hasMoreThanOneChild());
340:       assertFalse(node0.isReturn());
341:       assertFalse(node0.isLabel());
342:       assertFalse(node0.isOr());
343:       assertFalse(node0.isAdd());
344:       assertFalse(node0.isBlock());
345:       assertFalse(node0.isWhile());
346:       assertFalse(node0.isAssignAdd());
347:       assertFalse(node0.isNew());
348:       assertFalse(node0.isDo());
349:       assertFalse(node0.isVar());
350:       assertFalse(node0.isStringKey());
351:       assertFalse(node0.isCast());
352:       assertFalse(node0.isNumber());
353:       assertEquals((-1), node0.getSourcePosition());
354:       assertFalse(node0.isParamList());
355:       assertFalse(node0.isLabelName());
356:       assertFalse(node0.isInstanceOf());
357:       assertFalse(node0.isCatch());
358:       assertFalse(node0.isWith());
359:       assertFalse(node0.isRegExp());
360:       assertFalse(node0.isThis());
361:       assertFalse(node0.isSetterDef());
362:       assertFalse(node0.isScript());
363:       assertFalse(node0.isTry());
364:       assertFalse(node0.hasOneChild());
365:       assertFalse(node0.isFor());
366:       assertFalse(node0.isHook());
367:       assertFalse(node0.isNE());
368:       assertFalse(node0.isIf());
369:       assertEquals((-1), node0.getLineno());
370:       assertFalse(node0.isString());
371:       assertFalse(node0.isIn());
372:       assertFalse(node0.isInc());
373:       assertFalse(node0.isCase());
374:       assertFalse(node0.isFalse());
375:       assertFalse(node0.isThrow());
376:       assertFalse(node0.isGetterDef());
377:       assertEquals((-1), node0.getCharno());
378:       assertFalse(node0.isDebugger());
379:       assertFalse(node0.isSwitch());
380:       assertFalse(node0.isFunction());
381:       assertFalse(node0.isArrayLit());
382:       assertFalse(node0.isObjectLit());
383:       assertFalse(node0.isAnd());
384:       assertFalse(node0.isNot());
385:       assertEquals(0, node0.getChildCount());
386:       assertFalse(node0.isGetProp());
387:       assertFalse(node0.isDefaultCase());
388:       assertFalse(node0.isCall());
389:       assertFalse(node0.isGetElem());
390:       assertFalse(node0.isEmpty());
391:       assertFalse(node0.hasChildren());
392:       assertFalse(node0.isTypeOf());
393:       assertFalse(node0.isComma());
394:       assertFalse(node0.isDec());
395:       assertFalse(node0.isAssign());
396:       assertFalse(node0.isExprResult());
397:       assertFalse(node0.isTrue());
398:       assertFalse(node0.isVoid());
399:       assertFalse(node0.isNull());
400:       assertFalse(node0.isBreak());
401:       assertFalse(node0.isDelProp());
402:       assertEquals((-2337), node0.getType());
403:       assertFalse(node0.isName());
404:       assertEquals((-1), int1);
405:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
406:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
407:       assertEquals(43, Node.IS_CONSTANT_NAME);
408:       assertEquals(56, Node.CHANGE_TIME);
409:       assertEquals(47, Node.IS_DISPATCHER);
410:       assertEquals(37, Node.OPT_ARG_NAME);
411:       assertEquals(2, Node.POST_FLAG);
412:       assertEquals(51, Node.STATIC_SOURCE_FILE);
413:       assertEquals(4095, Node.COLUMN_MASK);
414:       assertEquals(32, Node.INCRDECR_PROP);
415:       assertEquals(12, Node.COLUMN_BITS);
416:       assertEquals(46, Node.IS_NAMESPACE);
417:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
418:       assertEquals(50, Node.FREE_CALL);
419:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
420:       assertEquals(1, Node.DECR_FLAG);
421:       assertEquals(57, Node.REFLECTED_OBJECT);
422:       assertEquals(52, Node.LENGTH);
423:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
424:       assertEquals(54, Node.SLASH_V);
425:       assertEquals(48, Node.DIRECTIVES);
426:       assertEquals(30, Node.VAR_ARGS_NAME);
427:       assertEquals(49, Node.DIRECT_EVAL);
428:       assertEquals(40, Node.ORIGINALNAME_PROP);
429:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
430:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
431:       assertEquals(15, Node.NO_SIDE_EFFECTS);
432:       assertEquals(36, Node.QUOTED_PROP);
433:       assertEquals(57, Node.LAST_PROP);
434:       assertEquals(8, Node.FLAG_NO_THROWS);
435:       assertEquals(53, Node.INPUT_ID);
436:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
437:       assertEquals(55, Node.INFERRED_FUNCTION);
438:       assertEquals(39, Node.EMPTY_BLOCK);
439:       assertEquals(29, Node.JSDOC_INFO_PROP);
440:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
441:       assertFalse(int1 == int0);
442:       
443:       int int2 = 120;
444:       Node node1 = new Node(4095, node0, node0);
445:       assertFalse(node0.isContinue());
446:       assertFalse(node0.hasMoreThanOneChild());
447:       assertFalse(node0.isReturn());
448:       assertFalse(node0.isLabel());
449:       assertFalse(node0.isOr());
450:       assertFalse(node0.isAdd());
451:       assertFalse(node0.isBlock());
452:       assertFalse(node0.isWhile());
453:       assertFalse(node0.isAssignAdd());
454:       assertFalse(node0.isNew());
455:       assertFalse(node0.isDo());
456:       assertFalse(node0.isVar());
457:       assertFalse(node0.isStringKey());
458:       assertFalse(node0.isCast());
459:       assertFalse(node0.isNumber());
460:       assertEquals((-1), node0.getSourcePosition());
461:       assertFalse(node0.isParamList());
462:       assertFalse(node0.isLabelName());
463:       assertFalse(node0.isInstanceOf());
464:       assertFalse(node0.isCatch());
465:       assertFalse(node0.isWith());
466:       assertFalse(node0.isRegExp());
467:       assertFalse(node0.isThis());
468:       assertFalse(node0.isSetterDef());
469:       assertFalse(node0.isScript());
470:       assertFalse(node0.isTry());
471:       assertFalse(node0.hasOneChild());
472:       assertFalse(node0.isFor());
473:       assertFalse(node0.isHook());
474:       assertFalse(node0.isNE());
475:       assertFalse(node0.isIf());
476:       assertEquals((-1), node0.getLineno());
477:       assertFalse(node0.isString());
478:       assertFalse(node0.isIn());
479:       assertFalse(node0.isInc());
480:       assertFalse(node0.isCase());
481:       assertFalse(node0.isFalse());
482:       assertFalse(node0.isThrow());
483:       assertFalse(node0.isGetterDef());
484:       assertEquals((-1), node0.getCharno());
485:       assertFalse(node0.isDebugger());
486:       assertFalse(node0.isSwitch());
487:       assertFalse(node0.isFunction());
488:       assertFalse(node0.isArrayLit());
489:       assertFalse(node0.isObjectLit());
490:       assertFalse(node0.isAnd());
491:       assertFalse(node0.isNot());
492:       assertEquals(0, node0.getChildCount());
493:       assertFalse(node0.isGetProp());
494:       assertFalse(node0.isDefaultCase());
495:       assertFalse(node0.isCall());
496:       assertFalse(node0.isGetElem());
497:       assertFalse(node0.isEmpty());
498:       assertFalse(node0.hasChildren());
499:       assertFalse(node0.isTypeOf());
500:       assertFalse(node0.isComma());
501:       assertFalse(node0.isDec());
502:       assertFalse(node0.isAssign());
503:       assertFalse(node0.isExprResult());
504:       assertFalse(node0.isTrue());
505:       assertFalse(node0.isVoid());
506:       assertFalse(node0.isNull());
507:       assertFalse(node0.isBreak());
508:       assertFalse(node0.isDelProp());
509:       assertEquals((-2337), node0.getType());
510:       assertFalse(node0.isName());
511:       assertFalse(node1.isCase());
512:       assertEquals(1, node1.getChildCount());
513:       assertFalse(node1.isSwitch());
514:       assertTrue(node1.hasChildren());
515:       assertFalse(node1.isDelProp());
516:       assertFalse(node1.isThrow());
517:       assertFalse(node1.isIf());
518:       assertFalse(node1.isNE());
519:       assertFalse(node1.isInc());
520:       assertFalse(node1.isTrue());
521:       assertFalse(node1.isEmpty());
522:       assertFalse(node1.isIn());
523:       assertFalse(node1.isObjectLit());
524:       assertFalse(node1.isAnd());
525:       assertFalse(node1.isExprResult());
526:       assertFalse(node1.isFunction());
527:       assertFalse(node1.isBreak());
528:       assertEquals(4095, node1.getType());
529:       assertFalse(node1.isVoid());
530:       assertFalse(node1.isComma());
531:       assertFalse(node1.isFalse());
532:       assertFalse(node1.isCast());
533:       assertTrue(node1.hasOneChild());
534:       assertFalse(node1.isGetProp());
535:       assertEquals((-1), node1.getSourcePosition());
536:       assertFalse(node1.isDebugger());
537:       assertFalse(node1.isNot());
538:       assertFalse(node1.isString());
539:       assertFalse(node1.hasMoreThanOneChild());
540:       assertEquals((-1), node1.getLineno());
541:       assertFalse(node1.isLabel());
542:       assertFalse(node1.isAssignAdd());
543:       assertFalse(node1.isDo());
544:       assertFalse(node1.isReturn());
545:       assertFalse(node1.isWhile());
546:       assertFalse(node1.isTypeOf());
547:       assertFalse(node1.isDec());
548:       assertFalse(node1.isAssign());
549:       assertFalse(node1.isGetElem());
550:       assertFalse(node1.isContinue());
551:       assertFalse(node1.isVar());
552:       assertFalse(node1.isCall());
553:       assertFalse(node1.isName());
554:       assertFalse(node1.isNull());
555:       assertFalse(node1.isSetterDef());
556:       assertFalse(node1.isNew());
557:       assertFalse(node1.isOr());
558:       assertFalse(node1.isAdd());
559:       assertFalse(node1.isCatch());
560:       assertFalse(node1.isDefaultCase());
561:       assertFalse(node1.isParamList());
562:       assertFalse(node1.isThis());
563:       assertFalse(node1.isRegExp());
564:       assertFalse(node1.isWith());
565:       assertFalse(node1.isInstanceOf());
566:       assertFalse(node1.isHook());
567:       assertFalse(node1.isArrayLit());
568:       assertFalse(node1.isLabelName());
569:       assertFalse(node1.isFor());
570:       assertFalse(node1.isTry());
571:       assertFalse(node1.isBlock());
572:       assertFalse(node1.isStringKey());
573:       assertFalse(node1.isScript());
574:       assertFalse(node1.isNumber());
575:       assertFalse(node1.isGetterDef());
576:       assertEquals((-1), node1.getCharno());
577:       assertNotNull(node1);
578:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
579:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
580:       assertEquals(43, Node.IS_CONSTANT_NAME);
581:       assertEquals(56, Node.CHANGE_TIME);
582:       assertEquals(47, Node.IS_DISPATCHER);
583:       assertEquals(37, Node.OPT_ARG_NAME);
584:       assertEquals(2, Node.POST_FLAG);
585:       assertEquals(51, Node.STATIC_SOURCE_FILE);
586:       assertEquals(4095, Node.COLUMN_MASK);
587:       assertEquals(32, Node.INCRDECR_PROP);
588:       assertEquals(12, Node.COLUMN_BITS);
589:       assertEquals(46, Node.IS_NAMESPACE);
590:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
591:       assertEquals(50, Node.FREE_CALL);
592:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
593:       assertEquals(1, Node.DECR_FLAG);
594:       assertEquals(57, Node.REFLECTED_OBJECT);
595:       assertEquals(52, Node.LENGTH);
596:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
597:       assertEquals(54, Node.SLASH_V);
598:       assertEquals(48, Node.DIRECTIVES);
599:       assertEquals(30, Node.VAR_ARGS_NAME);
600:       assertEquals(49, Node.DIRECT_EVAL);
601:       assertEquals(40, Node.ORIGINALNAME_PROP);
602:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
603:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
604:       assertEquals(15, Node.NO_SIDE_EFFECTS);
605:       assertEquals(36, Node.QUOTED_PROP);
606:       assertEquals(57, Node.LAST_PROP);
607:       assertEquals(8, Node.FLAG_NO_THROWS);
608:       assertEquals(53, Node.INPUT_ID);
609:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
610:       assertEquals(55, Node.INFERRED_FUNCTION);
611:       assertEquals(39, Node.EMPTY_BLOCK);
612:       assertEquals(29, Node.JSDOC_INFO_PROP);
613:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
614:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
615:       assertEquals(53, Node.INPUT_ID);
616:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
617:       assertEquals(29, Node.JSDOC_INFO_PROP);
618:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
619:       assertEquals(43, Node.IS_CONSTANT_NAME);
620:       assertEquals(56, Node.CHANGE_TIME);
621:       assertEquals(36, Node.QUOTED_PROP);
622:       assertEquals(46, Node.IS_NAMESPACE);
623:       assertEquals(55, Node.INFERRED_FUNCTION);
624:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
625:       assertEquals(39, Node.EMPTY_BLOCK);
626:       assertEquals(57, Node.LAST_PROP);
627:       assertEquals(47, Node.IS_DISPATCHER);
628:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
629:       assertEquals(2, Node.POST_FLAG);
630:       assertEquals(30, Node.VAR_ARGS_NAME);
631:       assertEquals(52, Node.LENGTH);
632:       assertEquals(57, Node.REFLECTED_OBJECT);
633:       assertEquals(40, Node.ORIGINALNAME_PROP);
634:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
635:       assertEquals(15, Node.NO_SIDE_EFFECTS);
636:       assertEquals(54, Node.SLASH_V);
637:       assertEquals(8, Node.FLAG_NO_THROWS);
638:       assertEquals(51, Node.STATIC_SOURCE_FILE);
639:       assertEquals(50, Node.FREE_CALL);
640:       assertEquals(32, Node.INCRDECR_PROP);
641:       assertEquals(12, Node.COLUMN_BITS);
642:       assertEquals(4095, Node.COLUMN_MASK);
643:       assertEquals(37, Node.OPT_ARG_NAME);
644:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
645:       assertEquals(49, Node.DIRECT_EVAL);
646:       assertEquals(48, Node.DIRECTIVES);
647:       assertEquals(1, Node.DECR_FLAG);
648:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
649:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
650:       assertFalse(node1.equals((Object)node0));
651:       
652:       // Undeclared exception!
653:       try { 
654:         node0.clonePropsFrom(node1);
655:         fail("Expecting exception: IllegalStateException");
656:       
657:       } catch(IllegalStateException e) {
658:          //
659:          // Node has existing properties.
660:          //
661:          verifyException("com.google.common.base.Preconditions", e);
662:       }
663:   }
664: }
RegularFileObject[/tmp/EvoSuite_40_1628256090357/com/google/javascript/rhino/Node_40_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:21:30 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_40_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_40_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.JSType$2",
119:       "com.google.javascript.rhino.jstype.VoidType",
120:       "com.google.common.base.Joiner",
121:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
122:       "com.google.common.collect.AbstractListMultimap",
123:       "com.google.javascript.rhino.jstype.JSType",
124:       "com.google.common.collect.ImmutableAsList",
125:       "com.google.javascript.rhino.Node$StringNode",
126:       "com.google.javascript.rhino.jstype.ProxyObjectType",
127:       "com.google.common.collect.Sets$SetView",
128:       "com.google.common.collect.RegularImmutableAsList",
129:       "com.google.javascript.rhino.jstype.TemplateType",
130:       "com.google.javascript.rhino.jstype.NamedType",
131:       "com.google.common.collect.Iterators$13",
132:       "com.google.javascript.rhino.InputId",
133:       "com.google.common.collect.ImmutableList$SerializedForm",
134:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
135:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
136:       "com.google.common.collect.AbstractMapBasedMultimap",
137:       "com.google.common.collect.Lists$Partition",
138:       "com.google.common.collect.Lists",
139:       "com.google.javascript.rhino.Node$SideEffectFlags",
140:       "com.google.common.collect.UnmodifiableListIterator",
141:       "com.google.javascript.rhino.jstype.NullType",
142:       "com.google.common.collect.Lists$TransformingSequentialList",
143:       "com.google.javascript.rhino.ErrorReporter",
144:       "com.google.javascript.rhino.jstype.UnknownType",
145:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
146:       "com.google.javascript.rhino.jstype.ValueType",
147:       "com.google.javascript.rhino.jstype.PropertyMap",
148:       "com.google.javascript.rhino.Token",
149:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
150:       "com.google.common.collect.ObjectArrays",
151:       "com.google.javascript.rhino.jstype.StaticSourceFile",
152:       "com.google.javascript.rhino.jstype.BooleanType",
153:       "com.google.javascript.rhino.jstype.NoObjectType",
154:       "com.google.common.collect.AbstractIterator",
155:       "com.google.javascript.rhino.jstype.FunctionBuilder",
156:       "com.google.javascript.rhino.jstype.JSType$TypePair",
157:       "com.google.common.base.Joiner$MapJoiner",
158:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
159:       "com.google.common.collect.ImmutableList$1",
160:       "com.google.common.collect.MapDifference",
161:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
162:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
163:       "com.google.common.collect.Sets$ImprovedAbstractSet",
164:       "com.google.javascript.rhino.jstype.FunctionType",
165:       "com.google.common.base.Preconditions",
166:       "com.google.common.collect.UnmodifiableIterator",
167:       "com.google.javascript.rhino.JSDocInfo",
168:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
169:       "com.google.javascript.rhino.jstype.Property",
170:       "com.google.common.collect.ImmutableMapValues",
171:       "com.google.common.collect.ImmutableEntry",
172:       "com.google.common.base.Joiner$1",
173:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
174:       "com.google.common.base.Joiner$2",
175:       "com.google.common.collect.ImmutableCollection",
176:       "com.google.common.collect.ImmutableEnumMap",
177:       "com.google.javascript.rhino.jstype.TernaryValue",
178:       "com.google.javascript.rhino.Node$AncestorIterable",
179:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
180:       "com.google.common.collect.Lists$RandomAccessListWrapper",
181:       "com.google.common.collect.ImmutableEnumSet",
182:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
183:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
184:       "com.google.javascript.rhino.jstype.EnumElementType",
185:       "com.google.javascript.rhino.jstype.UnionType",
186:       "com.google.common.base.Objects",
187:       "com.google.javascript.rhino.Node$NumberNode",
188:       "com.google.common.collect.SingletonImmutableList",
189:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
190:       "com.google.common.collect.ImmutableCollection$Builder",
191:       "com.google.javascript.rhino.jstype.StaticSlot",
192:       "com.google.common.collect.Iterators$6",
193:       "com.google.common.collect.BiMap",
194:       "com.google.common.collect.Iterators$7",
195:       "com.google.common.collect.AbstractSetMultimap",
196:       "com.google.common.base.Function",
197:       "com.google.common.collect.ImmutableSet",
198:       "com.google.common.collect.Lists$AbstractListWrapper",
199:       "com.google.common.collect.ImmutableMap",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.AbstractIndexedListIterator",
202:       "com.google.common.collect.Maps$1",
203:       "com.google.javascript.rhino.jstype.EnumType",
204:       "com.google.common.collect.Iterators$1",
205:       "com.google.common.collect.Iterators$2",
206:       "com.google.javascript.rhino.jstype.NamespaceType",
207:       "com.google.common.collect.Iterators$3",
208:       "com.google.common.collect.Sets",
209:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
210:       "com.google.javascript.rhino.Node$ObjectPropListItem",
211:       "com.google.common.collect.Lists$StringAsImmutableList",
212:       "com.google.common.collect.Lists$2",
213:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
214:       "com.google.common.collect.ImmutableList$Builder",
215:       "com.google.common.collect.Lists$1",
216:       "com.google.javascript.rhino.jstype.StaticReference",
217:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
218:       "com.google.common.collect.Multiset",
219:       "com.google.common.collect.AbstractMultimap",
220:       "com.google.common.collect.Multimap",
221:       "com.google.common.collect.Iterators",
222:       "com.google.common.collect.Maps$ImprovedAbstractMap",
223:       "com.google.common.collect.ImmutableBiMap",
224:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
225:       "com.google.common.collect.ImmutableList",
226:       "com.google.common.collect.SingletonImmutableBiMap",
227:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
228:       "com.google.javascript.rhino.jstype.StringType",
229:       "com.google.javascript.rhino.Node$AbstractPropListItem",
230:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
231:       "com.google.javascript.rhino.jstype.TemplatizedType",
232:       "com.google.javascript.rhino.jstype.Visitor",
233:       "com.google.javascript.rhino.jstype.NoResolvedType",
234:       "com.google.javascript.rhino.jstype.JSTypeNative",
235:       "com.google.javascript.rhino.jstype.AllType",
236:       "com.google.common.collect.Maps",
237:       "com.google.common.collect.SetMultimap",
238:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
239:       "com.google.common.collect.Maps$EntryTransformer",
240:       "com.google.javascript.rhino.JSTypeExpression",
241:       "com.google.common.collect.Iterators$MergingIterator"
242:     );
243:   } 
244: 
245:   private static void resetClasses() {
246:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_40_tmp__ESTest_scaffolding.class.getClassLoader()); 
247: 
248:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
249:       "com.google.javascript.rhino.Node",
250:       "com.google.javascript.rhino.Node$NumberNode",
251:       "com.google.javascript.rhino.Node$StringNode",
252:       "com.google.javascript.rhino.Node$AbstractPropListItem",
253:       "com.google.javascript.rhino.Node$ObjectPropListItem",
254:       "com.google.javascript.rhino.Node$IntPropListItem",
255:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
256:       "com.google.javascript.rhino.Node$AncestorIterable",
257:       "com.google.javascript.rhino.Node$NodeMismatch",
258:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
259:       "com.google.javascript.rhino.Node$SideEffectFlags",
260:       "com.google.javascript.rhino.Token",
261:       "com.google.common.base.Preconditions",
262:       "com.google.javascript.rhino.SimpleErrorReporter",
263:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
264:       "com.google.common.base.Joiner",
265:       "com.google.common.base.Joiner$1",
266:       "com.google.common.collect.Collections2",
267:       "com.google.common.base.Joiner$MapJoiner",
268:       "com.google.common.collect.Maps",
269:       "com.google.common.collect.AbstractMultimap",
270:       "com.google.common.collect.AbstractMapBasedMultimap",
271:       "com.google.common.collect.AbstractSetMultimap",
272:       "com.google.common.collect.LinkedHashMultimap",
273:       "com.google.common.collect.AbstractMapEntry",
274:       "com.google.common.collect.ImmutableEntry",
275:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
276:       "com.google.common.collect.AbstractListMultimap",
277:       "com.google.common.collect.ArrayListMultimap",
278:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
279:       "com.google.common.collect.ImmutableCollection",
280:       "com.google.common.collect.RegularImmutableList",
281:       "com.google.common.collect.ObjectArrays",
282:       "com.google.common.collect.ImmutableList",
283:       "com.google.javascript.rhino.jstype.ModificationVisitor",
284:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
285:       "com.google.common.collect.ImmutableCollection$Builder",
286:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
287:       "com.google.common.collect.ImmutableList$Builder",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.Iterators$1",
291:       "com.google.common.collect.Iterators$2",
292:       "com.google.common.collect.Iterators",
293:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
294:       "com.google.javascript.rhino.jstype.JSType$1",
295:       "com.google.javascript.rhino.jstype.JSType",
296:       "com.google.javascript.rhino.jstype.ObjectType",
297:       "com.google.javascript.rhino.jstype.ProxyObjectType",
298:       "com.google.javascript.rhino.jstype.TemplateType",
299:       "com.google.javascript.rhino.jstype.ValueType",
300:       "com.google.javascript.rhino.jstype.BooleanType",
301:       "com.google.javascript.rhino.jstype.NullType",
302:       "com.google.javascript.rhino.jstype.NumberType",
303:       "com.google.javascript.rhino.jstype.StringType",
304:       "com.google.javascript.rhino.jstype.UnknownType",
305:       "com.google.javascript.rhino.jstype.VoidType",
306:       "com.google.javascript.rhino.jstype.AllType",
307:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ImmutableBiMap",
310:       "com.google.common.collect.EmptyImmutableBiMap",
311:       "com.google.javascript.rhino.jstype.PropertyMap$1",
312:       "com.google.javascript.rhino.jstype.PropertyMap",
313:       "com.google.javascript.rhino.jstype.FunctionType",
314:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
315:       "com.google.javascript.rhino.jstype.ArrowType",
316:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
317:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
318:       "com.google.javascript.rhino.jstype.InstanceObjectType",
319:       "com.google.javascript.rhino.jstype.Property",
320:       "com.google.common.collect.Lists",
321:       "com.google.javascript.rhino.jstype.NoObjectType",
322:       "com.google.javascript.rhino.jstype.NoType",
323:       "com.google.javascript.rhino.jstype.NoResolvedType",
324:       "com.google.common.collect.SingletonImmutableList",
325:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
326:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
327:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
328:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
329:       "com.google.javascript.rhino.jstype.UnionType",
330:       "com.google.javascript.rhino.jstype.FunctionBuilder",
331:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
332:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
333:       "com.google.javascript.rhino.jstype.NamedType",
334:       "com.google.common.base.Objects",
335:       "com.google.javascript.rhino.jstype.EnumType",
336:       "com.google.javascript.rhino.jstype.EnumElementType",
337:       "com.google.javascript.rhino.jstype.TemplatizedType",
338:       "com.google.common.collect.Iterables",
339:       "com.google.javascript.rhino.JSDocInfo",
340:       "com.google.javascript.rhino.InputId",
341:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
342:       "com.google.common.collect.Sets",
343:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
344:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
345:       "com.google.javascript.rhino.Node$AncestorIterable$1",
346:       "com.google.javascript.rhino.JSTypeExpression",
347:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
348:       "com.google.javascript.rhino.JSDocInfo$Marker",
349:       "com.google.common.collect.ImmutableSet",
350:       "com.google.common.collect.EmptyImmutableSet",
351:       "com.google.common.collect.AbstractIndexedListIterator",
352:       "com.google.common.collect.Iterators$11",
353:       "com.google.common.collect.Iterators$12",
354:       "com.google.javascript.rhino.jstype.JSType$TypePair",
355:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
356:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
357:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
358:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
359:       "com.google.javascript.rhino.jstype.TernaryValue",
360:       "com.google.javascript.rhino.jstype.JSType$2",
361:       "com.google.common.collect.Sets$ImprovedAbstractSet",
362:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
363:       "com.google.common.collect.Hashing",
364:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
365:       "com.google.common.collect.ImmutableList$1"
366:     );
367:   }
368: }

[MASTER] 13:21:30.467 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
int int0 = (-2337);
Node node0 = Node.newString((-2337), "");
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.isOr());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isWhile());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isNew());
assertFalse(node0.isDo());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isCast());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isRegExp());
assertFalse(node0.isThis());
assertFalse(node0.isSetterDef());
assertFalse(node0.isScript());
assertFalse(node0.isTry());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isString());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isCase());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isSwitch());
assertFalse(node0.isFunction());
assertFalse(node0.isArrayLit());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isGetProp());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertEquals((-2337), node0.getType());
assertFalse(node0.isName());
assertNotNull(node0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);

Iterable<Node> iterable0 = node0.children();
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.isOr());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isWhile());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isNew());
assertFalse(node0.isDo());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isCast());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isRegExp());
assertFalse(node0.isThis());
assertFalse(node0.isSetterDef());
assertFalse(node0.isScript());
assertFalse(node0.isTry());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isString());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isCase());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isSwitch());
assertFalse(node0.isFunction());
assertFalse(node0.isArrayLit());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isGetProp());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertEquals((-2337), node0.getType());
assertFalse(node0.isName());
assertFalse(iterable0.contains(node0));
assertNotNull(iterable0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);

node0.setSourceFileForTesting("L~FS?o3");
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.isOr());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isWhile());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isNew());
assertFalse(node0.isDo());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isCast());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isRegExp());
assertFalse(node0.isThis());
assertFalse(node0.isSetterDef());
assertFalse(node0.isScript());
assertFalse(node0.isTry());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isString());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isCase());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isSwitch());
assertFalse(node0.isFunction());
assertFalse(node0.isArrayLit());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isGetProp());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertEquals((-2337), node0.getType());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);

int int1 = node0.getSourceOffset();
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.isOr());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isWhile());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isNew());
assertFalse(node0.isDo());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isCast());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isRegExp());
assertFalse(node0.isThis());
assertFalse(node0.isSetterDef());
assertFalse(node0.isScript());
assertFalse(node0.isTry());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isString());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isCase());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isSwitch());
assertFalse(node0.isFunction());
assertFalse(node0.isArrayLit());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isGetProp());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertEquals((-2337), node0.getType());
assertFalse(node0.isName());
assertEquals((-1), int1);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertFalse(int1 == int0);

int int2 = 120;
Node node1 = new Node(4095, node0, node0);
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isReturn());
assertFalse(node0.isLabel());
assertFalse(node0.isOr());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isWhile());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isNew());
assertFalse(node0.isDo());
assertFalse(node0.isVar());
assertFalse(node0.isStringKey());
assertFalse(node0.isCast());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isRegExp());
assertFalse(node0.isThis());
assertFalse(node0.isSetterDef());
assertFalse(node0.isScript());
assertFalse(node0.isTry());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isString());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isCase());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isDebugger());
assertFalse(node0.isSwitch());
assertFalse(node0.isFunction());
assertFalse(node0.isArrayLit());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isNot());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isGetProp());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.hasChildren());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertEquals((-2337), node0.getType());
assertFalse(node0.isName());
assertFalse(node1.isCase());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isSwitch());
assertTrue(node1.hasChildren());
assertFalse(node1.isDelProp());
assertFalse(node1.isThrow());
assertFalse(node1.isIf());
assertFalse(node1.isNE());
assertFalse(node1.isInc());
assertFalse(node1.isTrue());
assertFalse(node1.isEmpty());
assertFalse(node1.isIn());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertFalse(node1.isExprResult());
assertFalse(node1.isFunction());
assertFalse(node1.isBreak());
assertEquals(4095, node1.getType());
assertFalse(node1.isVoid());
assertFalse(node1.isComma());
assertFalse(node1.isFalse());
assertFalse(node1.isCast());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isDebugger());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.hasMoreThanOneChild());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertFalse(node1.isReturn());
assertFalse(node1.isWhile());
assertFalse(node1.isTypeOf());
assertFalse(node1.isDec());
assertFalse(node1.isAssign());
assertFalse(node1.isGetElem());
assertFalse(node1.isContinue());
assertFalse(node1.isVar());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isNew());
assertFalse(node1.isOr());
assertFalse(node1.isAdd());
assertFalse(node1.isCatch());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isParamList());
assertFalse(node1.isThis());
assertFalse(node1.isRegExp());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isHook());
assertFalse(node1.isArrayLit());
assertFalse(node1.isLabelName());
assertFalse(node1.isFor());
assertFalse(node1.isTry());
assertFalse(node1.isBlock());
assertFalse(node1.isStringKey());
assertFalse(node1.isScript());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertEquals((-1), node1.getCharno());
assertNotNull(node1);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(54, Node.SLASH_V);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertFalse(node1.equals((Object)node0));

node0.clonePropsFrom(node1);

[MASTER] 13:21:50.306 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_153_1628256110045/com/google/javascript/rhino/Node_153_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_153_1628256110045/com/google/javascript/rhino/Node_153_tmp__ESTest_scaffolding.java]]
[MASTER] 13:21:50.306 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:21:50.306 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:21:50.307 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 615
[MASTER] 13:21:50.310 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_153_1628256110045/com/google/javascript/rhino/Node_153_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:21:50 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.rhino.JSDocInfo;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_153_tmp__ESTest extends Node_153_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = new Node(0);
22:       assertFalse(node0.isTry());
23:       assertFalse(node0.isArrayLit());
24:       assertFalse(node0.isTrue());
25:       assertFalse(node0.isVoid());
26:       assertFalse(node0.isDebugger());
27:       assertFalse(node0.isFor());
28:       assertFalse(node0.isGetterDef());
29:       assertFalse(node0.isDefaultCase());
30:       assertFalse(node0.isEmpty());
31:       assertEquals(0, node0.getChildCount());
32:       assertFalse(node0.isParamList());
33:       assertFalse(node0.isFunction());
34:       assertFalse(node0.isNew());
35:       assertFalse(node0.isVar());
36:       assertFalse(node0.isWhile());
37:       assertFalse(node0.isString());
38:       assertFalse(node0.isDo());
39:       assertFalse(node0.isGetProp());
40:       assertFalse(node0.isAdd());
41:       assertFalse(node0.isReturn());
42:       assertFalse(node0.isOr());
43:       assertFalse(node0.isNull());
44:       assertFalse(node0.isDelProp());
45:       assertFalse(node0.isBreak());
46:       assertFalse(node0.hasChildren());
47:       assertFalse(node0.isName());
48:       assertFalse(node0.isTypeOf());
49:       assertFalse(node0.isComma());
50:       assertFalse(node0.isDec());
51:       assertFalse(node0.isAssign());
52:       assertFalse(node0.isExprResult());
53:       assertFalse(node0.isCall());
54:       assertFalse(node0.isGetElem());
55:       assertEquals(0, node0.getType());
56:       assertFalse(node0.hasOneChild());
57:       assertFalse(node0.isNumber());
58:       assertEquals((-1), node0.getSourcePosition());
59:       assertFalse(node0.isNot());
60:       assertFalse(node0.isObjectLit());
61:       assertFalse(node0.isScript());
62:       assertFalse(node0.isAssignAdd());
63:       assertFalse(node0.isLabel());
64:       assertFalse(node0.isAnd());
65:       assertFalse(node0.isLabelName());
66:       assertFalse(node0.isContinue());
67:       assertFalse(node0.isFalse());
68:       assertFalse(node0.isCast());
69:       assertFalse(node0.isHook());
70:       assertEquals((-1), node0.getCharno());
71:       assertFalse(node0.isSwitch());
72:       assertFalse(node0.isBlock());
73:       assertFalse(node0.isThrow());
74:       assertFalse(node0.isStringKey());
75:       assertFalse(node0.isCase());
76:       assertFalse(node0.isInc());
77:       assertFalse(node0.isSetterDef());
78:       assertEquals((-1), node0.getLineno());
79:       assertFalse(node0.isIn());
80:       assertFalse(node0.isThis());
81:       assertFalse(node0.isNE());
82:       assertFalse(node0.isWith());
83:       assertFalse(node0.isIf());
84:       assertFalse(node0.isRegExp());
85:       assertFalse(node0.hasMoreThanOneChild());
86:       assertFalse(node0.isInstanceOf());
87:       assertFalse(node0.isCatch());
88:       assertNotNull(node0);
89:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
90:       assertEquals(39, Node.EMPTY_BLOCK);
91:       assertEquals(48, Node.DIRECTIVES);
92:       assertEquals(40, Node.ORIGINALNAME_PROP);
93:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
94:       assertEquals(4095, Node.COLUMN_MASK);
95:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
96:       assertEquals(54, Node.SLASH_V);
97:       assertEquals(43, Node.IS_CONSTANT_NAME);
98:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
99:       assertEquals(1, Node.DECR_FLAG);
100:       assertEquals(51, Node.STATIC_SOURCE_FILE);
101:       assertEquals(50, Node.FREE_CALL);
102:       assertEquals(37, Node.OPT_ARG_NAME);
103:       assertEquals(46, Node.IS_NAMESPACE);
104:       assertEquals(56, Node.CHANGE_TIME);
105:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
106:       assertEquals(32, Node.INCRDECR_PROP);
107:       assertEquals(12, Node.COLUMN_BITS);
108:       assertEquals(47, Node.IS_DISPATCHER);
109:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
110:       assertEquals(30, Node.VAR_ARGS_NAME);
111:       assertEquals(2, Node.POST_FLAG);
112:       assertEquals(53, Node.INPUT_ID);
113:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
114:       assertEquals(15, Node.NO_SIDE_EFFECTS);
115:       assertEquals(57, Node.LAST_PROP);
116:       assertEquals(49, Node.DIRECT_EVAL);
117:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
118:       assertEquals(55, Node.INFERRED_FUNCTION);
119:       assertEquals(29, Node.JSDOC_INFO_PROP);
120:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
121:       assertEquals(36, Node.QUOTED_PROP);
122:       assertEquals(57, Node.REFLECTED_OBJECT);
123:       assertEquals(52, Node.LENGTH);
124:       assertEquals(8, Node.FLAG_NO_THROWS);
125:       
126:       Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
127:       assertFalse(node0.isTry());
128:       assertFalse(node0.isArrayLit());
129:       assertFalse(node0.isTrue());
130:       assertFalse(node0.isVoid());
131:       assertFalse(node0.isDebugger());
132:       assertFalse(node0.isFor());
133:       assertFalse(node0.isGetterDef());
134:       assertFalse(node0.isDefaultCase());
135:       assertFalse(node0.isEmpty());
136:       assertEquals(0, node0.getChildCount());
137:       assertFalse(node0.isParamList());
138:       assertFalse(node0.isFunction());
139:       assertFalse(node0.isNew());
140:       assertFalse(node0.isVar());
141:       assertFalse(node0.isWhile());
142:       assertFalse(node0.isString());
143:       assertFalse(node0.isDo());
144:       assertFalse(node0.isGetProp());
145:       assertFalse(node0.isAdd());
146:       assertFalse(node0.isReturn());
147:       assertFalse(node0.isOr());
148:       assertFalse(node0.isNull());
149:       assertFalse(node0.isDelProp());
150:       assertFalse(node0.isBreak());
151:       assertFalse(node0.hasChildren());
152:       assertFalse(node0.isName());
153:       assertFalse(node0.isTypeOf());
154:       assertFalse(node0.isComma());
155:       assertFalse(node0.isDec());
156:       assertFalse(node0.isAssign());
157:       assertFalse(node0.isExprResult());
158:       assertFalse(node0.isCall());
159:       assertFalse(node0.isGetElem());
160:       assertEquals(0, node0.getType());
161:       assertFalse(node0.hasOneChild());
162:       assertFalse(node0.isNumber());
163:       assertEquals((-1), node0.getSourcePosition());
164:       assertFalse(node0.isNot());
165:       assertFalse(node0.isObjectLit());
166:       assertFalse(node0.isScript());
167:       assertFalse(node0.isAssignAdd());
168:       assertFalse(node0.isLabel());
169:       assertFalse(node0.isAnd());
170:       assertFalse(node0.isLabelName());
171:       assertFalse(node0.isContinue());
172:       assertFalse(node0.isFalse());
173:       assertFalse(node0.isCast());
174:       assertFalse(node0.isHook());
175:       assertEquals((-1), node0.getCharno());
176:       assertFalse(node0.isSwitch());
177:       assertFalse(node0.isBlock());
178:       assertFalse(node0.isThrow());
179:       assertFalse(node0.isStringKey());
180:       assertFalse(node0.isCase());
181:       assertFalse(node0.isInc());
182:       assertFalse(node0.isSetterDef());
183:       assertEquals((-1), node0.getLineno());
184:       assertFalse(node0.isIn());
185:       assertFalse(node0.isThis());
186:       assertFalse(node0.isNE());
187:       assertFalse(node0.isWith());
188:       assertFalse(node0.isIf());
189:       assertFalse(node0.isRegExp());
190:       assertFalse(node0.hasMoreThanOneChild());
191:       assertFalse(node0.isInstanceOf());
192:       assertFalse(node0.isCatch());
193:       assertNotNull(node_FileLevelJsDocBuilder0);
194:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
195:       assertEquals(39, Node.EMPTY_BLOCK);
196:       assertEquals(48, Node.DIRECTIVES);
197:       assertEquals(40, Node.ORIGINALNAME_PROP);
198:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
199:       assertEquals(4095, Node.COLUMN_MASK);
200:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
201:       assertEquals(54, Node.SLASH_V);
202:       assertEquals(43, Node.IS_CONSTANT_NAME);
203:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
204:       assertEquals(1, Node.DECR_FLAG);
205:       assertEquals(51, Node.STATIC_SOURCE_FILE);
206:       assertEquals(50, Node.FREE_CALL);
207:       assertEquals(37, Node.OPT_ARG_NAME);
208:       assertEquals(46, Node.IS_NAMESPACE);
209:       assertEquals(56, Node.CHANGE_TIME);
210:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
211:       assertEquals(32, Node.INCRDECR_PROP);
212:       assertEquals(12, Node.COLUMN_BITS);
213:       assertEquals(47, Node.IS_DISPATCHER);
214:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
215:       assertEquals(30, Node.VAR_ARGS_NAME);
216:       assertEquals(2, Node.POST_FLAG);
217:       assertEquals(53, Node.INPUT_ID);
218:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
219:       assertEquals(15, Node.NO_SIDE_EFFECTS);
220:       assertEquals(57, Node.LAST_PROP);
221:       assertEquals(49, Node.DIRECT_EVAL);
222:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
223:       assertEquals(55, Node.INFERRED_FUNCTION);
224:       assertEquals(29, Node.JSDOC_INFO_PROP);
225:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
226:       assertEquals(36, Node.QUOTED_PROP);
227:       assertEquals(57, Node.REFLECTED_OBJECT);
228:       assertEquals(52, Node.LENGTH);
229:       assertEquals(8, Node.FLAG_NO_THROWS);
230:       
231:       boolean boolean0 = node0.getBooleanProp(57);
232:       assertFalse(node0.isTry());
233:       assertFalse(node0.isArrayLit());
234:       assertFalse(node0.isTrue());
235:       assertFalse(node0.isVoid());
236:       assertFalse(node0.isDebugger());
237:       assertFalse(node0.isFor());
238:       assertFalse(node0.isGetterDef());
239:       assertFalse(node0.isDefaultCase());
240:       assertFalse(node0.isEmpty());
241:       assertEquals(0, node0.getChildCount());
242:       assertFalse(node0.isParamList());
243:       assertFalse(node0.isFunction());
244:       assertFalse(node0.isNew());
245:       assertFalse(node0.isVar());
246:       assertFalse(node0.isWhile());
247:       assertFalse(node0.isString());
248:       assertFalse(node0.isDo());
249:       assertFalse(node0.isGetProp());
250:       assertFalse(node0.isAdd());
251:       assertFalse(node0.isReturn());
252:       assertFalse(node0.isOr());
253:       assertFalse(node0.isNull());
254:       assertFalse(node0.isDelProp());
255:       assertFalse(node0.isBreak());
256:       assertFalse(node0.hasChildren());
257:       assertFalse(node0.isName());
258:       assertFalse(node0.isTypeOf());
259:       assertFalse(node0.isComma());
260:       assertFalse(node0.isDec());
261:       assertFalse(node0.isAssign());
262:       assertFalse(node0.isExprResult());
263:       assertFalse(node0.isCall());
264:       assertFalse(node0.isGetElem());
265:       assertEquals(0, node0.getType());
266:       assertFalse(node0.hasOneChild());
267:       assertFalse(node0.isNumber());
268:       assertEquals((-1), node0.getSourcePosition());
269:       assertFalse(node0.isNot());
270:       assertFalse(node0.isObjectLit());
271:       assertFalse(node0.isScript());
272:       assertFalse(node0.isAssignAdd());
273:       assertFalse(node0.isLabel());
274:       assertFalse(node0.isAnd());
275:       assertFalse(node0.isLabelName());
276:       assertFalse(node0.isContinue());
277:       assertFalse(node0.isFalse());
278:       assertFalse(node0.isCast());
279:       assertFalse(node0.isHook());
280:       assertEquals((-1), node0.getCharno());
281:       assertFalse(node0.isSwitch());
282:       assertFalse(node0.isBlock());
283:       assertFalse(node0.isThrow());
284:       assertFalse(node0.isStringKey());
285:       assertFalse(node0.isCase());
286:       assertFalse(node0.isInc());
287:       assertFalse(node0.isSetterDef());
288:       assertEquals((-1), node0.getLineno());
289:       assertFalse(node0.isIn());
290:       assertFalse(node0.isThis());
291:       assertFalse(node0.isNE());
292:       assertFalse(node0.isWith());
293:       assertFalse(node0.isIf());
294:       assertFalse(node0.isRegExp());
295:       assertFalse(node0.hasMoreThanOneChild());
296:       assertFalse(node0.isInstanceOf());
297:       assertFalse(node0.isCatch());
298:       assertFalse(boolean0);
299:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
300:       assertEquals(39, Node.EMPTY_BLOCK);
301:       assertEquals(48, Node.DIRECTIVES);
302:       assertEquals(40, Node.ORIGINALNAME_PROP);
303:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
304:       assertEquals(4095, Node.COLUMN_MASK);
305:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
306:       assertEquals(54, Node.SLASH_V);
307:       assertEquals(43, Node.IS_CONSTANT_NAME);
308:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
309:       assertEquals(1, Node.DECR_FLAG);
310:       assertEquals(51, Node.STATIC_SOURCE_FILE);
311:       assertEquals(50, Node.FREE_CALL);
312:       assertEquals(37, Node.OPT_ARG_NAME);
313:       assertEquals(46, Node.IS_NAMESPACE);
314:       assertEquals(56, Node.CHANGE_TIME);
315:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
316:       assertEquals(32, Node.INCRDECR_PROP);
317:       assertEquals(12, Node.COLUMN_BITS);
318:       assertEquals(47, Node.IS_DISPATCHER);
319:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
320:       assertEquals(30, Node.VAR_ARGS_NAME);
321:       assertEquals(2, Node.POST_FLAG);
322:       assertEquals(53, Node.INPUT_ID);
323:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
324:       assertEquals(15, Node.NO_SIDE_EFFECTS);
325:       assertEquals(57, Node.LAST_PROP);
326:       assertEquals(49, Node.DIRECT_EVAL);
327:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
328:       assertEquals(55, Node.INFERRED_FUNCTION);
329:       assertEquals(29, Node.JSDOC_INFO_PROP);
330:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
331:       assertEquals(36, Node.QUOTED_PROP);
332:       assertEquals(57, Node.REFLECTED_OBJECT);
333:       assertEquals(52, Node.LENGTH);
334:       assertEquals(8, Node.FLAG_NO_THROWS);
335:       
336:       boolean boolean1 = node0.isCall();
337:       assertFalse(node0.isTry());
338:       assertFalse(node0.isArrayLit());
339:       assertFalse(node0.isTrue());
340:       assertFalse(node0.isVoid());
341:       assertFalse(node0.isDebugger());
342:       assertFalse(node0.isFor());
343:       assertFalse(node0.isGetterDef());
344:       assertFalse(node0.isDefaultCase());
345:       assertFalse(node0.isEmpty());
346:       assertEquals(0, node0.getChildCount());
347:       assertFalse(node0.isParamList());
348:       assertFalse(node0.isFunction());
349:       assertFalse(node0.isNew());
350:       assertFalse(node0.isVar());
351:       assertFalse(node0.isWhile());
352:       assertFalse(node0.isString());
353:       assertFalse(node0.isDo());
354:       assertFalse(node0.isGetProp());
355:       assertFalse(node0.isAdd());
356:       assertFalse(node0.isReturn());
357:       assertFalse(node0.isOr());
358:       assertFalse(node0.isNull());
359:       assertFalse(node0.isDelProp());
360:       assertFalse(node0.isBreak());
361:       assertFalse(node0.hasChildren());
362:       assertFalse(node0.isName());
363:       assertFalse(node0.isTypeOf());
364:       assertFalse(node0.isComma());
365:       assertFalse(node0.isDec());
366:       assertFalse(node0.isAssign());
367:       assertFalse(node0.isExprResult());
368:       assertFalse(node0.isCall());
369:       assertFalse(node0.isGetElem());
370:       assertEquals(0, node0.getType());
371:       assertFalse(node0.hasOneChild());
372:       assertFalse(node0.isNumber());
373:       assertEquals((-1), node0.getSourcePosition());
374:       assertFalse(node0.isNot());
375:       assertFalse(node0.isObjectLit());
376:       assertFalse(node0.isScript());
377:       assertFalse(node0.isAssignAdd());
378:       assertFalse(node0.isLabel());
379:       assertFalse(node0.isAnd());
380:       assertFalse(node0.isLabelName());
381:       assertFalse(node0.isContinue());
382:       assertFalse(node0.isFalse());
383:       assertFalse(node0.isCast());
384:       assertFalse(node0.isHook());
385:       assertEquals((-1), node0.getCharno());
386:       assertFalse(node0.isSwitch());
387:       assertFalse(node0.isBlock());
388:       assertFalse(node0.isThrow());
389:       assertFalse(node0.isStringKey());
390:       assertFalse(node0.isCase());
391:       assertFalse(node0.isInc());
392:       assertFalse(node0.isSetterDef());
393:       assertEquals((-1), node0.getLineno());
394:       assertFalse(node0.isIn());
395:       assertFalse(node0.isThis());
396:       assertFalse(node0.isNE());
397:       assertFalse(node0.isWith());
398:       assertFalse(node0.isIf());
399:       assertFalse(node0.isRegExp());
400:       assertFalse(node0.hasMoreThanOneChild());
401:       assertFalse(node0.isInstanceOf());
402:       assertFalse(node0.isCatch());
403:       assertFalse(boolean1);
404:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
405:       assertEquals(39, Node.EMPTY_BLOCK);
406:       assertEquals(48, Node.DIRECTIVES);
407:       assertEquals(40, Node.ORIGINALNAME_PROP);
408:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
409:       assertEquals(4095, Node.COLUMN_MASK);
410:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
411:       assertEquals(54, Node.SLASH_V);
412:       assertEquals(43, Node.IS_CONSTANT_NAME);
413:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
414:       assertEquals(1, Node.DECR_FLAG);
415:       assertEquals(51, Node.STATIC_SOURCE_FILE);
416:       assertEquals(50, Node.FREE_CALL);
417:       assertEquals(37, Node.OPT_ARG_NAME);
418:       assertEquals(46, Node.IS_NAMESPACE);
419:       assertEquals(56, Node.CHANGE_TIME);
420:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
421:       assertEquals(32, Node.INCRDECR_PROP);
422:       assertEquals(12, Node.COLUMN_BITS);
423:       assertEquals(47, Node.IS_DISPATCHER);
424:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
425:       assertEquals(30, Node.VAR_ARGS_NAME);
426:       assertEquals(2, Node.POST_FLAG);
427:       assertEquals(53, Node.INPUT_ID);
428:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
429:       assertEquals(15, Node.NO_SIDE_EFFECTS);
430:       assertEquals(57, Node.LAST_PROP);
431:       assertEquals(49, Node.DIRECT_EVAL);
432:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
433:       assertEquals(55, Node.INFERRED_FUNCTION);
434:       assertEquals(29, Node.JSDOC_INFO_PROP);
435:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
436:       assertEquals(36, Node.QUOTED_PROP);
437:       assertEquals(57, Node.REFLECTED_OBJECT);
438:       assertEquals(52, Node.LENGTH);
439:       assertEquals(8, Node.FLAG_NO_THROWS);
440:       assertTrue(boolean1 == boolean0);
441:       
442:       Node node1 = Node.newString("Xp&)a%Q~zPh~g+<S]", (-1039), 32);
443:       assertFalse(node1.isAnd());
444:       assertFalse(node1.isWith());
445:       assertFalse(node1.isNot());
446:       assertFalse(node1.isObjectLit());
447:       assertFalse(node1.isComma());
448:       assertFalse(node1.isBreak());
449:       assertFalse(node1.isInstanceOf());
450:       assertFalse(node1.isCast());
451:       assertFalse(node1.isExprResult());
452:       assertFalse(node1.isLabelName());
453:       assertFalse(node1.isAssign());
454:       assertFalse(node1.hasChildren());
455:       assertFalse(node1.isDec());
456:       assertEquals((-1), node1.getSourcePosition());
457:       assertFalse(node1.isHook());
458:       assertFalse(node1.isThis());
459:       assertFalse(node1.isGetProp());
460:       assertEquals((-1), node1.getCharno());
461:       assertFalse(node1.isNumber());
462:       assertFalse(node1.hasOneChild());
463:       assertFalse(node1.isScript());
464:       assertFalse(node1.isContinue());
465:       assertFalse(node1.isCase());
466:       assertFalse(node1.hasMoreThanOneChild());
467:       assertEquals((-1), node1.getLineno());
468:       assertFalse(node1.isFalse());
469:       assertFalse(node1.isThrow());
470:       assertFalse(node1.isIf());
471:       assertFalse(node1.isNE());
472:       assertFalse(node1.isIn());
473:       assertFalse(node1.isSetterDef());
474:       assertFalse(node1.isInc());
475:       assertFalse(node1.isDefaultCase());
476:       assertEquals(0, node1.getChildCount());
477:       assertEquals(40, node1.getType());
478:       assertFalse(node1.isTrue());
479:       assertFalse(node1.isVoid());
480:       assertFalse(node1.isParamList());
481:       assertFalse(node1.isRegExp());
482:       assertFalse(node1.isFunction());
483:       assertFalse(node1.isArrayLit());
484:       assertFalse(node1.isCatch());
485:       assertFalse(node1.isStringKey());
486:       assertFalse(node1.isGetterDef());
487:       assertFalse(node1.isFor());
488:       assertFalse(node1.isBlock());
489:       assertFalse(node1.isDebugger());
490:       assertFalse(node1.isTry());
491:       assertTrue(node1.isString());
492:       assertFalse(node1.isDo());
493:       assertFalse(node1.isWhile());
494:       assertFalse(node1.isLabel());
495:       assertFalse(node1.isReturn());
496:       assertFalse(node1.isSwitch());
497:       assertFalse(node1.isTypeOf());
498:       assertFalse(node1.isGetElem());
499:       assertFalse(node1.isCall());
500:       assertFalse(node1.isDelProp());
501:       assertFalse(node1.isName());
502:       assertFalse(node1.isVar());
503:       assertFalse(node1.isNull());
504:       assertFalse(node1.isNew());
505:       assertFalse(node1.isAssignAdd());
506:       assertFalse(node1.isOr());
507:       assertFalse(node1.isEmpty());
508:       assertFalse(node1.isAdd());
509:       assertNotNull(node1);
510:       assertEquals(40, Node.ORIGINALNAME_PROP);
511:       assertEquals(57, Node.REFLECTED_OBJECT);
512:       assertEquals(54, Node.SLASH_V);
513:       assertEquals(15, Node.NO_SIDE_EFFECTS);
514:       assertEquals(39, Node.EMPTY_BLOCK);
515:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
516:       assertEquals(50, Node.FREE_CALL);
517:       assertEquals(52, Node.LENGTH);
518:       assertEquals(8, Node.FLAG_NO_THROWS);
519:       assertEquals(12, Node.COLUMN_BITS);
520:       assertEquals(4095, Node.COLUMN_MASK);
521:       assertEquals(49, Node.DIRECT_EVAL);
522:       assertEquals(48, Node.DIRECTIVES);
523:       assertEquals(1, Node.DECR_FLAG);
524:       assertEquals(32, Node.INCRDECR_PROP);
525:       assertEquals(37, Node.OPT_ARG_NAME);
526:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
527:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
528:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
529:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
530:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
531:       assertEquals(36, Node.QUOTED_PROP);
532:       assertEquals(43, Node.IS_CONSTANT_NAME);
533:       assertEquals(56, Node.CHANGE_TIME);
534:       assertEquals(29, Node.JSDOC_INFO_PROP);
535:       assertEquals(53, Node.INPUT_ID);
536:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
537:       assertEquals(51, Node.STATIC_SOURCE_FILE);
538:       assertEquals(55, Node.INFERRED_FUNCTION);
539:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
540:       assertEquals(46, Node.IS_NAMESPACE);
541:       assertEquals(57, Node.LAST_PROP);
542:       assertEquals(2, Node.POST_FLAG);
543:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
544:       assertEquals(47, Node.IS_DISPATCHER);
545:       assertEquals(30, Node.VAR_ARGS_NAME);
546:       assertFalse(node1.equals((Object)node0));
547:       
548:       Iterable<Node> iterable0 = node1.children();
549:       assertFalse(node1.isAnd());
550:       assertFalse(node1.isWith());
551:       assertFalse(node1.isNot());
552:       assertFalse(node1.isObjectLit());
553:       assertFalse(node1.isComma());
554:       assertFalse(node1.isBreak());
555:       assertFalse(node1.isInstanceOf());
556:       assertFalse(node1.isCast());
557:       assertFalse(node1.isExprResult());
558:       assertFalse(node1.isLabelName());
559:       assertFalse(node1.isAssign());
560:       assertFalse(node1.hasChildren());
561:       assertFalse(node1.isDec());
562:       assertEquals((-1), node1.getSourcePosition());
563:       assertFalse(node1.isHook());
564:       assertFalse(node1.isThis());
565:       assertFalse(node1.isGetProp());
566:       assertEquals((-1), node1.getCharno());
567:       assertFalse(node1.isNumber());
568:       assertFalse(node1.hasOneChild());
569:       assertFalse(node1.isScript());
570:       assertFalse(node1.isContinue());
571:       assertFalse(node1.isCase());
572:       assertFalse(node1.hasMoreThanOneChild());
573:       assertEquals((-1), node1.getLineno());
574:       assertFalse(node1.isFalse());
575:       assertFalse(node1.isThrow());
576:       assertFalse(node1.isIf());
577:       assertFalse(node1.isNE());
578:       assertFalse(node1.isIn());
579:       assertFalse(node1.isSetterDef());
580:       assertFalse(node1.isInc());
581:       assertFalse(node1.isDefaultCase());
582:       assertEquals(0, node1.getChildCount());
583:       assertEquals(40, node1.getType());
584:       assertFalse(node1.isTrue());
585:       assertFalse(node1.isVoid());
586:       assertFalse(node1.isParamList());
587:       assertFalse(node1.isRegExp());
588:       assertFalse(node1.isFunction());
589:       assertFalse(node1.isArrayLit());
590:       assertFalse(node1.isCatch());
591:       assertFalse(node1.isStringKey());
592:       assertFalse(node1.isGetterDef());
593:       assertFalse(node1.isFor());
594:       assertFalse(node1.isBlock());
595:       assertFalse(node1.isDebugger());
596:       assertFalse(node1.isTry());
597:       assertTrue(node1.isString());
598:       assertFalse(node1.isDo());
599:       assertFalse(node1.isWhile());
600:       assertFalse(node1.isLabel());
601:       assertFalse(node1.isReturn());
602:       assertFalse(node1.isSwitch());
603:       assertFalse(node1.isTypeOf());
604:       assertFalse(node1.isGetElem());
605:       assertFalse(node1.isCall());
606:       assertFalse(node1.isDelProp());
607:       assertFalse(node1.isName());
608:       assertFalse(node1.isVar());
609:       assertFalse(node1.isNull());
610:       assertFalse(node1.isNew());
611:       assertFalse(node1.isAssignAdd());
612:       assertFalse(node1.isOr());
613:       assertFalse(node1.isEmpty());
614:       assertFalse(node1.isAdd());
615:       assertFalse(iterable0.contains(node0));
616:       assertNotNull(iterable0);
617:       assertEquals(40, Node.ORIGINALNAME_PROP);
618:       assertEquals(57, Node.REFLECTED_OBJECT);
619:       assertEquals(54, Node.SLASH_V);
620:       assertEquals(15, Node.NO_SIDE_EFFECTS);
621:       assertEquals(39, Node.EMPTY_BLOCK);
622:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
623:       assertEquals(50, Node.FREE_CALL);
624:       assertEquals(52, Node.LENGTH);
625:       assertEquals(8, Node.FLAG_NO_THROWS);
626:       assertEquals(12, Node.COLUMN_BITS);
627:       assertEquals(4095, Node.COLUMN_MASK);
628:       assertEquals(49, Node.DIRECT_EVAL);
629:       assertEquals(48, Node.DIRECTIVES);
630:       assertEquals(1, Node.DECR_FLAG);
631:       assertEquals(32, Node.INCRDECR_PROP);
632:       assertEquals(37, Node.OPT_ARG_NAME);
633:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
634:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
635:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
636:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
637:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
638:       assertEquals(36, Node.QUOTED_PROP);
639:       assertEquals(43, Node.IS_CONSTANT_NAME);
640:       assertEquals(56, Node.CHANGE_TIME);
641:       assertEquals(29, Node.JSDOC_INFO_PROP);
642:       assertEquals(53, Node.INPUT_ID);
643:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
644:       assertEquals(51, Node.STATIC_SOURCE_FILE);
645:       assertEquals(55, Node.INFERRED_FUNCTION);
646:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
647:       assertEquals(46, Node.IS_NAMESPACE);
648:       assertEquals(57, Node.LAST_PROP);
649:       assertEquals(2, Node.POST_FLAG);
650:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
651:       assertEquals(47, Node.IS_DISPATCHER);
652:       assertEquals(30, Node.VAR_ARGS_NAME);
653:       assertFalse(node1.equals((Object)node0));
654:       
655:       Node node2 = Node.newNumber((double) 1);
656:       assertFalse(node2.isWith());
657:       assertFalse(node2.isNot());
658:       assertFalse(node2.isAnd());
659:       assertFalse(node2.isObjectLit());
660:       assertFalse(node2.isScript());
661:       assertFalse(node2.isGetProp());
662:       assertFalse(node2.hasOneChild());
663:       assertFalse(node2.isAssign());
664:       assertFalse(node2.isGetElem());
665:       assertFalse(node2.isHook());
666:       assertFalse(node2.isThis());
667:       assertFalse(node2.isTypeOf());
668:       assertFalse(node2.hasChildren());
669:       assertFalse(node2.isDec());
670:       assertFalse(node2.isComma());
671:       assertFalse(node2.isInstanceOf());
672:       assertFalse(node2.isExprResult());
673:       assertFalse(node2.isBreak());
674:       assertEquals((-1), node2.getLineno());
675:       assertFalse(node2.isDo());
676:       assertEquals(39, node2.getType());
677:       assertFalse(node2.hasMoreThanOneChild());
678:       assertEquals((-1), node2.getCharno());
679:       assertFalse(node2.isLabel());
680:       assertFalse(node2.isAssignAdd());
681:       assertFalse(node2.isOr());
682:       assertFalse(node2.isAdd());
683:       assertFalse(node2.isBlock());
684:       assertFalse(node2.isCase());
685:       assertFalse(node2.isNew());
686:       assertFalse(node2.isLabelName());
687:       assertFalse(node2.isGetterDef());
688:       assertFalse(node2.isStringKey());
689:       assertFalse(node2.isVar());
690:       assertFalse(node2.isParamList());
691:       assertFalse(node2.isSwitch());
692:       assertFalse(node2.isArrayLit());
693:       assertFalse(node2.isDefaultCase());
694:       assertFalse(node2.isRegExp());
695:       assertFalse(node2.isTrue());
696:       assertFalse(node2.isFunction());
697:       assertEquals(0, node2.getChildCount());
698:       assertFalse(node2.isDebugger());
699:       assertFalse(node2.isTry());
700:       assertFalse(node2.isSetterDef());
701:       assertFalse(node2.isEmpty());
702:       assertFalse(node2.isDelProp());
703:       assertFalse(node2.isFor());
704:       assertFalse(node2.isName());
705:       assertFalse(node2.isIf());
706:       assertFalse(node2.isNE());
707:       assertFalse(node2.isNull());
708:       assertFalse(node2.isCatch());
709:       assertFalse(node2.isCall());
710:       assertFalse(node2.isVoid());
711:       assertFalse(node2.isContinue());
712:       assertFalse(node2.isWhile());
713:       assertFalse(node2.isString());
714:       assertFalse(node2.isReturn());
715:       assertFalse(node2.isIn());
716:       assertFalse(node2.isInc());
717:       assertTrue(node2.isNumber());
718:       assertFalse(node2.isFalse());
719:       assertFalse(node2.isThrow());
720:       assertEquals((-1), node2.getSourcePosition());
721:       assertFalse(node2.isCast());
722:       assertNotNull(node2);
723:       assertEquals(40, Node.ORIGINALNAME_PROP);
724:       assertEquals(50, Node.FREE_CALL);
725:       assertEquals(57, Node.REFLECTED_OBJECT);
726:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
727:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
728:       assertEquals(48, Node.DIRECTIVES);
729:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
730:       assertEquals(4095, Node.COLUMN_MASK);
731:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
732:       assertEquals(49, Node.DIRECT_EVAL);
733:       assertEquals(30, Node.VAR_ARGS_NAME);
734:       assertEquals(57, Node.LAST_PROP);
735:       assertEquals(8, Node.FLAG_NO_THROWS);
736:       assertEquals(39, Node.EMPTY_BLOCK);
737:       assertEquals(36, Node.QUOTED_PROP);
738:       assertEquals(52, Node.LENGTH);
739:       assertEquals(15, Node.NO_SIDE_EFFECTS);
740:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
741:       assertEquals(29, Node.JSDOC_INFO_PROP);
742:       assertEquals(53, Node.INPUT_ID);
743:       assertEquals(55, Node.INFERRED_FUNCTION);
744:       assertEquals(47, Node.IS_DISPATCHER);
745:       assertEquals(56, Node.CHANGE_TIME);
746:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
747:       assertEquals(37, Node.OPT_ARG_NAME);
748:       assertEquals(2, Node.POST_FLAG);
749:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
750:       assertEquals(51, Node.STATIC_SOURCE_FILE);
751:       assertEquals(1, Node.DECR_FLAG);
752:       assertEquals(32, Node.INCRDECR_PROP);
753:       assertEquals(46, Node.IS_NAMESPACE);
754:       assertEquals(12, Node.COLUMN_BITS);
755:       assertEquals(43, Node.IS_CONSTANT_NAME);
756:       assertEquals(54, Node.SLASH_V);
757:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
758:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
759:       assertFalse(node2.equals((Object)node0));
760:       assertFalse(node2.equals((Object)node1));
761:       
762:       boolean boolean2 = node0.isContinue();
763:       assertFalse(node0.isTry());
764:       assertFalse(node0.isArrayLit());
765:       assertFalse(node0.isTrue());
766:       assertFalse(node0.isVoid());
767:       assertFalse(node0.isDebugger());
768:       assertFalse(node0.isFor());
769:       assertFalse(node0.isGetterDef());
770:       assertFalse(node0.isDefaultCase());
771:       assertFalse(node0.isEmpty());
772:       assertEquals(0, node0.getChildCount());
773:       assertFalse(node0.isParamList());
774:       assertFalse(node0.isFunction());
775:       assertFalse(node0.isNew());
776:       assertFalse(node0.isVar());
777:       assertFalse(node0.isWhile());
778:       assertFalse(node0.isString());
779:       assertFalse(node0.isDo());
780:       assertFalse(node0.isGetProp());
781:       assertFalse(node0.isAdd());
782:       assertFalse(node0.isReturn());
783:       assertFalse(node0.isOr());
784:       assertFalse(node0.isNull());
785:       assertFalse(node0.isDelProp());
786:       assertFalse(node0.isBreak());
787:       assertFalse(node0.hasChildren());
788:       assertFalse(node0.isName());
789:       assertFalse(node0.isTypeOf());
790:       assertFalse(node0.isComma());
791:       assertFalse(node0.isDec());
792:       assertFalse(node0.isAssign());
793:       assertFalse(node0.isExprResult());
794:       assertFalse(node0.isCall());
795:       assertFalse(node0.isGetElem());
796:       assertEquals(0, node0.getType());
797:       assertFalse(node0.hasOneChild());
798:       assertFalse(node0.isNumber());
799:       assertEquals((-1), node0.getSourcePosition());
800:       assertFalse(node0.isNot());
801:       assertFalse(node0.isObjectLit());
802:       assertFalse(node0.isScript());
803:       assertFalse(node0.isAssignAdd());
804:       assertFalse(node0.isLabel());
805:       assertFalse(node0.isAnd());
806:       assertFalse(node0.isLabelName());
807:       assertFalse(node0.isContinue());
808:       assertFalse(node0.isFalse());
809:       assertFalse(node0.isCast());
810:       assertFalse(node0.isHook());
811:       assertEquals((-1), node0.getCharno());
812:       assertFalse(node0.isSwitch());
813:       assertFalse(node0.isBlock());
814:       assertFalse(node0.isThrow());
815:       assertFalse(node0.isStringKey());
816:       assertFalse(node0.isCase());
817:       assertFalse(node0.isInc());
818:       assertFalse(node0.isSetterDef());
819:       assertEquals((-1), node0.getLineno());
820:       assertFalse(node0.isIn());
821:       assertFalse(node0.isThis());
822:       assertFalse(node0.isNE());
823:       assertFalse(node0.isWith());
824:       assertFalse(node0.isIf());
825:       assertFalse(node0.isRegExp());
826:       assertFalse(node0.hasMoreThanOneChild());
827:       assertFalse(node0.isInstanceOf());
828:       assertFalse(node0.isCatch());
829:       assertFalse(boolean2);
830:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
831:       assertEquals(39, Node.EMPTY_BLOCK);
832:       assertEquals(48, Node.DIRECTIVES);
833:       assertEquals(40, Node.ORIGINALNAME_PROP);
834:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
835:       assertEquals(4095, Node.COLUMN_MASK);
836:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
837:       assertEquals(54, Node.SLASH_V);
838:       assertEquals(43, Node.IS_CONSTANT_NAME);
839:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
840:       assertEquals(1, Node.DECR_FLAG);
841:       assertEquals(51, Node.STATIC_SOURCE_FILE);
842:       assertEquals(50, Node.FREE_CALL);
843:       assertEquals(37, Node.OPT_ARG_NAME);
844:       assertEquals(46, Node.IS_NAMESPACE);
845:       assertEquals(56, Node.CHANGE_TIME);
846:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
847:       assertEquals(32, Node.INCRDECR_PROP);
848:       assertEquals(12, Node.COLUMN_BITS);
849:       assertEquals(47, Node.IS_DISPATCHER);
850:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
851:       assertEquals(30, Node.VAR_ARGS_NAME);
852:       assertEquals(2, Node.POST_FLAG);
853:       assertEquals(53, Node.INPUT_ID);
854:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
855:       assertEquals(15, Node.NO_SIDE_EFFECTS);
856:       assertEquals(57, Node.LAST_PROP);
857:       assertEquals(49, Node.DIRECT_EVAL);
858:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
859:       assertEquals(55, Node.INFERRED_FUNCTION);
860:       assertEquals(29, Node.JSDOC_INFO_PROP);
861:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
862:       assertEquals(36, Node.QUOTED_PROP);
863:       assertEquals(57, Node.REFLECTED_OBJECT);
864:       assertEquals(52, Node.LENGTH);
865:       assertEquals(8, Node.FLAG_NO_THROWS);
866:       assertFalse(node0.equals((Object)node1));
867:       assertFalse(node0.equals((Object)node2));
868:       assertTrue(boolean2 == boolean1);
869:       assertTrue(boolean2 == boolean0);
870:       
871:       JSDocInfo jSDocInfo0 = node2.getJSDocInfo();
872:       assertFalse(node2.isWith());
873:       assertFalse(node2.isNot());
874:       assertFalse(node2.isAnd());
875:       assertFalse(node2.isObjectLit());
876:       assertFalse(node2.isScript());
877:       assertFalse(node2.isGetProp());
878:       assertFalse(node2.hasOneChild());
879:       assertFalse(node2.isAssign());
880:       assertFalse(node2.isGetElem());
881:       assertFalse(node2.isHook());
882:       assertFalse(node2.isThis());
883:       assertFalse(node2.isTypeOf());
884:       assertFalse(node2.hasChildren());
885:       assertFalse(node2.isDec());
886:       assertFalse(node2.isComma());
887:       assertFalse(node2.isInstanceOf());
888:       assertFalse(node2.isExprResult());
889:       assertFalse(node2.isBreak());
890:       assertEquals((-1), node2.getLineno());
891:       assertFalse(node2.isDo());
892:       assertEquals(39, node2.getType());
893:       assertFalse(node2.hasMoreThanOneChild());
894:       assertEquals((-1), node2.getCharno());
895:       assertFalse(node2.isLabel());
896:       assertFalse(node2.isAssignAdd());
897:       assertFalse(node2.isOr());
898:       assertFalse(node2.isAdd());
899:       assertFalse(node2.isBlock());
900:       assertFalse(node2.isCase());
901:       assertFalse(node2.isNew());
902:       assertFalse(node2.isLabelName());
903:       assertFalse(node2.isGetterDef());
904:       assertFalse(node2.isStringKey());
905:       assertFalse(node2.isVar());
906:       assertFalse(node2.isParamList());
907:       assertFalse(node2.isSwitch());
908:       assertFalse(node2.isArrayLit());
909:       assertFalse(node2.isDefaultCase());
910:       assertFalse(node2.isRegExp());
911:       assertFalse(node2.isTrue());
912:       assertFalse(node2.isFunction());
913:       assertEquals(0, node2.getChildCount());
914:       assertFalse(node2.isDebugger());
915:       assertFalse(node2.isTry());
916:       assertFalse(node2.isSetterDef());
917:       assertFalse(node2.isEmpty());
918:       assertFalse(node2.isDelProp());
919:       assertFalse(node2.isFor());
920:       assertFalse(node2.isName());
921:       assertFalse(node2.isIf());
922:       assertFalse(node2.isNE());
923:       assertFalse(node2.isNull());
924:       assertFalse(node2.isCatch());
925:       assertFalse(node2.isCall());
926:       assertFalse(node2.isVoid());
927:       assertFalse(node2.isContinue());
928:       assertFalse(node2.isWhile());
929:       assertFalse(node2.isString());
930:       assertFalse(node2.isReturn());
931:       assertFalse(node2.isIn());
932:       assertFalse(node2.isInc());
933:       assertTrue(node2.isNumber());
934:       assertFalse(node2.isFalse());
935:       assertFalse(node2.isThrow());
936:       assertEquals((-1), node2.getSourcePosition());
937:       assertFalse(node2.isCast());
938:       assertNull(jSDocInfo0);
939:       assertEquals(40, Node.ORIGINALNAME_PROP);
940:       assertEquals(50, Node.FREE_CALL);
941:       assertEquals(57, Node.REFLECTED_OBJECT);
942:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
943:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
944:       assertEquals(48, Node.DIRECTIVES);
945:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
946:       assertEquals(4095, Node.COLUMN_MASK);
947:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
948:       assertEquals(49, Node.DIRECT_EVAL);
949:       assertEquals(30, Node.VAR_ARGS_NAME);
950:       assertEquals(57, Node.LAST_PROP);
951:       assertEquals(8, Node.FLAG_NO_THROWS);
952:       assertEquals(39, Node.EMPTY_BLOCK);
953:       assertEquals(36, Node.QUOTED_PROP);
954:       assertEquals(52, Node.LENGTH);
955:       assertEquals(15, Node.NO_SIDE_EFFECTS);
956:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
957:       assertEquals(29, Node.JSDOC_INFO_PROP);
958:       assertEquals(53, Node.INPUT_ID);
959:       assertEquals(55, Node.INFERRED_FUNCTION);
960:       assertEquals(47, Node.IS_DISPATCHER);
961:       assertEquals(56, Node.CHANGE_TIME);
962:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
963:       assertEquals(37, Node.OPT_ARG_NAME);
964:       assertEquals(2, Node.POST_FLAG);
965:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
966:       assertEquals(51, Node.STATIC_SOURCE_FILE);
967:       assertEquals(1, Node.DECR_FLAG);
968:       assertEquals(32, Node.INCRDECR_PROP);
969:       assertEquals(46, Node.IS_NAMESPACE);
970:       assertEquals(12, Node.COLUMN_BITS);
971:       assertEquals(43, Node.IS_CONSTANT_NAME);
972:       assertEquals(54, Node.SLASH_V);
973:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
974:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
975:       assertFalse(node2.equals((Object)node0));
976:       assertFalse(node2.equals((Object)node1));
977:       
978:       Node node3 = Node.newString(30, "com.google.common.collect.Lists$RandomAccessPartition", 4096, 2244);
979:       assertFalse(node3.isObjectLit());
980:       assertFalse(node3.isWith());
981:       assertFalse(node3.isAnd());
982:       assertFalse(node3.isNot());
983:       assertFalse(node3.isGetProp());
984:       assertFalse(node3.hasOneChild());
985:       assertFalse(node3.isScript());
986:       assertFalse(node3.isFalse());
987:       assertFalse(node3.isThrow());
988:       assertTrue(node3.isNew());
989:       assertFalse(node3.isCast());
990:       assertFalse(node3.isNumber());
991:       assertFalse(node3.isSwitch());
992:       assertFalse(node3.isLabelName());
993:       assertEquals(30, node3.getType());
994:       assertFalse(node3.isWhile());
995:       assertFalse(node3.isString());
996:       assertFalse(node3.isOr());
997:       assertFalse(node3.isReturn());
998:       assertFalse(node3.isLabel());
999:       assertFalse(node3.isAdd());
1000:       assertFalse(node3.isAssignAdd());
1001:       assertFalse(node3.isDo());
1002:       assertFalse(node3.isGetElem());
1003:       assertFalse(node3.isEmpty());
1004:       assertFalse(node3.isName());
1005:       assertFalse(node3.isCall());
1006:       assertFalse(node3.hasChildren());
1007:       assertFalse(node3.isDec());
1008:       assertFalse(node3.isNull());
1009:       assertFalse(node3.isTypeOf());
1010:       assertFalse(node3.isComma());
1011:       assertFalse(node3.isAssign());
1012:       assertFalse(node3.isExprResult());
1013:       assertFalse(node3.isTrue());
1014:       assertFalse(node3.isVoid());
1015:       assertFalse(node3.isDelProp());
1016:       assertFalse(node3.isBreak());
1017:       assertFalse(node3.isCatch());
1018:       assertEquals(2244, node3.getCharno());
1019:       assertEquals(0, node3.getChildCount());
1020:       assertFalse(node3.isRegExp());
1021:       assertFalse(node3.isDebugger());
1022:       assertFalse(node3.isTry());
1023:       assertFalse(node3.isDefaultCase());
1024:       assertFalse(node3.isSetterDef());
1025:       assertFalse(node3.isStringKey());
1026:       assertFalse(node3.isGetterDef());
1027:       assertFalse(node3.isVar());
1028:       assertEquals(4096, node3.getLineno());
1029:       assertFalse(node3.isFunction());
1030:       assertFalse(node3.isParamList());
1031:       assertFalse(node3.isArrayLit());
1032:       assertFalse(node3.hasMoreThanOneChild());
1033:       assertFalse(node3.isContinue());
1034:       assertFalse(node3.isIn());
1035:       assertFalse(node3.isInc());
1036:       assertFalse(node3.isBlock());
1037:       assertFalse(node3.isCase());
1038:       assertFalse(node3.isFor());
1039:       assertEquals(16779460, node3.getSourcePosition());
1040:       assertFalse(node3.isHook());
1041:       assertFalse(node3.isThis());
1042:       assertFalse(node3.isNE());
1043:       assertFalse(node3.isInstanceOf());
1044:       assertFalse(node3.isIf());
1045:       assertNotSame(node3, node1);
1046:       assertNotNull(node3);
1047:       assertEquals(40, Node.ORIGINALNAME_PROP);
1048:       assertEquals(57, Node.REFLECTED_OBJECT);
1049:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1050:       assertEquals(54, Node.SLASH_V);
1051:       assertEquals(48, Node.DIRECTIVES);
1052:       assertEquals(30, Node.VAR_ARGS_NAME);
1053:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1054:       assertEquals(12, Node.COLUMN_BITS);
1055:       assertEquals(4095, Node.COLUMN_MASK);
1056:       assertEquals(32, Node.INCRDECR_PROP);
1057:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1058:       assertEquals(1, Node.DECR_FLAG);
1059:       assertEquals(46, Node.IS_NAMESPACE);
1060:       assertEquals(43, Node.IS_CONSTANT_NAME);
1061:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1062:       assertEquals(50, Node.FREE_CALL);
1063:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1064:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1065:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1066:       assertEquals(56, Node.CHANGE_TIME);
1067:       assertEquals(2, Node.POST_FLAG);
1068:       assertEquals(47, Node.IS_DISPATCHER);
1069:       assertEquals(37, Node.OPT_ARG_NAME);
1070:       assertEquals(49, Node.DIRECT_EVAL);
1071:       assertEquals(57, Node.LAST_PROP);
1072:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1073:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1074:       assertEquals(8, Node.FLAG_NO_THROWS);
1075:       assertEquals(39, Node.EMPTY_BLOCK);
1076:       assertEquals(36, Node.QUOTED_PROP);
1077:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1078:       assertEquals(29, Node.JSDOC_INFO_PROP);
1079:       assertEquals(52, Node.LENGTH);
1080:       assertEquals(53, Node.INPUT_ID);
1081:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1082:       assertEquals(55, Node.INFERRED_FUNCTION);
1083:       assertFalse(node3.equals((Object)node0));
1084:       assertFalse(node3.equals((Object)node1));
1085:       assertFalse(node3.equals((Object)node2));
1086:       
1087:       node0.setVarArgs(false);
1088:       assertFalse(node0.isTry());
1089:       assertFalse(node0.isArrayLit());
1090:       assertFalse(node0.isTrue());
1091:       assertFalse(node0.isVoid());
1092:       assertFalse(node0.isDebugger());
1093:       assertFalse(node0.isFor());
1094:       assertFalse(node0.isGetterDef());
1095:       assertFalse(node0.isDefaultCase());
1096:       assertFalse(node0.isEmpty());
1097:       assertEquals(0, node0.getChildCount());
1098:       assertFalse(node0.isParamList());
1099:       assertFalse(node0.isFunction());
1100:       assertFalse(node0.isNew());
1101:       assertFalse(node0.isVar());
1102:       assertFalse(node0.isWhile());
1103:       assertFalse(node0.isString());
1104:       assertFalse(node0.isDo());
1105:       assertFalse(node0.isGetProp());
1106:       assertFalse(node0.isAdd());
1107:       assertFalse(node0.isReturn());
1108:       assertFalse(node0.isOr());
1109:       assertFalse(node0.isNull());
1110:       assertFalse(node0.isDelProp());
1111:       assertFalse(node0.isBreak());
1112:       assertFalse(node0.hasChildren());
1113:       assertFalse(node0.isName());
1114:       assertFalse(node0.isTypeOf());
1115:       assertFalse(node0.isComma());
1116:       assertFalse(node0.isDec());
1117:       assertFalse(node0.isAssign());
1118:       assertFalse(node0.isExprResult());
1119:       assertFalse(node0.isCall());
1120:       assertFalse(node0.isGetElem());
1121:       assertEquals(0, node0.getType());
1122:       assertFalse(node0.hasOneChild());
1123:       assertFalse(node0.isNumber());
1124:       assertEquals((-1), node0.getSourcePosition());
1125:       assertFalse(node0.isNot());
1126:       assertFalse(node0.isObjectLit());
1127:       assertFalse(node0.isScript());
1128:       assertFalse(node0.isAssignAdd());
1129:       assertFalse(node0.isLabel());
1130:       assertFalse(node0.isAnd());
1131:       assertFalse(node0.isLabelName());
1132:       assertFalse(node0.isContinue());
1133:       assertFalse(node0.isFalse());
1134:       assertFalse(node0.isCast());
1135:       assertFalse(node0.isHook());
1136:       assertEquals((-1), node0.getCharno());
1137:       assertFalse(node0.isSwitch());
1138:       assertFalse(node0.isBlock());
1139:       assertFalse(node0.isThrow());
1140:       assertFalse(node0.isStringKey());
1141:       assertFalse(node0.isCase());
1142:       assertFalse(node0.isInc());
1143:       assertFalse(node0.isSetterDef());
1144:       assertEquals((-1), node0.getLineno());
1145:       assertFalse(node0.isIn());
1146:       assertFalse(node0.isThis());
1147:       assertFalse(node0.isNE());
1148:       assertFalse(node0.isWith());
1149:       assertFalse(node0.isIf());
1150:       assertFalse(node0.isRegExp());
1151:       assertFalse(node0.hasMoreThanOneChild());
1152:       assertFalse(node0.isInstanceOf());
1153:       assertFalse(node0.isCatch());
1154:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1155:       assertEquals(39, Node.EMPTY_BLOCK);
1156:       assertEquals(48, Node.DIRECTIVES);
1157:       assertEquals(40, Node.ORIGINALNAME_PROP);
1158:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1159:       assertEquals(4095, Node.COLUMN_MASK);
1160:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1161:       assertEquals(54, Node.SLASH_V);
1162:       assertEquals(43, Node.IS_CONSTANT_NAME);
1163:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1164:       assertEquals(1, Node.DECR_FLAG);
1165:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1166:       assertEquals(50, Node.FREE_CALL);
1167:       assertEquals(37, Node.OPT_ARG_NAME);
1168:       assertEquals(46, Node.IS_NAMESPACE);
1169:       assertEquals(56, Node.CHANGE_TIME);
1170:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1171:       assertEquals(32, Node.INCRDECR_PROP);
1172:       assertEquals(12, Node.COLUMN_BITS);
1173:       assertEquals(47, Node.IS_DISPATCHER);
1174:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1175:       assertEquals(30, Node.VAR_ARGS_NAME);
1176:       assertEquals(2, Node.POST_FLAG);
1177:       assertEquals(53, Node.INPUT_ID);
1178:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1179:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1180:       assertEquals(57, Node.LAST_PROP);
1181:       assertEquals(49, Node.DIRECT_EVAL);
1182:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1183:       assertEquals(55, Node.INFERRED_FUNCTION);
1184:       assertEquals(29, Node.JSDOC_INFO_PROP);
1185:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1186:       assertEquals(36, Node.QUOTED_PROP);
1187:       assertEquals(57, Node.REFLECTED_OBJECT);
1188:       assertEquals(52, Node.LENGTH);
1189:       assertEquals(8, Node.FLAG_NO_THROWS);
1190:       assertFalse(node0.equals((Object)node3));
1191:       assertFalse(node0.equals((Object)node1));
1192:       assertFalse(node0.equals((Object)node2));
1193:       
1194:       boolean boolean3 = node2.isEquivalentTo(node1);
1195:       assertFalse(node1.isAnd());
1196:       assertFalse(node1.isWith());
1197:       assertFalse(node1.isNot());
1198:       assertFalse(node1.isObjectLit());
1199:       assertFalse(node1.isComma());
1200:       assertFalse(node1.isBreak());
1201:       assertFalse(node1.isInstanceOf());
1202:       assertFalse(node1.isCast());
1203:       assertFalse(node1.isExprResult());
1204:       assertFalse(node1.isLabelName());
1205:       assertFalse(node1.isAssign());
1206:       assertFalse(node1.hasChildren());
1207:       assertFalse(node1.isDec());
1208:       assertEquals((-1), node1.getSourcePosition());
1209:       assertFalse(node1.isHook());
1210:       assertFalse(node1.isThis());
1211:       assertFalse(node1.isGetProp());
1212:       assertEquals((-1), node1.getCharno());
1213:       assertFalse(node1.isNumber());
1214:       assertFalse(node1.hasOneChild());
1215:       assertFalse(node1.isScript());
1216:       assertFalse(node1.isContinue());
1217:       assertFalse(node1.isCase());
1218:       assertFalse(node1.hasMoreThanOneChild());
1219:       assertEquals((-1), node1.getLineno());
1220:       assertFalse(node1.isFalse());
1221:       assertFalse(node1.isThrow());
1222:       assertFalse(node1.isIf());
1223:       assertFalse(node1.isNE());
1224:       assertFalse(node1.isIn());
1225:       assertFalse(node1.isSetterDef());
1226:       assertFalse(node1.isInc());
1227:       assertFalse(node1.isDefaultCase());
1228:       assertEquals(0, node1.getChildCount());
1229:       assertEquals(40, node1.getType());
1230:       assertFalse(node1.isTrue());
1231:       assertFalse(node1.isVoid());
1232:       assertFalse(node1.isParamList());
1233:       assertFalse(node1.isRegExp());
1234:       assertFalse(node1.isFunction());
1235:       assertFalse(node1.isArrayLit());
1236:       assertFalse(node1.isCatch());
1237:       assertFalse(node1.isStringKey());
1238:       assertFalse(node1.isGetterDef());
1239:       assertFalse(node1.isFor());
1240:       assertFalse(node1.isBlock());
1241:       assertFalse(node1.isDebugger());
1242:       assertFalse(node1.isTry());
1243:       assertTrue(node1.isString());
1244:       assertFalse(node1.isDo());
1245:       assertFalse(node1.isWhile());
1246:       assertFalse(node1.isLabel());
1247:       assertFalse(node1.isReturn());
1248:       assertFalse(node1.isSwitch());
1249:       assertFalse(node1.isTypeOf());
1250:       assertFalse(node1.isGetElem());
1251:       assertFalse(node1.isCall());
1252:       assertFalse(node1.isDelProp());
1253:       assertFalse(node1.isName());
1254:       assertFalse(node1.isVar());
1255:       assertFalse(node1.isNull());
1256:       assertFalse(node1.isNew());
1257:       assertFalse(node1.isAssignAdd());
1258:       assertFalse(node1.isOr());
1259:       assertFalse(node1.isEmpty());
1260:       assertFalse(node1.isAdd());
1261:       assertFalse(node2.isWith());
1262:       assertFalse(node2.isNot());
1263:       assertFalse(node2.isAnd());
1264:       assertFalse(node2.isObjectLit());
1265:       assertFalse(node2.isScript());
1266:       assertFalse(node2.isGetProp());
1267:       assertFalse(node2.hasOneChild());
1268:       assertFalse(node2.isAssign());
1269:       assertFalse(node2.isGetElem());
1270:       assertFalse(node2.isHook());
1271:       assertFalse(node2.isThis());
1272:       assertFalse(node2.isTypeOf());
1273:       assertFalse(node2.hasChildren());
1274:       assertFalse(node2.isDec());
1275:       assertFalse(node2.isComma());
1276:       assertFalse(node2.isInstanceOf());
1277:       assertFalse(node2.isExprResult());
1278:       assertFalse(node2.isBreak());
1279:       assertEquals((-1), node2.getLineno());
1280:       assertFalse(node2.isDo());
1281:       assertEquals(39, node2.getType());
1282:       assertFalse(node2.hasMoreThanOneChild());
1283:       assertEquals((-1), node2.getCharno());
1284:       assertFalse(node2.isLabel());
1285:       assertFalse(node2.isAssignAdd());
1286:       assertFalse(node2.isOr());
1287:       assertFalse(node2.isAdd());
1288:       assertFalse(node2.isBlock());
1289:       assertFalse(node2.isCase());
1290:       assertFalse(node2.isNew());
1291:       assertFalse(node2.isLabelName());
1292:       assertFalse(node2.isGetterDef());
1293:       assertFalse(node2.isStringKey());
1294:       assertFalse(node2.isVar());
1295:       assertFalse(node2.isParamList());
1296:       assertFalse(node2.isSwitch());
1297:       assertFalse(node2.isArrayLit());
1298:       assertFalse(node2.isDefaultCase());
1299:       assertFalse(node2.isRegExp());
1300:       assertFalse(node2.isTrue());
1301:       assertFalse(node2.isFunction());
1302:       assertEquals(0, node2.getChildCount());
1303:       assertFalse(node2.isDebugger());
1304:       assertFalse(node2.isTry());
1305:       assertFalse(node2.isSetterDef());
1306:       assertFalse(node2.isEmpty());
1307:       assertFalse(node2.isDelProp());
1308:       assertFalse(node2.isFor());
1309:       assertFalse(node2.isName());
1310:       assertFalse(node2.isIf());
1311:       assertFalse(node2.isNE());
1312:       assertFalse(node2.isNull());
1313:       assertFalse(node2.isCatch());
1314:       assertFalse(node2.isCall());
1315:       assertFalse(node2.isVoid());
1316:       assertFalse(node2.isContinue());
1317:       assertFalse(node2.isWhile());
1318:       assertFalse(node2.isString());
1319:       assertFalse(node2.isReturn());
1320:       assertFalse(node2.isIn());
1321:       assertFalse(node2.isInc());
1322:       assertTrue(node2.isNumber());
1323:       assertFalse(node2.isFalse());
1324:       assertFalse(node2.isThrow());
1325:       assertEquals((-1), node2.getSourcePosition());
1326:       assertFalse(node2.isCast());
1327:       assertNotSame(node1, node3);
1328:       assertFalse(boolean3);
1329:       assertEquals(40, Node.ORIGINALNAME_PROP);
1330:       assertEquals(57, Node.REFLECTED_OBJECT);
1331:       assertEquals(54, Node.SLASH_V);
1332:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1333:       assertEquals(39, Node.EMPTY_BLOCK);
1334:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1335:       assertEquals(50, Node.FREE_CALL);
1336:       assertEquals(52, Node.LENGTH);
1337:       assertEquals(8, Node.FLAG_NO_THROWS);
1338:       assertEquals(12, Node.COLUMN_BITS);
1339:       assertEquals(4095, Node.COLUMN_MASK);
1340:       assertEquals(49, Node.DIRECT_EVAL);
1341:       assertEquals(48, Node.DIRECTIVES);
1342:       assertEquals(1, Node.DECR_FLAG);
1343:       assertEquals(32, Node.INCRDECR_PROP);
1344:       assertEquals(37, Node.OPT_ARG_NAME);
1345:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1346:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1347:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1348:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1349:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1350:       assertEquals(36, Node.QUOTED_PROP);
1351:       assertEquals(43, Node.IS_CONSTANT_NAME);
1352:       assertEquals(56, Node.CHANGE_TIME);
1353:       assertEquals(29, Node.JSDOC_INFO_PROP);
1354:       assertEquals(53, Node.INPUT_ID);
1355:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1356:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1357:       assertEquals(55, Node.INFERRED_FUNCTION);
1358:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1359:       assertEquals(46, Node.IS_NAMESPACE);
1360:       assertEquals(57, Node.LAST_PROP);
1361:       assertEquals(2, Node.POST_FLAG);
1362:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1363:       assertEquals(47, Node.IS_DISPATCHER);
1364:       assertEquals(30, Node.VAR_ARGS_NAME);
1365:       assertEquals(40, Node.ORIGINALNAME_PROP);
1366:       assertEquals(50, Node.FREE_CALL);
1367:       assertEquals(57, Node.REFLECTED_OBJECT);
1368:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1369:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1370:       assertEquals(48, Node.DIRECTIVES);
1371:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1372:       assertEquals(4095, Node.COLUMN_MASK);
1373:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1374:       assertEquals(49, Node.DIRECT_EVAL);
1375:       assertEquals(30, Node.VAR_ARGS_NAME);
1376:       assertEquals(57, Node.LAST_PROP);
1377:       assertEquals(8, Node.FLAG_NO_THROWS);
1378:       assertEquals(39, Node.EMPTY_BLOCK);
1379:       assertEquals(36, Node.QUOTED_PROP);
1380:       assertEquals(52, Node.LENGTH);
1381:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1382:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1383:       assertEquals(29, Node.JSDOC_INFO_PROP);
1384:       assertEquals(53, Node.INPUT_ID);
1385:       assertEquals(55, Node.INFERRED_FUNCTION);
1386:       assertEquals(47, Node.IS_DISPATCHER);
1387:       assertEquals(56, Node.CHANGE_TIME);
1388:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1389:       assertEquals(37, Node.OPT_ARG_NAME);
1390:       assertEquals(2, Node.POST_FLAG);
1391:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1392:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1393:       assertEquals(1, Node.DECR_FLAG);
1394:       assertEquals(32, Node.INCRDECR_PROP);
1395:       assertEquals(46, Node.IS_NAMESPACE);
1396:       assertEquals(12, Node.COLUMN_BITS);
1397:       assertEquals(43, Node.IS_CONSTANT_NAME);
1398:       assertEquals(54, Node.SLASH_V);
1399:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1400:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1401:       assertFalse(node1.equals((Object)node0));
1402:       assertFalse(node1.equals((Object)node2));
1403:       assertFalse(node1.equals((Object)node3));
1404:       assertFalse(node2.equals((Object)node0));
1405:       assertFalse(node2.equals((Object)node3));
1406:       assertFalse(node2.equals((Object)node1));
1407:       assertTrue(boolean3 == boolean2);
1408:       assertTrue(boolean3 == boolean1);
1409:       assertTrue(boolean3 == boolean0);
1410:       
1411:       boolean boolean4 = node1.isWhile();
1412:       assertFalse(node1.isAnd());
1413:       assertFalse(node1.isWith());
1414:       assertFalse(node1.isNot());
1415:       assertFalse(node1.isObjectLit());
1416:       assertFalse(node1.isComma());
1417:       assertFalse(node1.isBreak());
1418:       assertFalse(node1.isInstanceOf());
1419:       assertFalse(node1.isCast());
1420:       assertFalse(node1.isExprResult());
1421:       assertFalse(node1.isLabelName());
1422:       assertFalse(node1.isAssign());
1423:       assertFalse(node1.hasChildren());
1424:       assertFalse(node1.isDec());
1425:       assertEquals((-1), node1.getSourcePosition());
1426:       assertFalse(node1.isHook());
1427:       assertFalse(node1.isThis());
1428:       assertFalse(node1.isGetProp());
1429:       assertEquals((-1), node1.getCharno());
1430:       assertFalse(node1.isNumber());
1431:       assertFalse(node1.hasOneChild());
1432:       assertFalse(node1.isScript());
1433:       assertFalse(node1.isContinue());
1434:       assertFalse(node1.isCase());
1435:       assertFalse(node1.hasMoreThanOneChild());
1436:       assertEquals((-1), node1.getLineno());
1437:       assertFalse(node1.isFalse());
1438:       assertFalse(node1.isThrow());
1439:       assertFalse(node1.isIf());
1440:       assertFalse(node1.isNE());
1441:       assertFalse(node1.isIn());
1442:       assertFalse(node1.isSetterDef());
1443:       assertFalse(node1.isInc());
1444:       assertFalse(node1.isDefaultCase());
1445:       assertEquals(0, node1.getChildCount());
1446:       assertEquals(40, node1.getType());
1447:       assertFalse(node1.isTrue());
1448:       assertFalse(node1.isVoid());
1449:       assertFalse(node1.isParamList());
1450:       assertFalse(node1.isRegExp());
1451:       assertFalse(node1.isFunction());
1452:       assertFalse(node1.isArrayLit());
1453:       assertFalse(node1.isCatch());
1454:       assertFalse(node1.isStringKey());
1455:       assertFalse(node1.isGetterDef());
1456:       assertFalse(node1.isFor());
1457:       assertFalse(node1.isBlock());
1458:       assertFalse(node1.isDebugger());
1459:       assertFalse(node1.isTry());
1460:       assertTrue(node1.isString());
1461:       assertFalse(node1.isDo());
1462:       assertFalse(node1.isWhile());
1463:       assertFalse(node1.isLabel());
1464:       assertFalse(node1.isReturn());
1465:       assertFalse(node1.isSwitch());
1466:       assertFalse(node1.isTypeOf());
1467:       assertFalse(node1.isGetElem());
1468:       assertFalse(node1.isCall());
1469:       assertFalse(node1.isDelProp());
1470:       assertFalse(node1.isName());
1471:       assertFalse(node1.isVar());
1472:       assertFalse(node1.isNull());
1473:       assertFalse(node1.isNew());
1474:       assertFalse(node1.isAssignAdd());
1475:       assertFalse(node1.isOr());
1476:       assertFalse(node1.isEmpty());
1477:       assertFalse(node1.isAdd());
1478:       assertNotSame(node1, node3);
1479:       assertFalse(boolean4);
1480:       assertEquals(40, Node.ORIGINALNAME_PROP);
1481:       assertEquals(57, Node.REFLECTED_OBJECT);
1482:       assertEquals(54, Node.SLASH_V);
1483:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1484:       assertEquals(39, Node.EMPTY_BLOCK);
1485:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1486:       assertEquals(50, Node.FREE_CALL);
1487:       assertEquals(52, Node.LENGTH);
1488:       assertEquals(8, Node.FLAG_NO_THROWS);
1489:       assertEquals(12, Node.COLUMN_BITS);
1490:       assertEquals(4095, Node.COLUMN_MASK);
1491:       assertEquals(49, Node.DIRECT_EVAL);
1492:       assertEquals(48, Node.DIRECTIVES);
1493:       assertEquals(1, Node.DECR_FLAG);
1494:       assertEquals(32, Node.INCRDECR_PROP);
1495:       assertEquals(37, Node.OPT_ARG_NAME);
1496:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1497:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1498:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1499:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1500:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1501:       assertEquals(36, Node.QUOTED_PROP);
1502:       assertEquals(43, Node.IS_CONSTANT_NAME);
1503:       assertEquals(56, Node.CHANGE_TIME);
1504:       assertEquals(29, Node.JSDOC_INFO_PROP);
1505:       assertEquals(53, Node.INPUT_ID);
1506:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1507:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1508:       assertEquals(55, Node.INFERRED_FUNCTION);
1509:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1510:       assertEquals(46, Node.IS_NAMESPACE);
1511:       assertEquals(57, Node.LAST_PROP);
1512:       assertEquals(2, Node.POST_FLAG);
1513:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1514:       assertEquals(47, Node.IS_DISPATCHER);
1515:       assertEquals(30, Node.VAR_ARGS_NAME);
1516:       assertFalse(node1.equals((Object)node0));
1517:       assertFalse(node1.equals((Object)node2));
1518:       assertFalse(node1.equals((Object)node3));
1519:       assertTrue(boolean4 == boolean0);
1520:       assertTrue(boolean4 == boolean3);
1521:       assertTrue(boolean4 == boolean2);
1522:       assertTrue(boolean4 == boolean1);
1523:       
1524:       Node node4 = node0.cloneNode();
1525:       assertFalse(node0.isTry());
1526:       assertFalse(node0.isArrayLit());
1527:       assertFalse(node0.isTrue());
1528:       assertFalse(node0.isVoid());
1529:       assertFalse(node0.isDebugger());
1530:       assertFalse(node0.isFor());
1531:       assertFalse(node0.isGetterDef());
1532:       assertFalse(node0.isDefaultCase());
1533:       assertFalse(node0.isEmpty());
1534:       assertEquals(0, node0.getChildCount());
1535:       assertFalse(node0.isParamList());
1536:       assertFalse(node0.isFunction());
1537:       assertFalse(node0.isNew());
1538:       assertFalse(node0.isVar());
1539:       assertFalse(node0.isWhile());
1540:       assertFalse(node0.isString());
1541:       assertFalse(node0.isDo());
1542:       assertFalse(node0.isGetProp());
1543:       assertFalse(node0.isAdd());
1544:       assertFalse(node0.isReturn());
1545:       assertFalse(node0.isOr());
1546:       assertFalse(node0.isNull());
1547:       assertFalse(node0.isDelProp());
1548:       assertFalse(node0.isBreak());
1549:       assertFalse(node0.hasChildren());
1550:       assertFalse(node0.isName());
1551:       assertFalse(node0.isTypeOf());
1552:       assertFalse(node0.isComma());
1553:       assertFalse(node0.isDec());
1554:       assertFalse(node0.isAssign());
1555:       assertFalse(node0.isExprResult());
1556:       assertFalse(node0.isCall());
1557:       assertFalse(node0.isGetElem());
1558:       assertEquals(0, node0.getType());
1559:       assertFalse(node0.hasOneChild());
1560:       assertFalse(node0.isNumber());
1561:       assertEquals((-1), node0.getSourcePosition());
1562:       assertFalse(node0.isNot());
1563:       assertFalse(node0.isObjectLit());
1564:       assertFalse(node0.isScript());
1565:       assertFalse(node0.isAssignAdd());
1566:       assertFalse(node0.isLabel());
1567:       assertFalse(node0.isAnd());
1568:       assertFalse(node0.isLabelName());
1569:       assertFalse(node0.isContinue());
1570:       assertFalse(node0.isFalse());
1571:       assertFalse(node0.isCast());
1572:       assertFalse(node0.isHook());
1573:       assertEquals((-1), node0.getCharno());
1574:       assertFalse(node0.isSwitch());
1575:       assertFalse(node0.isBlock());
1576:       assertFalse(node0.isThrow());
1577:       assertFalse(node0.isStringKey());
1578:       assertFalse(node0.isCase());
1579:       assertFalse(node0.isInc());
1580:       assertFalse(node0.isSetterDef());
1581:       assertEquals((-1), node0.getLineno());
1582:       assertFalse(node0.isIn());
1583:       assertFalse(node0.isThis());
1584:       assertFalse(node0.isNE());
1585:       assertFalse(node0.isWith());
1586:       assertFalse(node0.isIf());
1587:       assertFalse(node0.isRegExp());
1588:       assertFalse(node0.hasMoreThanOneChild());
1589:       assertFalse(node0.isInstanceOf());
1590:       assertFalse(node0.isCatch());
1591:       assertFalse(node4.isNot());
1592:       assertFalse(node4.isWith());
1593:       assertFalse(node4.isAnd());
1594:       assertFalse(node4.isObjectLit());
1595:       assertFalse(node4.isGetProp());
1596:       assertFalse(node4.isScript());
1597:       assertFalse(node4.hasOneChild());
1598:       assertFalse(node4.isAssign());
1599:       assertFalse(node4.isGetElem());
1600:       assertFalse(node4.isTypeOf());
1601:       assertFalse(node4.isHook());
1602:       assertFalse(node4.isThis());
1603:       assertFalse(node4.hasChildren());
1604:       assertFalse(node4.isComma());
1605:       assertFalse(node4.isDec());
1606:       assertEquals(0, node4.getType());
1607:       assertFalse(node4.isExprResult());
1608:       assertFalse(node4.isInstanceOf());
1609:       assertFalse(node4.isBreak());
1610:       assertEquals((-1), node4.getLineno());
1611:       assertFalse(node4.isCase());
1612:       assertFalse(node4.isDo());
1613:       assertFalse(node4.hasMoreThanOneChild());
1614:       assertEquals((-1), node4.getCharno());
1615:       assertFalse(node4.isLabel());
1616:       assertFalse(node4.isAssignAdd());
1617:       assertFalse(node4.isOr());
1618:       assertFalse(node4.isAdd());
1619:       assertFalse(node4.isBlock());
1620:       assertFalse(node4.isNew());
1621:       assertFalse(node4.isLabelName());
1622:       assertFalse(node4.isStringKey());
1623:       assertFalse(node4.isVar());
1624:       assertFalse(node4.isNumber());
1625:       assertFalse(node4.isGetterDef());
1626:       assertFalse(node4.isParamList());
1627:       assertFalse(node4.isArrayLit());
1628:       assertFalse(node4.isSwitch());
1629:       assertFalse(node4.isCatch());
1630:       assertFalse(node4.isRegExp());
1631:       assertFalse(node4.isFunction());
1632:       assertFalse(node4.isDebugger());
1633:       assertEquals(0, node4.getChildCount());
1634:       assertFalse(node4.isTry());
1635:       assertFalse(node4.isDefaultCase());
1636:       assertFalse(node4.isSetterDef());
1637:       assertFalse(node4.isFor());
1638:       assertFalse(node4.isEmpty());
1639:       assertFalse(node4.isName());
1640:       assertFalse(node4.isCall());
1641:       assertFalse(node4.isIf());
1642:       assertFalse(node4.isNull());
1643:       assertFalse(node4.isNE());
1644:       assertFalse(node4.isTrue());
1645:       assertFalse(node4.isDelProp());
1646:       assertFalse(node4.isVoid());
1647:       assertFalse(node4.isWhile());
1648:       assertFalse(node4.isString());
1649:       assertFalse(node4.isContinue());
1650:       assertFalse(node4.isReturn());
1651:       assertFalse(node4.isIn());
1652:       assertFalse(node4.isInc());
1653:       assertFalse(node4.isFalse());
1654:       assertFalse(node4.isThrow());
1655:       assertFalse(node4.isCast());
1656:       assertEquals((-1), node4.getSourcePosition());
1657:       assertNotSame(node0, node4);
1658:       assertNotSame(node4, node0);
1659:       assertNotNull(node4);
1660:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1661:       assertEquals(39, Node.EMPTY_BLOCK);
1662:       assertEquals(48, Node.DIRECTIVES);
1663:       assertEquals(40, Node.ORIGINALNAME_PROP);
1664:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1665:       assertEquals(4095, Node.COLUMN_MASK);
1666:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1667:       assertEquals(54, Node.SLASH_V);
1668:       assertEquals(43, Node.IS_CONSTANT_NAME);
1669:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1670:       assertEquals(1, Node.DECR_FLAG);
1671:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1672:       assertEquals(50, Node.FREE_CALL);
1673:       assertEquals(37, Node.OPT_ARG_NAME);
1674:       assertEquals(46, Node.IS_NAMESPACE);
1675:       assertEquals(56, Node.CHANGE_TIME);
1676:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1677:       assertEquals(32, Node.INCRDECR_PROP);
1678:       assertEquals(12, Node.COLUMN_BITS);
1679:       assertEquals(47, Node.IS_DISPATCHER);
1680:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1681:       assertEquals(30, Node.VAR_ARGS_NAME);
1682:       assertEquals(2, Node.POST_FLAG);
1683:       assertEquals(53, Node.INPUT_ID);
1684:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1685:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1686:       assertEquals(57, Node.LAST_PROP);
1687:       assertEquals(49, Node.DIRECT_EVAL);
1688:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1689:       assertEquals(55, Node.INFERRED_FUNCTION);
1690:       assertEquals(29, Node.JSDOC_INFO_PROP);
1691:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1692:       assertEquals(36, Node.QUOTED_PROP);
1693:       assertEquals(57, Node.REFLECTED_OBJECT);
1694:       assertEquals(52, Node.LENGTH);
1695:       assertEquals(8, Node.FLAG_NO_THROWS);
1696:       assertEquals(40, Node.ORIGINALNAME_PROP);
1697:       assertEquals(50, Node.FREE_CALL);
1698:       assertEquals(57, Node.REFLECTED_OBJECT);
1699:       assertEquals(54, Node.SLASH_V);
1700:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1701:       assertEquals(48, Node.DIRECTIVES);
1702:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1703:       assertEquals(30, Node.VAR_ARGS_NAME);
1704:       assertEquals(49, Node.DIRECT_EVAL);
1705:       assertEquals(57, Node.LAST_PROP);
1706:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1707:       assertEquals(8, Node.FLAG_NO_THROWS);
1708:       assertEquals(39, Node.EMPTY_BLOCK);
1709:       assertEquals(36, Node.QUOTED_PROP);
1710:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1711:       assertEquals(52, Node.LENGTH);
1712:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1713:       assertEquals(53, Node.INPUT_ID);
1714:       assertEquals(55, Node.INFERRED_FUNCTION);
1715:       assertEquals(29, Node.JSDOC_INFO_PROP);
1716:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1717:       assertEquals(47, Node.IS_DISPATCHER);
1718:       assertEquals(56, Node.CHANGE_TIME);
1719:       assertEquals(37, Node.OPT_ARG_NAME);
1720:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1721:       assertEquals(2, Node.POST_FLAG);
1722:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1723:       assertEquals(4095, Node.COLUMN_MASK);
1724:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1725:       assertEquals(32, Node.INCRDECR_PROP);
1726:       assertEquals(1, Node.DECR_FLAG);
1727:       assertEquals(43, Node.IS_CONSTANT_NAME);
1728:       assertEquals(12, Node.COLUMN_BITS);
1729:       assertEquals(46, Node.IS_NAMESPACE);
1730:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1731:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1732:       assertFalse(node0.equals((Object)node3));
1733:       assertFalse(node0.equals((Object)node1));
1734:       assertFalse(node0.equals((Object)node2));
1735:       assertFalse(node4.equals((Object)node0));
1736:       assertFalse(node4.equals((Object)node3));
1737:       assertFalse(node4.equals((Object)node1));
1738:       assertFalse(node4.equals((Object)node2));
1739:   }
1740: }
RegularFileObject[/tmp/EvoSuite_153_1628256110045/com/google/javascript/rhino/Node_153_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:21:50 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_153_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_153_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.JSType$2",
119:       "com.google.javascript.rhino.jstype.VoidType",
120:       "com.google.common.base.Joiner",
121:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
122:       "com.google.common.collect.AbstractListMultimap",
123:       "com.google.javascript.rhino.jstype.JSType",
124:       "com.google.common.collect.ImmutableAsList",
125:       "com.google.javascript.rhino.Node$StringNode",
126:       "com.google.javascript.rhino.jstype.ProxyObjectType",
127:       "com.google.common.collect.Sets$SetView",
128:       "com.google.common.collect.RegularImmutableAsList",
129:       "com.google.javascript.rhino.jstype.TemplateType",
130:       "com.google.javascript.rhino.jstype.NamedType",
131:       "com.google.common.collect.Iterators$13",
132:       "com.google.javascript.rhino.InputId",
133:       "com.google.common.collect.ImmutableList$SerializedForm",
134:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
135:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
136:       "com.google.common.collect.AbstractMapBasedMultimap",
137:       "com.google.common.collect.Lists$Partition",
138:       "com.google.common.collect.Lists",
139:       "com.google.javascript.rhino.Node$SideEffectFlags",
140:       "com.google.common.collect.UnmodifiableListIterator",
141:       "com.google.javascript.rhino.jstype.NullType",
142:       "com.google.common.collect.Lists$TransformingSequentialList",
143:       "com.google.javascript.rhino.ErrorReporter",
144:       "com.google.javascript.rhino.jstype.UnknownType",
145:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
146:       "com.google.javascript.rhino.jstype.ValueType",
147:       "com.google.javascript.rhino.jstype.PropertyMap",
148:       "com.google.javascript.rhino.Token",
149:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
150:       "com.google.common.collect.ObjectArrays",
151:       "com.google.javascript.rhino.jstype.StaticSourceFile",
152:       "com.google.javascript.rhino.jstype.BooleanType",
153:       "com.google.javascript.rhino.jstype.NoObjectType",
154:       "com.google.common.collect.AbstractIterator",
155:       "com.google.javascript.rhino.jstype.FunctionBuilder",
156:       "com.google.javascript.rhino.jstype.JSType$TypePair",
157:       "com.google.common.base.Joiner$MapJoiner",
158:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
159:       "com.google.common.collect.ImmutableList$1",
160:       "com.google.common.collect.MapDifference",
161:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
162:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
163:       "com.google.common.collect.Sets$ImprovedAbstractSet",
164:       "com.google.javascript.rhino.jstype.FunctionType",
165:       "com.google.common.base.Preconditions",
166:       "com.google.common.collect.UnmodifiableIterator",
167:       "com.google.javascript.rhino.JSDocInfo",
168:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
169:       "com.google.javascript.rhino.jstype.Property",
170:       "com.google.common.collect.ImmutableMapValues",
171:       "com.google.common.collect.ImmutableEntry",
172:       "com.google.common.base.Joiner$1",
173:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
174:       "com.google.common.base.Joiner$2",
175:       "com.google.common.collect.ImmutableCollection",
176:       "com.google.common.collect.ImmutableEnumMap",
177:       "com.google.javascript.rhino.jstype.TernaryValue",
178:       "com.google.javascript.rhino.Node$AncestorIterable",
179:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
180:       "com.google.common.collect.Lists$RandomAccessListWrapper",
181:       "com.google.common.collect.ImmutableEnumSet",
182:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
183:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
184:       "com.google.javascript.rhino.jstype.EnumElementType",
185:       "com.google.javascript.rhino.jstype.UnionType",
186:       "com.google.common.base.Objects",
187:       "com.google.javascript.rhino.Node$NumberNode",
188:       "com.google.common.collect.SingletonImmutableList",
189:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
190:       "com.google.common.collect.ImmutableCollection$Builder",
191:       "com.google.javascript.rhino.jstype.StaticSlot",
192:       "com.google.common.collect.Iterators$6",
193:       "com.google.common.collect.BiMap",
194:       "com.google.common.collect.Iterators$7",
195:       "com.google.common.collect.AbstractSetMultimap",
196:       "com.google.common.base.Function",
197:       "com.google.common.collect.ImmutableSet",
198:       "com.google.common.collect.Lists$AbstractListWrapper",
199:       "com.google.common.collect.ImmutableMap",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.AbstractIndexedListIterator",
202:       "com.google.common.collect.Maps$1",
203:       "com.google.javascript.rhino.jstype.EnumType",
204:       "com.google.common.collect.Iterators$1",
205:       "com.google.common.collect.Iterators$2",
206:       "com.google.javascript.rhino.jstype.NamespaceType",
207:       "com.google.common.collect.Iterators$3",
208:       "com.google.common.collect.Sets",
209:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
210:       "com.google.javascript.rhino.Node$ObjectPropListItem",
211:       "com.google.common.collect.Lists$StringAsImmutableList",
212:       "com.google.common.collect.Lists$2",
213:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
214:       "com.google.common.collect.ImmutableList$Builder",
215:       "com.google.common.collect.Lists$1",
216:       "com.google.javascript.rhino.jstype.StaticReference",
217:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
218:       "com.google.common.collect.Multiset",
219:       "com.google.common.collect.AbstractMultimap",
220:       "com.google.common.collect.Multimap",
221:       "com.google.common.collect.Iterators",
222:       "com.google.common.collect.Maps$ImprovedAbstractMap",
223:       "com.google.common.collect.ImmutableBiMap",
224:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
225:       "com.google.common.collect.ImmutableList",
226:       "com.google.common.collect.SingletonImmutableBiMap",
227:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
228:       "com.google.javascript.rhino.jstype.StringType",
229:       "com.google.javascript.rhino.Node$AbstractPropListItem",
230:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
231:       "com.google.javascript.rhino.jstype.TemplatizedType",
232:       "com.google.javascript.rhino.jstype.Visitor",
233:       "com.google.javascript.rhino.jstype.NoResolvedType",
234:       "com.google.javascript.rhino.jstype.JSTypeNative",
235:       "com.google.javascript.rhino.jstype.AllType",
236:       "com.google.common.collect.Maps",
237:       "com.google.common.collect.SetMultimap",
238:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
239:       "com.google.common.collect.Maps$EntryTransformer",
240:       "com.google.javascript.rhino.JSTypeExpression",
241:       "com.google.common.collect.Iterators$MergingIterator"
242:     );
243:   } 
244: 
245:   private static void resetClasses() {
246:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_153_tmp__ESTest_scaffolding.class.getClassLoader()); 
247: 
248:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
249:       "com.google.javascript.rhino.Node",
250:       "com.google.javascript.rhino.Node$NumberNode",
251:       "com.google.javascript.rhino.Node$StringNode",
252:       "com.google.javascript.rhino.Node$AbstractPropListItem",
253:       "com.google.javascript.rhino.Node$ObjectPropListItem",
254:       "com.google.javascript.rhino.Node$IntPropListItem",
255:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
256:       "com.google.javascript.rhino.Node$AncestorIterable",
257:       "com.google.javascript.rhino.Node$NodeMismatch",
258:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
259:       "com.google.javascript.rhino.Node$SideEffectFlags",
260:       "com.google.javascript.rhino.Token",
261:       "com.google.common.base.Preconditions",
262:       "com.google.javascript.rhino.SimpleErrorReporter",
263:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
264:       "com.google.common.base.Joiner",
265:       "com.google.common.base.Joiner$1",
266:       "com.google.common.collect.Collections2",
267:       "com.google.common.base.Joiner$MapJoiner",
268:       "com.google.common.collect.Maps",
269:       "com.google.common.collect.AbstractMultimap",
270:       "com.google.common.collect.AbstractMapBasedMultimap",
271:       "com.google.common.collect.AbstractSetMultimap",
272:       "com.google.common.collect.LinkedHashMultimap",
273:       "com.google.common.collect.AbstractMapEntry",
274:       "com.google.common.collect.ImmutableEntry",
275:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
276:       "com.google.common.collect.AbstractListMultimap",
277:       "com.google.common.collect.ArrayListMultimap",
278:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
279:       "com.google.common.collect.ImmutableCollection",
280:       "com.google.common.collect.RegularImmutableList",
281:       "com.google.common.collect.ObjectArrays",
282:       "com.google.common.collect.ImmutableList",
283:       "com.google.javascript.rhino.jstype.ModificationVisitor",
284:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
285:       "com.google.common.collect.ImmutableCollection$Builder",
286:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
287:       "com.google.common.collect.ImmutableList$Builder",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.Iterators$1",
291:       "com.google.common.collect.Iterators$2",
292:       "com.google.common.collect.Iterators",
293:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
294:       "com.google.javascript.rhino.jstype.JSType$1",
295:       "com.google.javascript.rhino.jstype.JSType",
296:       "com.google.javascript.rhino.jstype.ObjectType",
297:       "com.google.javascript.rhino.jstype.ProxyObjectType",
298:       "com.google.javascript.rhino.jstype.TemplateType",
299:       "com.google.javascript.rhino.jstype.ValueType",
300:       "com.google.javascript.rhino.jstype.BooleanType",
301:       "com.google.javascript.rhino.jstype.NullType",
302:       "com.google.javascript.rhino.jstype.NumberType",
303:       "com.google.javascript.rhino.jstype.StringType",
304:       "com.google.javascript.rhino.jstype.UnknownType",
305:       "com.google.javascript.rhino.jstype.VoidType",
306:       "com.google.javascript.rhino.jstype.AllType",
307:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ImmutableBiMap",
310:       "com.google.common.collect.EmptyImmutableBiMap",
311:       "com.google.javascript.rhino.jstype.PropertyMap$1",
312:       "com.google.javascript.rhino.jstype.PropertyMap",
313:       "com.google.javascript.rhino.jstype.FunctionType",
314:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
315:       "com.google.javascript.rhino.jstype.ArrowType",
316:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
317:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
318:       "com.google.javascript.rhino.jstype.InstanceObjectType",
319:       "com.google.javascript.rhino.jstype.Property",
320:       "com.google.common.collect.Lists",
321:       "com.google.javascript.rhino.jstype.NoObjectType",
322:       "com.google.javascript.rhino.jstype.NoType",
323:       "com.google.javascript.rhino.jstype.NoResolvedType",
324:       "com.google.common.collect.SingletonImmutableList",
325:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
326:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
327:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
328:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
329:       "com.google.javascript.rhino.jstype.UnionType",
330:       "com.google.javascript.rhino.jstype.FunctionBuilder",
331:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
332:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
333:       "com.google.javascript.rhino.jstype.NamedType",
334:       "com.google.common.base.Objects",
335:       "com.google.javascript.rhino.jstype.EnumType",
336:       "com.google.javascript.rhino.jstype.EnumElementType",
337:       "com.google.javascript.rhino.jstype.TemplatizedType",
338:       "com.google.common.collect.Iterables",
339:       "com.google.javascript.rhino.JSDocInfo",
340:       "com.google.javascript.rhino.InputId",
341:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
342:       "com.google.common.collect.Sets",
343:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
344:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
345:       "com.google.javascript.rhino.Node$AncestorIterable$1",
346:       "com.google.javascript.rhino.JSTypeExpression",
347:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
348:       "com.google.javascript.rhino.JSDocInfo$Marker",
349:       "com.google.common.collect.ImmutableSet",
350:       "com.google.common.collect.EmptyImmutableSet",
351:       "com.google.common.collect.AbstractIndexedListIterator",
352:       "com.google.common.collect.Iterators$11",
353:       "com.google.common.collect.Iterators$12",
354:       "com.google.javascript.rhino.jstype.JSType$TypePair",
355:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
356:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
357:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
358:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
359:       "com.google.javascript.rhino.jstype.TernaryValue",
360:       "com.google.javascript.rhino.jstype.JSType$2",
361:       "com.google.common.collect.Sets$ImprovedAbstractSet",
362:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
363:       "com.google.common.collect.Hashing",
364:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
365:       "com.google.common.collect.ImmutableList$1"
366:     );
367:   }
368: }

[MASTER] 13:21:50.380 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = new Node(0);
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertNotNull(node0);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);

Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertNotNull(node_FileLevelJsDocBuilder0);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);

boolean boolean0 = node0.getBooleanProp(57);
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(boolean0);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);

boolean boolean1 = node0.isCall();
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(boolean1);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertTrue(boolean1 == boolean0);

Node node1 = Node.newString("Xp&)a%Q~zPh~g+<S]", (-1039), 32);
assertFalse(node1.isAnd());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isComma());
assertFalse(node1.isBreak());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isCast());
assertFalse(node1.isExprResult());
assertFalse(node1.isLabelName());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDec());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNumber());
assertFalse(node1.hasOneChild());
assertFalse(node1.isScript());
assertFalse(node1.isContinue());
assertFalse(node1.isCase());
assertFalse(node1.hasMoreThanOneChild());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isIf());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.isDefaultCase());
assertEquals(0, node1.getChildCount());
assertEquals(40, node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isVoid());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isCatch());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertTrue(node1.isString());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isLabel());
assertFalse(node1.isReturn());
assertFalse(node1.isSwitch());
assertFalse(node1.isTypeOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isOr());
assertFalse(node1.isEmpty());
assertFalse(node1.isAdd());
assertNotNull(node1);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(57, Node.LAST_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node1.equals((Object)node0));

Iterable<Node> iterable0 = node1.children();
assertFalse(node1.isAnd());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isComma());
assertFalse(node1.isBreak());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isCast());
assertFalse(node1.isExprResult());
assertFalse(node1.isLabelName());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDec());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNumber());
assertFalse(node1.hasOneChild());
assertFalse(node1.isScript());
assertFalse(node1.isContinue());
assertFalse(node1.isCase());
assertFalse(node1.hasMoreThanOneChild());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isIf());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.isDefaultCase());
assertEquals(0, node1.getChildCount());
assertEquals(40, node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isVoid());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isCatch());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertTrue(node1.isString());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isLabel());
assertFalse(node1.isReturn());
assertFalse(node1.isSwitch());
assertFalse(node1.isTypeOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isOr());
assertFalse(node1.isEmpty());
assertFalse(node1.isAdd());
assertFalse(iterable0.contains(node0));
assertNotNull(iterable0);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(57, Node.LAST_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node1.equals((Object)node0));

Node node2 = Node.newNumber((double) 1);
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isGetProp());
assertFalse(node2.hasOneChild());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isHook());
assertFalse(node2.isThis());
assertFalse(node2.isTypeOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isComma());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isExprResult());
assertFalse(node2.isBreak());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isDo());
assertEquals(39, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertFalse(node2.isAdd());
assertFalse(node2.isBlock());
assertFalse(node2.isCase());
assertFalse(node2.isNew());
assertFalse(node2.isLabelName());
assertFalse(node2.isGetterDef());
assertFalse(node2.isStringKey());
assertFalse(node2.isVar());
assertFalse(node2.isParamList());
assertFalse(node2.isSwitch());
assertFalse(node2.isArrayLit());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isRegExp());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isDebugger());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isEmpty());
assertFalse(node2.isDelProp());
assertFalse(node2.isFor());
assertFalse(node2.isName());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isVoid());
assertFalse(node2.isContinue());
assertFalse(node2.isWhile());
assertFalse(node2.isString());
assertFalse(node2.isReturn());
assertFalse(node2.isIn());
assertFalse(node2.isInc());
assertTrue(node2.isNumber());
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isCast());
assertNotNull(node2);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

boolean boolean2 = node0.isContinue();
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(boolean2);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);

JSDocInfo jSDocInfo0 = node2.getJSDocInfo();
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isGetProp());
assertFalse(node2.hasOneChild());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isHook());
assertFalse(node2.isThis());
assertFalse(node2.isTypeOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isComma());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isExprResult());
assertFalse(node2.isBreak());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isDo());
assertEquals(39, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertFalse(node2.isAdd());
assertFalse(node2.isBlock());
assertFalse(node2.isCase());
assertFalse(node2.isNew());
assertFalse(node2.isLabelName());
assertFalse(node2.isGetterDef());
assertFalse(node2.isStringKey());
assertFalse(node2.isVar());
assertFalse(node2.isParamList());
assertFalse(node2.isSwitch());
assertFalse(node2.isArrayLit());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isRegExp());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isDebugger());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isEmpty());
assertFalse(node2.isDelProp());
assertFalse(node2.isFor());
assertFalse(node2.isName());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isVoid());
assertFalse(node2.isContinue());
assertFalse(node2.isWhile());
assertFalse(node2.isString());
assertFalse(node2.isReturn());
assertFalse(node2.isIn());
assertFalse(node2.isInc());
assertTrue(node2.isNumber());
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isCast());
assertNull(jSDocInfo0);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

Node node3 = Node.newString(30, "com.google.common.collect.Lists$RandomAccessPartition", 4096, 2244);
assertFalse(node3.isObjectLit());
assertFalse(node3.isWith());
assertFalse(node3.isAnd());
assertFalse(node3.isNot());
assertFalse(node3.isGetProp());
assertFalse(node3.hasOneChild());
assertFalse(node3.isScript());
assertFalse(node3.isFalse());
assertFalse(node3.isThrow());
assertTrue(node3.isNew());
assertFalse(node3.isCast());
assertFalse(node3.isNumber());
assertFalse(node3.isSwitch());
assertFalse(node3.isLabelName());
assertEquals(30, node3.getType());
assertFalse(node3.isWhile());
assertFalse(node3.isString());
assertFalse(node3.isOr());
assertFalse(node3.isReturn());
assertFalse(node3.isLabel());
assertFalse(node3.isAdd());
assertFalse(node3.isAssignAdd());
assertFalse(node3.isDo());
assertFalse(node3.isGetElem());
assertFalse(node3.isEmpty());
assertFalse(node3.isName());
assertFalse(node3.isCall());
assertFalse(node3.hasChildren());
assertFalse(node3.isDec());
assertFalse(node3.isNull());
assertFalse(node3.isTypeOf());
assertFalse(node3.isComma());
assertFalse(node3.isAssign());
assertFalse(node3.isExprResult());
assertFalse(node3.isTrue());
assertFalse(node3.isVoid());
assertFalse(node3.isDelProp());
assertFalse(node3.isBreak());
assertFalse(node3.isCatch());
assertEquals(2244, node3.getCharno());
assertEquals(0, node3.getChildCount());
assertFalse(node3.isRegExp());
assertFalse(node3.isDebugger());
assertFalse(node3.isTry());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isSetterDef());
assertFalse(node3.isStringKey());
assertFalse(node3.isGetterDef());
assertFalse(node3.isVar());
assertEquals(4096, node3.getLineno());
assertFalse(node3.isFunction());
assertFalse(node3.isParamList());
assertFalse(node3.isArrayLit());
assertFalse(node3.hasMoreThanOneChild());
assertFalse(node3.isContinue());
assertFalse(node3.isIn());
assertFalse(node3.isInc());
assertFalse(node3.isBlock());
assertFalse(node3.isCase());
assertFalse(node3.isFor());
assertEquals(16779460, node3.getSourcePosition());
assertFalse(node3.isHook());
assertFalse(node3.isThis());
assertFalse(node3.isNE());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isIf());
assertNotSame(node3, node1);
assertNotNull(node3);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(57, Node.LAST_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertFalse(node3.equals((Object)node0));
assertFalse(node3.equals((Object)node1));
assertFalse(node3.equals((Object)node2));

node0.setVarArgs(false);
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertFalse(node0.equals((Object)node3));
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));

boolean boolean3 = node2.isEquivalentTo(node1);
assertFalse(node1.isAnd());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isComma());
assertFalse(node1.isBreak());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isCast());
assertFalse(node1.isExprResult());
assertFalse(node1.isLabelName());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDec());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNumber());
assertFalse(node1.hasOneChild());
assertFalse(node1.isScript());
assertFalse(node1.isContinue());
assertFalse(node1.isCase());
assertFalse(node1.hasMoreThanOneChild());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isIf());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.isDefaultCase());
assertEquals(0, node1.getChildCount());
assertEquals(40, node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isVoid());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isCatch());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertTrue(node1.isString());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isLabel());
assertFalse(node1.isReturn());
assertFalse(node1.isSwitch());
assertFalse(node1.isTypeOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isOr());
assertFalse(node1.isEmpty());
assertFalse(node1.isAdd());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isGetProp());
assertFalse(node2.hasOneChild());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isHook());
assertFalse(node2.isThis());
assertFalse(node2.isTypeOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isComma());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isExprResult());
assertFalse(node2.isBreak());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isDo());
assertEquals(39, node2.getType());
assertFalse(node2.hasMoreThanOneChild());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isOr());
assertFalse(node2.isAdd());
assertFalse(node2.isBlock());
assertFalse(node2.isCase());
assertFalse(node2.isNew());
assertFalse(node2.isLabelName());
assertFalse(node2.isGetterDef());
assertFalse(node2.isStringKey());
assertFalse(node2.isVar());
assertFalse(node2.isParamList());
assertFalse(node2.isSwitch());
assertFalse(node2.isArrayLit());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isRegExp());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isDebugger());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isEmpty());
assertFalse(node2.isDelProp());
assertFalse(node2.isFor());
assertFalse(node2.isName());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isVoid());
assertFalse(node2.isContinue());
assertFalse(node2.isWhile());
assertFalse(node2.isString());
assertFalse(node2.isReturn());
assertFalse(node2.isIn());
assertFalse(node2.isInc());
assertTrue(node2.isNumber());
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertEquals((-1), node2.getSourcePosition());
assertFalse(node2.isCast());
assertNotSame(node1, node3);
assertFalse(boolean3);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(57, Node.LAST_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node1.equals((Object)node0));
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node3));
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node3));
assertFalse(node2.equals((Object)node1));
assertTrue(boolean3 == boolean2);
assertTrue(boolean3 == boolean1);
assertTrue(boolean3 == boolean0);

boolean boolean4 = node1.isWhile();
assertFalse(node1.isAnd());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isComma());
assertFalse(node1.isBreak());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isCast());
assertFalse(node1.isExprResult());
assertFalse(node1.isLabelName());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDec());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isNumber());
assertFalse(node1.hasOneChild());
assertFalse(node1.isScript());
assertFalse(node1.isContinue());
assertFalse(node1.isCase());
assertFalse(node1.hasMoreThanOneChild());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isIf());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.isDefaultCase());
assertEquals(0, node1.getChildCount());
assertEquals(40, node1.getType());
assertFalse(node1.isTrue());
assertFalse(node1.isVoid());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isCatch());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isDebugger());
assertFalse(node1.isTry());
assertTrue(node1.isString());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isLabel());
assertFalse(node1.isReturn());
assertFalse(node1.isSwitch());
assertFalse(node1.isTypeOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isVar());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isOr());
assertFalse(node1.isEmpty());
assertFalse(node1.isAdd());
assertNotSame(node1, node3);
assertFalse(boolean4);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(57, Node.LAST_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node1.equals((Object)node0));
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node3));
assertTrue(boolean4 == boolean0);
assertTrue(boolean4 == boolean3);
assertTrue(boolean4 == boolean2);
assertTrue(boolean4 == boolean1);

Node node4 = node0.cloneNode();
assertFalse(node0.isTry());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTrue());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isEmpty());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isParamList());
assertFalse(node0.isFunction());
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isWhile());
assertFalse(node0.isString());
assertFalse(node0.isDo());
assertFalse(node0.isGetProp());
assertFalse(node0.isAdd());
assertFalse(node0.isReturn());
assertFalse(node0.isOr());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isBreak());
assertFalse(node0.hasChildren());
assertFalse(node0.isName());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertEquals(0, node0.getType());
assertFalse(node0.hasOneChild());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isObjectLit());
assertFalse(node0.isScript());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAnd());
assertFalse(node0.isLabelName());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isCast());
assertFalse(node0.isHook());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isStringKey());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isSetterDef());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isThis());
assertFalse(node0.isNE());
assertFalse(node0.isWith());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node4.isNot());
assertFalse(node4.isWith());
assertFalse(node4.isAnd());
assertFalse(node4.isObjectLit());
assertFalse(node4.isGetProp());
assertFalse(node4.isScript());
assertFalse(node4.hasOneChild());
assertFalse(node4.isAssign());
assertFalse(node4.isGetElem());
assertFalse(node4.isTypeOf());
assertFalse(node4.isHook());
assertFalse(node4.isThis());
assertFalse(node4.hasChildren());
assertFalse(node4.isComma());
assertFalse(node4.isDec());
assertEquals(0, node4.getType());
assertFalse(node4.isExprResult());
assertFalse(node4.isInstanceOf());
assertFalse(node4.isBreak());
assertEquals((-1), node4.getLineno());
assertFalse(node4.isCase());
assertFalse(node4.isDo());
assertFalse(node4.hasMoreThanOneChild());
assertEquals((-1), node4.getCharno());
assertFalse(node4.isLabel());
assertFalse(node4.isAssignAdd());
assertFalse(node4.isOr());
assertFalse(node4.isAdd());
assertFalse(node4.isBlock());
assertFalse(node4.isNew());
assertFalse(node4.isLabelName());
assertFalse(node4.isStringKey());
assertFalse(node4.isVar());
assertFalse(node4.isNumber());
assertFalse(node4.isGetterDef());
assertFalse(node4.isParamList());
assertFalse(node4.isArrayLit());
assertFalse(node4.isSwitch());
assertFalse(node4.isCatch());
assertFalse(node4.isRegExp());
assertFalse(node4.isFunction());
assertFalse(node4.isDebugger());
assertEquals(0, node4.getChildCount());
assertFalse(node4.isTry());
assertFalse(node4.isDefaultCase());
assertFalse(node4.isSetterDef());
assertFalse(node4.isFor());
assertFalse(node4.isEmpty());
assertFalse(node4.isName());
assertFalse(node4.isCall());
assertFalse(node4.isIf());
assertFalse(node4.isNull());
assertFalse(node4.isNE());
assertFalse(node4.isTrue());
assertFalse(node4.isDelProp());
assertFalse(node4.isVoid());
assertFalse(node4.isWhile());
assertFalse(node4.isString());
assertFalse(node4.isContinue());
assertFalse(node4.isReturn());
assertFalse(node4.isIn());
assertFalse(node4.isInc());
assertFalse(node4.isFalse());
assertFalse(node4.isThrow());
assertFalse(node4.isCast());
assertEquals((-1), node4.getSourcePosition());
assertNotSame(node0, node4);
assertNotSame(node4, node0);
assertNotNull(node4);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(57, Node.LAST_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node0.equals((Object)node3));
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));
assertFalse(node4.equals((Object)node0));
assertFalse(node4.equals((Object)node3));
assertFalse(node4.equals((Object)node1));
assertFalse(node4.equals((Object)node2));


[MASTER] 13:22:14.794 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:15.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:15.412 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:15.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:16.725 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:16.968 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:17.172 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:17.392 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:17.601 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:17.805 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:18.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:18.195 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:18.397 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:18.660 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:18.857 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:19.043 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:19.247 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:19.478 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:19.694 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:19.877 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:20.076 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:20.311 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:20.596 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:20.795 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:20.992 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:21.190 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:21.439 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:21.664 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:21.858 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:22.041 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:22.847 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:23.072 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:23.274 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:23.471 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:23.664 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:23.872 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:24.060 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:24.244 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:24.447 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:24.767 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:22:24.968 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-100/tests/29
* Done!

* Computation finished
