* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 8021
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 1762246253
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 13:03:48.876 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 13:08:02.601 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 13:12:05.491 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1871: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1870: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 2551,1309,0| Number of FF evals: 2805
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1872: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1867: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1866: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 32,0,0| Number of FF evals: 309
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 1318,575,0| Number of FF evals: 4044
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - true: 98,0,0| Number of FF evals: 556
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 659,0,0| Number of FF evals: 1595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 2146,1913,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 709: 115,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I127 Branch 126 IF_ICMPGE L980 - false: 4,0,0| Number of FF evals: 687
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 2064,1943,118| Number of FF evals: 12450
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 2891,973,0| Number of FF evals: 3899
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 708: 115,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1861: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 707: 115,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - false: 2,0,0| Number of FF evals: 1591
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1860: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 219,0,0| Number of FF evals: 1250
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 704: 115,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 3690,2659,0| Number of FF evals: 8821
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 7661,6609,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 12967,10760,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 699: 115,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - true: 46,0,0| Number of FF evals: 1237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 698: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - false: 151,0,0| Number of FF evals: 456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 853,0,0| Number of FF evals: 609
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 126,0,0| Number of FF evals: 649
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1958: 126,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 382,0,0| Number of FF evals: 450
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1959: 126,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 4325,2485,0| Number of FF evals: 4827
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - false: 36,0,0| Number of FF evals: 183
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 5070,0,0| Number of FF evals: 1677
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 1665,1517,0| Number of FF evals: 9779
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 609,0,0| Number of FF evals: 282
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 296,0,0| Number of FF evals: 1509
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 58,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 153,0,0| Number of FF evals: 428
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 8394,7534,33| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I3 Branch 101 IFNONNULL L798 - true: 63,0,0| Number of FF evals: 385
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 720,498,0| Number of FF evals: 7487
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 2015,1332,654| Number of FF evals: 3199
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 135,0,0| Number of FF evals: 499
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 12661,12340,41| Number of FF evals: 12354
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 126,0,0| Number of FF evals: 417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 277,2,0| Number of FF evals: 1319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: Line 223: 726,0,0| Number of FF evals: 354
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 1745,0,0| Number of FF evals: 1580
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 335,0,0| Number of FF evals: 822
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: Line 1847: 726,0,0| Number of FF evals: 356
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 276,0,0| Number of FF evals: 490
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 1244,0,0| Number of FF evals: 971
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 5487,4669,0| Number of FF evals: 3952
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 909,0,0| Number of FF evals: 1148
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 5680,427,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 7491,6332,96| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 32,0,0| Number of FF evals: 506
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 302,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 302,0,0| Number of FF evals: 364
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 2047,666,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 156,84,12| Number of FF evals: 2659
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 512,290,0| Number of FF evals: 5435
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: Line 2375: 3484,0,0| Number of FF evals: 1071
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 5070,0,0| Number of FF evals: 1426
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 126,0,0| Number of FF evals: 651
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 1924,1305,0| Number of FF evals: 5121
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 4989,1571,0| Number of FF evals: 2629
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - false: 302,0,0| Number of FF evals: 1157
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 988,703,271| Number of FF evals: 3879
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - false: 88,0,0| Number of FF evals: 250
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: root-Branch: 726,0,0| Number of FF evals: 416
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - true: 10,0,0| Number of FF evals: 653
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 302,0,0| Number of FF evals: 236
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 1387,0,0| Number of FF evals: 869
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 302,0,0| Number of FF evals: 231
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 1041,816,0| Number of FF evals: 8647
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - true: 211,0,0| Number of FF evals: 762
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 1320,185,0| Number of FF evals: 2280
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1827: 2642,0,0| Number of FF evals: 858
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1826: 2642,0,0| Number of FF evals: 858
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - true: 4182,0,0| Number of FF evals: 1278
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 2642,2405,0| Number of FF evals: 11242
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 126,0,0| Number of FF evals: 678
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 6020,4009,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 2018,100,0| Number of FF evals: 1975
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 4182,0,0| Number of FF evals: 1234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - true: 46,0,0| Number of FF evals: 545
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 6133,4440,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: Line 2331: 46,0,0| Number of FF evals: 72
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 4706,2487,0| Number of FF evals: 3217
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: root-Branch: 211,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - true: 126,0,0| Number of FF evals: 686
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - false: 5280,4140,1325| Number of FF evals: 12341
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 640: 46,0,0| Number of FF evals: 55
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 25698,23479,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 8116,6968,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 4706,2487,0| Number of FF evals: 3217
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 4975,3925,103| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - true: 853,0,0| Number of FF evals: 1089
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 13414,12972,371| Number of FF evals: 12481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - false: 46,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 15203,13899,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 126,0,0| Number of FF evals: 193
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 7821,6734,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 53160,47348,36421| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 137,0,0| Number of FF evals: 500
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 2481,0,0| Number of FF evals: 824
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 53160,47348,36437| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 2177,1955,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 2158,0,0| Number of FF evals: 934
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 624,399,2| Number of FF evals: 6614
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 806,342,0| Number of FF evals: 2382
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 108,0,0| Number of FF evals: 605
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 1169,936,30| Number of FF evals: 11404
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - true: 46,0,0| Number of FF evals: 449
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AbstractPropListItem.getNext()Lcom/google/javascript/rhino/Node$PropListItem;: Line 286: 46,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 435,9,0| Number of FF evals: 1246
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLineno()I: Line 1140: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 126,0,0| Number of FF evals: 681
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 12891,12168,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 46,0,0| Number of FF evals: 285
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - true: 2976,0,0| Number of FF evals: 1257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 302,0,0| Number of FF evals: 186
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 134,0,0| Number of FF evals: 388
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 5208,298,0| Number of FF evals: 2986
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 11621,7618,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 2888,2401,0| Number of FF evals: 12279
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 32,0,0| Number of FF evals: 708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 4711,0,0| Number of FF evals: 1411
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 5087,1466,0| Number of FF evals: 4234
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 232: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 3045,1503,0| Number of FF evals: 3765
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 2176,1951,7| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 3836,0,0| Number of FF evals: 1134
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: Line 1258: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 525,372,157| Number of FF evals: 3040
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 2238,2016,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: root-Branch: 3836,0,0| Number of FF evals: 1338
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 5070,0,0| Number of FF evals: 1410
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: root-Branch: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - false: 248,95,0| Number of FF evals: 2013
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I94 Branch 54 IFNONNULL L488 - true: 33,0,0| Number of FF evals: 286
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - true: 4,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 4211,4069,486| Number of FF evals: 12483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 267,104,0| Number of FF evals: 2465
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: Line 2161: 1537,0,0| Number of FF evals: 599
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 296,0,0| Number of FF evals: 1509
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 15159,14320,0| Number of FF evals: 12444
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 1387,0,0| Number of FF evals: 542
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 5026,114,0| Number of FF evals: 1992
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 4234,3853,586| Number of FF evals: 12483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - false: 1,0,0| Number of FF evals: 74
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 974,0,0| Number of FF evals: 421
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 1387,0,0| Number of FF evals: 569
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 4711,0,0| Number of FF evals: 1475
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 653,0,0| Number of FF evals: 1352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 17,0,0| Number of FF evals: 509
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: Line 2223: 211,0,0| Number of FF evals: 138
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1271: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 274,0,0| Number of FF evals: 490
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1270: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1273: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 3836,0,0| Number of FF evals: 1408
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1272: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 25698,23479,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: Line 2407: 5443,0,0| Number of FF evals: 1469
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 2325,2103,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1274: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 25698,23479,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 7216,2651,0| Number of FF evals: 4332
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 872: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 3590,2311,0| Number of FF evals: 4183
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 8667,7388,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: Line 2239: 3662,0,0| Number of FF evals: 1088
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 46,0,0| Number of FF evals: 477
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - false: 4663,2417,0| Number of FF evals: 3308
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 1006,663,0| Number of FF evals: 5952
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 25436,23217,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 5069,3185,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 4706,2487,0| Number of FF evals: 3304
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 884: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 4706,2487,0| Number of FF evals: 3305
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 883: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - false: 1537,0,0| Number of FF evals: 1021
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 878: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 877: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 302,0,0| Number of FF evals: 163
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 25436,23217,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: Line 873: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: root-Branch: 126,0,0| Number of FF evals: 257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: root-Branch: 126,0,0| Number of FF evals: 738
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - true: 501,0,0| Number of FF evals: 721
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 2481,0,0| Number of FF evals: 979
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - true: 302,0,0| Number of FF evals: 1065
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 53160,47348,36402| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 2412,1311,0| Number of FF evals: 3073
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 16735,12809,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 122,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 609,0,0| Number of FF evals: 320
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 7628,6388,0| Number of FF evals: 10641
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 974,0,0| Number of FF evals: 811
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - false: 126,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 2412,1311,0| Number of FF evals: 3073
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I6 Branch 165 IF_ICMPNE L1517 - false: 32,0,0| Number of FF evals: 1215
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 440,0,0| Number of FF evals: 1366
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 4711,0,0| Number of FF evals: 1337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 960,600,0| Number of FF evals: 5476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 4711,0,0| Number of FF evals: 1337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - true: 126,0,0| Number of FF evals: 616
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 4711,0,0| Number of FF evals: 1337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 2227,2005,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 31100,26887,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: root-Branch: 126,0,0| Number of FF evals: 306
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 659,0,0| Number of FF evals: 1598
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 2481,0,0| Number of FF evals: 796
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 30,0,0| Number of FF evals: 166
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - true: 126,0,0| Number of FF evals: 909
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - false: 832,275,0| Number of FF evals: 2584
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: Line 2427: 1836,0,0| Number of FF evals: 663
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 1387,0,0| Number of FF evals: 708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 8360,7501,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 2577,2161,0| Number of FF evals: 5999
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 3061,2216,0| Number of FF evals: 4075
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 211,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 2767,2422,0| Number of FF evals: 7433
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 211,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - true: 65,0,0| Number of FF evals: 377
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 1134,577,0| Number of FF evals: 4052
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - true: 1537,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AbstractPropListItem.getNext()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 46,0,0| Number of FF evals: 1070
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 622,0,0| Number of FF evals: 356
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1039: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 46,0,0| Number of FF evals: 291
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 2193,1971,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1032: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1033: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1832: 2642,0,0| Number of FF evals: 858
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 501,0,0| Number of FF evals: 306
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1034: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 2213,1988,13| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 126,0,0| Number of FF evals: 603
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: Line 2279: 5254,0,0| Number of FF evals: 1462
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - false: 2,0,0| Number of FF evals: 1699
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 553,0,0| Number of FF evals: 958
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1029: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: Line 2135: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 181,0,0| Number of FF evals: 260
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 222,0,0| Number of FF evals: 1424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 626,0,0| Number of FF evals: 1440
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 9474,8260,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - false: 16,0,0| Number of FF evals: 504
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: Line 2235: 853,0,0| Number of FF evals: 395
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 377,305,131| Number of FF evals: 4350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 46,0,0| Number of FF evals: 287
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - true: 112,0,0| Number of FF evals: 252
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 2249,1751,69| Number of FF evals: 12482
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 8845,7852,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 2570,412,0| Number of FF evals: 2436
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 7950,7202,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 2249,1751,69| Number of FF evals: 12482
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: Line 2166: 853,0,0| Number of FF evals: 368
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 2417,2254,6| Number of FF evals: 12450
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 148,0,0| Number of FF evals: 461
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 1918,1294,0| Number of FF evals: 4072
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - false: 46,0,0| Number of FF evals: 359
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 7492,7030,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: root-Branch: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: Line 2343: 4003,0,0| Number of FF evals: 1190
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: Line 2403: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 92,0,0| Number of FF evals: 346
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 267,104,0| Number of FF evals: 2464
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 140,0,0| Number of FF evals: 579
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 601: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 604: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 29125,23313,0| Number of FF evals: 6543
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 10235,6770,0| Number of FF evals: 6968
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 488,0,0| Number of FF evals: 973
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 974,0,0| Number of FF evals: 683
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 126,0,0| Number of FF evals: 681
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 300,61,0| Number of FF evals: 2100
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: root-Branch: 46,0,0| Number of FF evals: 659
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - true: 3662,0,0| Number of FF evals: 1295
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 211,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 596: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 239,0,0| Number of FF evals: 1277
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 3127,2959,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 598: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - false: 302,0,0| Number of FF evals: 1067
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 126,0,0| Number of FF evals: 653
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 341,0,0| Number of FF evals: 1276
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 597: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 600: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: Line 2447: 126,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 599: 126,0,0| Number of FF evals: 86
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 341,0,0| Number of FF evals: 1276
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - true: 4,0,0| Number of FF evals: 1196
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 341,0,0| Number of FF evals: 1276
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 6295,3373,0| Number of FF evals: 4010
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 341,0,0| Number of FF evals: 1276
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 12840,8616,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 426,204,0| Number of FF evals: 4732
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 160,84,12| Number of FF evals: 2706
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - true: 1244,0,0| Number of FF evals: 788
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 2225,2000,4| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 3175,2907,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 19,0,0| Number of FF evals: 194
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - false: 2,0,0| Number of FF evals: 784
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1732: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 7454,6464,0| Number of FF evals: 12483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 1387,0,0| Number of FF evals: 548
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 21473,16388,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 389,169,0| Number of FF evals: 2380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 6016,3747,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1720: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 1244,0,0| Number of FF evals: 745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1721: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: Line 1616: 302,0,0| Number of FF evals: 192
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 4711,0,0| Number of FF evals: 1337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 126,0,0| Number of FF evals: 645
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - true: 4003,0,0| Number of FF evals: 1459
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 380,0,0| Number of FF evals: 543
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 609,0,0| Number of FF evals: 456
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - true: 726,0,0| Number of FF evals: 604
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: Line 2181: 211,0,0| Number of FF evals: 137
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - true: 320,0,0| Number of FF evals: 1427
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 459,234,0| Number of FF evals: 4640
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 406,0,0| Number of FF evals: 1131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 211,0,0| Number of FF evals: 570
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 935,0,0| Number of FF evals: 536
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - true: 3484,0,0| Number of FF evals: 1262
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: root-Branch: 46,0,0| Number of FF evals: 352
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: Line 925: 609,0,0| Number of FF evals: 294
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 1700,0,0| Number of FF evals: 1346
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 21369,16871,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(ZZZ)Ljava/lang/String;: Line 944: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 1343,1103,0| Number of FF evals: 4038
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 8881,6655,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 268,0,0| Number of FF evals: 440
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I33 Branch 112 IFNULL L878 - false: 66,0,0| Number of FF evals: 685
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 209,0,0| Number of FF evals: 285
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - false: 10,0,0| Number of FF evals: 654
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1582: 543,275,0| Number of FF evals: 2931
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 126,0,0| Number of FF evals: 665
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1579: 988,824,0| Number of FF evals: 5714
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - true: 1836,0,0| Number of FF evals: 929
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 174: 32,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1944: 6749,937,0| Number of FF evals: 1738
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 211,0,0| Number of FF evals: 149
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: Line 2355: 126,0,0| Number of FF evals: 106
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 530,0,0| Number of FF evals: 758
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 6827,5868,0| Number of FF evals: 12483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 559,0,0| Number of FF evals: 961
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: Line 2351: 974,0,0| Number of FF evals: 417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - false: 22,0,0| Number of FF evals: 417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 1001,692,0| Number of FF evals: 4462
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 7363,6236,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 211,0,0| Number of FF evals: 388
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 5363,4223,1325| Number of FF evals: 12453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - false: 1537,0,0| Number of FF evals: 800
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 2869,1251,0| Number of FF evals: 3953
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 2481,0,0| Number of FF evals: 1118
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 2152,1154,0| Number of FF evals: 3074
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 32,0,0| Number of FF evals: 237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 514,0,0| Number of FF evals: 1310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 46,0,0| Number of FF evals: 70
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 29,0,0| Number of FF evals: 177
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 12731,10014,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - false: 46,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 3806,2958,0| Number of FF evals: 11609
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 53160,47348,36415| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 17376,15157,163| Number of FF evals: 8564
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 211,0,0| Number of FF evals: 301
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 211,0,0| Number of FF evals: 224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 8637,7763,262| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 65,0,0| Number of FF evals: 541
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 2367,2211,0| Number of FF evals: 12417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 5430,2010,0| Number of FF evals: 4708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 139,0,0| Number of FF evals: 466
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 1665,1509,0| Number of FF evals: 9746
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 853,0,0| Number of FF evals: 388
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 7163,6147,0| Number of FF evals: 10431
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - false: 5280,4140,1325| Number of FF evals: 12341
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 126,0,0| Number of FF evals: 629
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 1244,0,0| Number of FF evals: 493
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - true: 46,0,0| Number of FF evals: 353
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 176,0,0| Number of FF evals: 955
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 1387,0,0| Number of FF evals: 681
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: I4 Branch 142 IF_ICMPNE L1209 - false: 46,0,0| Number of FF evals: 1434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: I4 Branch 142 IF_ICMPNE L1209 - true: 46,0,0| Number of FF evals: 1082
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 5877,5657,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1943: 6749,937,0| Number of FF evals: 1738
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 126,0,0| Number of FF evals: 141
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 16804,14941,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: root-Branch: 46,0,0| Number of FF evals: 108
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 3590,2311,0| Number of FF evals: 4132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 1387,0,0| Number of FF evals: 574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: Line 2275: 211,0,0| Number of FF evals: 141
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 109,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I26 Branch 83 IFNONNULL L671 - true: 86,0,0| Number of FF evals: 181
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: Line 2431: 126,0,0| Number of FF evals: 83
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 145,0,0| Number of FF evals: 561
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: Line 2267: 501,0,0| Number of FF evals: 235
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 4505,3955,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 4505,3955,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1015: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - true: 46,0,0| Number of FF evals: 1698
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 46,0,0| Number of FF evals: 124
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 2481,0,0| Number of FF evals: 796
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1017: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 7501,7039,9| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - false: 34,0,0| Number of FF evals: 1203
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1016: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1024: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1858: 609,0,0| Number of FF evals: 314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1025: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 211,0,0| Number of FF evals: 356
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - false: 46,0,0| Number of FF evals: 367
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 3511,2275,0| Number of FF evals: 4183
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 126,0,0| Number of FF evals: 82
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 2477,1446,0| Number of FF evals: 3829
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: root-Branch: 46,0,0| Number of FF evals: 672
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - false: 8,0,0| Number of FF evals: 635
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 126,0,0| Number of FF evals: 623
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1646: 1537,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 511,390,92| Number of FF evals: 5334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1647: 1537,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - false: 49,0,0| Number of FF evals: 492
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - true: 211,0,0| Number of FF evals: 320
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 263,0,0| Number of FF evals: 462
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: Line 1010: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 235,10,0| Number of FF evals: 1808
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 2092,1971,93| Number of FF evals: 12450
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 16721,14800,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1103: 1109,0,0| Number of FF evals: 486
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: Line 2423: 126,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1650: 1537,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 45 IFNONNULL L421 - true: 37,0,0| Number of FF evals: 233
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 211,0,0| Number of FF evals: 388
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1104: 1109,0,0| Number of FF evals: 486
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 9033,3221,0| Number of FF evals: 2214
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 1463,0,0| Number of FF evals: 1114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 302,0,0| Number of FF evals: 404
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 126,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 2240,1747,21| Number of FF evals: 12482
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 18,0,0| Number of FF evals: 251
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 955,302,0| Number of FF evals: 2615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 1505,1012,21| Number of FF evals: 8108
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 9798,8271,182| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 380,0,0| Number of FF evals: 527
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 10049,7922,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 380,0,0| Number of FF evals: 527
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 609,0,0| Number of FF evals: 888
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - false: 1537,0,0| Number of FF evals: 633
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 211,0,0| Number of FF evals: 408
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 7770,5649,104| Number of FF evals: 6025
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - false: 609,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - false: 1109,0,0| Number of FF evals: 1109
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - false: 320,0,0| Number of FF evals: 1427
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 1709,0,0| Number of FF evals: 705
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 8452,7587,86| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - false: 399,0,0| Number of FF evals: 481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 2345,642,0| Number of FF evals: 2357
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - false: 115,0,0| Number of FF evals: 227
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 46,0,0| Number of FF evals: 76
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 609,0,0| Number of FF evals: 310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 211,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: Line 2124: 126,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 248,95,0| Number of FF evals: 2027
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 1476,1347,196| Number of FF evals: 9958
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 1772,1274,69| Number of FF evals: 9708
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - false: 221,92,43| Number of FF evals: 1858
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 503,0,0| Number of FF evals: 529
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLineno()I: root-Branch: 46,0,0| Number of FF evals: 2279
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 238,0,0| Number of FF evals: 1311
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.wasEmptyNode()Z: root-Branch: 726,0,0| Number of FF evals: 695
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - false: 35,0,0| Number of FF evals: 195
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 6944,3975,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 21966,19971,104| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 21966,19971,105| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 2410,2179,99| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 2511,2355,0| Number of FF evals: 12417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 5928,5708,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: Line 2147: 126,0,0| Number of FF evals: 83
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - true: 5,0,0| Number of FF evals: 1210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 7396,6265,29| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLength()I: root-Branch: 1109,0,0| Number of FF evals: 678
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: Line 2076: 211,0,0| Number of FF evals: 137
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 511,390,92| Number of FF evals: 5334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 531: 2318,0,0| Number of FF evals: 795
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: Line 530: 2318,0,0| Number of FF evals: 795
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 2481,0,0| Number of FF evals: 1158
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 18430,14473,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 18429,14529,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 4003,0,0| Number of FF evals: 1170
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 1528,1285,0| Number of FF evals: 5816
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - true: 46,0,0| Number of FF evals: 672
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 179,0,0| Number of FF evals: 385
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 2205,738,0| Number of FF evals: 2214
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 633,151,2| Number of FF evals: 2579
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1128: 46,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1127: 46,0,0| Number of FF evals: 79
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 55,0,0| Number of FF evals: 295
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 126,0,0| Number of FF evals: 673
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 333,72,0| Number of FF evals: 2098
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 313,80,0| Number of FF evals: 2820
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 302,0,0| Number of FF evals: 330
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 5106,4482,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 1083,858,0| Number of FF evals: 9534
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - false: 2,0,0| Number of FF evals: 1701
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 622: 35,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: Line 1137: 126,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 2823,2548,285| Number of FF evals: 10675
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: Line 1136: 126,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 501,0,0| Number of FF evals: 235
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 625: 36,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 626: 36,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 1918,1294,0| Number of FF evals: 4021
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 627: 36,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 459,234,2| Number of FF evals: 5079
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 630: 36,0,0| Number of FF evals: 126
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 126,0,0| Number of FF evals: 679
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 659,0,0| Number of FF evals: 1596
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.<init>(ILjava/lang/String;II)V: I11 Branch 285 IF_ACMPNE L202 - false: 339,0,0| Number of FF evals: 592
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 58 IF_ACMPNE L550 - false: 36,0,0| Number of FF evals: 243
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 997: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 21966,19971,104| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I32 Branch 35 IFNONNULL L383 - true: 95,0,0| Number of FF evals: 257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 9033,3221,0| Number of FF evals: 2211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 2280,2058,1| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 21966,19971,103| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: Line 2391: 1244,0,0| Number of FF evals: 517
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 21966,19971,105| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 21966,19971,105| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 9098,3617,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 330,0,0| Number of FF evals: 434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 2147,152,0| Number of FF evals: 1970
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 21966,19971,104| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 1700,0,0| Number of FF evals: 1346
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 21966,19971,103| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - true: 5254,0,0| Number of FF evals: 1741
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 2147,152,0| Number of FF evals: 1970
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 2147,152,0| Number of FF evals: 1970
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 126,0,0| Number of FF evals: 663
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 12048,9518,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 302,0,0| Number of FF evals: 179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - false: 609,0,0| Number of FF evals: 390
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1706: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 126,0,0| Number of FF evals: 83
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 302,0,0| Number of FF evals: 179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 2443,0,0| Number of FF evals: 1351
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1703: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 302,0,0| Number of FF evals: 179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 5684,4797,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1709: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 1006: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1708: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1707: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1713: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1712: 46,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLength()I: Line 1132: 1109,0,0| Number of FF evals: 487
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 5684,4797,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 8396,7103,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 8528,7209,106| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - true: 46,0,0| Number of FF evals: 198
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - false: 853,0,0| Number of FF evals: 798
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 953: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 660: 46,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - false: 155,0,0| Number of FF evals: 250
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 662: 399,0,0| Number of FF evals: 397
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - false: 2642,0,0| Number of FF evals: 1074
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 17170,13195,1| Number of FF evals: 6787
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 11111,6389,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 978: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 9734,9519,87| Number of FF evals: 12481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: Line 970: 2,0,0| Number of FF evals: 64
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: Line 534: 501,0,0| Number of FF evals: 251
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - true: 3836,0,0| Number of FF evals: 1502
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: root-Branch: 6749,937,0| Number of FF evals: 1751
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 5341,4665,779| Number of FF evals: 12483
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 53160,47348,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: Line 1492: 46,0,0| Number of FF evals: 72
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 5070,0,0| Number of FF evals: 1689
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 763,87,26| Number of FF evals: 1823
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 8414,7494,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 15912,14704,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: Line 2323: 2976,0,0| Number of FF evals: 949
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 9687,7856,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 389,169,0| Number of FF evals: 2380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 1387,0,0| Number of FF evals: 869
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 3616,3206,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - true: 551,0,0| Number of FF evals: 557
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 14180,8782,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: Line 912: 1537,0,0| Number of FF evals: 603
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - true: 5443,0,0| Number of FF evals: 1701
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1430: 32,0,0| Number of FF evals: 116
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 4702,3519,347| Number of FF evals: 12452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: Line 2327: 3836,0,0| Number of FF evals: 1134
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - true: 211,0,0| Number of FF evals: 145
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 959,492,0| Number of FF evals: 2630
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 387,0,0| Number of FF evals: 310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 1408,1333,50| Number of FF evals: 9779
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 2158,0,0| Number of FF evals: 740
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 3571,1578,0| Number of FF evals: 3487
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 33 IFNONNULL L379 - true: 30,0,0| Number of FF evals: 160
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: Line 1497: 126,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - false: 115,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 12035,6386,0| Number of FF evals: 10108
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 899,0,0| Number of FF evals: 791
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 450: 3,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 449: 3,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 122,0,0| Number of FF evals: 772
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setType(I)V: root-Branch: 2318,0,0| Number of FF evals: 893
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - true: 2642,0,0| Number of FF evals: 1066
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1149: 2642,0,0| Number of FF evals: 835
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 16072,13786,0| Number of FF evals: 11771
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 341,0,0| Number of FF evals: 1328
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 211,0,0| Number of FF evals: 142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1148: 2642,0,0| Number of FF evals: 835
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 6761,4899,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.wasEmptyNode()Z: Line 1993: 726,0,0| Number of FF evals: 346
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;II)V: Line 451: 3,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 16072,13786,0| Number of FF evals: 11771
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 4954,4341,163| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: Line 2359: 46,0,0| Number of FF evals: 70
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 211,0,0| Number of FF evals: 888
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 3244,0,0| Number of FF evals: 1252
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mergeLineCharNo(II)I: I5 Branch 140 IFGE L1195 - false: 13,0,0| Number of FF evals: 1068
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 763,87,26| Number of FF evals: 1823
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1408: 46,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 4964,4605,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 126,0,0| Number of FF evals: 656
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 439,217,0| Number of FF evals: 4396
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - false: 126,0,0| Number of FF evals: 405
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1411: 46,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 837: 1537,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - false: 126,0,0| Number of FF evals: 404
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 198,0,0| Number of FF evals: 895
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 838: 1537,0,0| Number of FF evals: 610
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 4003,0,0| Number of FF evals: 1164
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: root-Branch: 46,0,0| Number of FF evals: 319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 15671,15160,0| Number of FF evals: 12057
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 29125,23313,0| Number of FF evals: 6544
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 4003,0,0| Number of FF evals: 1164
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildCount()I: Line 1407: 46,0,0| Number of FF evals: 59
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLength(I)V: root-Branch: 126,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1657: 4182,0,0| Number of FF evals: 1211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 126,0,0| Number of FF evals: 679
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1658: 4182,0,0| Number of FF evals: 1211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 253,0,0| Number of FF evals: 598
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1661: 4182,0,0| Number of FF evals: 1211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1662: 4182,0,0| Number of FF evals: 1211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1818: 46,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1116: 3836,0,0| Number of FF evals: 1155
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractLineno(I)I: Line 1209: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1117: 3836,0,0| Number of FF evals: 1155
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1663: 4182,0,0| Number of FF evals: 1211
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1813: 46,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 5142,3141,0| Number of FF evals: 3253
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 176,0,0| Number of FF evals: 470
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 126,0,0| Number of FF evals: 616
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1809: 46,0,0| Number of FF evals: 52
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 53160,47348,0| Number of FF evals: 12476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 2168,1935,30| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 126,0,0| Number of FF evals: 682
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - true: 126,0,0| Number of FF evals: 636
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 15671,15160,0| Number of FF evals: 12057
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 61,0,0| Number of FF evals: 376
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 586,273,67| Number of FF evals: 3387
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 53160,47348,36382| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - false: 22,0,0| Number of FF evals: 420
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 2735,2399,1| Number of FF evals: 12453
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 33,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 126,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: Line 1173: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setCharno(I)V: Line 1172: 46,0,0| Number of FF evals: 57
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - false: 609,0,0| Number of FF evals: 543
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 501,0,0| Number of FF evals: 310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 1244,0,0| Number of FF evals: 505
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 3977,1306,0| Number of FF evals: 2214
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 3197,2179,0| Number of FF evals: 12480
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - false: 3304,192,0| Number of FF evals: 1711
* Search finished after 605s and 305 generations, 173914 statements, best individual has fitness: 3119.0
* Minimizing test suite
[MASTER] 13:15:13.236 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 853
* Number of covered goals: 784
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 83%
* Total number of goals: 714
* Number of covered goals: 591
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 101
* Number of covered goals: 101
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 85%
* Total number of goals: 530
* Number of covered goals: 453
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 4536
* Number of covered goals: 2027
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 233
* Number of covered goals: 211
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 76%
* Total number of goals: 714
* Number of covered goals: 546
* Generated 604 tests with total length 9996
* Resulting test suite's coverage: 75% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:16:20.963 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6795333333333333% of time used, but only 43/604 tests minimized), falling back to using all assertions
[MASTER] 13:16:40.228 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 13:16:50.237 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 10 seconds more than allowed.
[MASTER] 13:17:10.072 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_105_1628255829962/com/google/javascript/rhino/Node_105_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_105_1628255829962/com/google/javascript/rhino/Node_105_tmp__ESTest_scaffolding.java]]
[MASTER] 13:17:10.072 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:17:10.072 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:17:10.083 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 757
[MASTER] 13:17:10.085 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_105_1628255829962/com/google/javascript/rhino/Node_105_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:17:09 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.rhino.Node;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
16: public class Node_105_tmp__ESTest extends Node_105_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       Node node0 = new Node(2066);
21:       assertFalse(node0.isNot());
22:       assertFalse(node0.isWith());
23:       assertFalse(node0.isAnd());
24:       assertFalse(node0.isObjectLit());
25:       assertFalse(node0.hasOneChild());
26:       assertFalse(node0.isScript());
27:       assertFalse(node0.isGetProp());
28:       assertFalse(node0.hasChildren());
29:       assertFalse(node0.isBreak());
30:       assertFalse(node0.isAssign());
31:       assertFalse(node0.isDec());
32:       assertFalse(node0.isTypeOf());
33:       assertFalse(node0.isComma());
34:       assertFalse(node0.isReturn());
35:       assertFalse(node0.isHook());
36:       assertFalse(node0.isThis());
37:       assertFalse(node0.isInstanceOf());
38:       assertEquals((-1), node0.getLineno());
39:       assertFalse(node0.hasMoreThanOneChild());
40:       assertFalse(node0.isExprResult());
41:       assertFalse(node0.isGetElem());
42:       assertFalse(node0.isDo());
43:       assertFalse(node0.isSwitch());
44:       assertEquals((-1), node0.getCharno());
45:       assertFalse(node0.isBlock());
46:       assertFalse(node0.isOr());
47:       assertFalse(node0.isAssignAdd());
48:       assertEquals(2066, node0.getType());
49:       assertFalse(node0.isNew());
50:       assertFalse(node0.isCase());
51:       assertFalse(node0.isAdd());
52:       assertFalse(node0.isGetterDef());
53:       assertFalse(node0.isLabelName());
54:       assertFalse(node0.isNumber());
55:       assertFalse(node0.isParamList());
56:       assertFalse(node0.isStringKey());
57:       assertFalse(node0.isLabel());
58:       assertFalse(node0.isVar());
59:       assertEquals(0, node0.getChildCount());
60:       assertFalse(node0.isArrayLit());
61:       assertFalse(node0.isRegExp());
62:       assertFalse(node0.isFunction());
63:       assertFalse(node0.isDefaultCase());
64:       assertFalse(node0.isTrue());
65:       assertFalse(node0.isDebugger());
66:       assertFalse(node0.isTry());
67:       assertFalse(node0.isEmpty());
68:       assertFalse(node0.isSetterDef());
69:       assertFalse(node0.isDelProp());
70:       assertFalse(node0.isName());
71:       assertFalse(node0.isIf());
72:       assertFalse(node0.isNE());
73:       assertFalse(node0.isFor());
74:       assertFalse(node0.isNull());
75:       assertFalse(node0.isVoid());
76:       assertFalse(node0.isCall());
77:       assertFalse(node0.isCatch());
78:       assertFalse(node0.isString());
79:       assertFalse(node0.isWhile());
80:       assertFalse(node0.isIn());
81:       assertFalse(node0.isInc());
82:       assertFalse(node0.isFalse());
83:       assertFalse(node0.isThrow());
84:       assertEquals((-1), node0.getSourcePosition());
85:       assertFalse(node0.isContinue());
86:       assertFalse(node0.isCast());
87:       assertNotNull(node0);
88:       assertEquals(47, Node.IS_DISPATCHER);
89:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
90:       assertEquals(56, Node.CHANGE_TIME);
91:       assertEquals(29, Node.JSDOC_INFO_PROP);
92:       assertEquals(37, Node.OPT_ARG_NAME);
93:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
94:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
95:       assertEquals(12, Node.COLUMN_BITS);
96:       assertEquals(2, Node.POST_FLAG);
97:       assertEquals(30, Node.VAR_ARGS_NAME);
98:       assertEquals(57, Node.LAST_PROP);
99:       assertEquals(15, Node.NO_SIDE_EFFECTS);
100:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
101:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
102:       assertEquals(49, Node.DIRECT_EVAL);
103:       assertEquals(52, Node.LENGTH);
104:       assertEquals(53, Node.INPUT_ID);
105:       assertEquals(57, Node.REFLECTED_OBJECT);
106:       assertEquals(55, Node.INFERRED_FUNCTION);
107:       assertEquals(8, Node.FLAG_NO_THROWS);
108:       assertEquals(36, Node.QUOTED_PROP);
109:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
110:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
111:       assertEquals(40, Node.ORIGINALNAME_PROP);
112:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
113:       assertEquals(39, Node.EMPTY_BLOCK);
114:       assertEquals(48, Node.DIRECTIVES);
115:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
116:       assertEquals(4095, Node.COLUMN_MASK);
117:       assertEquals(43, Node.IS_CONSTANT_NAME);
118:       assertEquals(1, Node.DECR_FLAG);
119:       assertEquals(32, Node.INCRDECR_PROP);
120:       assertEquals(46, Node.IS_NAMESPACE);
121:       assertEquals(54, Node.SLASH_V);
122:       assertEquals(51, Node.STATIC_SOURCE_FILE);
123:       assertEquals(50, Node.FREE_CALL);
124:       
125:       Node node1 = new Node(1, node0, 152, 0);
126:       assertFalse(node0.isNot());
127:       assertFalse(node0.isWith());
128:       assertFalse(node0.isAnd());
129:       assertFalse(node0.isObjectLit());
130:       assertFalse(node0.hasOneChild());
131:       assertFalse(node0.isScript());
132:       assertFalse(node0.isGetProp());
133:       assertFalse(node0.hasChildren());
134:       assertFalse(node0.isBreak());
135:       assertFalse(node0.isAssign());
136:       assertFalse(node0.isDec());
137:       assertFalse(node0.isTypeOf());
138:       assertFalse(node0.isComma());
139:       assertFalse(node0.isReturn());
140:       assertFalse(node0.isHook());
141:       assertFalse(node0.isThis());
142:       assertFalse(node0.isInstanceOf());
143:       assertEquals((-1), node0.getLineno());
144:       assertFalse(node0.hasMoreThanOneChild());
145:       assertFalse(node0.isExprResult());
146:       assertFalse(node0.isGetElem());
147:       assertFalse(node0.isDo());
148:       assertFalse(node0.isSwitch());
149:       assertEquals((-1), node0.getCharno());
150:       assertFalse(node0.isBlock());
151:       assertFalse(node0.isOr());
152:       assertFalse(node0.isAssignAdd());
153:       assertEquals(2066, node0.getType());
154:       assertFalse(node0.isNew());
155:       assertFalse(node0.isCase());
156:       assertFalse(node0.isAdd());
157:       assertFalse(node0.isGetterDef());
158:       assertFalse(node0.isLabelName());
159:       assertFalse(node0.isNumber());
160:       assertFalse(node0.isParamList());
161:       assertFalse(node0.isStringKey());
162:       assertFalse(node0.isLabel());
163:       assertFalse(node0.isVar());
164:       assertEquals(0, node0.getChildCount());
165:       assertFalse(node0.isArrayLit());
166:       assertFalse(node0.isRegExp());
167:       assertFalse(node0.isFunction());
168:       assertFalse(node0.isDefaultCase());
169:       assertFalse(node0.isTrue());
170:       assertFalse(node0.isDebugger());
171:       assertFalse(node0.isTry());
172:       assertFalse(node0.isEmpty());
173:       assertFalse(node0.isSetterDef());
174:       assertFalse(node0.isDelProp());
175:       assertFalse(node0.isName());
176:       assertFalse(node0.isIf());
177:       assertFalse(node0.isNE());
178:       assertFalse(node0.isFor());
179:       assertFalse(node0.isNull());
180:       assertFalse(node0.isVoid());
181:       assertFalse(node0.isCall());
182:       assertFalse(node0.isCatch());
183:       assertFalse(node0.isString());
184:       assertFalse(node0.isWhile());
185:       assertFalse(node0.isIn());
186:       assertFalse(node0.isInc());
187:       assertFalse(node0.isFalse());
188:       assertFalse(node0.isThrow());
189:       assertEquals((-1), node0.getSourcePosition());
190:       assertFalse(node0.isContinue());
191:       assertFalse(node0.isCast());
192:       assertFalse(node1.isTypeOf());
193:       assertFalse(node1.isNumber());
194:       assertFalse(node1.isAssign());
195:       assertFalse(node1.isLabel());
196:       assertFalse(node1.isOr());
197:       assertFalse(node1.isReturn());
198:       assertFalse(node1.isDec());
199:       assertEquals(622592, node1.getSourcePosition());
200:       assertFalse(node1.isAssignAdd());
201:       assertFalse(node1.isDo());
202:       assertEquals(0, node1.getCharno());
203:       assertFalse(node1.isExprResult());
204:       assertFalse(node1.isWhile());
205:       assertFalse(node1.isWith());
206:       assertEquals(152, node1.getLineno());
207:       assertFalse(node1.isBlock());
208:       assertFalse(node1.hasMoreThanOneChild());
209:       assertFalse(node1.isCall());
210:       assertFalse(node1.isInstanceOf());
211:       assertFalse(node1.isGetElem());
212:       assertFalse(node1.isName());
213:       assertFalse(node1.isSetterDef());
214:       assertFalse(node1.isFalse());
215:       assertFalse(node1.isComma());
216:       assertFalse(node1.isObjectLit());
217:       assertFalse(node1.isThrow());
218:       assertFalse(node1.isGetProp());
219:       assertFalse(node1.isFunction());
220:       assertFalse(node1.isString());
221:       assertFalse(node1.isNot());
222:       assertFalse(node1.isDebugger());
223:       assertFalse(node1.isCast());
224:       assertFalse(node1.isContinue());
225:       assertFalse(node1.isAnd());
226:       assertFalse(node1.isNE());
227:       assertFalse(node1.isIf());
228:       assertFalse(node1.isFor());
229:       assertTrue(node1.hasOneChild());
230:       assertFalse(node1.isGetterDef());
231:       assertEquals(1, node1.getChildCount());
232:       assertFalse(node1.isIn());
233:       assertFalse(node1.isEmpty());
234:       assertFalse(node1.isTry());
235:       assertFalse(node1.isCase());
236:       assertFalse(node1.isRegExp());
237:       assertFalse(node1.isTrue());
238:       assertFalse(node1.isInc());
239:       assertFalse(node1.isCatch());
240:       assertTrue(node1.hasChildren());
241:       assertFalse(node1.isDelProp());
242:       assertFalse(node1.isVoid());
243:       assertFalse(node1.isBreak());
244:       assertFalse(node1.isThis());
245:       assertFalse(node1.isNull());
246:       assertFalse(node1.isParamList());
247:       assertFalse(node1.isVar());
248:       assertFalse(node1.isHook());
249:       assertFalse(node1.isAdd());
250:       assertFalse(node1.isNew());
251:       assertFalse(node1.isSwitch());
252:       assertFalse(node1.isScript());
253:       assertEquals(1, node1.getType());
254:       assertFalse(node1.isDefaultCase());
255:       assertFalse(node1.isStringKey());
256:       assertFalse(node1.isLabelName());
257:       assertFalse(node1.isArrayLit());
258:       assertNotNull(node1);
259:       assertEquals(47, Node.IS_DISPATCHER);
260:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
261:       assertEquals(56, Node.CHANGE_TIME);
262:       assertEquals(29, Node.JSDOC_INFO_PROP);
263:       assertEquals(37, Node.OPT_ARG_NAME);
264:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
265:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
266:       assertEquals(12, Node.COLUMN_BITS);
267:       assertEquals(2, Node.POST_FLAG);
268:       assertEquals(30, Node.VAR_ARGS_NAME);
269:       assertEquals(57, Node.LAST_PROP);
270:       assertEquals(15, Node.NO_SIDE_EFFECTS);
271:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
272:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
273:       assertEquals(49, Node.DIRECT_EVAL);
274:       assertEquals(52, Node.LENGTH);
275:       assertEquals(53, Node.INPUT_ID);
276:       assertEquals(57, Node.REFLECTED_OBJECT);
277:       assertEquals(55, Node.INFERRED_FUNCTION);
278:       assertEquals(8, Node.FLAG_NO_THROWS);
279:       assertEquals(36, Node.QUOTED_PROP);
280:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
281:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
282:       assertEquals(40, Node.ORIGINALNAME_PROP);
283:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
284:       assertEquals(39, Node.EMPTY_BLOCK);
285:       assertEquals(48, Node.DIRECTIVES);
286:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
287:       assertEquals(4095, Node.COLUMN_MASK);
288:       assertEquals(43, Node.IS_CONSTANT_NAME);
289:       assertEquals(1, Node.DECR_FLAG);
290:       assertEquals(32, Node.INCRDECR_PROP);
291:       assertEquals(46, Node.IS_NAMESPACE);
292:       assertEquals(54, Node.SLASH_V);
293:       assertEquals(51, Node.STATIC_SOURCE_FILE);
294:       assertEquals(50, Node.FREE_CALL);
295:       assertEquals(54, Node.SLASH_V);
296:       assertEquals(15, Node.NO_SIDE_EFFECTS);
297:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
298:       assertEquals(49, Node.DIRECT_EVAL);
299:       assertEquals(1, Node.DECR_FLAG);
300:       assertEquals(57, Node.LAST_PROP);
301:       assertEquals(12, Node.COLUMN_BITS);
302:       assertEquals(40, Node.ORIGINALNAME_PROP);
303:       assertEquals(30, Node.VAR_ARGS_NAME);
304:       assertEquals(2, Node.POST_FLAG);
305:       assertEquals(56, Node.CHANGE_TIME);
306:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
307:       assertEquals(37, Node.OPT_ARG_NAME);
308:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
309:       assertEquals(39, Node.EMPTY_BLOCK);
310:       assertEquals(47, Node.IS_DISPATCHER);
311:       assertEquals(48, Node.DIRECTIVES);
312:       assertEquals(55, Node.INFERRED_FUNCTION);
313:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
314:       assertEquals(57, Node.REFLECTED_OBJECT);
315:       assertEquals(29, Node.JSDOC_INFO_PROP);
316:       assertEquals(53, Node.INPUT_ID);
317:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
318:       assertEquals(52, Node.LENGTH);
319:       assertEquals(8, Node.FLAG_NO_THROWS);
320:       assertEquals(43, Node.IS_CONSTANT_NAME);
321:       assertEquals(36, Node.QUOTED_PROP);
322:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
323:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
324:       assertEquals(4095, Node.COLUMN_MASK);
325:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
326:       assertEquals(32, Node.INCRDECR_PROP);
327:       assertEquals(51, Node.STATIC_SOURCE_FILE);
328:       assertEquals(46, Node.IS_NAMESPACE);
329:       assertEquals(50, Node.FREE_CALL);
330:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
331:       assertFalse(node1.equals((Object)node0));
332:       
333:       boolean boolean0 = node1.isIn();
334:       assertFalse(boolean0);
335:       assertFalse(node0.isNot());
336:       assertFalse(node0.isWith());
337:       assertFalse(node0.isAnd());
338:       assertFalse(node0.isObjectLit());
339:       assertFalse(node0.hasOneChild());
340:       assertFalse(node0.isScript());
341:       assertFalse(node0.isGetProp());
342:       assertFalse(node0.hasChildren());
343:       assertFalse(node0.isBreak());
344:       assertFalse(node0.isAssign());
345:       assertFalse(node0.isDec());
346:       assertFalse(node0.isTypeOf());
347:       assertFalse(node0.isComma());
348:       assertFalse(node0.isReturn());
349:       assertFalse(node0.isHook());
350:       assertFalse(node0.isThis());
351:       assertFalse(node0.isInstanceOf());
352:       assertEquals((-1), node0.getLineno());
353:       assertFalse(node0.hasMoreThanOneChild());
354:       assertFalse(node0.isExprResult());
355:       assertFalse(node0.isGetElem());
356:       assertFalse(node0.isDo());
357:       assertFalse(node0.isSwitch());
358:       assertEquals((-1), node0.getCharno());
359:       assertFalse(node0.isBlock());
360:       assertFalse(node0.isOr());
361:       assertFalse(node0.isAssignAdd());
362:       assertEquals(2066, node0.getType());
363:       assertFalse(node0.isNew());
364:       assertFalse(node0.isCase());
365:       assertFalse(node0.isAdd());
366:       assertFalse(node0.isGetterDef());
367:       assertFalse(node0.isLabelName());
368:       assertFalse(node0.isNumber());
369:       assertFalse(node0.isParamList());
370:       assertFalse(node0.isStringKey());
371:       assertFalse(node0.isLabel());
372:       assertFalse(node0.isVar());
373:       assertEquals(0, node0.getChildCount());
374:       assertFalse(node0.isArrayLit());
375:       assertFalse(node0.isRegExp());
376:       assertFalse(node0.isFunction());
377:       assertFalse(node0.isDefaultCase());
378:       assertFalse(node0.isTrue());
379:       assertFalse(node0.isDebugger());
380:       assertFalse(node0.isTry());
381:       assertFalse(node0.isEmpty());
382:       assertFalse(node0.isSetterDef());
383:       assertFalse(node0.isDelProp());
384:       assertFalse(node0.isName());
385:       assertFalse(node0.isIf());
386:       assertFalse(node0.isNE());
387:       assertFalse(node0.isFor());
388:       assertFalse(node0.isNull());
389:       assertFalse(node0.isVoid());
390:       assertFalse(node0.isCall());
391:       assertFalse(node0.isCatch());
392:       assertFalse(node0.isString());
393:       assertFalse(node0.isWhile());
394:       assertFalse(node0.isIn());
395:       assertFalse(node0.isInc());
396:       assertFalse(node0.isFalse());
397:       assertFalse(node0.isThrow());
398:       assertEquals((-1), node0.getSourcePosition());
399:       assertFalse(node0.isContinue());
400:       assertFalse(node0.isCast());
401:       assertFalse(node1.isTypeOf());
402:       assertFalse(node1.isNumber());
403:       assertFalse(node1.isAssign());
404:       assertFalse(node1.isLabel());
405:       assertFalse(node1.isOr());
406:       assertFalse(node1.isReturn());
407:       assertFalse(node1.isDec());
408:       assertEquals(622592, node1.getSourcePosition());
409:       assertFalse(node1.isAssignAdd());
410:       assertFalse(node1.isDo());
411:       assertEquals(0, node1.getCharno());
412:       assertFalse(node1.isExprResult());
413:       assertFalse(node1.isWhile());
414:       assertFalse(node1.isWith());
415:       assertEquals(152, node1.getLineno());
416:       assertFalse(node1.isBlock());
417:       assertFalse(node1.hasMoreThanOneChild());
418:       assertFalse(node1.isCall());
419:       assertFalse(node1.isInstanceOf());
420:       assertFalse(node1.isGetElem());
421:       assertFalse(node1.isName());
422:       assertFalse(node1.isSetterDef());
423:       assertFalse(node1.isFalse());
424:       assertFalse(node1.isComma());
425:       assertFalse(node1.isObjectLit());
426:       assertFalse(node1.isThrow());
427:       assertFalse(node1.isGetProp());
428:       assertFalse(node1.isFunction());
429:       assertFalse(node1.isString());
430:       assertFalse(node1.isNot());
431:       assertFalse(node1.isDebugger());
432:       assertFalse(node1.isCast());
433:       assertFalse(node1.isContinue());
434:       assertFalse(node1.isAnd());
435:       assertFalse(node1.isNE());
436:       assertFalse(node1.isIf());
437:       assertFalse(node1.isFor());
438:       assertTrue(node1.hasOneChild());
439:       assertFalse(node1.isGetterDef());
440:       assertEquals(1, node1.getChildCount());
441:       assertFalse(node1.isIn());
442:       assertFalse(node1.isEmpty());
443:       assertFalse(node1.isTry());
444:       assertFalse(node1.isCase());
445:       assertFalse(node1.isRegExp());
446:       assertFalse(node1.isTrue());
447:       assertFalse(node1.isInc());
448:       assertFalse(node1.isCatch());
449:       assertTrue(node1.hasChildren());
450:       assertFalse(node1.isDelProp());
451:       assertFalse(node1.isVoid());
452:       assertFalse(node1.isBreak());
453:       assertFalse(node1.isThis());
454:       assertFalse(node1.isNull());
455:       assertFalse(node1.isParamList());
456:       assertFalse(node1.isVar());
457:       assertFalse(node1.isHook());
458:       assertFalse(node1.isAdd());
459:       assertFalse(node1.isNew());
460:       assertFalse(node1.isSwitch());
461:       assertFalse(node1.isScript());
462:       assertEquals(1, node1.getType());
463:       assertFalse(node1.isDefaultCase());
464:       assertFalse(node1.isStringKey());
465:       assertFalse(node1.isLabelName());
466:       assertFalse(node1.isArrayLit());
467:       assertEquals(47, Node.IS_DISPATCHER);
468:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
469:       assertEquals(56, Node.CHANGE_TIME);
470:       assertEquals(29, Node.JSDOC_INFO_PROP);
471:       assertEquals(37, Node.OPT_ARG_NAME);
472:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
473:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
474:       assertEquals(12, Node.COLUMN_BITS);
475:       assertEquals(2, Node.POST_FLAG);
476:       assertEquals(30, Node.VAR_ARGS_NAME);
477:       assertEquals(57, Node.LAST_PROP);
478:       assertEquals(15, Node.NO_SIDE_EFFECTS);
479:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
480:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
481:       assertEquals(49, Node.DIRECT_EVAL);
482:       assertEquals(52, Node.LENGTH);
483:       assertEquals(53, Node.INPUT_ID);
484:       assertEquals(57, Node.REFLECTED_OBJECT);
485:       assertEquals(55, Node.INFERRED_FUNCTION);
486:       assertEquals(8, Node.FLAG_NO_THROWS);
487:       assertEquals(36, Node.QUOTED_PROP);
488:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
489:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
490:       assertEquals(40, Node.ORIGINALNAME_PROP);
491:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
492:       assertEquals(39, Node.EMPTY_BLOCK);
493:       assertEquals(48, Node.DIRECTIVES);
494:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
495:       assertEquals(4095, Node.COLUMN_MASK);
496:       assertEquals(43, Node.IS_CONSTANT_NAME);
497:       assertEquals(1, Node.DECR_FLAG);
498:       assertEquals(32, Node.INCRDECR_PROP);
499:       assertEquals(46, Node.IS_NAMESPACE);
500:       assertEquals(54, Node.SLASH_V);
501:       assertEquals(51, Node.STATIC_SOURCE_FILE);
502:       assertEquals(50, Node.FREE_CALL);
503:       assertEquals(54, Node.SLASH_V);
504:       assertEquals(15, Node.NO_SIDE_EFFECTS);
505:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
506:       assertEquals(49, Node.DIRECT_EVAL);
507:       assertEquals(1, Node.DECR_FLAG);
508:       assertEquals(57, Node.LAST_PROP);
509:       assertEquals(12, Node.COLUMN_BITS);
510:       assertEquals(40, Node.ORIGINALNAME_PROP);
511:       assertEquals(30, Node.VAR_ARGS_NAME);
512:       assertEquals(2, Node.POST_FLAG);
513:       assertEquals(56, Node.CHANGE_TIME);
514:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
515:       assertEquals(37, Node.OPT_ARG_NAME);
516:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
517:       assertEquals(39, Node.EMPTY_BLOCK);
518:       assertEquals(47, Node.IS_DISPATCHER);
519:       assertEquals(48, Node.DIRECTIVES);
520:       assertEquals(55, Node.INFERRED_FUNCTION);
521:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
522:       assertEquals(57, Node.REFLECTED_OBJECT);
523:       assertEquals(29, Node.JSDOC_INFO_PROP);
524:       assertEquals(53, Node.INPUT_ID);
525:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
526:       assertEquals(52, Node.LENGTH);
527:       assertEquals(8, Node.FLAG_NO_THROWS);
528:       assertEquals(43, Node.IS_CONSTANT_NAME);
529:       assertEquals(36, Node.QUOTED_PROP);
530:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
531:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
532:       assertEquals(4095, Node.COLUMN_MASK);
533:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
534:       assertEquals(32, Node.INCRDECR_PROP);
535:       assertEquals(51, Node.STATIC_SOURCE_FILE);
536:       assertEquals(46, Node.IS_NAMESPACE);
537:       assertEquals(50, Node.FREE_CALL);
538:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
539:       assertFalse(node0.equals((Object)node1));
540:       assertFalse(node1.equals((Object)node0));
541:       assertNotSame(node0, node1);
542:       assertNotSame(node1, node0);
543:       
544:       boolean boolean1 = node1.isEquivalentTo(node0);
545:       assertFalse(boolean1);
546:       assertFalse(node0.isNot());
547:       assertFalse(node0.isWith());
548:       assertFalse(node0.isAnd());
549:       assertFalse(node0.isObjectLit());
550:       assertFalse(node0.hasOneChild());
551:       assertFalse(node0.isScript());
552:       assertFalse(node0.isGetProp());
553:       assertFalse(node0.hasChildren());
554:       assertFalse(node0.isBreak());
555:       assertFalse(node0.isAssign());
556:       assertFalse(node0.isDec());
557:       assertFalse(node0.isTypeOf());
558:       assertFalse(node0.isComma());
559:       assertFalse(node0.isReturn());
560:       assertFalse(node0.isHook());
561:       assertFalse(node0.isThis());
562:       assertFalse(node0.isInstanceOf());
563:       assertEquals((-1), node0.getLineno());
564:       assertFalse(node0.hasMoreThanOneChild());
565:       assertFalse(node0.isExprResult());
566:       assertFalse(node0.isGetElem());
567:       assertFalse(node0.isDo());
568:       assertFalse(node0.isSwitch());
569:       assertEquals((-1), node0.getCharno());
570:       assertFalse(node0.isBlock());
571:       assertFalse(node0.isOr());
572:       assertFalse(node0.isAssignAdd());
573:       assertEquals(2066, node0.getType());
574:       assertFalse(node0.isNew());
575:       assertFalse(node0.isCase());
576:       assertFalse(node0.isAdd());
577:       assertFalse(node0.isGetterDef());
578:       assertFalse(node0.isLabelName());
579:       assertFalse(node0.isNumber());
580:       assertFalse(node0.isParamList());
581:       assertFalse(node0.isStringKey());
582:       assertFalse(node0.isLabel());
583:       assertFalse(node0.isVar());
584:       assertEquals(0, node0.getChildCount());
585:       assertFalse(node0.isArrayLit());
586:       assertFalse(node0.isRegExp());
587:       assertFalse(node0.isFunction());
588:       assertFalse(node0.isDefaultCase());
589:       assertFalse(node0.isTrue());
590:       assertFalse(node0.isDebugger());
591:       assertFalse(node0.isTry());
592:       assertFalse(node0.isEmpty());
593:       assertFalse(node0.isSetterDef());
594:       assertFalse(node0.isDelProp());
595:       assertFalse(node0.isName());
596:       assertFalse(node0.isIf());
597:       assertFalse(node0.isNE());
598:       assertFalse(node0.isFor());
599:       assertFalse(node0.isNull());
600:       assertFalse(node0.isVoid());
601:       assertFalse(node0.isCall());
602:       assertFalse(node0.isCatch());
603:       assertFalse(node0.isString());
604:       assertFalse(node0.isWhile());
605:       assertFalse(node0.isIn());
606:       assertFalse(node0.isInc());
607:       assertFalse(node0.isFalse());
608:       assertFalse(node0.isThrow());
609:       assertEquals((-1), node0.getSourcePosition());
610:       assertFalse(node0.isContinue());
611:       assertFalse(node0.isCast());
612:       assertFalse(node1.isTypeOf());
613:       assertFalse(node1.isNumber());
614:       assertFalse(node1.isAssign());
615:       assertFalse(node1.isLabel());
616:       assertFalse(node1.isOr());
617:       assertFalse(node1.isReturn());
618:       assertFalse(node1.isDec());
619:       assertEquals(622592, node1.getSourcePosition());
620:       assertFalse(node1.isAssignAdd());
621:       assertFalse(node1.isDo());
622:       assertEquals(0, node1.getCharno());
623:       assertFalse(node1.isExprResult());
624:       assertFalse(node1.isWhile());
625:       assertFalse(node1.isWith());
626:       assertEquals(152, node1.getLineno());
627:       assertFalse(node1.isBlock());
628:       assertFalse(node1.hasMoreThanOneChild());
629:       assertFalse(node1.isCall());
630:       assertFalse(node1.isInstanceOf());
631:       assertFalse(node1.isGetElem());
632:       assertFalse(node1.isName());
633:       assertFalse(node1.isSetterDef());
634:       assertFalse(node1.isFalse());
635:       assertFalse(node1.isComma());
636:       assertFalse(node1.isObjectLit());
637:       assertFalse(node1.isThrow());
638:       assertFalse(node1.isGetProp());
639:       assertFalse(node1.isFunction());
640:       assertFalse(node1.isString());
641:       assertFalse(node1.isNot());
642:       assertFalse(node1.isDebugger());
643:       assertFalse(node1.isCast());
644:       assertFalse(node1.isContinue());
645:       assertFalse(node1.isAnd());
646:       assertFalse(node1.isNE());
647:       assertFalse(node1.isIf());
648:       assertFalse(node1.isFor());
649:       assertTrue(node1.hasOneChild());
650:       assertFalse(node1.isGetterDef());
651:       assertEquals(1, node1.getChildCount());
652:       assertFalse(node1.isIn());
653:       assertFalse(node1.isEmpty());
654:       assertFalse(node1.isTry());
655:       assertFalse(node1.isCase());
656:       assertFalse(node1.isRegExp());
657:       assertFalse(node1.isTrue());
658:       assertFalse(node1.isInc());
659:       assertFalse(node1.isCatch());
660:       assertTrue(node1.hasChildren());
661:       assertFalse(node1.isDelProp());
662:       assertFalse(node1.isVoid());
663:       assertFalse(node1.isBreak());
664:       assertFalse(node1.isThis());
665:       assertFalse(node1.isNull());
666:       assertFalse(node1.isParamList());
667:       assertFalse(node1.isVar());
668:       assertFalse(node1.isHook());
669:       assertFalse(node1.isAdd());
670:       assertFalse(node1.isNew());
671:       assertFalse(node1.isSwitch());
672:       assertFalse(node1.isScript());
673:       assertEquals(1, node1.getType());
674:       assertFalse(node1.isDefaultCase());
675:       assertFalse(node1.isStringKey());
676:       assertFalse(node1.isLabelName());
677:       assertFalse(node1.isArrayLit());
678:       assertEquals(47, Node.IS_DISPATCHER);
679:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
680:       assertEquals(56, Node.CHANGE_TIME);
681:       assertEquals(29, Node.JSDOC_INFO_PROP);
682:       assertEquals(37, Node.OPT_ARG_NAME);
683:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
684:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
685:       assertEquals(12, Node.COLUMN_BITS);
686:       assertEquals(2, Node.POST_FLAG);
687:       assertEquals(30, Node.VAR_ARGS_NAME);
688:       assertEquals(57, Node.LAST_PROP);
689:       assertEquals(15, Node.NO_SIDE_EFFECTS);
690:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
691:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
692:       assertEquals(49, Node.DIRECT_EVAL);
693:       assertEquals(52, Node.LENGTH);
694:       assertEquals(53, Node.INPUT_ID);
695:       assertEquals(57, Node.REFLECTED_OBJECT);
696:       assertEquals(55, Node.INFERRED_FUNCTION);
697:       assertEquals(8, Node.FLAG_NO_THROWS);
698:       assertEquals(36, Node.QUOTED_PROP);
699:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
700:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
701:       assertEquals(40, Node.ORIGINALNAME_PROP);
702:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
703:       assertEquals(39, Node.EMPTY_BLOCK);
704:       assertEquals(48, Node.DIRECTIVES);
705:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
706:       assertEquals(4095, Node.COLUMN_MASK);
707:       assertEquals(43, Node.IS_CONSTANT_NAME);
708:       assertEquals(1, Node.DECR_FLAG);
709:       assertEquals(32, Node.INCRDECR_PROP);
710:       assertEquals(46, Node.IS_NAMESPACE);
711:       assertEquals(54, Node.SLASH_V);
712:       assertEquals(51, Node.STATIC_SOURCE_FILE);
713:       assertEquals(50, Node.FREE_CALL);
714:       assertEquals(54, Node.SLASH_V);
715:       assertEquals(15, Node.NO_SIDE_EFFECTS);
716:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
717:       assertEquals(49, Node.DIRECT_EVAL);
718:       assertEquals(1, Node.DECR_FLAG);
719:       assertEquals(57, Node.LAST_PROP);
720:       assertEquals(12, Node.COLUMN_BITS);
721:       assertEquals(40, Node.ORIGINALNAME_PROP);
722:       assertEquals(30, Node.VAR_ARGS_NAME);
723:       assertEquals(2, Node.POST_FLAG);
724:       assertEquals(56, Node.CHANGE_TIME);
725:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
726:       assertEquals(37, Node.OPT_ARG_NAME);
727:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
728:       assertEquals(39, Node.EMPTY_BLOCK);
729:       assertEquals(47, Node.IS_DISPATCHER);
730:       assertEquals(48, Node.DIRECTIVES);
731:       assertEquals(55, Node.INFERRED_FUNCTION);
732:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
733:       assertEquals(57, Node.REFLECTED_OBJECT);
734:       assertEquals(29, Node.JSDOC_INFO_PROP);
735:       assertEquals(53, Node.INPUT_ID);
736:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
737:       assertEquals(52, Node.LENGTH);
738:       assertEquals(8, Node.FLAG_NO_THROWS);
739:       assertEquals(43, Node.IS_CONSTANT_NAME);
740:       assertEquals(36, Node.QUOTED_PROP);
741:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
742:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
743:       assertEquals(4095, Node.COLUMN_MASK);
744:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
745:       assertEquals(32, Node.INCRDECR_PROP);
746:       assertEquals(51, Node.STATIC_SOURCE_FILE);
747:       assertEquals(46, Node.IS_NAMESPACE);
748:       assertEquals(50, Node.FREE_CALL);
749:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
750:       assertFalse(node0.equals((Object)node1));
751:       assertFalse(node1.equals((Object)node0));
752:       assertTrue(boolean1 == boolean0);
753:       assertNotSame(node0, node1);
754:       assertNotSame(node1, node0);
755:       
756:       Iterable<Node> iterable0 = node0.children();
757:       assertFalse(iterable0.contains(node1));
758:       assertFalse(node0.isNot());
759:       assertFalse(node0.isWith());
760:       assertFalse(node0.isAnd());
761:       assertFalse(node0.isObjectLit());
762:       assertFalse(node0.hasOneChild());
763:       assertFalse(node0.isScript());
764:       assertFalse(node0.isGetProp());
765:       assertFalse(node0.hasChildren());
766:       assertFalse(node0.isBreak());
767:       assertFalse(node0.isAssign());
768:       assertFalse(node0.isDec());
769:       assertFalse(node0.isTypeOf());
770:       assertFalse(node0.isComma());
771:       assertFalse(node0.isReturn());
772:       assertFalse(node0.isHook());
773:       assertFalse(node0.isThis());
774:       assertFalse(node0.isInstanceOf());
775:       assertEquals((-1), node0.getLineno());
776:       assertFalse(node0.hasMoreThanOneChild());
777:       assertFalse(node0.isExprResult());
778:       assertFalse(node0.isGetElem());
779:       assertFalse(node0.isDo());
780:       assertFalse(node0.isSwitch());
781:       assertEquals((-1), node0.getCharno());
782:       assertFalse(node0.isBlock());
783:       assertFalse(node0.isOr());
784:       assertFalse(node0.isAssignAdd());
785:       assertEquals(2066, node0.getType());
786:       assertFalse(node0.isNew());
787:       assertFalse(node0.isCase());
788:       assertFalse(node0.isAdd());
789:       assertFalse(node0.isGetterDef());
790:       assertFalse(node0.isLabelName());
791:       assertFalse(node0.isNumber());
792:       assertFalse(node0.isParamList());
793:       assertFalse(node0.isStringKey());
794:       assertFalse(node0.isLabel());
795:       assertFalse(node0.isVar());
796:       assertEquals(0, node0.getChildCount());
797:       assertFalse(node0.isArrayLit());
798:       assertFalse(node0.isRegExp());
799:       assertFalse(node0.isFunction());
800:       assertFalse(node0.isDefaultCase());
801:       assertFalse(node0.isTrue());
802:       assertFalse(node0.isDebugger());
803:       assertFalse(node0.isTry());
804:       assertFalse(node0.isEmpty());
805:       assertFalse(node0.isSetterDef());
806:       assertFalse(node0.isDelProp());
807:       assertFalse(node0.isName());
808:       assertFalse(node0.isIf());
809:       assertFalse(node0.isNE());
810:       assertFalse(node0.isFor());
811:       assertFalse(node0.isNull());
812:       assertFalse(node0.isVoid());
813:       assertFalse(node0.isCall());
814:       assertFalse(node0.isCatch());
815:       assertFalse(node0.isString());
816:       assertFalse(node0.isWhile());
817:       assertFalse(node0.isIn());
818:       assertFalse(node0.isInc());
819:       assertFalse(node0.isFalse());
820:       assertFalse(node0.isThrow());
821:       assertEquals((-1), node0.getSourcePosition());
822:       assertFalse(node0.isContinue());
823:       assertFalse(node0.isCast());
824:       assertNotNull(iterable0);
825:       assertEquals(47, Node.IS_DISPATCHER);
826:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
827:       assertEquals(56, Node.CHANGE_TIME);
828:       assertEquals(29, Node.JSDOC_INFO_PROP);
829:       assertEquals(37, Node.OPT_ARG_NAME);
830:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
831:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
832:       assertEquals(12, Node.COLUMN_BITS);
833:       assertEquals(2, Node.POST_FLAG);
834:       assertEquals(30, Node.VAR_ARGS_NAME);
835:       assertEquals(57, Node.LAST_PROP);
836:       assertEquals(15, Node.NO_SIDE_EFFECTS);
837:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
838:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
839:       assertEquals(49, Node.DIRECT_EVAL);
840:       assertEquals(52, Node.LENGTH);
841:       assertEquals(53, Node.INPUT_ID);
842:       assertEquals(57, Node.REFLECTED_OBJECT);
843:       assertEquals(55, Node.INFERRED_FUNCTION);
844:       assertEquals(8, Node.FLAG_NO_THROWS);
845:       assertEquals(36, Node.QUOTED_PROP);
846:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
847:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
848:       assertEquals(40, Node.ORIGINALNAME_PROP);
849:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
850:       assertEquals(39, Node.EMPTY_BLOCK);
851:       assertEquals(48, Node.DIRECTIVES);
852:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
853:       assertEquals(4095, Node.COLUMN_MASK);
854:       assertEquals(43, Node.IS_CONSTANT_NAME);
855:       assertEquals(1, Node.DECR_FLAG);
856:       assertEquals(32, Node.INCRDECR_PROP);
857:       assertEquals(46, Node.IS_NAMESPACE);
858:       assertEquals(54, Node.SLASH_V);
859:       assertEquals(51, Node.STATIC_SOURCE_FILE);
860:       assertEquals(50, Node.FREE_CALL);
861:       assertFalse(node0.equals((Object)node1));
862:       assertNotSame(node0, node1);
863:       
864:       boolean boolean2 = node0.isContinue();
865:       assertFalse(boolean2);
866:       assertFalse(node0.isNot());
867:       assertFalse(node0.isWith());
868:       assertFalse(node0.isAnd());
869:       assertFalse(node0.isObjectLit());
870:       assertFalse(node0.hasOneChild());
871:       assertFalse(node0.isScript());
872:       assertFalse(node0.isGetProp());
873:       assertFalse(node0.hasChildren());
874:       assertFalse(node0.isBreak());
875:       assertFalse(node0.isAssign());
876:       assertFalse(node0.isDec());
877:       assertFalse(node0.isTypeOf());
878:       assertFalse(node0.isComma());
879:       assertFalse(node0.isReturn());
880:       assertFalse(node0.isHook());
881:       assertFalse(node0.isThis());
882:       assertFalse(node0.isInstanceOf());
883:       assertEquals((-1), node0.getLineno());
884:       assertFalse(node0.hasMoreThanOneChild());
885:       assertFalse(node0.isExprResult());
886:       assertFalse(node0.isGetElem());
887:       assertFalse(node0.isDo());
888:       assertFalse(node0.isSwitch());
889:       assertEquals((-1), node0.getCharno());
890:       assertFalse(node0.isBlock());
891:       assertFalse(node0.isOr());
892:       assertFalse(node0.isAssignAdd());
893:       assertEquals(2066, node0.getType());
894:       assertFalse(node0.isNew());
895:       assertFalse(node0.isCase());
896:       assertFalse(node0.isAdd());
897:       assertFalse(node0.isGetterDef());
898:       assertFalse(node0.isLabelName());
899:       assertFalse(node0.isNumber());
900:       assertFalse(node0.isParamList());
901:       assertFalse(node0.isStringKey());
902:       assertFalse(node0.isLabel());
903:       assertFalse(node0.isVar());
904:       assertEquals(0, node0.getChildCount());
905:       assertFalse(node0.isArrayLit());
906:       assertFalse(node0.isRegExp());
907:       assertFalse(node0.isFunction());
908:       assertFalse(node0.isDefaultCase());
909:       assertFalse(node0.isTrue());
910:       assertFalse(node0.isDebugger());
911:       assertFalse(node0.isTry());
912:       assertFalse(node0.isEmpty());
913:       assertFalse(node0.isSetterDef());
914:       assertFalse(node0.isDelProp());
915:       assertFalse(node0.isName());
916:       assertFalse(node0.isIf());
917:       assertFalse(node0.isNE());
918:       assertFalse(node0.isFor());
919:       assertFalse(node0.isNull());
920:       assertFalse(node0.isVoid());
921:       assertFalse(node0.isCall());
922:       assertFalse(node0.isCatch());
923:       assertFalse(node0.isString());
924:       assertFalse(node0.isWhile());
925:       assertFalse(node0.isIn());
926:       assertFalse(node0.isInc());
927:       assertFalse(node0.isFalse());
928:       assertFalse(node0.isThrow());
929:       assertEquals((-1), node0.getSourcePosition());
930:       assertFalse(node0.isContinue());
931:       assertFalse(node0.isCast());
932:       assertEquals(47, Node.IS_DISPATCHER);
933:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
934:       assertEquals(56, Node.CHANGE_TIME);
935:       assertEquals(29, Node.JSDOC_INFO_PROP);
936:       assertEquals(37, Node.OPT_ARG_NAME);
937:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
938:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
939:       assertEquals(12, Node.COLUMN_BITS);
940:       assertEquals(2, Node.POST_FLAG);
941:       assertEquals(30, Node.VAR_ARGS_NAME);
942:       assertEquals(57, Node.LAST_PROP);
943:       assertEquals(15, Node.NO_SIDE_EFFECTS);
944:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
945:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
946:       assertEquals(49, Node.DIRECT_EVAL);
947:       assertEquals(52, Node.LENGTH);
948:       assertEquals(53, Node.INPUT_ID);
949:       assertEquals(57, Node.REFLECTED_OBJECT);
950:       assertEquals(55, Node.INFERRED_FUNCTION);
951:       assertEquals(8, Node.FLAG_NO_THROWS);
952:       assertEquals(36, Node.QUOTED_PROP);
953:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
954:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
955:       assertEquals(40, Node.ORIGINALNAME_PROP);
956:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
957:       assertEquals(39, Node.EMPTY_BLOCK);
958:       assertEquals(48, Node.DIRECTIVES);
959:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
960:       assertEquals(4095, Node.COLUMN_MASK);
961:       assertEquals(43, Node.IS_CONSTANT_NAME);
962:       assertEquals(1, Node.DECR_FLAG);
963:       assertEquals(32, Node.INCRDECR_PROP);
964:       assertEquals(46, Node.IS_NAMESPACE);
965:       assertEquals(54, Node.SLASH_V);
966:       assertEquals(51, Node.STATIC_SOURCE_FILE);
967:       assertEquals(50, Node.FREE_CALL);
968:       assertFalse(node0.equals((Object)node1));
969:       assertTrue(boolean2 == boolean1);
970:       assertTrue(boolean2 == boolean0);
971:       assertNotSame(node0, node1);
972:   }
973: }
RegularFileObject[/tmp/EvoSuite_105_1628255829962/com/google/javascript/rhino/Node_105_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:17:10 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_105_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_105_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.JSDocInfo$StringPosition",
71:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
72:       "com.google.common.collect.ImmutableList$SubList",
73:       "com.google.javascript.rhino.jstype.NoType",
74:       "com.google.javascript.rhino.JSDocInfo$Visibility",
75:       "com.google.common.collect.ListMultimap",
76:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
77:       "com.google.javascript.rhino.jstype.ArrowType",
78:       "com.google.javascript.rhino.SimpleErrorReporter",
79:       "com.google.common.collect.Lists$RandomAccessPartition",
80:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
81:       "com.google.common.collect.Collections2",
82:       "com.google.javascript.rhino.jstype.NumberType",
83:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
86:       "com.google.common.collect.RegularImmutableList",
87:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
88:       "com.google.javascript.rhino.jstype.StaticScope",
89:       "com.google.javascript.rhino.jstype.InstanceObjectType",
90:       "com.google.common.collect.Lists$TransformingRandomAccessList",
91:       "com.google.javascript.rhino.Node$PropListItem",
92:       "com.google.javascript.rhino.Node$IntPropListItem",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Maps$KeySet",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.LinkedHashMultimap",
98:       "com.google.javascript.rhino.Node",
99:       "com.google.javascript.rhino.jstype.ObjectType",
100:       "com.google.javascript.rhino.SourcePosition",
101:       "com.google.common.collect.Sets$1",
102:       "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition",
103:       "com.google.common.collect.ImmutableMapKeySet",
104:       "com.google.javascript.rhino.JSDocInfo$Marker",
105:       "com.google.common.collect.RegularImmutableMap",
106:       "com.google.common.collect.RegularImmutableBiMap",
107:       "com.google.javascript.rhino.Node$NodeMismatch",
108:       "com.google.javascript.rhino.jstype.RecordType",
109:       "com.google.common.collect.SortedMapDifference",
110:       "com.google.javascript.rhino.jstype.ModificationVisitor",
111:       "com.google.javascript.rhino.jstype.PropertyMap$1",
112:       "com.google.common.collect.AbstractMapEntry",
113:       "com.google.javascript.rhino.Node$AncestorIterable$1",
114:       "com.google.common.collect.Iterators$12",
115:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
116:       "com.google.common.collect.Iterators$11",
117:       "com.google.javascript.rhino.jstype.JSType$1",
118:       "com.google.common.collect.EmptyImmutableBiMap",
119:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.javascript.rhino.jstype.VoidType",
122:       "com.google.common.base.Joiner",
123:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
124:       "com.google.common.collect.AbstractListMultimap",
125:       "com.google.javascript.rhino.jstype.JSType",
126:       "com.google.common.collect.ImmutableAsList",
127:       "com.google.javascript.rhino.Node$StringNode",
128:       "com.google.javascript.rhino.jstype.ProxyObjectType",
129:       "com.google.common.collect.Sets$SetView",
130:       "com.google.common.collect.RegularImmutableAsList",
131:       "com.google.javascript.rhino.jstype.TemplateType",
132:       "com.google.javascript.rhino.jstype.NamedType",
133:       "com.google.common.collect.Iterators$13",
134:       "com.google.javascript.rhino.InputId",
135:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
136:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
137:       "com.google.common.collect.AbstractMapBasedMultimap",
138:       "com.google.common.collect.Lists$Partition",
139:       "com.google.common.collect.Lists",
140:       "com.google.javascript.rhino.Node$SideEffectFlags",
141:       "com.google.common.collect.UnmodifiableListIterator",
142:       "com.google.javascript.rhino.jstype.NullType",
143:       "com.google.common.collect.Lists$TransformingSequentialList",
144:       "com.google.javascript.rhino.ErrorReporter",
145:       "com.google.javascript.rhino.jstype.UnknownType",
146:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
147:       "com.google.javascript.rhino.jstype.ValueType",
148:       "com.google.javascript.rhino.jstype.PropertyMap",
149:       "com.google.javascript.rhino.Token",
150:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.javascript.rhino.jstype.StaticSourceFile",
153:       "com.google.javascript.rhino.jstype.BooleanType",
154:       "com.google.javascript.rhino.jstype.NoObjectType",
155:       "com.google.common.collect.AbstractIterator",
156:       "com.google.javascript.rhino.jstype.FunctionBuilder",
157:       "com.google.javascript.rhino.jstype.JSType$TypePair",
158:       "com.google.common.base.Joiner$MapJoiner",
159:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
160:       "com.google.common.collect.ImmutableList$1",
161:       "com.google.common.collect.MapDifference",
162:       "com.google.javascript.rhino.JSDocInfo$1",
163:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
164:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
165:       "com.google.common.collect.Sets$ImprovedAbstractSet",
166:       "com.google.javascript.rhino.jstype.FunctionType",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.javascript.rhino.JSDocInfo",
170:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
171:       "com.google.javascript.rhino.jstype.Property",
172:       "com.google.common.collect.ImmutableMapValues",
173:       "com.google.common.collect.ImmutableEntry",
174:       "com.google.common.base.Joiner$1",
175:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
176:       "com.google.common.base.Joiner$2",
177:       "com.google.common.collect.ImmutableCollection",
178:       "com.google.common.collect.ImmutableEnumMap",
179:       "com.google.javascript.rhino.jstype.TernaryValue",
180:       "com.google.javascript.rhino.Node$AncestorIterable",
181:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
182:       "com.google.common.collect.Lists$RandomAccessListWrapper",
183:       "com.google.common.collect.ImmutableEnumSet",
184:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
185:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
186:       "com.google.javascript.rhino.jstype.EnumElementType",
187:       "com.google.javascript.rhino.jstype.UnionType",
188:       "com.google.common.base.Objects",
189:       "com.google.javascript.rhino.Node$NumberNode",
190:       "com.google.common.collect.SingletonImmutableList",
191:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
192:       "com.google.common.collect.ImmutableCollection$Builder",
193:       "com.google.javascript.rhino.jstype.StaticSlot",
194:       "com.google.common.collect.Iterators$6",
195:       "com.google.common.collect.BiMap",
196:       "com.google.common.collect.Iterators$7",
197:       "com.google.common.collect.AbstractSetMultimap",
198:       "com.google.common.base.Function",
199:       "com.google.common.collect.ImmutableSet",
200:       "com.google.common.collect.Lists$AbstractListWrapper",
201:       "com.google.common.collect.ImmutableMap",
202:       "com.google.common.collect.AbstractIndexedListIterator",
203:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
204:       "com.google.common.collect.Maps$1",
205:       "com.google.javascript.rhino.jstype.EnumType",
206:       "com.google.javascript.rhino.JSDocInfo$TypePosition",
207:       "com.google.common.collect.Iterators$1",
208:       "com.google.common.collect.Iterators$2",
209:       "com.google.javascript.rhino.jstype.NamespaceType",
210:       "com.google.common.collect.Iterators$3",
211:       "com.google.common.collect.Sets",
212:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
213:       "com.google.javascript.rhino.Node$ObjectPropListItem",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.javascript.rhino.jstype.StaticReference",
220:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
221:       "com.google.common.collect.Multiset",
222:       "com.google.common.collect.AbstractMultimap",
223:       "com.google.common.collect.Multimap",
224:       "com.google.common.collect.Iterators",
225:       "com.google.common.collect.Maps$ImprovedAbstractMap",
226:       "com.google.common.collect.ImmutableBiMap",
227:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
228:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
229:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
230:       "com.google.common.collect.ImmutableList",
231:       "com.google.common.collect.SingletonImmutableBiMap",
232:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
233:       "com.google.javascript.rhino.jstype.StringType",
234:       "com.google.javascript.rhino.Node$AbstractPropListItem",
235:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
236:       "com.google.javascript.rhino.jstype.TemplatizedType",
237:       "com.google.javascript.rhino.jstype.Visitor",
238:       "com.google.javascript.rhino.jstype.NoResolvedType",
239:       "com.google.javascript.rhino.jstype.JSTypeNative",
240:       "com.google.javascript.rhino.jstype.AllType",
241:       "com.google.common.collect.Maps",
242:       "com.google.common.collect.SetMultimap",
243:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
244:       "com.google.common.collect.Maps$EntryTransformer",
245:       "com.google.javascript.rhino.JSTypeExpression",
246:       "com.google.common.collect.Iterators$MergingIterator"
247:     );
248:   } 
249: 
250:   private static void resetClasses() {
251:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_105_tmp__ESTest_scaffolding.class.getClassLoader()); 
252: 
253:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
254:       "com.google.javascript.rhino.Node",
255:       "com.google.javascript.rhino.Node$NumberNode",
256:       "com.google.javascript.rhino.Node$StringNode",
257:       "com.google.javascript.rhino.Node$AbstractPropListItem",
258:       "com.google.javascript.rhino.Node$ObjectPropListItem",
259:       "com.google.javascript.rhino.Node$IntPropListItem",
260:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
261:       "com.google.javascript.rhino.Node$AncestorIterable",
262:       "com.google.javascript.rhino.Node$NodeMismatch",
263:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
264:       "com.google.javascript.rhino.Node$SideEffectFlags",
265:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
266:       "com.google.common.base.Joiner",
267:       "com.google.common.base.Preconditions",
268:       "com.google.common.base.Joiner$1",
269:       "com.google.common.collect.Collections2",
270:       "com.google.common.base.Joiner$MapJoiner",
271:       "com.google.common.collect.Maps",
272:       "com.google.common.collect.AbstractMultimap",
273:       "com.google.common.collect.AbstractMapBasedMultimap",
274:       "com.google.common.collect.AbstractSetMultimap",
275:       "com.google.common.collect.LinkedHashMultimap",
276:       "com.google.common.collect.AbstractMapEntry",
277:       "com.google.common.collect.ImmutableEntry",
278:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
279:       "com.google.common.collect.AbstractListMultimap",
280:       "com.google.common.collect.ArrayListMultimap",
281:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
282:       "com.google.common.collect.ImmutableCollection",
283:       "com.google.common.collect.RegularImmutableList",
284:       "com.google.common.collect.ObjectArrays",
285:       "com.google.common.collect.ImmutableList",
286:       "com.google.javascript.rhino.jstype.ModificationVisitor",
287:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
288:       "com.google.common.collect.ImmutableCollection$Builder",
289:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
290:       "com.google.common.collect.ImmutableList$Builder",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.UnmodifiableListIterator",
293:       "com.google.common.collect.Iterators$1",
294:       "com.google.common.collect.Iterators$2",
295:       "com.google.common.collect.Iterators",
296:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
297:       "com.google.javascript.rhino.jstype.JSType$1",
298:       "com.google.javascript.rhino.jstype.JSType",
299:       "com.google.javascript.rhino.jstype.ObjectType",
300:       "com.google.javascript.rhino.jstype.ProxyObjectType",
301:       "com.google.javascript.rhino.jstype.TemplateType",
302:       "com.google.javascript.rhino.jstype.ValueType",
303:       "com.google.javascript.rhino.jstype.BooleanType",
304:       "com.google.javascript.rhino.jstype.NullType",
305:       "com.google.javascript.rhino.jstype.NumberType",
306:       "com.google.javascript.rhino.jstype.StringType",
307:       "com.google.javascript.rhino.jstype.UnknownType",
308:       "com.google.javascript.rhino.jstype.VoidType",
309:       "com.google.javascript.rhino.jstype.AllType",
310:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
311:       "com.google.common.collect.ImmutableMap",
312:       "com.google.common.collect.ImmutableBiMap",
313:       "com.google.common.collect.EmptyImmutableBiMap",
314:       "com.google.javascript.rhino.jstype.PropertyMap$1",
315:       "com.google.javascript.rhino.jstype.PropertyMap",
316:       "com.google.javascript.rhino.jstype.FunctionType",
317:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
318:       "com.google.javascript.rhino.Token",
319:       "com.google.javascript.rhino.jstype.ArrowType",
320:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
321:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
322:       "com.google.javascript.rhino.jstype.InstanceObjectType",
323:       "com.google.javascript.rhino.jstype.Property",
324:       "com.google.common.collect.Lists",
325:       "com.google.javascript.rhino.jstype.NoObjectType",
326:       "com.google.javascript.rhino.jstype.NoType",
327:       "com.google.javascript.rhino.jstype.NoResolvedType",
328:       "com.google.common.collect.SingletonImmutableList",
329:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
330:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
331:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
332:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
333:       "com.google.javascript.rhino.jstype.UnionType",
334:       "com.google.javascript.rhino.jstype.FunctionBuilder",
335:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
336:       "com.google.common.collect.AbstractIndexedListIterator",
337:       "com.google.common.collect.Iterators$11",
338:       "com.google.javascript.rhino.SimpleErrorReporter",
339:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
340:       "com.google.javascript.rhino.Node$AncestorIterable$1",
341:       "com.google.javascript.rhino.jstype.EnumType",
342:       "com.google.javascript.rhino.jstype.EnumElementType",
343:       "com.google.javascript.rhino.JSDocInfo",
344:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
345:       "com.google.common.collect.Sets",
346:       "com.google.common.base.Objects",
347:       "com.google.common.collect.Iterables",
348:       "com.google.javascript.rhino.InputId",
349:       "com.google.javascript.rhino.jstype.NamedType",
350:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
351:       "com.google.javascript.rhino.jstype.TemplatizedType",
352:       "com.google.javascript.rhino.JSTypeExpression",
353:       "com.google.javascript.rhino.jstype.TernaryValue",
354:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
355:       "com.google.common.collect.ImmutableSet",
356:       "com.google.common.collect.EmptyImmutableSet",
357:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
358:       "com.google.common.collect.AbstractMultimap$Values",
359:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
360:       "com.google.common.collect.AbstractMapBasedMultimap$1",
361:       "com.google.common.collect.Multimaps$Entries",
362:       "com.google.common.collect.AbstractMultimap$Entries",
363:       "com.google.common.collect.AbstractMapBasedMultimap$2",
364:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
365:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
366:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
367:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator"
368:     );
369:   }
370: }

[MASTER] 13:17:10.222 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = new Node(2066);
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertNotNull(node0);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);

Node node1 = new Node(1, node0, 152, 0);
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node1.isTypeOf());
assertFalse(node1.isNumber());
assertFalse(node1.isAssign());
assertFalse(node1.isLabel());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertEquals(622592, node1.getSourcePosition());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals(0, node1.getCharno());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isWith());
assertEquals(152, node1.getLineno());
assertFalse(node1.isBlock());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCall());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isName());
assertFalse(node1.isSetterDef());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isObjectLit());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isFunction());
assertFalse(node1.isString());
assertFalse(node1.isNot());
assertFalse(node1.isDebugger());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertFalse(node1.isFor());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isEmpty());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isTrue());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertTrue(node1.hasChildren());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isThis());
assertFalse(node1.isNull());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isHook());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isSwitch());
assertFalse(node1.isScript());
assertEquals(1, node1.getType());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isStringKey());
assertFalse(node1.isLabelName());
assertFalse(node1.isArrayLit());
assertNotNull(node1);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(48, Node.DIRECTIVES);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node1.equals((Object)node0));

boolean boolean0 = node1.isIn();
assertFalse(boolean0);
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node1.isTypeOf());
assertFalse(node1.isNumber());
assertFalse(node1.isAssign());
assertFalse(node1.isLabel());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertEquals(622592, node1.getSourcePosition());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals(0, node1.getCharno());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isWith());
assertEquals(152, node1.getLineno());
assertFalse(node1.isBlock());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCall());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isName());
assertFalse(node1.isSetterDef());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isObjectLit());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isFunction());
assertFalse(node1.isString());
assertFalse(node1.isNot());
assertFalse(node1.isDebugger());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertFalse(node1.isFor());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isEmpty());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isTrue());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertTrue(node1.hasChildren());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isThis());
assertFalse(node1.isNull());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isHook());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isSwitch());
assertFalse(node1.isScript());
assertEquals(1, node1.getType());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isStringKey());
assertFalse(node1.isLabelName());
assertFalse(node1.isArrayLit());
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(48, Node.DIRECTIVES);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertNotSame(node0, node1);
assertNotSame(node1, node0);

boolean boolean1 = node1.isEquivalentTo(node0);
assertFalse(boolean1);
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node1.isTypeOf());
assertFalse(node1.isNumber());
assertFalse(node1.isAssign());
assertFalse(node1.isLabel());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertEquals(622592, node1.getSourcePosition());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertEquals(0, node1.getCharno());
assertFalse(node1.isExprResult());
assertFalse(node1.isWhile());
assertFalse(node1.isWith());
assertEquals(152, node1.getLineno());
assertFalse(node1.isBlock());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCall());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isGetElem());
assertFalse(node1.isName());
assertFalse(node1.isSetterDef());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isObjectLit());
assertFalse(node1.isThrow());
assertFalse(node1.isGetProp());
assertFalse(node1.isFunction());
assertFalse(node1.isString());
assertFalse(node1.isNot());
assertFalse(node1.isDebugger());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertFalse(node1.isFor());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetterDef());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isIn());
assertFalse(node1.isEmpty());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isTrue());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertTrue(node1.hasChildren());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isBreak());
assertFalse(node1.isThis());
assertFalse(node1.isNull());
assertFalse(node1.isParamList());
assertFalse(node1.isVar());
assertFalse(node1.isHook());
assertFalse(node1.isAdd());
assertFalse(node1.isNew());
assertFalse(node1.isSwitch());
assertFalse(node1.isScript());
assertEquals(1, node1.getType());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isStringKey());
assertFalse(node1.isLabelName());
assertFalse(node1.isArrayLit());
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(54, Node.SLASH_V);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(48, Node.DIRECTIVES);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertTrue(boolean1 == boolean0);
assertNotSame(node0, node1);
assertNotSame(node1, node0);

Iterable<Node> iterable0 = node0.children();
assertFalse(iterable0.contains(node1));
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertNotNull(iterable0);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertFalse(node0.equals((Object)node1));
assertNotSame(node0, node1);

boolean boolean2 = node0.isContinue();
assertFalse(boolean2);
assertFalse(node0.isNot());
assertFalse(node0.isWith());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.hasChildren());
assertFalse(node0.isBreak());
assertFalse(node0.isAssign());
assertFalse(node0.isDec());
assertFalse(node0.isTypeOf());
assertFalse(node0.isComma());
assertFalse(node0.isReturn());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertFalse(node0.isInstanceOf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isExprResult());
assertFalse(node0.isGetElem());
assertFalse(node0.isDo());
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isBlock());
assertFalse(node0.isOr());
assertFalse(node0.isAssignAdd());
assertEquals(2066, node0.getType());
assertFalse(node0.isNew());
assertFalse(node0.isCase());
assertFalse(node0.isAdd());
assertFalse(node0.isGetterDef());
assertFalse(node0.isLabelName());
assertFalse(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isVar());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isArrayLit());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.isDebugger());
assertFalse(node0.isTry());
assertFalse(node0.isEmpty());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isFor());
assertFalse(node0.isNull());
assertFalse(node0.isVoid());
assertFalse(node0.isCall());
assertFalse(node0.isCatch());
assertFalse(node0.isString());
assertFalse(node0.isWhile());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(52, Node.LENGTH);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertFalse(node0.equals((Object)node1));
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);
assertNotSame(node0, node1);


[MASTER] 13:17:20.955 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_144_1628255840755/com/google/javascript/rhino/Node_144_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_144_1628255840755/com/google/javascript/rhino/Node_144_tmp__ESTest_scaffolding.java]]
[MASTER] 13:17:20.955 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:17:20.955 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:17:20.957 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1480
[MASTER] 13:17:20.959 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_144_1628255840755/com/google/javascript/rhino/Node_144_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:17:20 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.rhino.Node;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
16: public class Node_144_tmp__ESTest extends Node_144_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
21:       assertEquals(0, node_SideEffectFlags0.valueOf());
22:       assertTrue(node_SideEffectFlags0.areAllFlagsSet());
23:       assertNotNull(node_SideEffectFlags0);
24:       
25:       Node node0 = Node.newString(138, ",}");
26:       assertFalse(node0.isObjectLit());
27:       assertFalse(node0.isNot());
28:       assertFalse(node0.isInstanceOf());
29:       assertFalse(node0.isWith());
30:       assertFalse(node0.isComma());
31:       assertFalse(node0.isThis());
32:       assertFalse(node0.isScript());
33:       assertFalse(node0.isGetProp());
34:       assertFalse(node0.isThrow());
35:       assertFalse(node0.isCast());
36:       assertFalse(node0.hasOneChild());
37:       assertFalse(node0.isFalse());
38:       assertFalse(node0.isNumber());
39:       assertEquals((-1), node0.getSourcePosition());
40:       assertEquals((-1), node0.getCharno());
41:       assertFalse(node0.isLabelName());
42:       assertFalse(node0.isAnd());
43:       assertFalse(node0.isSwitch());
44:       assertEquals(138, node0.getType());
45:       assertFalse(node0.isCase());
46:       assertFalse(node0.isIn());
47:       assertFalse(node0.isContinue());
48:       assertFalse(node0.hasMoreThanOneChild());
49:       assertFalse(node0.isInc());
50:       assertFalse(node0.isBlock());
51:       assertFalse(node0.isFor());
52:       assertFalse(node0.isHook());
53:       assertFalse(node0.isNE());
54:       assertEquals((-1), node0.getLineno());
55:       assertFalse(node0.isIf());
56:       assertFalse(node0.isCatch());
57:       assertEquals(0, node0.getChildCount());
58:       assertFalse(node0.isRegExp());
59:       assertFalse(node0.isSetterDef());
60:       assertFalse(node0.isFunction());
61:       assertFalse(node0.isTry());
62:       assertFalse(node0.isDefaultCase());
63:       assertFalse(node0.isVar());
64:       assertFalse(node0.isArrayLit());
65:       assertFalse(node0.isGetterDef());
66:       assertFalse(node0.isDebugger());
67:       assertFalse(node0.isParamList());
68:       assertFalse(node0.isStringKey());
69:       assertFalse(node0.isString());
70:       assertFalse(node0.isOr());
71:       assertFalse(node0.isDec());
72:       assertFalse(node0.isAdd());
73:       assertFalse(node0.isNew());
74:       assertFalse(node0.hasChildren());
75:       assertFalse(node0.isLabel());
76:       assertFalse(node0.isReturn());
77:       assertFalse(node0.isWhile());
78:       assertFalse(node0.isDo());
79:       assertFalse(node0.isAssignAdd());
80:       assertFalse(node0.isCall());
81:       assertFalse(node0.isGetElem());
82:       assertFalse(node0.isEmpty());
83:       assertFalse(node0.isAssign());
84:       assertFalse(node0.isTypeOf());
85:       assertFalse(node0.isTrue());
86:       assertFalse(node0.isExprResult());
87:       assertFalse(node0.isVoid());
88:       assertFalse(node0.isNull());
89:       assertFalse(node0.isBreak());
90:       assertFalse(node0.isDelProp());
91:       assertFalse(node0.isName());
92:       assertNotNull(node0);
93:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
94:       assertEquals(56, Node.CHANGE_TIME);
95:       assertEquals(47, Node.IS_DISPATCHER);
96:       assertEquals(2, Node.POST_FLAG);
97:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
98:       assertEquals(37, Node.OPT_ARG_NAME);
99:       assertEquals(43, Node.IS_CONSTANT_NAME);
100:       assertEquals(51, Node.STATIC_SOURCE_FILE);
101:       assertEquals(4095, Node.COLUMN_MASK);
102:       assertEquals(1, Node.DECR_FLAG);
103:       assertEquals(32, Node.INCRDECR_PROP);
104:       assertEquals(12, Node.COLUMN_BITS);
105:       assertEquals(46, Node.IS_NAMESPACE);
106:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
107:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
108:       assertEquals(50, Node.FREE_CALL);
109:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
110:       assertEquals(57, Node.REFLECTED_OBJECT);
111:       assertEquals(54, Node.SLASH_V);
112:       assertEquals(48, Node.DIRECTIVES);
113:       assertEquals(40, Node.ORIGINALNAME_PROP);
114:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
115:       assertEquals(55, Node.INFERRED_FUNCTION);
116:       assertEquals(49, Node.DIRECT_EVAL);
117:       assertEquals(30, Node.VAR_ARGS_NAME);
118:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
119:       assertEquals(8, Node.FLAG_NO_THROWS);
120:       assertEquals(39, Node.EMPTY_BLOCK);
121:       assertEquals(36, Node.QUOTED_PROP);
122:       assertEquals(57, Node.LAST_PROP);
123:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
124:       assertEquals(52, Node.LENGTH);
125:       assertEquals(15, Node.NO_SIDE_EFFECTS);
126:       assertEquals(29, Node.JSDOC_INFO_PROP);
127:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
128:       assertEquals(53, Node.INPUT_ID);
129:       
130:       String string0 = node0.getString();
131:       assertEquals(",}", string0);
132:       assertFalse(node0.isObjectLit());
133:       assertFalse(node0.isNot());
134:       assertFalse(node0.isInstanceOf());
135:       assertFalse(node0.isWith());
136:       assertFalse(node0.isComma());
137:       assertFalse(node0.isThis());
138:       assertFalse(node0.isScript());
139:       assertFalse(node0.isGetProp());
140:       assertFalse(node0.isThrow());
141:       assertFalse(node0.isCast());
142:       assertFalse(node0.hasOneChild());
143:       assertFalse(node0.isFalse());
144:       assertFalse(node0.isNumber());
145:       assertEquals((-1), node0.getSourcePosition());
146:       assertEquals((-1), node0.getCharno());
147:       assertFalse(node0.isLabelName());
148:       assertFalse(node0.isAnd());
149:       assertFalse(node0.isSwitch());
150:       assertEquals(138, node0.getType());
151:       assertFalse(node0.isCase());
152:       assertFalse(node0.isIn());
153:       assertFalse(node0.isContinue());
154:       assertFalse(node0.hasMoreThanOneChild());
155:       assertFalse(node0.isInc());
156:       assertFalse(node0.isBlock());
157:       assertFalse(node0.isFor());
158:       assertFalse(node0.isHook());
159:       assertFalse(node0.isNE());
160:       assertEquals((-1), node0.getLineno());
161:       assertFalse(node0.isIf());
162:       assertFalse(node0.isCatch());
163:       assertEquals(0, node0.getChildCount());
164:       assertFalse(node0.isRegExp());
165:       assertFalse(node0.isSetterDef());
166:       assertFalse(node0.isFunction());
167:       assertFalse(node0.isTry());
168:       assertFalse(node0.isDefaultCase());
169:       assertFalse(node0.isVar());
170:       assertFalse(node0.isArrayLit());
171:       assertFalse(node0.isGetterDef());
172:       assertFalse(node0.isDebugger());
173:       assertFalse(node0.isParamList());
174:       assertFalse(node0.isStringKey());
175:       assertFalse(node0.isString());
176:       assertFalse(node0.isOr());
177:       assertFalse(node0.isDec());
178:       assertFalse(node0.isAdd());
179:       assertFalse(node0.isNew());
180:       assertFalse(node0.hasChildren());
181:       assertFalse(node0.isLabel());
182:       assertFalse(node0.isReturn());
183:       assertFalse(node0.isWhile());
184:       assertFalse(node0.isDo());
185:       assertFalse(node0.isAssignAdd());
186:       assertFalse(node0.isCall());
187:       assertFalse(node0.isGetElem());
188:       assertFalse(node0.isEmpty());
189:       assertFalse(node0.isAssign());
190:       assertFalse(node0.isTypeOf());
191:       assertFalse(node0.isTrue());
192:       assertFalse(node0.isExprResult());
193:       assertFalse(node0.isVoid());
194:       assertFalse(node0.isNull());
195:       assertFalse(node0.isBreak());
196:       assertFalse(node0.isDelProp());
197:       assertFalse(node0.isName());
198:       assertNotNull(string0);
199:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
200:       assertEquals(56, Node.CHANGE_TIME);
201:       assertEquals(47, Node.IS_DISPATCHER);
202:       assertEquals(2, Node.POST_FLAG);
203:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
204:       assertEquals(37, Node.OPT_ARG_NAME);
205:       assertEquals(43, Node.IS_CONSTANT_NAME);
206:       assertEquals(51, Node.STATIC_SOURCE_FILE);
207:       assertEquals(4095, Node.COLUMN_MASK);
208:       assertEquals(1, Node.DECR_FLAG);
209:       assertEquals(32, Node.INCRDECR_PROP);
210:       assertEquals(12, Node.COLUMN_BITS);
211:       assertEquals(46, Node.IS_NAMESPACE);
212:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
213:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
214:       assertEquals(50, Node.FREE_CALL);
215:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
216:       assertEquals(57, Node.REFLECTED_OBJECT);
217:       assertEquals(54, Node.SLASH_V);
218:       assertEquals(48, Node.DIRECTIVES);
219:       assertEquals(40, Node.ORIGINALNAME_PROP);
220:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
221:       assertEquals(55, Node.INFERRED_FUNCTION);
222:       assertEquals(49, Node.DIRECT_EVAL);
223:       assertEquals(30, Node.VAR_ARGS_NAME);
224:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
225:       assertEquals(8, Node.FLAG_NO_THROWS);
226:       assertEquals(39, Node.EMPTY_BLOCK);
227:       assertEquals(36, Node.QUOTED_PROP);
228:       assertEquals(57, Node.LAST_PROP);
229:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
230:       assertEquals(52, Node.LENGTH);
231:       assertEquals(15, Node.NO_SIDE_EFFECTS);
232:       assertEquals(29, Node.JSDOC_INFO_PROP);
233:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
234:       assertEquals(53, Node.INPUT_ID);
235:       
236:       boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
237:       assertFalse(boolean0);
238:       assertFalse(node0.isObjectLit());
239:       assertFalse(node0.isNot());
240:       assertFalse(node0.isInstanceOf());
241:       assertFalse(node0.isWith());
242:       assertFalse(node0.isComma());
243:       assertFalse(node0.isThis());
244:       assertFalse(node0.isScript());
245:       assertFalse(node0.isGetProp());
246:       assertFalse(node0.isThrow());
247:       assertFalse(node0.isCast());
248:       assertFalse(node0.hasOneChild());
249:       assertFalse(node0.isFalse());
250:       assertFalse(node0.isNumber());
251:       assertEquals((-1), node0.getSourcePosition());
252:       assertEquals((-1), node0.getCharno());
253:       assertFalse(node0.isLabelName());
254:       assertFalse(node0.isAnd());
255:       assertFalse(node0.isSwitch());
256:       assertEquals(138, node0.getType());
257:       assertFalse(node0.isCase());
258:       assertFalse(node0.isIn());
259:       assertFalse(node0.isContinue());
260:       assertFalse(node0.hasMoreThanOneChild());
261:       assertFalse(node0.isInc());
262:       assertFalse(node0.isBlock());
263:       assertFalse(node0.isFor());
264:       assertFalse(node0.isHook());
265:       assertFalse(node0.isNE());
266:       assertEquals((-1), node0.getLineno());
267:       assertFalse(node0.isIf());
268:       assertFalse(node0.isCatch());
269:       assertEquals(0, node0.getChildCount());
270:       assertFalse(node0.isRegExp());
271:       assertFalse(node0.isSetterDef());
272:       assertFalse(node0.isFunction());
273:       assertFalse(node0.isTry());
274:       assertFalse(node0.isDefaultCase());
275:       assertFalse(node0.isVar());
276:       assertFalse(node0.isArrayLit());
277:       assertFalse(node0.isGetterDef());
278:       assertFalse(node0.isDebugger());
279:       assertFalse(node0.isParamList());
280:       assertFalse(node0.isStringKey());
281:       assertFalse(node0.isString());
282:       assertFalse(node0.isOr());
283:       assertFalse(node0.isDec());
284:       assertFalse(node0.isAdd());
285:       assertFalse(node0.isNew());
286:       assertFalse(node0.hasChildren());
287:       assertFalse(node0.isLabel());
288:       assertFalse(node0.isReturn());
289:       assertFalse(node0.isWhile());
290:       assertFalse(node0.isDo());
291:       assertFalse(node0.isAssignAdd());
292:       assertFalse(node0.isCall());
293:       assertFalse(node0.isGetElem());
294:       assertFalse(node0.isEmpty());
295:       assertFalse(node0.isAssign());
296:       assertFalse(node0.isTypeOf());
297:       assertFalse(node0.isTrue());
298:       assertFalse(node0.isExprResult());
299:       assertFalse(node0.isVoid());
300:       assertFalse(node0.isNull());
301:       assertFalse(node0.isBreak());
302:       assertFalse(node0.isDelProp());
303:       assertFalse(node0.isName());
304:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
305:       assertEquals(56, Node.CHANGE_TIME);
306:       assertEquals(47, Node.IS_DISPATCHER);
307:       assertEquals(2, Node.POST_FLAG);
308:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
309:       assertEquals(37, Node.OPT_ARG_NAME);
310:       assertEquals(43, Node.IS_CONSTANT_NAME);
311:       assertEquals(51, Node.STATIC_SOURCE_FILE);
312:       assertEquals(4095, Node.COLUMN_MASK);
313:       assertEquals(1, Node.DECR_FLAG);
314:       assertEquals(32, Node.INCRDECR_PROP);
315:       assertEquals(12, Node.COLUMN_BITS);
316:       assertEquals(46, Node.IS_NAMESPACE);
317:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
318:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
319:       assertEquals(50, Node.FREE_CALL);
320:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
321:       assertEquals(57, Node.REFLECTED_OBJECT);
322:       assertEquals(54, Node.SLASH_V);
323:       assertEquals(48, Node.DIRECTIVES);
324:       assertEquals(40, Node.ORIGINALNAME_PROP);
325:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
326:       assertEquals(55, Node.INFERRED_FUNCTION);
327:       assertEquals(49, Node.DIRECT_EVAL);
328:       assertEquals(30, Node.VAR_ARGS_NAME);
329:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
330:       assertEquals(8, Node.FLAG_NO_THROWS);
331:       assertEquals(39, Node.EMPTY_BLOCK);
332:       assertEquals(36, Node.QUOTED_PROP);
333:       assertEquals(57, Node.LAST_PROP);
334:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
335:       assertEquals(52, Node.LENGTH);
336:       assertEquals(15, Node.NO_SIDE_EFFECTS);
337:       assertEquals(29, Node.JSDOC_INFO_PROP);
338:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
339:       assertEquals(53, Node.INPUT_ID);
340:       
341:       boolean boolean1 = node0.isArrayLit();
342:       assertFalse(boolean1);
343:       assertFalse(node0.isObjectLit());
344:       assertFalse(node0.isNot());
345:       assertFalse(node0.isInstanceOf());
346:       assertFalse(node0.isWith());
347:       assertFalse(node0.isComma());
348:       assertFalse(node0.isThis());
349:       assertFalse(node0.isScript());
350:       assertFalse(node0.isGetProp());
351:       assertFalse(node0.isThrow());
352:       assertFalse(node0.isCast());
353:       assertFalse(node0.hasOneChild());
354:       assertFalse(node0.isFalse());
355:       assertFalse(node0.isNumber());
356:       assertEquals((-1), node0.getSourcePosition());
357:       assertEquals((-1), node0.getCharno());
358:       assertFalse(node0.isLabelName());
359:       assertFalse(node0.isAnd());
360:       assertFalse(node0.isSwitch());
361:       assertEquals(138, node0.getType());
362:       assertFalse(node0.isCase());
363:       assertFalse(node0.isIn());
364:       assertFalse(node0.isContinue());
365:       assertFalse(node0.hasMoreThanOneChild());
366:       assertFalse(node0.isInc());
367:       assertFalse(node0.isBlock());
368:       assertFalse(node0.isFor());
369:       assertFalse(node0.isHook());
370:       assertFalse(node0.isNE());
371:       assertEquals((-1), node0.getLineno());
372:       assertFalse(node0.isIf());
373:       assertFalse(node0.isCatch());
374:       assertEquals(0, node0.getChildCount());
375:       assertFalse(node0.isRegExp());
376:       assertFalse(node0.isSetterDef());
377:       assertFalse(node0.isFunction());
378:       assertFalse(node0.isTry());
379:       assertFalse(node0.isDefaultCase());
380:       assertFalse(node0.isVar());
381:       assertFalse(node0.isArrayLit());
382:       assertFalse(node0.isGetterDef());
383:       assertFalse(node0.isDebugger());
384:       assertFalse(node0.isParamList());
385:       assertFalse(node0.isStringKey());
386:       assertFalse(node0.isString());
387:       assertFalse(node0.isOr());
388:       assertFalse(node0.isDec());
389:       assertFalse(node0.isAdd());
390:       assertFalse(node0.isNew());
391:       assertFalse(node0.hasChildren());
392:       assertFalse(node0.isLabel());
393:       assertFalse(node0.isReturn());
394:       assertFalse(node0.isWhile());
395:       assertFalse(node0.isDo());
396:       assertFalse(node0.isAssignAdd());
397:       assertFalse(node0.isCall());
398:       assertFalse(node0.isGetElem());
399:       assertFalse(node0.isEmpty());
400:       assertFalse(node0.isAssign());
401:       assertFalse(node0.isTypeOf());
402:       assertFalse(node0.isTrue());
403:       assertFalse(node0.isExprResult());
404:       assertFalse(node0.isVoid());
405:       assertFalse(node0.isNull());
406:       assertFalse(node0.isBreak());
407:       assertFalse(node0.isDelProp());
408:       assertFalse(node0.isName());
409:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
410:       assertEquals(56, Node.CHANGE_TIME);
411:       assertEquals(47, Node.IS_DISPATCHER);
412:       assertEquals(2, Node.POST_FLAG);
413:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
414:       assertEquals(37, Node.OPT_ARG_NAME);
415:       assertEquals(43, Node.IS_CONSTANT_NAME);
416:       assertEquals(51, Node.STATIC_SOURCE_FILE);
417:       assertEquals(4095, Node.COLUMN_MASK);
418:       assertEquals(1, Node.DECR_FLAG);
419:       assertEquals(32, Node.INCRDECR_PROP);
420:       assertEquals(12, Node.COLUMN_BITS);
421:       assertEquals(46, Node.IS_NAMESPACE);
422:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
423:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
424:       assertEquals(50, Node.FREE_CALL);
425:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
426:       assertEquals(57, Node.REFLECTED_OBJECT);
427:       assertEquals(54, Node.SLASH_V);
428:       assertEquals(48, Node.DIRECTIVES);
429:       assertEquals(40, Node.ORIGINALNAME_PROP);
430:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
431:       assertEquals(55, Node.INFERRED_FUNCTION);
432:       assertEquals(49, Node.DIRECT_EVAL);
433:       assertEquals(30, Node.VAR_ARGS_NAME);
434:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
435:       assertEquals(8, Node.FLAG_NO_THROWS);
436:       assertEquals(39, Node.EMPTY_BLOCK);
437:       assertEquals(36, Node.QUOTED_PROP);
438:       assertEquals(57, Node.LAST_PROP);
439:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
440:       assertEquals(52, Node.LENGTH);
441:       assertEquals(15, Node.NO_SIDE_EFFECTS);
442:       assertEquals(29, Node.JSDOC_INFO_PROP);
443:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
444:       assertEquals(53, Node.INPUT_ID);
445:       assertTrue(boolean1 == boolean0);
446:       
447:       Node node1 = new Node(30, node0);
448:       assertFalse(node0.isObjectLit());
449:       assertFalse(node0.isNot());
450:       assertFalse(node0.isInstanceOf());
451:       assertFalse(node0.isWith());
452:       assertFalse(node0.isComma());
453:       assertFalse(node0.isThis());
454:       assertFalse(node0.isScript());
455:       assertFalse(node0.isGetProp());
456:       assertFalse(node0.isThrow());
457:       assertFalse(node0.isCast());
458:       assertFalse(node0.hasOneChild());
459:       assertFalse(node0.isFalse());
460:       assertFalse(node0.isNumber());
461:       assertEquals((-1), node0.getSourcePosition());
462:       assertEquals((-1), node0.getCharno());
463:       assertFalse(node0.isLabelName());
464:       assertFalse(node0.isAnd());
465:       assertFalse(node0.isSwitch());
466:       assertEquals(138, node0.getType());
467:       assertFalse(node0.isCase());
468:       assertFalse(node0.isIn());
469:       assertFalse(node0.isContinue());
470:       assertFalse(node0.hasMoreThanOneChild());
471:       assertFalse(node0.isInc());
472:       assertFalse(node0.isBlock());
473:       assertFalse(node0.isFor());
474:       assertFalse(node0.isHook());
475:       assertFalse(node0.isNE());
476:       assertEquals((-1), node0.getLineno());
477:       assertFalse(node0.isIf());
478:       assertFalse(node0.isCatch());
479:       assertEquals(0, node0.getChildCount());
480:       assertFalse(node0.isRegExp());
481:       assertFalse(node0.isSetterDef());
482:       assertFalse(node0.isFunction());
483:       assertFalse(node0.isTry());
484:       assertFalse(node0.isDefaultCase());
485:       assertFalse(node0.isVar());
486:       assertFalse(node0.isArrayLit());
487:       assertFalse(node0.isGetterDef());
488:       assertFalse(node0.isDebugger());
489:       assertFalse(node0.isParamList());
490:       assertFalse(node0.isStringKey());
491:       assertFalse(node0.isString());
492:       assertFalse(node0.isOr());
493:       assertFalse(node0.isDec());
494:       assertFalse(node0.isAdd());
495:       assertFalse(node0.isNew());
496:       assertFalse(node0.hasChildren());
497:       assertFalse(node0.isLabel());
498:       assertFalse(node0.isReturn());
499:       assertFalse(node0.isWhile());
500:       assertFalse(node0.isDo());
501:       assertFalse(node0.isAssignAdd());
502:       assertFalse(node0.isCall());
503:       assertFalse(node0.isGetElem());
504:       assertFalse(node0.isEmpty());
505:       assertFalse(node0.isAssign());
506:       assertFalse(node0.isTypeOf());
507:       assertFalse(node0.isTrue());
508:       assertFalse(node0.isExprResult());
509:       assertFalse(node0.isVoid());
510:       assertFalse(node0.isNull());
511:       assertFalse(node0.isBreak());
512:       assertFalse(node0.isDelProp());
513:       assertFalse(node0.isName());
514:       assertFalse(node1.isNumber());
515:       assertFalse(node1.isGetElem());
516:       assertFalse(node1.isLabelName());
517:       assertEquals((-1), node1.getLineno());
518:       assertFalse(node1.isOr());
519:       assertEquals((-1), node1.getSourcePosition());
520:       assertFalse(node1.isAnd());
521:       assertFalse(node1.isDo());
522:       assertEquals(30, node1.getType());
523:       assertFalse(node1.isCast());
524:       assertFalse(node1.isAssignAdd());
525:       assertFalse(node1.isVar());
526:       assertFalse(node1.isContinue());
527:       assertFalse(node1.isLabel());
528:       assertFalse(node1.isBreak());
529:       assertFalse(node1.isNull());
530:       assertFalse(node1.isGetProp());
531:       assertFalse(node1.isCall());
532:       assertFalse(node1.isName());
533:       assertFalse(node1.isAdd());
534:       assertFalse(node1.isObjectLit());
535:       assertFalse(node1.isNot());
536:       assertFalse(node1.isString());
537:       assertFalse(node1.isWhile());
538:       assertFalse(node1.isVoid());
539:       assertFalse(node1.isExprResult());
540:       assertFalse(node1.isReturn());
541:       assertFalse(node1.isAssign());
542:       assertFalse(node1.isTypeOf());
543:       assertFalse(node1.isComma());
544:       assertFalse(node1.isDec());
545:       assertFalse(node1.isIf());
546:       assertFalse(node1.isGetterDef());
547:       assertFalse(node1.isDelProp());
548:       assertTrue(node1.hasOneChild());
549:       assertFalse(node1.isFor());
550:       assertFalse(node1.isEmpty());
551:       assertFalse(node1.isNE());
552:       assertFalse(node1.isArrayLit());
553:       assertFalse(node1.isIn());
554:       assertFalse(node1.isDebugger());
555:       assertFalse(node1.isTrue());
556:       assertFalse(node1.isDefaultCase());
557:       assertFalse(node1.isInc());
558:       assertFalse(node1.isSwitch());
559:       assertFalse(node1.isThrow());
560:       assertFalse(node1.isFalse());
561:       assertFalse(node1.isFunction());
562:       assertTrue(node1.isNew());
563:       assertFalse(node1.isStringKey());
564:       assertFalse(node1.isParamList());
565:       assertFalse(node1.isSetterDef());
566:       assertEquals((-1), node1.getCharno());
567:       assertFalse(node1.isWith());
568:       assertFalse(node1.isScript());
569:       assertFalse(node1.isTry());
570:       assertFalse(node1.isCase());
571:       assertFalse(node1.isHook());
572:       assertTrue(node1.hasChildren());
573:       assertFalse(node1.isCatch());
574:       assertFalse(node1.isInstanceOf());
575:       assertFalse(node1.hasMoreThanOneChild());
576:       assertFalse(node1.isThis());
577:       assertFalse(node1.isBlock());
578:       assertFalse(node1.isRegExp());
579:       assertEquals(1, node1.getChildCount());
580:       assertNotNull(node1);
581:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
582:       assertEquals(56, Node.CHANGE_TIME);
583:       assertEquals(47, Node.IS_DISPATCHER);
584:       assertEquals(2, Node.POST_FLAG);
585:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
586:       assertEquals(37, Node.OPT_ARG_NAME);
587:       assertEquals(43, Node.IS_CONSTANT_NAME);
588:       assertEquals(51, Node.STATIC_SOURCE_FILE);
589:       assertEquals(4095, Node.COLUMN_MASK);
590:       assertEquals(1, Node.DECR_FLAG);
591:       assertEquals(32, Node.INCRDECR_PROP);
592:       assertEquals(12, Node.COLUMN_BITS);
593:       assertEquals(46, Node.IS_NAMESPACE);
594:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
595:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
596:       assertEquals(50, Node.FREE_CALL);
597:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
598:       assertEquals(57, Node.REFLECTED_OBJECT);
599:       assertEquals(54, Node.SLASH_V);
600:       assertEquals(48, Node.DIRECTIVES);
601:       assertEquals(40, Node.ORIGINALNAME_PROP);
602:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
603:       assertEquals(55, Node.INFERRED_FUNCTION);
604:       assertEquals(49, Node.DIRECT_EVAL);
605:       assertEquals(30, Node.VAR_ARGS_NAME);
606:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
607:       assertEquals(8, Node.FLAG_NO_THROWS);
608:       assertEquals(39, Node.EMPTY_BLOCK);
609:       assertEquals(36, Node.QUOTED_PROP);
610:       assertEquals(57, Node.LAST_PROP);
611:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
612:       assertEquals(52, Node.LENGTH);
613:       assertEquals(15, Node.NO_SIDE_EFFECTS);
614:       assertEquals(29, Node.JSDOC_INFO_PROP);
615:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
616:       assertEquals(53, Node.INPUT_ID);
617:       assertEquals(30, Node.VAR_ARGS_NAME);
618:       assertEquals(49, Node.DIRECT_EVAL);
619:       assertEquals(15, Node.NO_SIDE_EFFECTS);
620:       assertEquals(52, Node.LENGTH);
621:       assertEquals(32, Node.INCRDECR_PROP);
622:       assertEquals(12, Node.COLUMN_BITS);
623:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
624:       assertEquals(1, Node.DECR_FLAG);
625:       assertEquals(57, Node.LAST_PROP);
626:       assertEquals(50, Node.FREE_CALL);
627:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
628:       assertEquals(47, Node.IS_DISPATCHER);
629:       assertEquals(40, Node.ORIGINALNAME_PROP);
630:       assertEquals(2, Node.POST_FLAG);
631:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
632:       assertEquals(46, Node.IS_NAMESPACE);
633:       assertEquals(51, Node.STATIC_SOURCE_FILE);
634:       assertEquals(54, Node.SLASH_V);
635:       assertEquals(43, Node.IS_CONSTANT_NAME);
636:       assertEquals(36, Node.QUOTED_PROP);
637:       assertEquals(55, Node.INFERRED_FUNCTION);
638:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
639:       assertEquals(4095, Node.COLUMN_MASK);
640:       assertEquals(53, Node.INPUT_ID);
641:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
642:       assertEquals(29, Node.JSDOC_INFO_PROP);
643:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
644:       assertEquals(8, Node.FLAG_NO_THROWS);
645:       assertEquals(39, Node.EMPTY_BLOCK);
646:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
647:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
648:       assertEquals(57, Node.REFLECTED_OBJECT);
649:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
650:       assertEquals(37, Node.OPT_ARG_NAME);
651:       assertEquals(48, Node.DIRECTIVES);
652:       assertEquals(56, Node.CHANGE_TIME);
653:       assertFalse(node1.equals((Object)node0));
654:       
655:       node0.setString(",}");
656:       assertFalse(node0.isObjectLit());
657:       assertFalse(node0.isNot());
658:       assertFalse(node0.isInstanceOf());
659:       assertFalse(node0.isWith());
660:       assertFalse(node0.isComma());
661:       assertFalse(node0.isThis());
662:       assertFalse(node0.isScript());
663:       assertFalse(node0.isGetProp());
664:       assertFalse(node0.isThrow());
665:       assertFalse(node0.isCast());
666:       assertFalse(node0.hasOneChild());
667:       assertFalse(node0.isFalse());
668:       assertFalse(node0.isNumber());
669:       assertEquals((-1), node0.getSourcePosition());
670:       assertEquals((-1), node0.getCharno());
671:       assertFalse(node0.isLabelName());
672:       assertFalse(node0.isAnd());
673:       assertFalse(node0.isSwitch());
674:       assertEquals(138, node0.getType());
675:       assertFalse(node0.isCase());
676:       assertFalse(node0.isIn());
677:       assertFalse(node0.isContinue());
678:       assertFalse(node0.hasMoreThanOneChild());
679:       assertFalse(node0.isInc());
680:       assertFalse(node0.isBlock());
681:       assertFalse(node0.isFor());
682:       assertFalse(node0.isHook());
683:       assertFalse(node0.isNE());
684:       assertEquals((-1), node0.getLineno());
685:       assertFalse(node0.isIf());
686:       assertFalse(node0.isCatch());
687:       assertEquals(0, node0.getChildCount());
688:       assertFalse(node0.isRegExp());
689:       assertFalse(node0.isSetterDef());
690:       assertFalse(node0.isFunction());
691:       assertFalse(node0.isTry());
692:       assertFalse(node0.isDefaultCase());
693:       assertFalse(node0.isVar());
694:       assertFalse(node0.isArrayLit());
695:       assertFalse(node0.isGetterDef());
696:       assertFalse(node0.isDebugger());
697:       assertFalse(node0.isParamList());
698:       assertFalse(node0.isStringKey());
699:       assertFalse(node0.isString());
700:       assertFalse(node0.isOr());
701:       assertFalse(node0.isDec());
702:       assertFalse(node0.isAdd());
703:       assertFalse(node0.isNew());
704:       assertFalse(node0.hasChildren());
705:       assertFalse(node0.isLabel());
706:       assertFalse(node0.isReturn());
707:       assertFalse(node0.isWhile());
708:       assertFalse(node0.isDo());
709:       assertFalse(node0.isAssignAdd());
710:       assertFalse(node0.isCall());
711:       assertFalse(node0.isGetElem());
712:       assertFalse(node0.isEmpty());
713:       assertFalse(node0.isAssign());
714:       assertFalse(node0.isTypeOf());
715:       assertFalse(node0.isTrue());
716:       assertFalse(node0.isExprResult());
717:       assertFalse(node0.isVoid());
718:       assertFalse(node0.isNull());
719:       assertFalse(node0.isBreak());
720:       assertFalse(node0.isDelProp());
721:       assertFalse(node0.isName());
722:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
723:       assertEquals(56, Node.CHANGE_TIME);
724:       assertEquals(47, Node.IS_DISPATCHER);
725:       assertEquals(2, Node.POST_FLAG);
726:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
727:       assertEquals(37, Node.OPT_ARG_NAME);
728:       assertEquals(43, Node.IS_CONSTANT_NAME);
729:       assertEquals(51, Node.STATIC_SOURCE_FILE);
730:       assertEquals(4095, Node.COLUMN_MASK);
731:       assertEquals(1, Node.DECR_FLAG);
732:       assertEquals(32, Node.INCRDECR_PROP);
733:       assertEquals(12, Node.COLUMN_BITS);
734:       assertEquals(46, Node.IS_NAMESPACE);
735:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
736:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
737:       assertEquals(50, Node.FREE_CALL);
738:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
739:       assertEquals(57, Node.REFLECTED_OBJECT);
740:       assertEquals(54, Node.SLASH_V);
741:       assertEquals(48, Node.DIRECTIVES);
742:       assertEquals(40, Node.ORIGINALNAME_PROP);
743:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
744:       assertEquals(55, Node.INFERRED_FUNCTION);
745:       assertEquals(49, Node.DIRECT_EVAL);
746:       assertEquals(30, Node.VAR_ARGS_NAME);
747:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
748:       assertEquals(8, Node.FLAG_NO_THROWS);
749:       assertEquals(39, Node.EMPTY_BLOCK);
750:       assertEquals(36, Node.QUOTED_PROP);
751:       assertEquals(57, Node.LAST_PROP);
752:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
753:       assertEquals(52, Node.LENGTH);
754:       assertEquals(15, Node.NO_SIDE_EFFECTS);
755:       assertEquals(29, Node.JSDOC_INFO_PROP);
756:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
757:       assertEquals(53, Node.INPUT_ID);
758:       assertFalse(node0.equals((Object)node1));
759:       
760:       Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
761:       assertFalse(node0.isObjectLit());
762:       assertFalse(node0.isNot());
763:       assertFalse(node0.isInstanceOf());
764:       assertFalse(node0.isWith());
765:       assertFalse(node0.isComma());
766:       assertFalse(node0.isThis());
767:       assertFalse(node0.isScript());
768:       assertFalse(node0.isGetProp());
769:       assertFalse(node0.isThrow());
770:       assertFalse(node0.isCast());
771:       assertFalse(node0.hasOneChild());
772:       assertFalse(node0.isFalse());
773:       assertFalse(node0.isNumber());
774:       assertEquals((-1), node0.getSourcePosition());
775:       assertEquals((-1), node0.getCharno());
776:       assertFalse(node0.isLabelName());
777:       assertFalse(node0.isAnd());
778:       assertFalse(node0.isSwitch());
779:       assertEquals(138, node0.getType());
780:       assertFalse(node0.isCase());
781:       assertFalse(node0.isIn());
782:       assertFalse(node0.isContinue());
783:       assertFalse(node0.hasMoreThanOneChild());
784:       assertFalse(node0.isInc());
785:       assertFalse(node0.isBlock());
786:       assertFalse(node0.isFor());
787:       assertFalse(node0.isHook());
788:       assertFalse(node0.isNE());
789:       assertEquals((-1), node0.getLineno());
790:       assertFalse(node0.isIf());
791:       assertFalse(node0.isCatch());
792:       assertEquals(0, node0.getChildCount());
793:       assertFalse(node0.isRegExp());
794:       assertFalse(node0.isSetterDef());
795:       assertFalse(node0.isFunction());
796:       assertFalse(node0.isTry());
797:       assertFalse(node0.isDefaultCase());
798:       assertFalse(node0.isVar());
799:       assertFalse(node0.isArrayLit());
800:       assertFalse(node0.isGetterDef());
801:       assertFalse(node0.isDebugger());
802:       assertFalse(node0.isParamList());
803:       assertFalse(node0.isStringKey());
804:       assertFalse(node0.isString());
805:       assertFalse(node0.isOr());
806:       assertFalse(node0.isDec());
807:       assertFalse(node0.isAdd());
808:       assertFalse(node0.isNew());
809:       assertFalse(node0.hasChildren());
810:       assertFalse(node0.isLabel());
811:       assertFalse(node0.isReturn());
812:       assertFalse(node0.isWhile());
813:       assertFalse(node0.isDo());
814:       assertFalse(node0.isAssignAdd());
815:       assertFalse(node0.isCall());
816:       assertFalse(node0.isGetElem());
817:       assertFalse(node0.isEmpty());
818:       assertFalse(node0.isAssign());
819:       assertFalse(node0.isTypeOf());
820:       assertFalse(node0.isTrue());
821:       assertFalse(node0.isExprResult());
822:       assertFalse(node0.isVoid());
823:       assertFalse(node0.isNull());
824:       assertFalse(node0.isBreak());
825:       assertFalse(node0.isDelProp());
826:       assertFalse(node0.isName());
827:       assertFalse(node1.isNumber());
828:       assertFalse(node1.isGetElem());
829:       assertFalse(node1.isLabelName());
830:       assertEquals((-1), node1.getLineno());
831:       assertFalse(node1.isOr());
832:       assertEquals((-1), node1.getSourcePosition());
833:       assertFalse(node1.isAnd());
834:       assertFalse(node1.isDo());
835:       assertEquals(30, node1.getType());
836:       assertFalse(node1.isCast());
837:       assertFalse(node1.isAssignAdd());
838:       assertFalse(node1.isVar());
839:       assertFalse(node1.isContinue());
840:       assertFalse(node1.isLabel());
841:       assertFalse(node1.isBreak());
842:       assertFalse(node1.isNull());
843:       assertFalse(node1.isGetProp());
844:       assertFalse(node1.isCall());
845:       assertFalse(node1.isName());
846:       assertFalse(node1.isAdd());
847:       assertFalse(node1.isObjectLit());
848:       assertFalse(node1.isNot());
849:       assertFalse(node1.isString());
850:       assertFalse(node1.isWhile());
851:       assertFalse(node1.isVoid());
852:       assertFalse(node1.isExprResult());
853:       assertFalse(node1.isReturn());
854:       assertFalse(node1.isAssign());
855:       assertFalse(node1.isTypeOf());
856:       assertFalse(node1.isComma());
857:       assertFalse(node1.isDec());
858:       assertFalse(node1.isIf());
859:       assertFalse(node1.isGetterDef());
860:       assertFalse(node1.isDelProp());
861:       assertTrue(node1.hasOneChild());
862:       assertFalse(node1.isFor());
863:       assertFalse(node1.isEmpty());
864:       assertFalse(node1.isNE());
865:       assertFalse(node1.isArrayLit());
866:       assertFalse(node1.isIn());
867:       assertFalse(node1.isDebugger());
868:       assertFalse(node1.isTrue());
869:       assertFalse(node1.isDefaultCase());
870:       assertFalse(node1.isInc());
871:       assertFalse(node1.isSwitch());
872:       assertFalse(node1.isThrow());
873:       assertFalse(node1.isFalse());
874:       assertFalse(node1.isFunction());
875:       assertTrue(node1.isNew());
876:       assertFalse(node1.isStringKey());
877:       assertFalse(node1.isParamList());
878:       assertFalse(node1.isSetterDef());
879:       assertEquals((-1), node1.getCharno());
880:       assertFalse(node1.isWith());
881:       assertFalse(node1.isScript());
882:       assertFalse(node1.isTry());
883:       assertFalse(node1.isCase());
884:       assertFalse(node1.isHook());
885:       assertTrue(node1.hasChildren());
886:       assertFalse(node1.isCatch());
887:       assertFalse(node1.isInstanceOf());
888:       assertFalse(node1.hasMoreThanOneChild());
889:       assertFalse(node1.isThis());
890:       assertFalse(node1.isBlock());
891:       assertFalse(node1.isRegExp());
892:       assertEquals(1, node1.getChildCount());
893:       assertNotNull(node_NodeMismatch0);
894:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
895:       assertEquals(56, Node.CHANGE_TIME);
896:       assertEquals(47, Node.IS_DISPATCHER);
897:       assertEquals(2, Node.POST_FLAG);
898:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
899:       assertEquals(37, Node.OPT_ARG_NAME);
900:       assertEquals(43, Node.IS_CONSTANT_NAME);
901:       assertEquals(51, Node.STATIC_SOURCE_FILE);
902:       assertEquals(4095, Node.COLUMN_MASK);
903:       assertEquals(1, Node.DECR_FLAG);
904:       assertEquals(32, Node.INCRDECR_PROP);
905:       assertEquals(12, Node.COLUMN_BITS);
906:       assertEquals(46, Node.IS_NAMESPACE);
907:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
908:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
909:       assertEquals(50, Node.FREE_CALL);
910:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
911:       assertEquals(57, Node.REFLECTED_OBJECT);
912:       assertEquals(54, Node.SLASH_V);
913:       assertEquals(48, Node.DIRECTIVES);
914:       assertEquals(40, Node.ORIGINALNAME_PROP);
915:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
916:       assertEquals(55, Node.INFERRED_FUNCTION);
917:       assertEquals(49, Node.DIRECT_EVAL);
918:       assertEquals(30, Node.VAR_ARGS_NAME);
919:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
920:       assertEquals(8, Node.FLAG_NO_THROWS);
921:       assertEquals(39, Node.EMPTY_BLOCK);
922:       assertEquals(36, Node.QUOTED_PROP);
923:       assertEquals(57, Node.LAST_PROP);
924:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
925:       assertEquals(52, Node.LENGTH);
926:       assertEquals(15, Node.NO_SIDE_EFFECTS);
927:       assertEquals(29, Node.JSDOC_INFO_PROP);
928:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
929:       assertEquals(53, Node.INPUT_ID);
930:       assertEquals(30, Node.VAR_ARGS_NAME);
931:       assertEquals(49, Node.DIRECT_EVAL);
932:       assertEquals(15, Node.NO_SIDE_EFFECTS);
933:       assertEquals(52, Node.LENGTH);
934:       assertEquals(32, Node.INCRDECR_PROP);
935:       assertEquals(12, Node.COLUMN_BITS);
936:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
937:       assertEquals(1, Node.DECR_FLAG);
938:       assertEquals(57, Node.LAST_PROP);
939:       assertEquals(50, Node.FREE_CALL);
940:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
941:       assertEquals(47, Node.IS_DISPATCHER);
942:       assertEquals(40, Node.ORIGINALNAME_PROP);
943:       assertEquals(2, Node.POST_FLAG);
944:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
945:       assertEquals(46, Node.IS_NAMESPACE);
946:       assertEquals(51, Node.STATIC_SOURCE_FILE);
947:       assertEquals(54, Node.SLASH_V);
948:       assertEquals(43, Node.IS_CONSTANT_NAME);
949:       assertEquals(36, Node.QUOTED_PROP);
950:       assertEquals(55, Node.INFERRED_FUNCTION);
951:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
952:       assertEquals(4095, Node.COLUMN_MASK);
953:       assertEquals(53, Node.INPUT_ID);
954:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
955:       assertEquals(29, Node.JSDOC_INFO_PROP);
956:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
957:       assertEquals(8, Node.FLAG_NO_THROWS);
958:       assertEquals(39, Node.EMPTY_BLOCK);
959:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
960:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
961:       assertEquals(57, Node.REFLECTED_OBJECT);
962:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
963:       assertEquals(37, Node.OPT_ARG_NAME);
964:       assertEquals(48, Node.DIRECTIVES);
965:       assertEquals(56, Node.CHANGE_TIME);
966:       assertFalse(node0.equals((Object)node1));
967:       assertFalse(node1.equals((Object)node0));
968:       
969:       Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(31);
970:       assertEquals(31, node_SideEffectFlags1.valueOf());
971:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
972:       assertNotNull(node_SideEffectFlags1);
973:       assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
974:       
975:       Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
976:       assertEquals(31, node_SideEffectFlags1.valueOf());
977:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
978:       assertEquals(31, node_SideEffectFlags2.valueOf());
979:       assertFalse(node_SideEffectFlags2.areAllFlagsSet());
980:       assertNotNull(node_SideEffectFlags2);
981:       assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
982:       assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
983:       assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
984:       assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
985:       assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
986:       assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
987:       
988:       Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
989:       assertEquals(29, node_SideEffectFlags1.valueOf());
990:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
991:       assertFalse(node_SideEffectFlags2.areAllFlagsSet());
992:       assertEquals(29, node_SideEffectFlags2.valueOf());
993:       assertFalse(node_SideEffectFlags3.areAllFlagsSet());
994:       assertEquals(29, node_SideEffectFlags3.valueOf());
995:       assertNotNull(node_SideEffectFlags3);
996:       assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
997:       assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
998:       assertFalse(node_SideEffectFlags3.equals((Object)node_SideEffectFlags0));
999:       assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
1000:       assertSame(node_SideEffectFlags1, node_SideEffectFlags3);
1001:       assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
1002:       assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
1003:       assertSame(node_SideEffectFlags2, node_SideEffectFlags3);
1004:       assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
1005:       assertNotSame(node_SideEffectFlags3, node_SideEffectFlags0);
1006:       assertSame(node_SideEffectFlags3, node_SideEffectFlags2);
1007:       assertSame(node_SideEffectFlags3, node_SideEffectFlags1);
1008:       
1009:       Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
1010:       assertEquals(13, node_SideEffectFlags1.valueOf());
1011:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
1012:       assertFalse(node_SideEffectFlags2.areAllFlagsSet());
1013:       assertEquals(13, node_SideEffectFlags2.valueOf());
1014:       assertFalse(node_SideEffectFlags3.areAllFlagsSet());
1015:       assertEquals(13, node_SideEffectFlags3.valueOf());
1016:       assertFalse(node_SideEffectFlags4.areAllFlagsSet());
1017:       assertEquals(13, node_SideEffectFlags4.valueOf());
1018:       assertNotNull(node_SideEffectFlags4);
1019:       assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
1020:       assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
1021:       assertFalse(node_SideEffectFlags3.equals((Object)node_SideEffectFlags0));
1022:       assertFalse(node_SideEffectFlags4.equals((Object)node_SideEffectFlags0));
1023:       assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
1024:       assertSame(node_SideEffectFlags1, node_SideEffectFlags3);
1025:       assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
1026:       assertSame(node_SideEffectFlags1, node_SideEffectFlags4);
1027:       assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
1028:       assertSame(node_SideEffectFlags2, node_SideEffectFlags3);
1029:       assertSame(node_SideEffectFlags2, node_SideEffectFlags4);
1030:       assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
1031:       assertNotSame(node_SideEffectFlags3, node_SideEffectFlags0);
1032:       assertSame(node_SideEffectFlags3, node_SideEffectFlags2);
1033:       assertSame(node_SideEffectFlags3, node_SideEffectFlags1);
1034:       assertSame(node_SideEffectFlags3, node_SideEffectFlags4);
1035:       assertSame(node_SideEffectFlags4, node_SideEffectFlags3);
1036:       assertNotSame(node_SideEffectFlags4, node_SideEffectFlags0);
1037:       assertSame(node_SideEffectFlags4, node_SideEffectFlags1);
1038:       assertSame(node_SideEffectFlags4, node_SideEffectFlags2);
1039:       
1040:       boolean boolean2 = node0.isScript();
1041:       assertFalse(boolean2);
1042:       assertFalse(node0.isObjectLit());
1043:       assertFalse(node0.isNot());
1044:       assertFalse(node0.isInstanceOf());
1045:       assertFalse(node0.isWith());
1046:       assertFalse(node0.isComma());
1047:       assertFalse(node0.isThis());
1048:       assertFalse(node0.isScript());
1049:       assertFalse(node0.isGetProp());
1050:       assertFalse(node0.isThrow());
1051:       assertFalse(node0.isCast());
1052:       assertFalse(node0.hasOneChild());
1053:       assertFalse(node0.isFalse());
1054:       assertFalse(node0.isNumber());
1055:       assertEquals((-1), node0.getSourcePosition());
1056:       assertEquals((-1), node0.getCharno());
1057:       assertFalse(node0.isLabelName());
1058:       assertFalse(node0.isAnd());
1059:       assertFalse(node0.isSwitch());
1060:       assertEquals(138, node0.getType());
1061:       assertFalse(node0.isCase());
1062:       assertFalse(node0.isIn());
1063:       assertFalse(node0.isContinue());
1064:       assertFalse(node0.hasMoreThanOneChild());
1065:       assertFalse(node0.isInc());
1066:       assertFalse(node0.isBlock());
1067:       assertFalse(node0.isFor());
1068:       assertFalse(node0.isHook());
1069:       assertFalse(node0.isNE());
1070:       assertEquals((-1), node0.getLineno());
1071:       assertFalse(node0.isIf());
1072:       assertFalse(node0.isCatch());
1073:       assertEquals(0, node0.getChildCount());
1074:       assertFalse(node0.isRegExp());
1075:       assertFalse(node0.isSetterDef());
1076:       assertFalse(node0.isFunction());
1077:       assertFalse(node0.isTry());
1078:       assertFalse(node0.isDefaultCase());
1079:       assertFalse(node0.isVar());
1080:       assertFalse(node0.isArrayLit());
1081:       assertFalse(node0.isGetterDef());
1082:       assertFalse(node0.isDebugger());
1083:       assertFalse(node0.isParamList());
1084:       assertFalse(node0.isStringKey());
1085:       assertFalse(node0.isString());
1086:       assertFalse(node0.isOr());
1087:       assertFalse(node0.isDec());
1088:       assertFalse(node0.isAdd());
1089:       assertFalse(node0.isNew());
1090:       assertFalse(node0.hasChildren());
1091:       assertFalse(node0.isLabel());
1092:       assertFalse(node0.isReturn());
1093:       assertFalse(node0.isWhile());
1094:       assertFalse(node0.isDo());
1095:       assertFalse(node0.isAssignAdd());
1096:       assertFalse(node0.isCall());
1097:       assertFalse(node0.isGetElem());
1098:       assertFalse(node0.isEmpty());
1099:       assertFalse(node0.isAssign());
1100:       assertFalse(node0.isTypeOf());
1101:       assertFalse(node0.isTrue());
1102:       assertFalse(node0.isExprResult());
1103:       assertFalse(node0.isVoid());
1104:       assertFalse(node0.isNull());
1105:       assertFalse(node0.isBreak());
1106:       assertFalse(node0.isDelProp());
1107:       assertFalse(node0.isName());
1108:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1109:       assertEquals(56, Node.CHANGE_TIME);
1110:       assertEquals(47, Node.IS_DISPATCHER);
1111:       assertEquals(2, Node.POST_FLAG);
1112:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1113:       assertEquals(37, Node.OPT_ARG_NAME);
1114:       assertEquals(43, Node.IS_CONSTANT_NAME);
1115:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1116:       assertEquals(4095, Node.COLUMN_MASK);
1117:       assertEquals(1, Node.DECR_FLAG);
1118:       assertEquals(32, Node.INCRDECR_PROP);
1119:       assertEquals(12, Node.COLUMN_BITS);
1120:       assertEquals(46, Node.IS_NAMESPACE);
1121:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1122:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1123:       assertEquals(50, Node.FREE_CALL);
1124:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1125:       assertEquals(57, Node.REFLECTED_OBJECT);
1126:       assertEquals(54, Node.SLASH_V);
1127:       assertEquals(48, Node.DIRECTIVES);
1128:       assertEquals(40, Node.ORIGINALNAME_PROP);
1129:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1130:       assertEquals(55, Node.INFERRED_FUNCTION);
1131:       assertEquals(49, Node.DIRECT_EVAL);
1132:       assertEquals(30, Node.VAR_ARGS_NAME);
1133:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1134:       assertEquals(8, Node.FLAG_NO_THROWS);
1135:       assertEquals(39, Node.EMPTY_BLOCK);
1136:       assertEquals(36, Node.QUOTED_PROP);
1137:       assertEquals(57, Node.LAST_PROP);
1138:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1139:       assertEquals(52, Node.LENGTH);
1140:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1141:       assertEquals(29, Node.JSDOC_INFO_PROP);
1142:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1143:       assertEquals(53, Node.INPUT_ID);
1144:       assertFalse(node0.equals((Object)node1));
1145:       assertTrue(boolean2 == boolean1);
1146:       assertTrue(boolean2 == boolean0);
1147:       
1148:       Node[] nodeArray0 = new Node[6];
1149:       nodeArray0[0] = node0;
1150:       nodeArray0[1] = node0;
1151:       Node node2 = Node.newNumber((double) 2, 40, 55);
1152:       assertFalse(node2.isFalse());
1153:       assertFalse(node2.isThrow());
1154:       assertFalse(node2.isBreak());
1155:       assertFalse(node2.isHook());
1156:       assertFalse(node2.isGetProp());
1157:       assertFalse(node2.isInc());
1158:       assertFalse(node2.isString());
1159:       assertFalse(node2.isCase());
1160:       assertFalse(node2.isExprResult());
1161:       assertFalse(node2.isComma());
1162:       assertFalse(node2.isThis());
1163:       assertFalse(node2.isInstanceOf());
1164:       assertFalse(node2.isWith());
1165:       assertFalse(node2.isGetElem());
1166:       assertFalse(node2.isFor());
1167:       assertFalse(node2.isEmpty());
1168:       assertEquals(163895, node2.getSourcePosition());
1169:       assertFalse(node2.isLabelName());
1170:       assertEquals(40, node2.getLineno());
1171:       assertFalse(node2.isArrayLit());
1172:       assertFalse(node2.hasOneChild());
1173:       assertFalse(node2.isDelProp());
1174:       assertFalse(node2.isTry());
1175:       assertFalse(node2.isTrue());
1176:       assertFalse(node2.isOr());
1177:       assertFalse(node2.isGetterDef());
1178:       assertFalse(node2.isScript());
1179:       assertFalse(node2.isDo());
1180:       assertFalse(node2.isDefaultCase());
1181:       assertFalse(node2.isSwitch());
1182:       assertFalse(node2.isAssignAdd());
1183:       assertFalse(node2.isLabel());
1184:       assertEquals(0, node2.getChildCount());
1185:       assertFalse(node2.isStringKey());
1186:       assertFalse(node2.isCall());
1187:       assertFalse(node2.isName());
1188:       assertEquals(55, node2.getCharno());
1189:       assertFalse(node2.isVar());
1190:       assertFalse(node2.isNull());
1191:       assertFalse(node2.isParamList());
1192:       assertFalse(node2.isNew());
1193:       assertFalse(node2.isAdd());
1194:       assertFalse(node2.isSetterDef());
1195:       assertEquals(39, node2.getType());
1196:       assertFalse(node2.isWhile());
1197:       assertFalse(node2.isVoid());
1198:       assertFalse(node2.isBlock());
1199:       assertFalse(node2.isReturn());
1200:       assertFalse(node2.isDec());
1201:       assertFalse(node2.isRegExp());
1202:       assertFalse(node2.isTypeOf());
1203:       assertFalse(node2.isCatch());
1204:       assertFalse(node2.hasMoreThanOneChild());
1205:       assertFalse(node2.isAssign());
1206:       assertFalse(node2.hasChildren());
1207:       assertFalse(node2.isIf());
1208:       assertFalse(node2.isNE());
1209:       assertTrue(node2.isNumber());
1210:       assertFalse(node2.isDebugger());
1211:       assertFalse(node2.isIn());
1212:       assertFalse(node2.isNot());
1213:       assertFalse(node2.isObjectLit());
1214:       assertFalse(node2.isAnd());
1215:       assertFalse(node2.isFunction());
1216:       assertFalse(node2.isCast());
1217:       assertFalse(node2.isContinue());
1218:       assertNotNull(node2);
1219:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1220:       assertEquals(4095, Node.COLUMN_MASK);
1221:       assertEquals(55, Node.INFERRED_FUNCTION);
1222:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1223:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1224:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1225:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1226:       assertEquals(29, Node.JSDOC_INFO_PROP);
1227:       assertEquals(39, Node.EMPTY_BLOCK);
1228:       assertEquals(53, Node.INPUT_ID);
1229:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1230:       assertEquals(48, Node.DIRECTIVES);
1231:       assertEquals(37, Node.OPT_ARG_NAME);
1232:       assertEquals(52, Node.LENGTH);
1233:       assertEquals(8, Node.FLAG_NO_THROWS);
1234:       assertEquals(56, Node.CHANGE_TIME);
1235:       assertEquals(36, Node.QUOTED_PROP);
1236:       assertEquals(57, Node.REFLECTED_OBJECT);
1237:       assertEquals(1, Node.DECR_FLAG);
1238:       assertEquals(30, Node.VAR_ARGS_NAME);
1239:       assertEquals(49, Node.DIRECT_EVAL);
1240:       assertEquals(32, Node.INCRDECR_PROP);
1241:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1242:       assertEquals(2, Node.POST_FLAG);
1243:       assertEquals(57, Node.LAST_PROP);
1244:       assertEquals(47, Node.IS_DISPATCHER);
1245:       assertEquals(12, Node.COLUMN_BITS);
1246:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1247:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1248:       assertEquals(50, Node.FREE_CALL);
1249:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1250:       assertEquals(40, Node.ORIGINALNAME_PROP);
1251:       assertEquals(54, Node.SLASH_V);
1252:       assertEquals(46, Node.IS_NAMESPACE);
1253:       assertEquals(43, Node.IS_CONSTANT_NAME);
1254:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1255:       assertFalse(node2.equals((Object)node0));
1256:       assertFalse(node2.equals((Object)node1));
1257:       
1258:       boolean boolean3 = node0.isSyntheticBlock();
1259:       assertFalse(boolean3);
1260:       assertFalse(node0.isObjectLit());
1261:       assertFalse(node0.isNot());
1262:       assertFalse(node0.isInstanceOf());
1263:       assertFalse(node0.isWith());
1264:       assertFalse(node0.isComma());
1265:       assertFalse(node0.isThis());
1266:       assertFalse(node0.isScript());
1267:       assertFalse(node0.isGetProp());
1268:       assertFalse(node0.isThrow());
1269:       assertFalse(node0.isCast());
1270:       assertFalse(node0.hasOneChild());
1271:       assertFalse(node0.isFalse());
1272:       assertFalse(node0.isNumber());
1273:       assertEquals((-1), node0.getSourcePosition());
1274:       assertEquals((-1), node0.getCharno());
1275:       assertFalse(node0.isLabelName());
1276:       assertFalse(node0.isAnd());
1277:       assertFalse(node0.isSwitch());
1278:       assertEquals(138, node0.getType());
1279:       assertFalse(node0.isCase());
1280:       assertFalse(node0.isIn());
1281:       assertFalse(node0.isContinue());
1282:       assertFalse(node0.hasMoreThanOneChild());
1283:       assertFalse(node0.isInc());
1284:       assertFalse(node0.isBlock());
1285:       assertFalse(node0.isFor());
1286:       assertFalse(node0.isHook());
1287:       assertFalse(node0.isNE());
1288:       assertEquals((-1), node0.getLineno());
1289:       assertFalse(node0.isIf());
1290:       assertFalse(node0.isCatch());
1291:       assertEquals(0, node0.getChildCount());
1292:       assertFalse(node0.isRegExp());
1293:       assertFalse(node0.isSetterDef());
1294:       assertFalse(node0.isFunction());
1295:       assertFalse(node0.isTry());
1296:       assertFalse(node0.isDefaultCase());
1297:       assertFalse(node0.isVar());
1298:       assertFalse(node0.isArrayLit());
1299:       assertFalse(node0.isGetterDef());
1300:       assertFalse(node0.isDebugger());
1301:       assertFalse(node0.isParamList());
1302:       assertFalse(node0.isStringKey());
1303:       assertFalse(node0.isString());
1304:       assertFalse(node0.isOr());
1305:       assertFalse(node0.isDec());
1306:       assertFalse(node0.isAdd());
1307:       assertFalse(node0.isNew());
1308:       assertFalse(node0.hasChildren());
1309:       assertFalse(node0.isLabel());
1310:       assertFalse(node0.isReturn());
1311:       assertFalse(node0.isWhile());
1312:       assertFalse(node0.isDo());
1313:       assertFalse(node0.isAssignAdd());
1314:       assertFalse(node0.isCall());
1315:       assertFalse(node0.isGetElem());
1316:       assertFalse(node0.isEmpty());
1317:       assertFalse(node0.isAssign());
1318:       assertFalse(node0.isTypeOf());
1319:       assertFalse(node0.isTrue());
1320:       assertFalse(node0.isExprResult());
1321:       assertFalse(node0.isVoid());
1322:       assertFalse(node0.isNull());
1323:       assertFalse(node0.isBreak());
1324:       assertFalse(node0.isDelProp());
1325:       assertFalse(node0.isName());
1326:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1327:       assertEquals(56, Node.CHANGE_TIME);
1328:       assertEquals(47, Node.IS_DISPATCHER);
1329:       assertEquals(2, Node.POST_FLAG);
1330:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1331:       assertEquals(37, Node.OPT_ARG_NAME);
1332:       assertEquals(43, Node.IS_CONSTANT_NAME);
1333:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1334:       assertEquals(4095, Node.COLUMN_MASK);
1335:       assertEquals(1, Node.DECR_FLAG);
1336:       assertEquals(32, Node.INCRDECR_PROP);
1337:       assertEquals(12, Node.COLUMN_BITS);
1338:       assertEquals(46, Node.IS_NAMESPACE);
1339:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1340:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1341:       assertEquals(50, Node.FREE_CALL);
1342:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1343:       assertEquals(57, Node.REFLECTED_OBJECT);
1344:       assertEquals(54, Node.SLASH_V);
1345:       assertEquals(48, Node.DIRECTIVES);
1346:       assertEquals(40, Node.ORIGINALNAME_PROP);
1347:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1348:       assertEquals(55, Node.INFERRED_FUNCTION);
1349:       assertEquals(49, Node.DIRECT_EVAL);
1350:       assertEquals(30, Node.VAR_ARGS_NAME);
1351:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1352:       assertEquals(8, Node.FLAG_NO_THROWS);
1353:       assertEquals(39, Node.EMPTY_BLOCK);
1354:       assertEquals(36, Node.QUOTED_PROP);
1355:       assertEquals(57, Node.LAST_PROP);
1356:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1357:       assertEquals(52, Node.LENGTH);
1358:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1359:       assertEquals(29, Node.JSDOC_INFO_PROP);
1360:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1361:       assertEquals(53, Node.INPUT_ID);
1362:       assertTrue(boolean3 == boolean2);
1363:       assertTrue(boolean3 == boolean1);
1364:       assertTrue(boolean3 == boolean0);
1365:       assertFalse(node0.equals((Object)node2));
1366:       assertFalse(node0.equals((Object)node1));
1367:       
1368:       boolean boolean4 = node0.isInc();
1369:       assertFalse(boolean4);
1370:       assertFalse(node0.isObjectLit());
1371:       assertFalse(node0.isNot());
1372:       assertFalse(node0.isInstanceOf());
1373:       assertFalse(node0.isWith());
1374:       assertFalse(node0.isComma());
1375:       assertFalse(node0.isThis());
1376:       assertFalse(node0.isScript());
1377:       assertFalse(node0.isGetProp());
1378:       assertFalse(node0.isThrow());
1379:       assertFalse(node0.isCast());
1380:       assertFalse(node0.hasOneChild());
1381:       assertFalse(node0.isFalse());
1382:       assertFalse(node0.isNumber());
1383:       assertEquals((-1), node0.getSourcePosition());
1384:       assertEquals((-1), node0.getCharno());
1385:       assertFalse(node0.isLabelName());
1386:       assertFalse(node0.isAnd());
1387:       assertFalse(node0.isSwitch());
1388:       assertEquals(138, node0.getType());
1389:       assertFalse(node0.isCase());
1390:       assertFalse(node0.isIn());
1391:       assertFalse(node0.isContinue());
1392:       assertFalse(node0.hasMoreThanOneChild());
1393:       assertFalse(node0.isInc());
1394:       assertFalse(node0.isBlock());
1395:       assertFalse(node0.isFor());
1396:       assertFalse(node0.isHook());
1397:       assertFalse(node0.isNE());
1398:       assertEquals((-1), node0.getLineno());
1399:       assertFalse(node0.isIf());
1400:       assertFalse(node0.isCatch());
1401:       assertEquals(0, node0.getChildCount());
1402:       assertFalse(node0.isRegExp());
1403:       assertFalse(node0.isSetterDef());
1404:       assertFalse(node0.isFunction());
1405:       assertFalse(node0.isTry());
1406:       assertFalse(node0.isDefaultCase());
1407:       assertFalse(node0.isVar());
1408:       assertFalse(node0.isArrayLit());
1409:       assertFalse(node0.isGetterDef());
1410:       assertFalse(node0.isDebugger());
1411:       assertFalse(node0.isParamList());
1412:       assertFalse(node0.isStringKey());
1413:       assertFalse(node0.isString());
1414:       assertFalse(node0.isOr());
1415:       assertFalse(node0.isDec());
1416:       assertFalse(node0.isAdd());
1417:       assertFalse(node0.isNew());
1418:       assertFalse(node0.hasChildren());
1419:       assertFalse(node0.isLabel());
1420:       assertFalse(node0.isReturn());
1421:       assertFalse(node0.isWhile());
1422:       assertFalse(node0.isDo());
1423:       assertFalse(node0.isAssignAdd());
1424:       assertFalse(node0.isCall());
1425:       assertFalse(node0.isGetElem());
1426:       assertFalse(node0.isEmpty());
1427:       assertFalse(node0.isAssign());
1428:       assertFalse(node0.isTypeOf());
1429:       assertFalse(node0.isTrue());
1430:       assertFalse(node0.isExprResult());
1431:       assertFalse(node0.isVoid());
1432:       assertFalse(node0.isNull());
1433:       assertFalse(node0.isBreak());
1434:       assertFalse(node0.isDelProp());
1435:       assertFalse(node0.isName());
1436:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1437:       assertEquals(56, Node.CHANGE_TIME);
1438:       assertEquals(47, Node.IS_DISPATCHER);
1439:       assertEquals(2, Node.POST_FLAG);
1440:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1441:       assertEquals(37, Node.OPT_ARG_NAME);
1442:       assertEquals(43, Node.IS_CONSTANT_NAME);
1443:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1444:       assertEquals(4095, Node.COLUMN_MASK);
1445:       assertEquals(1, Node.DECR_FLAG);
1446:       assertEquals(32, Node.INCRDECR_PROP);
1447:       assertEquals(12, Node.COLUMN_BITS);
1448:       assertEquals(46, Node.IS_NAMESPACE);
1449:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1450:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1451:       assertEquals(50, Node.FREE_CALL);
1452:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1453:       assertEquals(57, Node.REFLECTED_OBJECT);
1454:       assertEquals(54, Node.SLASH_V);
1455:       assertEquals(48, Node.DIRECTIVES);
1456:       assertEquals(40, Node.ORIGINALNAME_PROP);
1457:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1458:       assertEquals(55, Node.INFERRED_FUNCTION);
1459:       assertEquals(49, Node.DIRECT_EVAL);
1460:       assertEquals(30, Node.VAR_ARGS_NAME);
1461:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1462:       assertEquals(8, Node.FLAG_NO_THROWS);
1463:       assertEquals(39, Node.EMPTY_BLOCK);
1464:       assertEquals(36, Node.QUOTED_PROP);
1465:       assertEquals(57, Node.LAST_PROP);
1466:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1467:       assertEquals(52, Node.LENGTH);
1468:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1469:       assertEquals(29, Node.JSDOC_INFO_PROP);
1470:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1471:       assertEquals(53, Node.INPUT_ID);
1472:       assertFalse(node0.equals((Object)node2));
1473:       assertFalse(node0.equals((Object)node1));
1474:       assertTrue(boolean4 == boolean2);
1475:       assertTrue(boolean4 == boolean3);
1476:       assertTrue(boolean4 == boolean0);
1477:       assertTrue(boolean4 == boolean1);
1478:       
1479:       Iterable<Node> iterable0 = node0.children();
1480:       assertFalse(iterable0.contains(node2));
1481:       assertFalse(node0.isObjectLit());
1482:       assertFalse(node0.isNot());
1483:       assertFalse(node0.isInstanceOf());
1484:       assertFalse(node0.isWith());
1485:       assertFalse(node0.isComma());
1486:       assertFalse(node0.isThis());
1487:       assertFalse(node0.isScript());
1488:       assertFalse(node0.isGetProp());
1489:       assertFalse(node0.isThrow());
1490:       assertFalse(node0.isCast());
1491:       assertFalse(node0.hasOneChild());
1492:       assertFalse(node0.isFalse());
1493:       assertFalse(node0.isNumber());
1494:       assertEquals((-1), node0.getSourcePosition());
1495:       assertEquals((-1), node0.getCharno());
1496:       assertFalse(node0.isLabelName());
1497:       assertFalse(node0.isAnd());
1498:       assertFalse(node0.isSwitch());
1499:       assertEquals(138, node0.getType());
1500:       assertFalse(node0.isCase());
1501:       assertFalse(node0.isIn());
1502:       assertFalse(node0.isContinue());
1503:       assertFalse(node0.hasMoreThanOneChild());
1504:       assertFalse(node0.isInc());
1505:       assertFalse(node0.isBlock());
1506:       assertFalse(node0.isFor());
1507:       assertFalse(node0.isHook());
1508:       assertFalse(node0.isNE());
1509:       assertEquals((-1), node0.getLineno());
1510:       assertFalse(node0.isIf());
1511:       assertFalse(node0.isCatch());
1512:       assertEquals(0, node0.getChildCount());
1513:       assertFalse(node0.isRegExp());
1514:       assertFalse(node0.isSetterDef());
1515:       assertFalse(node0.isFunction());
1516:       assertFalse(node0.isTry());
1517:       assertFalse(node0.isDefaultCase());
1518:       assertFalse(node0.isVar());
1519:       assertFalse(node0.isArrayLit());
1520:       assertFalse(node0.isGetterDef());
1521:       assertFalse(node0.isDebugger());
1522:       assertFalse(node0.isParamList());
1523:       assertFalse(node0.isStringKey());
1524:       assertFalse(node0.isString());
1525:       assertFalse(node0.isOr());
1526:       assertFalse(node0.isDec());
1527:       assertFalse(node0.isAdd());
1528:       assertFalse(node0.isNew());
1529:       assertFalse(node0.hasChildren());
1530:       assertFalse(node0.isLabel());
1531:       assertFalse(node0.isReturn());
1532:       assertFalse(node0.isWhile());
1533:       assertFalse(node0.isDo());
1534:       assertFalse(node0.isAssignAdd());
1535:       assertFalse(node0.isCall());
1536:       assertFalse(node0.isGetElem());
1537:       assertFalse(node0.isEmpty());
1538:       assertFalse(node0.isAssign());
1539:       assertFalse(node0.isTypeOf());
1540:       assertFalse(node0.isTrue());
1541:       assertFalse(node0.isExprResult());
1542:       assertFalse(node0.isVoid());
1543:       assertFalse(node0.isNull());
1544:       assertFalse(node0.isBreak());
1545:       assertFalse(node0.isDelProp());
1546:       assertFalse(node0.isName());
1547:       assertNotNull(iterable0);
1548:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1549:       assertEquals(56, Node.CHANGE_TIME);
1550:       assertEquals(47, Node.IS_DISPATCHER);
1551:       assertEquals(2, Node.POST_FLAG);
1552:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1553:       assertEquals(37, Node.OPT_ARG_NAME);
1554:       assertEquals(43, Node.IS_CONSTANT_NAME);
1555:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1556:       assertEquals(4095, Node.COLUMN_MASK);
1557:       assertEquals(1, Node.DECR_FLAG);
1558:       assertEquals(32, Node.INCRDECR_PROP);
1559:       assertEquals(12, Node.COLUMN_BITS);
1560:       assertEquals(46, Node.IS_NAMESPACE);
1561:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1562:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1563:       assertEquals(50, Node.FREE_CALL);
1564:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1565:       assertEquals(57, Node.REFLECTED_OBJECT);
1566:       assertEquals(54, Node.SLASH_V);
1567:       assertEquals(48, Node.DIRECTIVES);
1568:       assertEquals(40, Node.ORIGINALNAME_PROP);
1569:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1570:       assertEquals(55, Node.INFERRED_FUNCTION);
1571:       assertEquals(49, Node.DIRECT_EVAL);
1572:       assertEquals(30, Node.VAR_ARGS_NAME);
1573:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1574:       assertEquals(8, Node.FLAG_NO_THROWS);
1575:       assertEquals(39, Node.EMPTY_BLOCK);
1576:       assertEquals(36, Node.QUOTED_PROP);
1577:       assertEquals(57, Node.LAST_PROP);
1578:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1579:       assertEquals(52, Node.LENGTH);
1580:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1581:       assertEquals(29, Node.JSDOC_INFO_PROP);
1582:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1583:       assertEquals(53, Node.INPUT_ID);
1584:       assertFalse(node0.equals((Object)node2));
1585:       assertFalse(node0.equals((Object)node1));
1586:       
1587:       boolean boolean5 = node0.isContinue();
1588:       assertFalse(boolean5);
1589:       assertFalse(node0.isObjectLit());
1590:       assertFalse(node0.isNot());
1591:       assertFalse(node0.isInstanceOf());
1592:       assertFalse(node0.isWith());
1593:       assertFalse(node0.isComma());
1594:       assertFalse(node0.isThis());
1595:       assertFalse(node0.isScript());
1596:       assertFalse(node0.isGetProp());
1597:       assertFalse(node0.isThrow());
1598:       assertFalse(node0.isCast());
1599:       assertFalse(node0.hasOneChild());
1600:       assertFalse(node0.isFalse());
1601:       assertFalse(node0.isNumber());
1602:       assertEquals((-1), node0.getSourcePosition());
1603:       assertEquals((-1), node0.getCharno());
1604:       assertFalse(node0.isLabelName());
1605:       assertFalse(node0.isAnd());
1606:       assertFalse(node0.isSwitch());
1607:       assertEquals(138, node0.getType());
1608:       assertFalse(node0.isCase());
1609:       assertFalse(node0.isIn());
1610:       assertFalse(node0.isContinue());
1611:       assertFalse(node0.hasMoreThanOneChild());
1612:       assertFalse(node0.isInc());
1613:       assertFalse(node0.isBlock());
1614:       assertFalse(node0.isFor());
1615:       assertFalse(node0.isHook());
1616:       assertFalse(node0.isNE());
1617:       assertEquals((-1), node0.getLineno());
1618:       assertFalse(node0.isIf());
1619:       assertFalse(node0.isCatch());
1620:       assertEquals(0, node0.getChildCount());
1621:       assertFalse(node0.isRegExp());
1622:       assertFalse(node0.isSetterDef());
1623:       assertFalse(node0.isFunction());
1624:       assertFalse(node0.isTry());
1625:       assertFalse(node0.isDefaultCase());
1626:       assertFalse(node0.isVar());
1627:       assertFalse(node0.isArrayLit());
1628:       assertFalse(node0.isGetterDef());
1629:       assertFalse(node0.isDebugger());
1630:       assertFalse(node0.isParamList());
1631:       assertFalse(node0.isStringKey());
1632:       assertFalse(node0.isString());
1633:       assertFalse(node0.isOr());
1634:       assertFalse(node0.isDec());
1635:       assertFalse(node0.isAdd());
1636:       assertFalse(node0.isNew());
1637:       assertFalse(node0.hasChildren());
1638:       assertFalse(node0.isLabel());
1639:       assertFalse(node0.isReturn());
1640:       assertFalse(node0.isWhile());
1641:       assertFalse(node0.isDo());
1642:       assertFalse(node0.isAssignAdd());
1643:       assertFalse(node0.isCall());
1644:       assertFalse(node0.isGetElem());
1645:       assertFalse(node0.isEmpty());
1646:       assertFalse(node0.isAssign());
1647:       assertFalse(node0.isTypeOf());
1648:       assertFalse(node0.isTrue());
1649:       assertFalse(node0.isExprResult());
1650:       assertFalse(node0.isVoid());
1651:       assertFalse(node0.isNull());
1652:       assertFalse(node0.isBreak());
1653:       assertFalse(node0.isDelProp());
1654:       assertFalse(node0.isName());
1655:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1656:       assertEquals(56, Node.CHANGE_TIME);
1657:       assertEquals(47, Node.IS_DISPATCHER);
1658:       assertEquals(2, Node.POST_FLAG);
1659:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1660:       assertEquals(37, Node.OPT_ARG_NAME);
1661:       assertEquals(43, Node.IS_CONSTANT_NAME);
1662:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1663:       assertEquals(4095, Node.COLUMN_MASK);
1664:       assertEquals(1, Node.DECR_FLAG);
1665:       assertEquals(32, Node.INCRDECR_PROP);
1666:       assertEquals(12, Node.COLUMN_BITS);
1667:       assertEquals(46, Node.IS_NAMESPACE);
1668:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1669:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1670:       assertEquals(50, Node.FREE_CALL);
1671:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1672:       assertEquals(57, Node.REFLECTED_OBJECT);
1673:       assertEquals(54, Node.SLASH_V);
1674:       assertEquals(48, Node.DIRECTIVES);
1675:       assertEquals(40, Node.ORIGINALNAME_PROP);
1676:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1677:       assertEquals(55, Node.INFERRED_FUNCTION);
1678:       assertEquals(49, Node.DIRECT_EVAL);
1679:       assertEquals(30, Node.VAR_ARGS_NAME);
1680:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1681:       assertEquals(8, Node.FLAG_NO_THROWS);
1682:       assertEquals(39, Node.EMPTY_BLOCK);
1683:       assertEquals(36, Node.QUOTED_PROP);
1684:       assertEquals(57, Node.LAST_PROP);
1685:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1686:       assertEquals(52, Node.LENGTH);
1687:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1688:       assertEquals(29, Node.JSDOC_INFO_PROP);
1689:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1690:       assertEquals(53, Node.INPUT_ID);
1691:       assertFalse(node0.equals((Object)node2));
1692:       assertFalse(node0.equals((Object)node1));
1693:       assertTrue(boolean5 == boolean4);
1694:       assertTrue(boolean5 == boolean1);
1695:       assertTrue(boolean5 == boolean2);
1696:       assertTrue(boolean5 == boolean3);
1697:       assertTrue(boolean5 == boolean0);
1698:   }
1699: }
RegularFileObject[/tmp/EvoSuite_144_1628255840755/com/google/javascript/rhino/Node_144_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:17:20 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_144_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_144_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.JSDocInfo$StringPosition",
71:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
72:       "com.google.common.collect.ImmutableList$SubList",
73:       "com.google.javascript.rhino.jstype.NoType",
74:       "com.google.javascript.rhino.JSDocInfo$Visibility",
75:       "com.google.common.collect.ListMultimap",
76:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
77:       "com.google.javascript.rhino.jstype.ArrowType",
78:       "com.google.javascript.rhino.SimpleErrorReporter",
79:       "com.google.common.collect.Lists$RandomAccessPartition",
80:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
81:       "com.google.common.collect.Collections2",
82:       "com.google.javascript.rhino.jstype.NumberType",
83:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
86:       "com.google.common.collect.RegularImmutableList",
87:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
88:       "com.google.javascript.rhino.jstype.StaticScope",
89:       "com.google.javascript.rhino.jstype.InstanceObjectType",
90:       "com.google.common.collect.Lists$TransformingRandomAccessList",
91:       "com.google.javascript.rhino.Node$PropListItem",
92:       "com.google.javascript.rhino.Node$IntPropListItem",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Maps$KeySet",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.LinkedHashMultimap",
98:       "com.google.javascript.rhino.Node",
99:       "com.google.javascript.rhino.jstype.ObjectType",
100:       "com.google.javascript.rhino.SourcePosition",
101:       "com.google.common.collect.Sets$1",
102:       "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition",
103:       "com.google.common.collect.ImmutableMapKeySet",
104:       "com.google.javascript.rhino.JSDocInfo$Marker",
105:       "com.google.common.collect.RegularImmutableMap",
106:       "com.google.common.collect.RegularImmutableBiMap",
107:       "com.google.javascript.rhino.Node$NodeMismatch",
108:       "com.google.javascript.rhino.jstype.RecordType",
109:       "com.google.common.collect.SortedMapDifference",
110:       "com.google.javascript.rhino.jstype.ModificationVisitor",
111:       "com.google.javascript.rhino.jstype.PropertyMap$1",
112:       "com.google.common.collect.AbstractMapEntry",
113:       "com.google.javascript.rhino.Node$AncestorIterable$1",
114:       "com.google.common.collect.Iterators$12",
115:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
116:       "com.google.common.collect.Iterators$11",
117:       "com.google.javascript.rhino.jstype.JSType$1",
118:       "com.google.common.collect.EmptyImmutableBiMap",
119:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
120:       "com.google.common.base.Predicate",
121:       "com.google.javascript.rhino.jstype.VoidType",
122:       "com.google.common.base.Joiner",
123:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
124:       "com.google.common.collect.AbstractListMultimap",
125:       "com.google.javascript.rhino.jstype.JSType",
126:       "com.google.common.collect.ImmutableAsList",
127:       "com.google.javascript.rhino.Node$StringNode",
128:       "com.google.javascript.rhino.jstype.ProxyObjectType",
129:       "com.google.common.collect.Sets$SetView",
130:       "com.google.common.collect.RegularImmutableAsList",
131:       "com.google.javascript.rhino.jstype.TemplateType",
132:       "com.google.javascript.rhino.jstype.NamedType",
133:       "com.google.common.collect.Iterators$13",
134:       "com.google.javascript.rhino.InputId",
135:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
136:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
137:       "com.google.common.collect.AbstractMapBasedMultimap",
138:       "com.google.common.collect.Lists$Partition",
139:       "com.google.common.collect.Lists",
140:       "com.google.javascript.rhino.Node$SideEffectFlags",
141:       "com.google.common.collect.UnmodifiableListIterator",
142:       "com.google.javascript.rhino.jstype.NullType",
143:       "com.google.common.collect.Lists$TransformingSequentialList",
144:       "com.google.javascript.rhino.ErrorReporter",
145:       "com.google.javascript.rhino.jstype.UnknownType",
146:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
147:       "com.google.javascript.rhino.jstype.ValueType",
148:       "com.google.javascript.rhino.jstype.PropertyMap",
149:       "com.google.javascript.rhino.Token",
150:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
151:       "com.google.common.collect.ObjectArrays",
152:       "com.google.javascript.rhino.jstype.StaticSourceFile",
153:       "com.google.javascript.rhino.jstype.BooleanType",
154:       "com.google.javascript.rhino.jstype.NoObjectType",
155:       "com.google.common.collect.AbstractIterator",
156:       "com.google.javascript.rhino.jstype.FunctionBuilder",
157:       "com.google.javascript.rhino.jstype.JSType$TypePair",
158:       "com.google.common.base.Joiner$MapJoiner",
159:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
160:       "com.google.common.collect.ImmutableList$1",
161:       "com.google.common.collect.MapDifference",
162:       "com.google.javascript.rhino.JSDocInfo$1",
163:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
164:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
165:       "com.google.common.collect.Sets$ImprovedAbstractSet",
166:       "com.google.javascript.rhino.jstype.FunctionType",
167:       "com.google.common.base.Preconditions",
168:       "com.google.common.collect.UnmodifiableIterator",
169:       "com.google.javascript.rhino.JSDocInfo",
170:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
171:       "com.google.javascript.rhino.jstype.Property",
172:       "com.google.common.collect.ImmutableMapValues",
173:       "com.google.common.collect.ImmutableEntry",
174:       "com.google.common.base.Joiner$1",
175:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
176:       "com.google.common.base.Joiner$2",
177:       "com.google.common.collect.ImmutableCollection",
178:       "com.google.common.collect.ImmutableEnumMap",
179:       "com.google.javascript.rhino.jstype.TernaryValue",
180:       "com.google.javascript.rhino.Node$AncestorIterable",
181:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
182:       "com.google.common.collect.Lists$RandomAccessListWrapper",
183:       "com.google.common.collect.ImmutableEnumSet",
184:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
185:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
186:       "com.google.javascript.rhino.jstype.EnumElementType",
187:       "com.google.javascript.rhino.jstype.UnionType",
188:       "com.google.common.base.Objects",
189:       "com.google.javascript.rhino.Node$NumberNode",
190:       "com.google.common.collect.SingletonImmutableList",
191:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
192:       "com.google.common.collect.ImmutableCollection$Builder",
193:       "com.google.javascript.rhino.jstype.StaticSlot",
194:       "com.google.common.collect.Iterators$6",
195:       "com.google.common.collect.BiMap",
196:       "com.google.common.collect.Iterators$7",
197:       "com.google.common.collect.AbstractSetMultimap",
198:       "com.google.common.base.Function",
199:       "com.google.common.collect.ImmutableSet",
200:       "com.google.common.collect.Lists$AbstractListWrapper",
201:       "com.google.common.collect.ImmutableMap",
202:       "com.google.common.collect.AbstractIndexedListIterator",
203:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
204:       "com.google.common.collect.Maps$1",
205:       "com.google.javascript.rhino.jstype.EnumType",
206:       "com.google.javascript.rhino.JSDocInfo$TypePosition",
207:       "com.google.common.collect.Iterators$1",
208:       "com.google.common.collect.Iterators$2",
209:       "com.google.javascript.rhino.jstype.NamespaceType",
210:       "com.google.common.collect.Iterators$3",
211:       "com.google.common.collect.Sets",
212:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
213:       "com.google.javascript.rhino.Node$ObjectPropListItem",
214:       "com.google.common.collect.Lists$StringAsImmutableList",
215:       "com.google.common.collect.Lists$2",
216:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
217:       "com.google.common.collect.ImmutableList$Builder",
218:       "com.google.common.collect.Lists$1",
219:       "com.google.javascript.rhino.jstype.StaticReference",
220:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
221:       "com.google.common.collect.Multiset",
222:       "com.google.common.collect.AbstractMultimap",
223:       "com.google.common.collect.Multimap",
224:       "com.google.common.collect.Iterators",
225:       "com.google.common.collect.Maps$ImprovedAbstractMap",
226:       "com.google.common.collect.ImmutableBiMap",
227:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
228:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
229:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
230:       "com.google.common.collect.ImmutableList",
231:       "com.google.common.collect.SingletonImmutableBiMap",
232:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
233:       "com.google.javascript.rhino.jstype.StringType",
234:       "com.google.javascript.rhino.Node$AbstractPropListItem",
235:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
236:       "com.google.javascript.rhino.jstype.TemplatizedType",
237:       "com.google.javascript.rhino.jstype.Visitor",
238:       "com.google.javascript.rhino.jstype.NoResolvedType",
239:       "com.google.javascript.rhino.jstype.JSTypeNative",
240:       "com.google.javascript.rhino.jstype.AllType",
241:       "com.google.common.collect.Maps",
242:       "com.google.common.collect.SetMultimap",
243:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
244:       "com.google.common.collect.Maps$EntryTransformer",
245:       "com.google.javascript.rhino.JSTypeExpression",
246:       "com.google.common.collect.Iterators$MergingIterator"
247:     );
248:   } 
249: 
250:   private static void resetClasses() {
251:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_144_tmp__ESTest_scaffolding.class.getClassLoader()); 
252: 
253:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
254:       "com.google.javascript.rhino.Node",
255:       "com.google.javascript.rhino.Node$NumberNode",
256:       "com.google.javascript.rhino.Node$StringNode",
257:       "com.google.javascript.rhino.Node$AbstractPropListItem",
258:       "com.google.javascript.rhino.Node$ObjectPropListItem",
259:       "com.google.javascript.rhino.Node$IntPropListItem",
260:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
261:       "com.google.javascript.rhino.Node$AncestorIterable",
262:       "com.google.javascript.rhino.Node$NodeMismatch",
263:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
264:       "com.google.javascript.rhino.Node$SideEffectFlags",
265:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
266:       "com.google.common.base.Joiner",
267:       "com.google.common.base.Preconditions",
268:       "com.google.common.base.Joiner$1",
269:       "com.google.common.collect.Collections2",
270:       "com.google.common.base.Joiner$MapJoiner",
271:       "com.google.common.collect.Maps",
272:       "com.google.common.collect.AbstractMultimap",
273:       "com.google.common.collect.AbstractMapBasedMultimap",
274:       "com.google.common.collect.AbstractSetMultimap",
275:       "com.google.common.collect.LinkedHashMultimap",
276:       "com.google.common.collect.AbstractMapEntry",
277:       "com.google.common.collect.ImmutableEntry",
278:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
279:       "com.google.common.collect.AbstractListMultimap",
280:       "com.google.common.collect.ArrayListMultimap",
281:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
282:       "com.google.common.collect.ImmutableCollection",
283:       "com.google.common.collect.RegularImmutableList",
284:       "com.google.common.collect.ObjectArrays",
285:       "com.google.common.collect.ImmutableList",
286:       "com.google.javascript.rhino.jstype.ModificationVisitor",
287:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
288:       "com.google.common.collect.ImmutableCollection$Builder",
289:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
290:       "com.google.common.collect.ImmutableList$Builder",
291:       "com.google.common.collect.UnmodifiableIterator",
292:       "com.google.common.collect.UnmodifiableListIterator",
293:       "com.google.common.collect.Iterators$1",
294:       "com.google.common.collect.Iterators$2",
295:       "com.google.common.collect.Iterators",
296:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
297:       "com.google.javascript.rhino.jstype.JSType$1",
298:       "com.google.javascript.rhino.jstype.JSType",
299:       "com.google.javascript.rhino.jstype.ObjectType",
300:       "com.google.javascript.rhino.jstype.ProxyObjectType",
301:       "com.google.javascript.rhino.jstype.TemplateType",
302:       "com.google.javascript.rhino.jstype.ValueType",
303:       "com.google.javascript.rhino.jstype.BooleanType",
304:       "com.google.javascript.rhino.jstype.NullType",
305:       "com.google.javascript.rhino.jstype.NumberType",
306:       "com.google.javascript.rhino.jstype.StringType",
307:       "com.google.javascript.rhino.jstype.UnknownType",
308:       "com.google.javascript.rhino.jstype.VoidType",
309:       "com.google.javascript.rhino.jstype.AllType",
310:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
311:       "com.google.common.collect.ImmutableMap",
312:       "com.google.common.collect.ImmutableBiMap",
313:       "com.google.common.collect.EmptyImmutableBiMap",
314:       "com.google.javascript.rhino.jstype.PropertyMap$1",
315:       "com.google.javascript.rhino.jstype.PropertyMap",
316:       "com.google.javascript.rhino.jstype.FunctionType",
317:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
318:       "com.google.javascript.rhino.Token",
319:       "com.google.javascript.rhino.jstype.ArrowType",
320:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
321:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
322:       "com.google.javascript.rhino.jstype.InstanceObjectType",
323:       "com.google.javascript.rhino.jstype.Property",
324:       "com.google.common.collect.Lists",
325:       "com.google.javascript.rhino.jstype.NoObjectType",
326:       "com.google.javascript.rhino.jstype.NoType",
327:       "com.google.javascript.rhino.jstype.NoResolvedType",
328:       "com.google.common.collect.SingletonImmutableList",
329:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
330:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
331:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
332:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
333:       "com.google.javascript.rhino.jstype.UnionType",
334:       "com.google.javascript.rhino.jstype.FunctionBuilder",
335:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
336:       "com.google.common.collect.AbstractIndexedListIterator",
337:       "com.google.common.collect.Iterators$11",
338:       "com.google.javascript.rhino.SimpleErrorReporter",
339:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
340:       "com.google.javascript.rhino.Node$AncestorIterable$1",
341:       "com.google.javascript.rhino.jstype.EnumType",
342:       "com.google.javascript.rhino.jstype.EnumElementType",
343:       "com.google.javascript.rhino.JSDocInfo",
344:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
345:       "com.google.common.collect.Sets",
346:       "com.google.common.base.Objects",
347:       "com.google.common.collect.Iterables",
348:       "com.google.javascript.rhino.InputId",
349:       "com.google.javascript.rhino.jstype.NamedType",
350:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
351:       "com.google.javascript.rhino.jstype.TemplatizedType",
352:       "com.google.javascript.rhino.JSTypeExpression",
353:       "com.google.javascript.rhino.jstype.TernaryValue",
354:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
355:       "com.google.common.collect.ImmutableSet",
356:       "com.google.common.collect.EmptyImmutableSet",
357:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
358:       "com.google.common.collect.AbstractMultimap$Values",
359:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
360:       "com.google.common.collect.AbstractMapBasedMultimap$1",
361:       "com.google.common.collect.Multimaps$Entries",
362:       "com.google.common.collect.AbstractMultimap$Entries",
363:       "com.google.common.collect.AbstractMapBasedMultimap$2",
364:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
365:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
366:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
367:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator"
368:     );
369:   }
370: }

[MASTER] 13:17:21.032 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
assertEquals(0, node_SideEffectFlags0.valueOf());
assertTrue(node_SideEffectFlags0.areAllFlagsSet());
assertNotNull(node_SideEffectFlags0);

Node node0 = Node.newString(138, ",}");
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertNotNull(node0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);

String string0 = node0.getString();
assertEquals(",}", string0);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertNotNull(string0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);

boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
assertFalse(boolean0);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);

boolean boolean1 = node0.isArrayLit();
assertFalse(boolean1);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertTrue(boolean1 == boolean0);

Node node1 = new Node(30, node0);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node1.isNumber());
assertFalse(node1.isGetElem());
assertFalse(node1.isLabelName());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isOr());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAnd());
assertFalse(node1.isDo());
assertEquals(30, node1.getType());
assertFalse(node1.isCast());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isVar());
assertFalse(node1.isContinue());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isNull());
assertFalse(node1.isGetProp());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isAdd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isWhile());
assertFalse(node1.isVoid());
assertFalse(node1.isExprResult());
assertFalse(node1.isReturn());
assertFalse(node1.isAssign());
assertFalse(node1.isTypeOf());
assertFalse(node1.isComma());
assertFalse(node1.isDec());
assertFalse(node1.isIf());
assertFalse(node1.isGetterDef());
assertFalse(node1.isDelProp());
assertTrue(node1.hasOneChild());
assertFalse(node1.isFor());
assertFalse(node1.isEmpty());
assertFalse(node1.isNE());
assertFalse(node1.isArrayLit());
assertFalse(node1.isIn());
assertFalse(node1.isDebugger());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isInc());
assertFalse(node1.isSwitch());
assertFalse(node1.isThrow());
assertFalse(node1.isFalse());
assertFalse(node1.isFunction());
assertTrue(node1.isNew());
assertFalse(node1.isStringKey());
assertFalse(node1.isParamList());
assertFalse(node1.isSetterDef());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isWith());
assertFalse(node1.isScript());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isHook());
assertTrue(node1.hasChildren());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isThis());
assertFalse(node1.isBlock());
assertFalse(node1.isRegExp());
assertEquals(1, node1.getChildCount());
assertNotNull(node1);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(52, Node.LENGTH);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(53, Node.INPUT_ID);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertFalse(node1.equals((Object)node0));

node0.setString(",}");
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertFalse(node0.equals((Object)node1));

Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node1.isNumber());
assertFalse(node1.isGetElem());
assertFalse(node1.isLabelName());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isOr());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAnd());
assertFalse(node1.isDo());
assertEquals(30, node1.getType());
assertFalse(node1.isCast());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isVar());
assertFalse(node1.isContinue());
assertFalse(node1.isLabel());
assertFalse(node1.isBreak());
assertFalse(node1.isNull());
assertFalse(node1.isGetProp());
assertFalse(node1.isCall());
assertFalse(node1.isName());
assertFalse(node1.isAdd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isWhile());
assertFalse(node1.isVoid());
assertFalse(node1.isExprResult());
assertFalse(node1.isReturn());
assertFalse(node1.isAssign());
assertFalse(node1.isTypeOf());
assertFalse(node1.isComma());
assertFalse(node1.isDec());
assertFalse(node1.isIf());
assertFalse(node1.isGetterDef());
assertFalse(node1.isDelProp());
assertTrue(node1.hasOneChild());
assertFalse(node1.isFor());
assertFalse(node1.isEmpty());
assertFalse(node1.isNE());
assertFalse(node1.isArrayLit());
assertFalse(node1.isIn());
assertFalse(node1.isDebugger());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isInc());
assertFalse(node1.isSwitch());
assertFalse(node1.isThrow());
assertFalse(node1.isFalse());
assertFalse(node1.isFunction());
assertTrue(node1.isNew());
assertFalse(node1.isStringKey());
assertFalse(node1.isParamList());
assertFalse(node1.isSetterDef());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isWith());
assertFalse(node1.isScript());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isHook());
assertTrue(node1.hasChildren());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isThis());
assertFalse(node1.isBlock());
assertFalse(node1.isRegExp());
assertEquals(1, node1.getChildCount());
assertNotNull(node_NodeMismatch0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(52, Node.LENGTH);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(53, Node.INPUT_ID);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));

Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(31);
assertEquals(31, node_SideEffectFlags1.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertNotNull(node_SideEffectFlags1);
assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));

Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
assertEquals(31, node_SideEffectFlags1.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertEquals(31, node_SideEffectFlags2.valueOf());
assertFalse(node_SideEffectFlags2.areAllFlagsSet());
assertNotNull(node_SideEffectFlags2);
assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
assertSame(node_SideEffectFlags2, node_SideEffectFlags1);

Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
assertEquals(29, node_SideEffectFlags1.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertFalse(node_SideEffectFlags2.areAllFlagsSet());
assertEquals(29, node_SideEffectFlags2.valueOf());
assertFalse(node_SideEffectFlags3.areAllFlagsSet());
assertEquals(29, node_SideEffectFlags3.valueOf());
assertNotNull(node_SideEffectFlags3);
assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags3.equals((Object)node_SideEffectFlags0));
assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
assertSame(node_SideEffectFlags1, node_SideEffectFlags3);
assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
assertSame(node_SideEffectFlags2, node_SideEffectFlags3);
assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
assertNotSame(node_SideEffectFlags3, node_SideEffectFlags0);
assertSame(node_SideEffectFlags3, node_SideEffectFlags2);
assertSame(node_SideEffectFlags3, node_SideEffectFlags1);

Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
assertEquals(13, node_SideEffectFlags1.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertFalse(node_SideEffectFlags2.areAllFlagsSet());
assertEquals(13, node_SideEffectFlags2.valueOf());
assertFalse(node_SideEffectFlags3.areAllFlagsSet());
assertEquals(13, node_SideEffectFlags3.valueOf());
assertFalse(node_SideEffectFlags4.areAllFlagsSet());
assertEquals(13, node_SideEffectFlags4.valueOf());
assertNotNull(node_SideEffectFlags4);
assertFalse(node_SideEffectFlags1.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags2.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags3.equals((Object)node_SideEffectFlags0));
assertFalse(node_SideEffectFlags4.equals((Object)node_SideEffectFlags0));
assertNotSame(node_SideEffectFlags1, node_SideEffectFlags0);
assertSame(node_SideEffectFlags1, node_SideEffectFlags3);
assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
assertSame(node_SideEffectFlags1, node_SideEffectFlags4);
assertNotSame(node_SideEffectFlags2, node_SideEffectFlags0);
assertSame(node_SideEffectFlags2, node_SideEffectFlags3);
assertSame(node_SideEffectFlags2, node_SideEffectFlags4);
assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
assertNotSame(node_SideEffectFlags3, node_SideEffectFlags0);
assertSame(node_SideEffectFlags3, node_SideEffectFlags2);
assertSame(node_SideEffectFlags3, node_SideEffectFlags1);
assertSame(node_SideEffectFlags3, node_SideEffectFlags4);
assertSame(node_SideEffectFlags4, node_SideEffectFlags3);
assertNotSame(node_SideEffectFlags4, node_SideEffectFlags0);
assertSame(node_SideEffectFlags4, node_SideEffectFlags1);
assertSame(node_SideEffectFlags4, node_SideEffectFlags2);

boolean boolean2 = node0.isScript();
assertFalse(boolean2);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertFalse(node0.equals((Object)node1));
assertTrue(boolean2 == boolean1);
assertTrue(boolean2 == boolean0);

Node[] nodeArray0 = new Node[6];
nodeArray0[0] = node0;
nodeArray0[1] = node0;
Node node2 = Node.newNumber((double) 2, 40, 55);
assertFalse(node2.isFalse());
assertFalse(node2.isThrow());
assertFalse(node2.isBreak());
assertFalse(node2.isHook());
assertFalse(node2.isGetProp());
assertFalse(node2.isInc());
assertFalse(node2.isString());
assertFalse(node2.isCase());
assertFalse(node2.isExprResult());
assertFalse(node2.isComma());
assertFalse(node2.isThis());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isWith());
assertFalse(node2.isGetElem());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertEquals(163895, node2.getSourcePosition());
assertFalse(node2.isLabelName());
assertEquals(40, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.hasOneChild());
assertFalse(node2.isDelProp());
assertFalse(node2.isTry());
assertFalse(node2.isTrue());
assertFalse(node2.isOr());
assertFalse(node2.isGetterDef());
assertFalse(node2.isScript());
assertFalse(node2.isDo());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isSwitch());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isLabel());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertFalse(node2.isCall());
assertFalse(node2.isName());
assertEquals(55, node2.getCharno());
assertFalse(node2.isVar());
assertFalse(node2.isNull());
assertFalse(node2.isParamList());
assertFalse(node2.isNew());
assertFalse(node2.isAdd());
assertFalse(node2.isSetterDef());
assertEquals(39, node2.getType());
assertFalse(node2.isWhile());
assertFalse(node2.isVoid());
assertFalse(node2.isBlock());
assertFalse(node2.isReturn());
assertFalse(node2.isDec());
assertFalse(node2.isRegExp());
assertFalse(node2.isTypeOf());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isAssign());
assertFalse(node2.hasChildren());
assertFalse(node2.isIf());
assertFalse(node2.isNE());
assertTrue(node2.isNumber());
assertFalse(node2.isDebugger());
assertFalse(node2.isIn());
assertFalse(node2.isNot());
assertFalse(node2.isObjectLit());
assertFalse(node2.isAnd());
assertFalse(node2.isFunction());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertNotNull(node2);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

boolean boolean3 = node0.isSyntheticBlock();
assertFalse(boolean3);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertTrue(boolean3 == boolean2);
assertTrue(boolean3 == boolean1);
assertTrue(boolean3 == boolean0);
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));

boolean boolean4 = node0.isInc();
assertFalse(boolean4);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));
assertTrue(boolean4 == boolean2);
assertTrue(boolean4 == boolean3);
assertTrue(boolean4 == boolean0);
assertTrue(boolean4 == boolean1);

Iterable<Node> iterable0 = node0.children();
assertFalse(iterable0.contains(node2));
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertNotNull(iterable0);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));

boolean boolean5 = node0.isContinue();
assertFalse(boolean5);
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isWith());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.isGetProp());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.hasOneChild());
assertFalse(node0.isFalse());
assertFalse(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isLabelName());
assertFalse(node0.isAnd());
assertFalse(node0.isSwitch());
assertEquals(138, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.isIn());
assertFalse(node0.isContinue());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isFor());
assertFalse(node0.isHook());
assertFalse(node0.isNE());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIf());
assertFalse(node0.isCatch());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isRegExp());
assertFalse(node0.isSetterDef());
assertFalse(node0.isFunction());
assertFalse(node0.isTry());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isArrayLit());
assertFalse(node0.isGetterDef());
assertFalse(node0.isDebugger());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isString());
assertFalse(node0.isOr());
assertFalse(node0.isDec());
assertFalse(node0.isAdd());
assertFalse(node0.isNew());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isReturn());
assertFalse(node0.isWhile());
assertFalse(node0.isDo());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isCall());
assertFalse(node0.isGetElem());
assertFalse(node0.isEmpty());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isTrue());
assertFalse(node0.isExprResult());
assertFalse(node0.isVoid());
assertFalse(node0.isNull());
assertFalse(node0.isBreak());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(54, Node.SLASH_V);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));
assertTrue(boolean5 == boolean4);
assertTrue(boolean5 == boolean1);
assertTrue(boolean5 == boolean2);
assertTrue(boolean5 == boolean3);
assertTrue(boolean5 == boolean0);


[MASTER] 13:17:46.948 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:17:47.375 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-100/tests/19
* Done!

* Computation finished
