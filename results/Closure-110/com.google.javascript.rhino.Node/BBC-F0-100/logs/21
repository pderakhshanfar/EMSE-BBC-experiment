* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 15868
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 2513039988
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 13:07:12.165 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 13:07:18.611 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;
[MASTER] 13:10:23.459 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 21287,18642,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 46,0,0| Number of FF evals: 589
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 36,0,0| Number of FF evals: 231
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 6874,6154,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: Line 2311: 434,0,0| Number of FF evals: 237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 389,0,0| Number of FF evals: 938
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 2506,2155,42| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - true: 46,0,0| Number of FF evals: 601
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I127 Branch 126 IF_ICMPGE L980 - false: 9,0,0| Number of FF evals: 767
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 709: 1243,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 1595,1474,40| Number of FF evals: 14477
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 3422,1144,0| Number of FF evals: 2629
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 708: 1243,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 707: 1243,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 371,19,0| Number of FF evals: 1785
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 704: 1243,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 1283,664,0| Number of FF evals: 3344
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - true: 549,0,0| Number of FF evals: 626
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 11730,10350,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 2746,1952,0| Number of FF evals: 8474
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 699: 1243,0,0| Number of FF evals: 862
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 698: 136,0,0| Number of FF evals: 114
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 321,0,0| Number of FF evals: 792
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 136,0,0| Number of FF evals: 751
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1958: 227,0,0| Number of FF evals: 168
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 7207,5398,0| Number of FF evals: 5656
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - true: 4,0,0| Number of FF evals: 451
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1959: 227,0,0| Number of FF evals: 168
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - false: 21,0,0| Number of FF evals: 226
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 13350,11484,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 46,0,0| Number of FF evals: 476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - true: 434,0,0| Number of FF evals: 674
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 49,0,0| Number of FF evals: 665
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 1358,0,0| Number of FF evals: 535
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 2742,0,0| Number of FF evals: 875
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 114,0,0| Number of FF evals: 434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 675,93,0| Number of FF evals: 1999
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - false: 137,0,0| Number of FF evals: 522
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - false: 130,0,0| Number of FF evals: 470
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 10744,9638,15| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I21 Branch 82 IFNULL L670 - true: 6,0,0| Number of FF evals: 774
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 1017,721,0| Number of FF evals: 9964
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 2745,2155,911| Number of FF evals: 6424
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 46,0,0| Number of FF evals: 200
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 9104,8798,0| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 227,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 199,0,0| Number of FF evals: 1633
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1777: 46,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1776: 46,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - false: 21,0,0| Number of FF evals: 240
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: Line 223: 321,0,0| Number of FF evals: 215
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1779: 46,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1778: 46,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 588,0,0| Number of FF evals: 846
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 7684,2883,0| Number of FF evals: 2937
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 549,0,0| Number of FF evals: 531
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 27905,24899,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 1065,0,0| Number of FF evals: 1328
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 1228,1073,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 11376,10108,103| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 633,0,0| Number of FF evals: 498
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 17,0,0| Number of FF evals: 807
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - true: 1660,0,0| Number of FF evals: 958
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 321,0,0| Number of FF evals: 299
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 864,127,0| Number of FF evals: 5414
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 2312,2153,532| Number of FF evals: 17728
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 1430,1136,1| Number of FF evals: 13491
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: Line 2375: 1660,0,0| Number of FF evals: 595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 136,0,0| Number of FF evals: 759
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 8897,7941,0| Number of FF evals: 12927
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 7557,5001,0| Number of FF evals: 9642
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - false: 682,0,0| Number of FF evals: 790
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 3092,2912,406| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: root-Branch: 549,0,0| Number of FF evals: 592
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 72169,65669,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 633,0,0| Number of FF evals: 496
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 1070,0,0| Number of FF evals: 929
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - true: 6,0,0| Number of FF evals: 405
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 633,0,0| Number of FF evals: 494
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 2371,2075,1| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - true: 549,0,0| Number of FF evals: 766
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 3316,992,0| Number of FF evals: 2602
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 2158,0,0| Number of FF evals: 1677
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1473: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - true: 46,0,0| Number of FF evals: 159
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 20707,19142,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - true: 881,176,0| Number of FF evals: 2345
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 2936,713,0| Number of FF evals: 2203
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 46,0,0| Number of FF evals: 92
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1337: 33,0,0| Number of FF evals: 142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1333: 33,0,0| Number of FF evals: 142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 18027,16714,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: Line 2331: 1950,0,0| Number of FF evals: 660
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 281,0,0| Number of FF evals: 348
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: root-Branch: 3457,0,0| Number of FF evals: 1361
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 11621,8040,0| Number of FF evals: 5017
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 1422,0,0| Number of FF evals: 1590
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 281,0,0| Number of FF evals: 348
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 39281,32781,0| Number of FF evals: 9426
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: Line 2303: 1660,0,0| Number of FF evals: 575
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 5403,4726,69| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - true: 321,0,0| Number of FF evals: 664
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 9624,9281,183| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - false: 227,0,0| Number of FF evals: 559
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 15151,13235,0| Number of FF evals: 11454
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - true: 81,0,0| Number of FF evals: 576
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 11044,9841,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - true: 136,0,0| Number of FF evals: 1108
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 72169,65861,53302| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 682,0,0| Number of FF evals: 307
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 72169,65861,53289| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 1504,1211,0| Number of FF evals: 13779
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 46,0,0| Number of FF evals: 269
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 598,305,0| Number of FF evals: 5136
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 743,148,0| Number of FF evals: 2224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 28,0,0| Number of FF evals: 622
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 2233,1936,20| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 136,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 10564,9366,0| Number of FF evals: 11210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 21859,21000,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 46,0,0| Number of FF evals: 611
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - true: 3090,0,0| Number of FF evals: 1373
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 3,0,0| Number of FF evals: 438
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 814,299,0| Number of FF evals: 2962
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 16887,13288,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 7941,7259,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: Line 2367: 136,0,0| Number of FF evals: 99
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 228,0,0| Number of FF evals: 1000
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 46,0,0| Number of FF evals: 393
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 3099,2453,0| Number of FF evals: 4310
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 46,0,0| Number of FF evals: 50
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: Line 2335: 1070,0,0| Number of FF evals: 455
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 3295,1581,0| Number of FF evals: 2816
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 1647,1354,0| Number of FF evals: 14571
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 5529,0,0| Number of FF evals: 1508
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: Line 1258: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 136,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 30,0,0| Number of FF evals: 465
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 2270,1972,1| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 2914,0,0| Number of FF evals: 912
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - false: 229,6,0| Number of FF evals: 1953
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - true: 9,0,0| Number of FF evals: 572
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 5089,4729,943| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 49519,43211,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 172,28,5| Number of FF evals: 2056
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 114,0,0| Number of FF evals: 434
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 39281,32973,0| Number of FF evals: 9481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 299,109,0| Number of FF evals: 4059
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 1070,0,0| Number of FF evals: 451
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 4594,48,0| Number of FF evals: 1848
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 7649,7109,369| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 804,0,0| Number of FF evals: 337
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 2577,0,0| Number of FF evals: 820
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 4006,0,0| Number of FF evals: 1350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 549,0,0| Number of FF evals: 286
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 140,0,0| Number of FF evals: 422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 550: 136,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 17,0,0| Number of FF evals: 766
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: Line 2223: 682,0,0| Number of FF evals: 307
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setStaticSourceFile(Lcom/google/javascript/rhino/jstype/StaticSourceFile;)V: Line 1094: 321,0,0| Number of FF evals: 173
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setStaticSourceFile(Lcom/google/javascript/rhino/jstype/StaticSourceFile;)V: Line 1095: 321,0,0| Number of FF evals: 173
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1271: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 804,0,0| Number of FF evals: 387
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1270: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1273: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 5529,0,0| Number of FF evals: 1674
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1272: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 40465,36884,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 2309,2016,4| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1274: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 11621,8040,0| Number of FF evals: 5080
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: root-Branch: 136,0,0| Number of FF evals: 768
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 17011,11010,0| Number of FF evals: 10089
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - true: 804,0,0| Number of FF evals: 401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 7505,6039,0| Number of FF evals: 10615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 12080,10614,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: Line 2291: 1660,0,0| Number of FF evals: 575
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: Line 2239: 227,0,0| Number of FF evals: 138
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 2742,0,0| Number of FF evals: 1247
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - false: 282,0,0| Number of FF evals: 472
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 6200,3152,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 32632,29084,18| Number of FF evals: 13367
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 5479,4861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 40130,33822,0| Number of FF evals: 9980
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 281,0,0| Number of FF evals: 407
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 281,0,0| Number of FF evals: 470
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 39281,32973,0| Number of FF evals: 9481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 2742,0,0| Number of FF evals: 889
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 11541,7993,0| Number of FF evals: 5081
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: root-Branch: 46,0,0| Number of FF evals: 422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 6878,570,0| Number of FF evals: 1846
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 49519,43211,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: root-Branch: 46,0,0| Number of FF evals: 558
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - true: 2256,0,0| Number of FF evals: 1050
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 227,0,0| Number of FF evals: 597
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - true: 682,0,0| Number of FF evals: 752
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 72169,65861,53355| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 39281,32973,0| Number of FF evals: 9481
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 1228,72,0| Number of FF evals: 1791
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 19357,18038,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 50,0,0| Number of FF evals: 216
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 1950,0,0| Number of FF evals: 716
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 14015,11608,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - true: 1070,0,0| Number of FF evals: 826
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 804,0,0| Number of FF evals: 464
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - false: 2742,0,0| Number of FF evals: 1136
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 1228,72,0| Number of FF evals: 1791
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - true: 1660,0,0| Number of FF evals: 1060
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 80 IFNULL L669 - true: 6,0,0| Number of FF evals: 675
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 4010,927,0| Number of FF evals: 5730
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 3535,2029,0| Number of FF evals: 11804
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - true: 3457,0,0| Number of FF evals: 1742
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 1765,1472,1| Number of FF evals: 13603
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 37182,32952,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: root-Branch: 227,0,0| Number of FF evals: 323
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 389,0,0| Number of FF evals: 940
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 2417,0,0| Number of FF evals: 780
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 467,0,0| Number of FF evals: 1054
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 2577,0,0| Number of FF evals: 1000
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 10727,9671,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: Line 1416: 804,0,0| Number of FF evals: 373
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 20276,15427,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 5636,4547,0| Number of FF evals: 9494
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 321,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 12558,11424,0| Number of FF evals: 8092
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 321,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 2160,1782,0| Number of FF evals: 9050
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 136,0,0| Number of FF evals: 745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - true: 5529,0,0| Number of FF evals: 1691
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 1345,0,0| Number of FF evals: 805
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 136,0,0| Number of FF evals: 105
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 136,0,0| Number of FF evals: 739
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 2435,2142,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 136,0,0| Number of FF evals: 246
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 1335,1042,30| Number of FF evals: 12180
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 136,0,0| Number of FF evals: 725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: Line 2279: 682,0,0| Number of FF evals: 306
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - true: 6,0,0| Number of FF evals: 627
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 409,0,0| Number of FF evals: 1394
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: Line 2135: 1358,0,0| Number of FF evals: 500
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 550,0,0| Number of FF evals: 478
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 725,432,0| Number of FF evals: 7241
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - false: 321,0,0| Number of FF evals: 408
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 5627,4775,0| Number of FF evals: 13552
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 672: 6,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 5719,4649,0| Number of FF evals: 14555
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAssignAdd()Z: Line 2235: 321,0,0| Number of FF evals: 176
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 391,232,103| Number of FF evals: 4347
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 46,0,0| Number of FF evals: 981
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - true: 110,0,0| Number of FF evals: 316
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSetterDef()Z: Line 2399: 1660,0,0| Number of FF evals: 609
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 4929,4388,0| Number of FF evals: 17726
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 3766,635,0| Number of FF evals: 3282
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 7061,1271,0| Number of FF evals: 4198
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 31198,27636,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 4929,4388,0| Number of FF evals: 17726
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setChangeTime(I)V: Line 1895: 136,0,0| Number of FF evals: 132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setChangeTime(I)V: Line 1894: 136,0,0| Number of FF evals: 132
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 2543,2399,232| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 692: 6,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 227,0,0| Number of FF evals: 527
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 530,0,0| Number of FF evals: 1131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 4773,3754,0| Number of FF evals: 9493
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 3888,2615,0| Number of FF evals: 6420
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1791: 46,0,0| Number of FF evals: 76
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1792: 46,0,0| Number of FF evals: 76
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isString()Z: Line 2403: 136,0,0| Number of FF evals: 94
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 172,28,5| Number of FF evals: 2056
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 1081,370,20| Number of FF evals: 2850
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 675: 6,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1099: 549,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 5793,1207,0| Number of FF evals: 2624
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 676: 6,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1797: 46,0,0| Number of FF evals: 76
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 931,220,18| Number of FF evals: 2366
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 717: 21,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 601: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1752: 59,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 604: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 36330,30022,0| Number of FF evals: 8688
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 721: 21,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 17135,12077,0| Number of FF evals: 9952
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 3636,0,0| Number of FF evals: 1141
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1747: 59,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 723: 21,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1100: 549,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 4394,0,0| Number of FF evals: 1499
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 724: 21,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 136,0,0| Number of FF evals: 711
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 725: 21,0,0| Number of FF evals: 112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 136,0,0| Number of FF evals: 349
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 136,0,0| Number of FF evals: 171
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - true: 227,0,0| Number of FF evals: 309
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 596: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 5011,4416,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 4622,4016,0| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 598: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - false: 682,0,0| Number of FF evals: 753
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 597: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 600: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWith()Z: Line 2447: 3457,0,0| Number of FF evals: 1038
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 599: 2742,0,0| Number of FF evals: 861
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 72004,65504,0| Number of FF evals: 17688
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - true: 3,0,0| Number of FF evals: 1265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 1023,0,0| Number of FF evals: 703
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 3816,2187,0| Number of FF evals: 4135
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 2386,2093,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - true: 136,0,0| Number of FF evals: 502
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 394,236,105| Number of FF evals: 4344
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - true: 434,0,0| Number of FF evals: 584
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 2250,1957,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 4815,4221,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 37,0,0| Number of FF evals: 248
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1732: 1806,0,0| Number of FF evals: 613
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: Line 2156: 434,0,0| Number of FF evals: 235
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 24,0,0| Number of FF evals: 170
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 1660,0,0| Number of FF evals: 581
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 15377,14429,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 478,45,0| Number of FF evals: 2217
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 321,0,0| Number of FF evals: 215
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1720: 1806,0,0| Number of FF evals: 613
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 526,0,0| Number of FF evals: 496
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1721: 1806,0,0| Number of FF evals: 613
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: Line 1616: 682,0,0| Number of FF evals: 327
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 4006,0,0| Number of FF evals: 1167
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 136,0,0| Number of FF evals: 713
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 2547,0,0| Number of FF evals: 1377
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 321,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcref(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1783: 46,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: Line 312: 321,0,0| Number of FF evals: 209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - true: 321,0,0| Number of FF evals: 336
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQuotedString()Z: Line 2181: 3457,0,0| Number of FF evals: 1068
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 410,117,0| Number of FF evals: 3045
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 1093,569,0| Number of FF evals: 3687
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 39281,32973,0| Number of FF evals: 9426
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 46,0,0| Number of FF evals: 407
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 1824,0,0| Number of FF evals: 1333
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - true: 1660,0,0| Number of FF evals: 1179
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 317,0,0| Number of FF evals: 411
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 17485,13466,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - true: 4,0,0| Number of FF evals: 933
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 1379,893,0| Number of FF evals: 6075
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 13794,12593,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 193,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I33 Branch 112 IFNULL L878 - false: 9,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 160,0,0| Number of FF evals: 197
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 136,0,0| Number of FF evals: 754
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 633: 136,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 634: 136,0,0| Number of FF evals: 130
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 3636,0,0| Number of FF evals: 1097
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 11797,11156,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 9255,8429,0| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isName()Z: Line 2351: 4394,0,0| Number of FF evals: 1258
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 403,0,0| Number of FF evals: 1353
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - false: 88,0,0| Number of FF evals: 465
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 502,0,0| Number of FF evals: 1829
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 11230,9966,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 46,0,0| Number of FF evals: 492
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 20640,19627,13319| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 17620,13009,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 682,0,0| Number of FF evals: 505
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 995,95,0| Number of FF evals: 1796
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 1116,505,0| Number of FF evals: 2804
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 5517,4757,0| Number of FF evals: 13522
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 235,0,0| Number of FF evals: 433
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 11045,9932,0| Number of FF evals: 15056
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - true: 3271,0,0| Number of FF evals: 1457
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 1661,821,0| Number of FF evals: 6265
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - true: 549,0,0| Number of FF evals: 584
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1682: 321,0,0| Number of FF evals: 175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - false: 29,0,0| Number of FF evals: 795
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 72169,65669,53170| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 20,0,0| Number of FF evals: 73
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 2335,869,0| Number of FF evals: 3350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 321,0,0| Number of FF evals: 286
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 10843,9731,108| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 37,0,0| Number of FF evals: 492
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I17 Branch 146 IFNULL L1334 - true: 227,0,0| Number of FF evals: 294
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 800,0,0| Number of FF evals: 971
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 3010,2888,322| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 2194,260,0| Number of FF evals: 3190
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 28,0,0| Number of FF evals: 275
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 45,0,0| Number of FF evals: 620
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 321,0,0| Number of FF evals: 178
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 8396,5358,0| Number of FF evals: 13201
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 136,0,0| Number of FF evals: 658
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 321,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - true: 1950,0,0| Number of FF evals: 990
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 136,0,0| Number of FF evals: 752
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 1660,0,0| Number of FF evals: 735
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - false: 136,0,0| Number of FF evals: 1201
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I17 Branch 146 IFNULL L1334 - false: 227,0,0| Number of FF evals: 393
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 5303,4882,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 216,0,0| Number of FF evals: 741
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 21889,19267,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: root-Branch: 46,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 7505,6049,0| Number of FF evals: 10574
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 4394,0,0| Number of FF evals: 1258
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDec()Z: Line 2275: 549,0,0| Number of FF evals: 257
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 9,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 10,0,0| Number of FF evals: 277
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isContinue()Z: Line 2267: 2256,0,0| Number of FF evals: 752
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 6960,6462,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 6960,6462,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I26 Branch 83 IFNONNULL L671 - false: 6,0,0| Number of FF evals: 747
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - true: 4,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 46,0,0| Number of FF evals: 380
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 227,0,0| Number of FF evals: 145
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 14729,13489,21| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - true: 941,0,0| Number of FF evals: 476
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setChangeTime(I)V: root-Branch: 136,0,0| Number of FF evals: 309
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 2335,879,0| Number of FF evals: 3416
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 7349,5893,0| Number of FF evals: 10615
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 72004,65504,0| Number of FF evals: 17688
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - false: 941,0,0| Number of FF evals: 435
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 136,0,0| Number of FF evals: 92
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 5995,5040,0| Number of FF evals: 9638
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 136,0,0| Number of FF evals: 763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1646: 2577,0,0| Number of FF evals: 837
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 1357,1236,40| Number of FF evals: 12781
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1647: 2577,0,0| Number of FF evals: 837
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - true: 682,0,0| Number of FF evals: 402
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 186,0,0| Number of FF evals: 243
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 1064,768,0| Number of FF evals: 10401
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 2089,1968,140| Number of FF evals: 17729
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 1660,0,0| Number of FF evals: 745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 3358,1556,0| Number of FF evals: 3051
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 136,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 136,0,0| Number of FF evals: 127
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: Line 2423: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1650: 2577,0,0| Number of FF evals: 837
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - true: 26,0,0| Number of FF evals: 942
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 45 IFNONNULL L421 - true: 34,0,0| Number of FF evals: 163
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 46,0,0| Number of FF evals: 208
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 2102,0,0| Number of FF evals: 733
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 794,0,0| Number of FF evals: 696
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 46,0,0| Number of FF evals: 1423
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 123,0,0| Number of FF evals: 222
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 192,0,0| Number of FF evals: 750
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 2937,2396,0| Number of FF evals: 10399
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 46,0,0| Number of FF evals: 148
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 39,0,0| Number of FF evals: 213
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 2913,2372,0| Number of FF evals: 10316
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 8808,7841,124| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 2547,0,0| Number of FF evals: 1355
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 3126,832,0| Number of FF evals: 2793
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 2547,0,0| Number of FF evals: 1355
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 1358,0,0| Number of FF evals: 1244
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - false: 2727,0,0| Number of FF evals: 878
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 2335,879,0| Number of FF evals: 3458
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 1747,0,0| Number of FF evals: 1919
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: Line 1598: 136,0,0| Number of FF evals: 120
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - true: 595,0,0| Number of FF evals: 1734
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 2577,0,0| Number of FF evals: 914
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I70 Branch 122 IF_ICMPNE L966 - false: 21,0,0| Number of FF evals: 641
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 10780,9721,50| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - true: 29,0,0| Number of FF evals: 790
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - false: 71,0,0| Number of FF evals: 370
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - true: 321,0,0| Number of FF evals: 315
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 3087,2689,0| Number of FF evals: 11086
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - false: 1243,0,0| Number of FF evals: 987
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 11744,10783,0| Number of FF evals: 8763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 1950,0,0| Number of FF evals: 676
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 46,0,0| Number of FF evals: 66
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: Line 2124: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 59,0,0| Number of FF evals: 766
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 1921,1749,378| Number of FF evals: 13577
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 4929,4388,0| Number of FF evals: 17726
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 3878,1325,2| Number of FF evals: 2403
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1978: 321,0,0| Number of FF evals: 209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 16057,12981,0| Number of FF evals: 8718
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.wasEmptyNode()Z: root-Branch: 46,0,0| Number of FF evals: 220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 335,0,0| Number of FF evals: 745
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - true: 795,0,0| Number of FF evals: 984
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1974: 321,0,0| Number of FF evals: 209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1977: 321,0,0| Number of FF evals: 209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: Line 1966: 321,0,0| Number of FF evals: 206
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 2551,2207,247| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 4421,4180,561| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 1461,1028,0| Number of FF evals: 9059
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: Line 2147: 46,0,0| Number of FF evals: 88
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - true: 3,0,0| Number of FF evals: 1287
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 227,0,0| Number of FF evals: 170
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 11296,10052,47| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1679: 941,0,0| Number of FF evals: 386
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1678: 941,0,0| Number of FF evals: 386
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1677: 941,0,0| Number of FF evals: 386
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcref(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 46,0,0| Number of FF evals: 316
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: Line 2076: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.detachChildren()V: Line 1671: 941,0,0| Number of FF evals: 386
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 1357,1236,40| Number of FF evals: 12763
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 2417,0,0| Number of FF evals: 1417
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 20439,16998,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 14559,13601,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - false: 136,0,0| Number of FF evals: 1197
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - false: 150,0,0| Number of FF evals: 665
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLabelName()Z: Line 2347: 3271,0,0| Number of FF evals: 1014
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 848,424,0| Number of FF evals: 5032
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 7,0,0| Number of FF evals: 438
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1762: 549,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1763: 549,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 393,0,0| Number of FF evals: 732
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1801: 1660,0,0| Number of FF evals: 595
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 2911,2400,0| Number of FF evals: 10319
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1768: 549,0,0| Number of FF evals: 298
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1128: 227,0,0| Number of FF evals: 142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1127: 227,0,0| Number of FF evals: 142
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 33,0,0| Number of FF evals: 289
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 136,0,0| Number of FF evals: 752
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 385,0,0| Number of FF evals: 1399
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 216,0,0| Number of FF evals: 717
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 2742,0,0| Number of FF evals: 1175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 7122,6107,0| Number of FF evals: 11419
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 1160,867,0| Number of FF evals: 11013
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 2224,2016,152| Number of FF evals: 17224
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 136,0,0| Number of FF evals: 131
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 6187,5172,0| Number of FF evals: 10654
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 136,0,0| Number of FF evals: 162
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 58 IF_ACMPNE L550 - true: 136,0,0| Number of FF evals: 416
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - false: 199,0,0| Number of FF evals: 1687
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 136,0,0| Number of FF evals: 759
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 389,0,0| Number of FF evals: 939
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 58 IF_ACMPNE L550 - false: 222,0,0| Number of FF evals: 350
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I32 Branch 35 IFNONNULL L383 - true: 7,0,0| Number of FF evals: 137
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 2102,0,0| Number of FF evals: 711
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 2398,2105,1| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isReturn()Z: Line 2391: 434,0,0| Number of FF evals: 235
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 8427,6964,0| Number of FF evals: 17147
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 2997,727,0| Number of FF evals: 2200
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 317,0,0| Number of FF evals: 411
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 38121,35851,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - true: 682,0,0| Number of FF evals: 799
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 2997,727,0| Number of FF evals: 2200
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 2997,727,0| Number of FF evals: 2200
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 136,0,0| Number of FF evals: 700
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 26096,23665,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 321,0,0| Number of FF evals: 209
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 227,0,0| Number of FF evals: 143
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 633,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 439,0,0| Number of FF evals: 422
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 633,0,0| Number of FF evals: 452
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 9050,8049,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 9050,8049,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 14417,12993,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 39281,32973,0| Number of FF evals: 9426
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 14535,13065,72| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 6878,570,0| Number of FF evals: 1811
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - true: 1806,0,0| Number of FF evals: 958
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - false: 1916,0,0| Number of FF evals: 821
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 662: 71,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - false: 136,0,0| Number of FF evals: 464
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 71,0,0| Number of FF evals: 210
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 14910,13718,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 10131,9009,114| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: Line 534: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 6265,5864,650| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 72169,65669,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 2914,0,0| Number of FF evals: 1604
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 9,0,0| Number of FF evals: 175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;: I9 Branch 104 IFNONNULL L814 - true: 78,0,0| Number of FF evals: 435
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 14240,12904,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 22466,21242,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isHook()Z: Line 2323: 3090,0,0| Number of FF evals: 970
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 4864,0,0| Number of FF evals: 1544
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - false: 30,0,0| Number of FF evals: 393
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 478,45,0| Number of FF evals: 2220
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 3636,0,0| Number of FF evals: 1084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 4394,0,0| Number of FF evals: 1314
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 3636,0,0| Number of FF evals: 1084
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - false: 136,0,0| Number of FF evals: 1112
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 11544,8040,0| Number of FF evals: 17334
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: Line 912: 5529,0,0| Number of FF evals: 1519
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 3687,3039,163| Number of FF evals: 17691
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - true: 46,0,0| Number of FF evals: 160
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 1310,789,0| Number of FF evals: 2973
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 146,0,0| Number of FF evals: 315
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 21,0,0| Number of FF evals: 665
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 1346,0,0| Number of FF evals: 1055
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 33 IFNONNULL L379 - true: 19,0,0| Number of FF evals: 237
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - false: 1243,0,0| Number of FF evals: 981
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 3645,1957,0| Number of FF evals: 4088
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - true: 1660,0,0| Number of FF evals: 906
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 8170,6078,0| Number of FF evals: 6658
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 549,0,0| Number of FF evals: 785
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 21817,19110,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isLocalResultCall()Z: root-Branch: 434,0,0| Number of FF evals: 348
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1149: 136,0,0| Number of FF evals: 99
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 14424,13509,0| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 4708,4114,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: Line 244: 1950,0,0| Number of FF evals: 670
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 46,0,0| Number of FF evals: 61
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1148: 136,0,0| Number of FF evals: 99
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 7448,2476,0| Number of FF evals: 4535
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.wasEmptyNode()Z: Line 1993: 46,0,0| Number of FF evals: 90
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 14424,13509,0| Number of FF evals: 17684
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setStaticSourceFile(Lcom/google/javascript/rhino/jstype/StaticSourceFile;)V: root-Branch: 321,0,0| Number of FF evals: 225
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 21103,18030,1| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 3636,0,0| Number of FF evals: 1408
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 9,0,0| Number of FF evals: 175
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 7075,6436,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 136,0,0| Number of FF evals: 719
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 1161,790,0| Number of FF evals: 10271
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - false: 2742,0,0| Number of FF evals: 1145
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - false: 2742,0,0| Number of FF evals: 1144
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 206,0,0| Number of FF evals: 709
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: root-Branch: 1358,0,0| Number of FF evals: 909
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 20229,18790,0| Number of FF evals: 17261
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 36330,29830,0| Number of FF evals: 8689
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1657: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 136,0,0| Number of FF evals: 764
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1658: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 3051,0,0| Number of FF evals: 1624
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1661: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1662: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1663: 46,0,0| Number of FF evals: 77
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 14793,11655,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: root-Branch: 1950,0,0| Number of FF evals: 819
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 184,0,0| Number of FF evals: 223
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 136,0,0| Number of FF evals: 716
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 72169,65861,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 913,622,19| Number of FF evals: 9805
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 136,0,0| Number of FF evals: 760
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - true: 46,0,0| Number of FF evals: 707
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 20229,18790,0| Number of FF evals: 17261
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 75,0,0| Number of FF evals: 328
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 4643,4077,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 72169,65669,53160| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - false: 80,0,0| Number of FF evals: 493
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 6882,6177,61| Number of FF evals: 17261
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - true: 21,0,0| Number of FF evals: 113
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 165,0,0| Number of FF evals: 617
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - false: 59,0,0| Number of FF evals: 827
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 46,0,0| Number of FF evals: 78
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isThis()Z: Line 2415: 549,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getDirectives()Ljava/util/Set;: root-Branch: 321,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 46,0,0| Number of FF evals: 133
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 549,0,0| Number of FF evals: 297
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 914,0,0| Number of FF evals: 732
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 7940,7270,0| Number of FF evals: 17725
Number of times BBC is called, activated, and useful for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - false: 129,0,0| Number of FF evals: 369
* Search finished after 604s and 406 generations, 194887 statements, best individual has fitness: 2787.0
* Minimizing test suite
[MASTER] 13:18:33.614 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 853
* Number of covered goals: 793
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 714
* Number of covered goals: 609
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 99
* Number of covered goals: 99
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 87%
* Total number of goals: 530
* Number of covered goals: 460
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 4536
* Number of covered goals: 2304
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 233
* Number of covered goals: 212
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 79%
* Total number of goals: 714
* Number of covered goals: 565
* Generated 726 tests with total length 9461
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:19:39.358 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6837666666666666% of time used, but only 37/726 tests minimized), falling back to using all assertions
[MASTER] 13:19:58.762 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
[MASTER] 13:20:09.122 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 10 seconds more than allowed.
[MASTER] 13:20:18.204 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_84_1628256018153/com/google/javascript/rhino/Node_84_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_84_1628256018153/com/google/javascript/rhino/Node_84_tmp__ESTest_scaffolding.java]]
[MASTER] 13:20:18.204 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:18.204 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:18.207 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 194
[MASTER] 13:20:18.208 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_84_1628256018153/com/google/javascript/rhino/Node_84_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:20:18 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_84_tmp__ESTest extends Node_84_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newString("BOOLEAN_TYPE");
22:       assertFalse(node0.isSwitch());
23:       assertEquals((-1), node0.getCharno());
24:       assertFalse(node0.isHook());
25:       assertFalse(node0.isIn());
26:       assertFalse(node0.isCase());
27:       assertFalse(node0.isInc());
28:       assertFalse(node0.isNE());
29:       assertFalse(node0.isDelProp());
30:       assertFalse(node0.isIf());
31:       assertFalse(node0.isFor());
32:       assertFalse(node0.isThis());
33:       assertFalse(node0.isComma());
34:       assertFalse(node0.isInstanceOf());
35:       assertFalse(node0.isVoid());
36:       assertFalse(node0.isBreak());
37:       assertFalse(node0.isFunction());
38:       assertEquals(40, node0.getType());
39:       assertFalse(node0.isNot());
40:       assertFalse(node0.isDebugger());
41:       assertFalse(node0.isObjectLit());
42:       assertFalse(node0.isSetterDef());
43:       assertFalse(node0.isGetProp());
44:       assertEquals((-1), node0.getSourcePosition());
45:       assertFalse(node0.isThrow());
46:       assertFalse(node0.isCast());
47:       assertFalse(node0.isAnd());
48:       assertFalse(node0.isContinue());
49:       assertFalse(node0.isFalse());
50:       assertFalse(node0.isWhile());
51:       assertFalse(node0.isBlock());
52:       assertFalse(node0.isVar());
53:       assertFalse(node0.isAssignAdd());
54:       assertTrue(node0.isString());
55:       assertFalse(node0.isNew());
56:       assertFalse(node0.isAdd());
57:       assertFalse(node0.isDo());
58:       assertFalse(node0.isTypeOf());
59:       assertFalse(node0.isNull());
60:       assertFalse(node0.isDec());
61:       assertFalse(node0.isAssign());
62:       assertFalse(node0.isOr());
63:       assertFalse(node0.isReturn());
64:       assertFalse(node0.hasChildren());
65:       assertFalse(node0.isCatch());
66:       assertFalse(node0.hasMoreThanOneChild());
67:       assertFalse(node0.isGetElem());
68:       assertFalse(node0.isName());
69:       assertEquals((-1), node0.getLineno());
70:       assertFalse(node0.isExprResult());
71:       assertFalse(node0.isCall());
72:       assertFalse(node0.isScript());
73:       assertFalse(node0.isRegExp());
74:       assertFalse(node0.isWith());
75:       assertFalse(node0.isDefaultCase());
76:       assertFalse(node0.isTrue());
77:       assertFalse(node0.hasOneChild());
78:       assertFalse(node0.isEmpty());
79:       assertFalse(node0.isTry());
80:       assertFalse(node0.isNumber());
81:       assertFalse(node0.isGetterDef());
82:       assertFalse(node0.isParamList());
83:       assertFalse(node0.isStringKey());
84:       assertFalse(node0.isLabel());
85:       assertFalse(node0.isArrayLit());
86:       assertEquals(0, node0.getChildCount());
87:       assertFalse(node0.isLabelName());
88:       assertNotNull(node0);
89:       assertEquals(40, Node.ORIGINALNAME_PROP);
90:       assertEquals(50, Node.FREE_CALL);
91:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
92:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
93:       assertEquals(39, Node.EMPTY_BLOCK);
94:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
95:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
96:       assertEquals(30, Node.VAR_ARGS_NAME);
97:       assertEquals(1, Node.DECR_FLAG);
98:       assertEquals(32, Node.INCRDECR_PROP);
99:       assertEquals(54, Node.SLASH_V);
100:       assertEquals(43, Node.IS_CONSTANT_NAME);
101:       assertEquals(51, Node.STATIC_SOURCE_FILE);
102:       assertEquals(46, Node.IS_NAMESPACE);
103:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
104:       assertEquals(29, Node.JSDOC_INFO_PROP);
105:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
106:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
107:       assertEquals(37, Node.OPT_ARG_NAME);
108:       assertEquals(47, Node.IS_DISPATCHER);
109:       assertEquals(2, Node.POST_FLAG);
110:       assertEquals(12, Node.COLUMN_BITS);
111:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
112:       assertEquals(49, Node.DIRECT_EVAL);
113:       assertEquals(55, Node.INFERRED_FUNCTION);
114:       assertEquals(57, Node.LAST_PROP);
115:       assertEquals(4095, Node.COLUMN_MASK);
116:       assertEquals(15, Node.NO_SIDE_EFFECTS);
117:       assertEquals(53, Node.INPUT_ID);
118:       assertEquals(48, Node.DIRECTIVES);
119:       assertEquals(52, Node.LENGTH);
120:       assertEquals(8, Node.FLAG_NO_THROWS);
121:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
122:       assertEquals(56, Node.CHANGE_TIME);
123:       assertEquals(36, Node.QUOTED_PROP);
124:       assertEquals(57, Node.REFLECTED_OBJECT);
125:       
126:       Iterable<Node> iterable0 = node0.children();
127:       assertFalse(node0.isSwitch());
128:       assertEquals((-1), node0.getCharno());
129:       assertFalse(node0.isHook());
130:       assertFalse(node0.isIn());
131:       assertFalse(node0.isCase());
132:       assertFalse(node0.isInc());
133:       assertFalse(node0.isNE());
134:       assertFalse(node0.isDelProp());
135:       assertFalse(node0.isIf());
136:       assertFalse(node0.isFor());
137:       assertFalse(node0.isThis());
138:       assertFalse(node0.isComma());
139:       assertFalse(node0.isInstanceOf());
140:       assertFalse(node0.isVoid());
141:       assertFalse(node0.isBreak());
142:       assertFalse(node0.isFunction());
143:       assertEquals(40, node0.getType());
144:       assertFalse(node0.isNot());
145:       assertFalse(node0.isDebugger());
146:       assertFalse(node0.isObjectLit());
147:       assertFalse(node0.isSetterDef());
148:       assertFalse(node0.isGetProp());
149:       assertEquals((-1), node0.getSourcePosition());
150:       assertFalse(node0.isThrow());
151:       assertFalse(node0.isCast());
152:       assertFalse(node0.isAnd());
153:       assertFalse(node0.isContinue());
154:       assertFalse(node0.isFalse());
155:       assertFalse(node0.isWhile());
156:       assertFalse(node0.isBlock());
157:       assertFalse(node0.isVar());
158:       assertFalse(node0.isAssignAdd());
159:       assertTrue(node0.isString());
160:       assertFalse(node0.isNew());
161:       assertFalse(node0.isAdd());
162:       assertFalse(node0.isDo());
163:       assertFalse(node0.isTypeOf());
164:       assertFalse(node0.isNull());
165:       assertFalse(node0.isDec());
166:       assertFalse(node0.isAssign());
167:       assertFalse(node0.isOr());
168:       assertFalse(node0.isReturn());
169:       assertFalse(node0.hasChildren());
170:       assertFalse(node0.isCatch());
171:       assertFalse(node0.hasMoreThanOneChild());
172:       assertFalse(node0.isGetElem());
173:       assertFalse(node0.isName());
174:       assertEquals((-1), node0.getLineno());
175:       assertFalse(node0.isExprResult());
176:       assertFalse(node0.isCall());
177:       assertFalse(node0.isScript());
178:       assertFalse(node0.isRegExp());
179:       assertFalse(node0.isWith());
180:       assertFalse(node0.isDefaultCase());
181:       assertFalse(node0.isTrue());
182:       assertFalse(node0.hasOneChild());
183:       assertFalse(node0.isEmpty());
184:       assertFalse(node0.isTry());
185:       assertFalse(node0.isNumber());
186:       assertFalse(node0.isGetterDef());
187:       assertFalse(node0.isParamList());
188:       assertFalse(node0.isStringKey());
189:       assertFalse(node0.isLabel());
190:       assertFalse(node0.isArrayLit());
191:       assertEquals(0, node0.getChildCount());
192:       assertFalse(node0.isLabelName());
193:       assertNotNull(iterable0);
194:       assertFalse(iterable0.contains(node0));
195:       assertEquals(40, Node.ORIGINALNAME_PROP);
196:       assertEquals(50, Node.FREE_CALL);
197:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
198:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
199:       assertEquals(39, Node.EMPTY_BLOCK);
200:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
201:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
202:       assertEquals(30, Node.VAR_ARGS_NAME);
203:       assertEquals(1, Node.DECR_FLAG);
204:       assertEquals(32, Node.INCRDECR_PROP);
205:       assertEquals(54, Node.SLASH_V);
206:       assertEquals(43, Node.IS_CONSTANT_NAME);
207:       assertEquals(51, Node.STATIC_SOURCE_FILE);
208:       assertEquals(46, Node.IS_NAMESPACE);
209:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
210:       assertEquals(29, Node.JSDOC_INFO_PROP);
211:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
212:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
213:       assertEquals(37, Node.OPT_ARG_NAME);
214:       assertEquals(47, Node.IS_DISPATCHER);
215:       assertEquals(2, Node.POST_FLAG);
216:       assertEquals(12, Node.COLUMN_BITS);
217:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
218:       assertEquals(49, Node.DIRECT_EVAL);
219:       assertEquals(55, Node.INFERRED_FUNCTION);
220:       assertEquals(57, Node.LAST_PROP);
221:       assertEquals(4095, Node.COLUMN_MASK);
222:       assertEquals(15, Node.NO_SIDE_EFFECTS);
223:       assertEquals(53, Node.INPUT_ID);
224:       assertEquals(48, Node.DIRECTIVES);
225:       assertEquals(52, Node.LENGTH);
226:       assertEquals(8, Node.FLAG_NO_THROWS);
227:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
228:       assertEquals(56, Node.CHANGE_TIME);
229:       assertEquals(36, Node.QUOTED_PROP);
230:       assertEquals(57, Node.REFLECTED_OBJECT);
231:       
232:       Node node1 = Node.newString(2751, "BOOLEAN_TYPE");
233:       assertFalse(node1.equals((Object)node0));
234:       assertFalse(node1.isDo());
235:       assertFalse(node1.isWhile());
236:       assertFalse(node1.isContinue());
237:       assertFalse(node1.hasMoreThanOneChild());
238:       assertFalse(node1.isLabel());
239:       assertFalse(node1.isAssignAdd());
240:       assertFalse(node1.isNew());
241:       assertFalse(node1.isVar());
242:       assertFalse(node1.isDec());
243:       assertFalse(node1.hasChildren());
244:       assertFalse(node1.isReturn());
245:       assertFalse(node1.isBlock());
246:       assertFalse(node1.isAssign());
247:       assertFalse(node1.isTypeOf());
248:       assertFalse(node1.isName());
249:       assertFalse(node1.isSetterDef());
250:       assertFalse(node1.isCall());
251:       assertFalse(node1.isGetElem());
252:       assertFalse(node1.isOr());
253:       assertFalse(node1.isAdd());
254:       assertEquals((-1), node1.getLineno());
255:       assertFalse(node1.isNull());
256:       assertFalse(node1.isNot());
257:       assertFalse(node1.isObjectLit());
258:       assertFalse(node1.isAnd());
259:       assertFalse(node1.isExprResult());
260:       assertFalse(node1.isFunction());
261:       assertFalse(node1.isComma());
262:       assertFalse(node1.isFalse());
263:       assertFalse(node1.isCast());
264:       assertFalse(node1.isGetProp());
265:       assertEquals((-1), node1.getSourcePosition());
266:       assertFalse(node1.isDebugger());
267:       assertFalse(node1.isCase());
268:       assertFalse(node1.isString());
269:       assertFalse(node1.isInc());
270:       assertFalse(node1.isThrow());
271:       assertFalse(node1.isHook());
272:       assertFalse(node1.isEmpty());
273:       assertFalse(node1.isIf());
274:       assertFalse(node1.isDelProp());
275:       assertFalse(node1.isBreak());
276:       assertFalse(node1.isIn());
277:       assertFalse(node1.isVoid());
278:       assertFalse(node1.isNE());
279:       assertFalse(node1.isTrue());
280:       assertFalse(node1.isDefaultCase());
281:       assertFalse(node1.isWith());
282:       assertFalse(node1.isScript());
283:       assertFalse(node1.isCatch());
284:       assertFalse(node1.isInstanceOf());
285:       assertFalse(node1.isTry());
286:       assertEquals(0, node1.getChildCount());
287:       assertFalse(node1.isRegExp());
288:       assertFalse(node1.isThis());
289:       assertFalse(node1.isLabelName());
290:       assertFalse(node1.isFor());
291:       assertFalse(node1.isStringKey());
292:       assertFalse(node1.isGetterDef());
293:       assertFalse(node1.isNumber());
294:       assertFalse(node1.isArrayLit());
295:       assertFalse(node1.hasOneChild());
296:       assertEquals(2751, node1.getType());
297:       assertFalse(node1.isSwitch());
298:       assertFalse(node1.isParamList());
299:       assertEquals((-1), node1.getCharno());
300:       assertNotSame(node1, node0);
301:       assertNotNull(node1);
302:       assertEquals(52, Node.LENGTH);
303:       assertEquals(50, Node.FREE_CALL);
304:       assertEquals(54, Node.SLASH_V);
305:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
306:       assertEquals(57, Node.REFLECTED_OBJECT);
307:       assertEquals(49, Node.DIRECT_EVAL);
308:       assertEquals(48, Node.DIRECTIVES);
309:       assertEquals(40, Node.ORIGINALNAME_PROP);
310:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
311:       assertEquals(51, Node.STATIC_SOURCE_FILE);
312:       assertEquals(12, Node.COLUMN_BITS);
313:       assertEquals(4095, Node.COLUMN_MASK);
314:       assertEquals(32, Node.INCRDECR_PROP);
315:       assertEquals(46, Node.IS_NAMESPACE);
316:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
317:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
318:       assertEquals(1, Node.DECR_FLAG);
319:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
320:       assertEquals(47, Node.IS_DISPATCHER);
321:       assertEquals(43, Node.IS_CONSTANT_NAME);
322:       assertEquals(2, Node.POST_FLAG);
323:       assertEquals(56, Node.CHANGE_TIME);
324:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
325:       assertEquals(37, Node.OPT_ARG_NAME);
326:       assertEquals(55, Node.INFERRED_FUNCTION);
327:       assertEquals(30, Node.VAR_ARGS_NAME);
328:       assertEquals(36, Node.QUOTED_PROP);
329:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
330:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
331:       assertEquals(8, Node.FLAG_NO_THROWS);
332:       assertEquals(57, Node.LAST_PROP);
333:       assertEquals(29, Node.JSDOC_INFO_PROP);
334:       assertEquals(53, Node.INPUT_ID);
335:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
336:       assertEquals(15, Node.NO_SIDE_EFFECTS);
337:       assertEquals(39, Node.EMPTY_BLOCK);
338:       
339:       // Undeclared exception!
340:       try { 
341:         node1.getChildBefore(node0);
342:         fail("Expecting exception: NullPointerException");
343:       
344:       } catch(NullPointerException e) {
345:          //
346:          // no message in exception (getMessage() returned null)
347:          //
348:          verifyException("com.google.javascript.rhino.Node", e);
349:       }
350:   }
351: }
RegularFileObject[/tmp/EvoSuite_84_1628256018153/com/google/javascript/rhino/Node_84_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:20:18 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_84_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_84_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.VoidType",
119:       "com.google.common.base.Joiner",
120:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
121:       "com.google.common.collect.AbstractListMultimap",
122:       "com.google.javascript.rhino.jstype.JSType",
123:       "com.google.common.collect.ImmutableAsList",
124:       "com.google.javascript.rhino.Node$StringNode",
125:       "com.google.javascript.rhino.jstype.ProxyObjectType",
126:       "com.google.common.collect.Sets$SetView",
127:       "com.google.common.collect.RegularImmutableAsList",
128:       "com.google.javascript.rhino.jstype.TemplateType",
129:       "com.google.javascript.rhino.jstype.NamedType",
130:       "com.google.common.collect.Iterators$13",
131:       "com.google.javascript.rhino.InputId",
132:       "com.google.common.collect.ImmutableList$SerializedForm",
133:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
134:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
135:       "com.google.common.collect.AbstractMapBasedMultimap",
136:       "com.google.common.collect.Lists$Partition",
137:       "com.google.common.collect.Lists",
138:       "com.google.javascript.rhino.Node$SideEffectFlags",
139:       "com.google.common.collect.UnmodifiableListIterator",
140:       "com.google.javascript.rhino.jstype.NullType",
141:       "com.google.common.collect.Lists$TransformingSequentialList",
142:       "com.google.javascript.rhino.ErrorReporter",
143:       "com.google.javascript.rhino.jstype.UnknownType",
144:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
145:       "com.google.javascript.rhino.jstype.ValueType",
146:       "com.google.javascript.rhino.jstype.PropertyMap",
147:       "com.google.javascript.rhino.Token",
148:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
149:       "com.google.common.collect.ObjectArrays",
150:       "com.google.javascript.rhino.jstype.StaticSourceFile",
151:       "com.google.javascript.rhino.jstype.BooleanType",
152:       "com.google.javascript.rhino.jstype.NoObjectType",
153:       "com.google.common.collect.AbstractIterator",
154:       "com.google.javascript.rhino.jstype.FunctionBuilder",
155:       "com.google.javascript.rhino.jstype.JSType$TypePair",
156:       "com.google.common.base.Joiner$MapJoiner",
157:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
158:       "com.google.common.collect.ImmutableList$1",
159:       "com.google.common.collect.MapDifference",
160:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
161:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
162:       "com.google.common.collect.Sets$ImprovedAbstractSet",
163:       "com.google.javascript.rhino.jstype.FunctionType",
164:       "com.google.common.base.Preconditions",
165:       "com.google.common.collect.UnmodifiableIterator",
166:       "com.google.javascript.rhino.JSDocInfo",
167:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
168:       "com.google.javascript.rhino.jstype.Property",
169:       "com.google.common.collect.ImmutableMapValues",
170:       "com.google.common.collect.ImmutableEntry",
171:       "com.google.common.base.Joiner$1",
172:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
173:       "com.google.common.base.Joiner$2",
174:       "com.google.common.collect.ImmutableCollection",
175:       "com.google.common.collect.ImmutableEnumMap",
176:       "com.google.javascript.rhino.jstype.TernaryValue",
177:       "com.google.javascript.rhino.Node$AncestorIterable",
178:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
179:       "com.google.common.collect.Lists$RandomAccessListWrapper",
180:       "com.google.common.collect.ImmutableEnumSet",
181:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
182:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
183:       "com.google.javascript.rhino.jstype.EnumElementType",
184:       "com.google.javascript.rhino.jstype.UnionType",
185:       "com.google.common.base.Objects",
186:       "com.google.javascript.rhino.Node$NumberNode",
187:       "com.google.common.collect.SingletonImmutableList",
188:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
189:       "com.google.common.collect.ImmutableCollection$Builder",
190:       "com.google.javascript.rhino.jstype.StaticSlot",
191:       "com.google.common.collect.Iterators$6",
192:       "com.google.common.collect.BiMap",
193:       "com.google.common.collect.Iterators$7",
194:       "com.google.common.collect.AbstractSetMultimap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Lists$AbstractListWrapper",
198:       "com.google.common.collect.ImmutableMap",
199:       "com.google.common.collect.AbstractIndexedListIterator",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.Maps$1",
202:       "com.google.javascript.rhino.jstype.EnumType",
203:       "com.google.common.collect.Iterators$1",
204:       "com.google.common.collect.Iterators$2",
205:       "com.google.javascript.rhino.jstype.NamespaceType",
206:       "com.google.common.collect.Iterators$3",
207:       "com.google.common.collect.Sets",
208:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
209:       "com.google.javascript.rhino.Node$ObjectPropListItem",
210:       "com.google.common.collect.Lists$StringAsImmutableList",
211:       "com.google.common.collect.Lists$2",
212:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
213:       "com.google.common.collect.ImmutableList$Builder",
214:       "com.google.common.collect.Lists$1",
215:       "com.google.javascript.rhino.jstype.StaticReference",
216:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
217:       "com.google.common.collect.Multiset",
218:       "com.google.common.collect.AbstractMultimap",
219:       "com.google.common.collect.Multimap",
220:       "com.google.common.collect.Iterators",
221:       "com.google.common.collect.Maps$ImprovedAbstractMap",
222:       "com.google.common.collect.ImmutableBiMap",
223:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
224:       "com.google.common.collect.ImmutableList",
225:       "com.google.common.collect.SingletonImmutableBiMap",
226:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
227:       "com.google.javascript.rhino.jstype.StringType",
228:       "com.google.javascript.rhino.Node$AbstractPropListItem",
229:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
230:       "com.google.javascript.rhino.jstype.TemplatizedType",
231:       "com.google.javascript.rhino.jstype.Visitor",
232:       "com.google.javascript.rhino.jstype.NoResolvedType",
233:       "com.google.javascript.rhino.jstype.JSTypeNative",
234:       "com.google.javascript.rhino.jstype.AllType",
235:       "com.google.common.collect.Maps",
236:       "com.google.common.collect.SetMultimap",
237:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
238:       "com.google.common.collect.Maps$EntryTransformer",
239:       "com.google.javascript.rhino.JSTypeExpression",
240:       "com.google.common.collect.Iterators$MergingIterator"
241:     );
242:   } 
243: 
244:   private static void resetClasses() {
245:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_84_tmp__ESTest_scaffolding.class.getClassLoader()); 
246: 
247:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
248:       "com.google.javascript.rhino.Node",
249:       "com.google.javascript.rhino.Node$NumberNode",
250:       "com.google.javascript.rhino.Node$StringNode",
251:       "com.google.javascript.rhino.Node$AbstractPropListItem",
252:       "com.google.javascript.rhino.Node$ObjectPropListItem",
253:       "com.google.javascript.rhino.Node$IntPropListItem",
254:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
255:       "com.google.javascript.rhino.Node$AncestorIterable",
256:       "com.google.javascript.rhino.Node$NodeMismatch",
257:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
258:       "com.google.javascript.rhino.Node$SideEffectFlags",
259:       "com.google.javascript.rhino.SimpleErrorReporter",
260:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
261:       "com.google.common.base.Joiner",
262:       "com.google.common.base.Preconditions",
263:       "com.google.common.base.Joiner$1",
264:       "com.google.common.collect.Collections2",
265:       "com.google.common.base.Joiner$MapJoiner",
266:       "com.google.common.collect.Maps",
267:       "com.google.common.collect.AbstractMultimap",
268:       "com.google.common.collect.AbstractMapBasedMultimap",
269:       "com.google.common.collect.AbstractSetMultimap",
270:       "com.google.common.collect.LinkedHashMultimap",
271:       "com.google.common.collect.AbstractMapEntry",
272:       "com.google.common.collect.ImmutableEntry",
273:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
274:       "com.google.common.collect.AbstractListMultimap",
275:       "com.google.common.collect.ArrayListMultimap",
276:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
277:       "com.google.common.collect.ImmutableCollection",
278:       "com.google.common.collect.RegularImmutableList",
279:       "com.google.common.collect.ObjectArrays",
280:       "com.google.common.collect.ImmutableList",
281:       "com.google.javascript.rhino.jstype.ModificationVisitor",
282:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
283:       "com.google.common.collect.ImmutableCollection$Builder",
284:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
285:       "com.google.common.collect.ImmutableList$Builder",
286:       "com.google.common.collect.UnmodifiableIterator",
287:       "com.google.common.collect.UnmodifiableListIterator",
288:       "com.google.common.collect.Iterators$1",
289:       "com.google.common.collect.Iterators$2",
290:       "com.google.common.collect.Iterators",
291:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
292:       "com.google.javascript.rhino.jstype.JSType$1",
293:       "com.google.javascript.rhino.jstype.JSType",
294:       "com.google.javascript.rhino.jstype.ObjectType",
295:       "com.google.javascript.rhino.jstype.ProxyObjectType",
296:       "com.google.javascript.rhino.jstype.TemplateType",
297:       "com.google.javascript.rhino.jstype.ValueType",
298:       "com.google.javascript.rhino.jstype.BooleanType",
299:       "com.google.javascript.rhino.jstype.NullType",
300:       "com.google.javascript.rhino.jstype.NumberType",
301:       "com.google.javascript.rhino.jstype.StringType",
302:       "com.google.javascript.rhino.jstype.UnknownType",
303:       "com.google.javascript.rhino.jstype.VoidType",
304:       "com.google.javascript.rhino.jstype.AllType",
305:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ImmutableBiMap",
308:       "com.google.common.collect.EmptyImmutableBiMap",
309:       "com.google.javascript.rhino.jstype.PropertyMap$1",
310:       "com.google.javascript.rhino.jstype.PropertyMap",
311:       "com.google.javascript.rhino.jstype.FunctionType",
312:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
313:       "com.google.javascript.rhino.Token",
314:       "com.google.javascript.rhino.jstype.ArrowType",
315:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
316:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
317:       "com.google.javascript.rhino.jstype.InstanceObjectType",
318:       "com.google.javascript.rhino.jstype.Property",
319:       "com.google.common.collect.Lists",
320:       "com.google.javascript.rhino.jstype.NoObjectType",
321:       "com.google.javascript.rhino.jstype.NoType",
322:       "com.google.javascript.rhino.jstype.NoResolvedType",
323:       "com.google.common.collect.SingletonImmutableList",
324:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
325:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
326:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
327:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
328:       "com.google.javascript.rhino.jstype.UnionType",
329:       "com.google.javascript.rhino.jstype.FunctionBuilder",
330:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
331:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
332:       "com.google.common.collect.AbstractIndexedListIterator",
333:       "com.google.common.collect.ImmutableList$1",
334:       "com.google.javascript.rhino.InputId",
335:       "com.google.javascript.rhino.jstype.EnumType",
336:       "com.google.javascript.rhino.jstype.EnumElementType",
337:       "com.google.common.collect.Iterators$11",
338:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
339:       "com.google.javascript.rhino.Node$AncestorIterable$1",
340:       "com.google.javascript.rhino.JSDocInfo",
341:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
342:       "com.google.common.base.Objects",
343:       "com.google.common.collect.Iterables",
344:       "com.google.common.collect.Sets",
345:       "com.google.javascript.rhino.jstype.TemplatizedType",
346:       "com.google.javascript.rhino.jstype.NamedType",
347:       "com.google.javascript.rhino.jstype.TernaryValue",
348:       "com.google.javascript.rhino.jstype.JSType$2",
349:       "com.google.javascript.rhino.jstype.JSType$TypePair",
350:       "com.google.common.collect.Platform",
351:       "com.google.common.collect.ImmutableSet",
352:       "com.google.common.collect.EmptyImmutableSet",
353:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
354:       "com.google.common.collect.Iterators$12",
355:       "com.google.common.collect.AbstractMultimap$Values",
356:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
357:       "com.google.common.collect.AbstractMapBasedMultimap$1",
358:       "com.google.common.collect.Multimaps$Entries",
359:       "com.google.common.collect.AbstractMultimap$Entries",
360:       "com.google.common.collect.AbstractMapBasedMultimap$2",
361:       "com.google.javascript.rhino.JSTypeExpression"
362:     );
363:   }
364: }

[MASTER] 13:20:18.212 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newString("BOOLEAN_TYPE");
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isIn());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isNE());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertFalse(node0.isFor());
assertFalse(node0.isThis());
assertFalse(node0.isComma());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isVoid());
assertFalse(node0.isBreak());
assertFalse(node0.isFunction());
assertEquals(40, node0.getType());
assertFalse(node0.isNot());
assertFalse(node0.isDebugger());
assertFalse(node0.isObjectLit());
assertFalse(node0.isSetterDef());
assertFalse(node0.isGetProp());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isWhile());
assertFalse(node0.isBlock());
assertFalse(node0.isVar());
assertFalse(node0.isAssignAdd());
assertTrue(node0.isString());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isDo());
assertFalse(node0.isTypeOf());
assertFalse(node0.isNull());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isOr());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isGetElem());
assertFalse(node0.isName());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isScript());
assertFalse(node0.isRegExp());
assertFalse(node0.isWith());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.hasOneChild());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isArrayLit());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isLabelName());
assertNotNull(node0);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);

Iterable<Node> iterable0 = node0.children();
assertFalse(node0.isSwitch());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isIn());
assertFalse(node0.isCase());
assertFalse(node0.isInc());
assertFalse(node0.isNE());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertFalse(node0.isFor());
assertFalse(node0.isThis());
assertFalse(node0.isComma());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isVoid());
assertFalse(node0.isBreak());
assertFalse(node0.isFunction());
assertEquals(40, node0.getType());
assertFalse(node0.isNot());
assertFalse(node0.isDebugger());
assertFalse(node0.isObjectLit());
assertFalse(node0.isSetterDef());
assertFalse(node0.isGetProp());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isThrow());
assertFalse(node0.isCast());
assertFalse(node0.isAnd());
assertFalse(node0.isContinue());
assertFalse(node0.isFalse());
assertFalse(node0.isWhile());
assertFalse(node0.isBlock());
assertFalse(node0.isVar());
assertFalse(node0.isAssignAdd());
assertTrue(node0.isString());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isDo());
assertFalse(node0.isTypeOf());
assertFalse(node0.isNull());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isOr());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isCatch());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isGetElem());
assertFalse(node0.isName());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isExprResult());
assertFalse(node0.isCall());
assertFalse(node0.isScript());
assertFalse(node0.isRegExp());
assertFalse(node0.isWith());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isTrue());
assertFalse(node0.hasOneChild());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isParamList());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabel());
assertFalse(node0.isArrayLit());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isLabelName());
assertNotNull(iterable0);
assertFalse(iterable0.contains(node0));
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);

Node node1 = Node.newString(2751, "BOOLEAN_TYPE");
assertFalse(node1.equals((Object)node0));
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isNew());
assertFalse(node1.isVar());
assertFalse(node1.isDec());
assertFalse(node1.hasChildren());
assertFalse(node1.isReturn());
assertFalse(node1.isBlock());
assertFalse(node1.isAssign());
assertFalse(node1.isTypeOf());
assertFalse(node1.isName());
assertFalse(node1.isSetterDef());
assertFalse(node1.isCall());
assertFalse(node1.isGetElem());
assertFalse(node1.isOr());
assertFalse(node1.isAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isNull());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isAnd());
assertFalse(node1.isExprResult());
assertFalse(node1.isFunction());
assertFalse(node1.isComma());
assertFalse(node1.isFalse());
assertFalse(node1.isCast());
assertFalse(node1.isGetProp());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isDebugger());
assertFalse(node1.isCase());
assertFalse(node1.isString());
assertFalse(node1.isInc());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isBreak());
assertFalse(node1.isIn());
assertFalse(node1.isVoid());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isWith());
assertFalse(node1.isScript());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isTry());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isRegExp());
assertFalse(node1.isThis());
assertFalse(node1.isLabelName());
assertFalse(node1.isFor());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isNumber());
assertFalse(node1.isArrayLit());
assertFalse(node1.hasOneChild());
assertEquals(2751, node1.getType());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertNotSame(node1, node0);
assertNotNull(node1);
assertEquals(52, Node.LENGTH);
assertEquals(50, Node.FREE_CALL);
assertEquals(54, Node.SLASH_V);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(48, Node.DIRECTIVES);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(57, Node.LAST_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);

node1.getChildBefore(node0);

[MASTER] 13:20:22.345 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_111_1628256022228/com/google/javascript/rhino/Node_111_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_111_1628256022228/com/google/javascript/rhino/Node_111_tmp__ESTest_scaffolding.java]]
[MASTER] 13:20:22.345 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:22.345 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:22.346 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 194
[MASTER] 13:20:22.348 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_111_1628256022228/com/google/javascript/rhino/Node_111_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:20:22 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_111_tmp__ESTest extends Node_111_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newString("BOOLEAN_TYPE");
22:       assertFalse(node0.isFalse());
23:       assertFalse(node0.isThrow());
24:       assertFalse(node0.isHook());
25:       assertFalse(node0.isComma());
26:       assertEquals((-1), node0.getCharno());
27:       assertFalse(node0.isSwitch());
28:       assertFalse(node0.isBreak());
29:       assertFalse(node0.isIn());
30:       assertFalse(node0.isInc());
31:       assertFalse(node0.isGetElem());
32:       assertFalse(node0.isCast());
33:       assertFalse(node0.isEmpty());
34:       assertFalse(node0.isTypeOf());
35:       assertEquals((-1), node0.getSourcePosition());
36:       assertFalse(node0.hasChildren());
37:       assertFalse(node0.isDec());
38:       assertFalse(node0.isAssign());
39:       assertFalse(node0.isExprResult());
40:       assertFalse(node0.isTrue());
41:       assertFalse(node0.isDelProp());
42:       assertFalse(node0.isVoid());
43:       assertFalse(node0.isWhile());
44:       assertFalse(node0.isAnd());
45:       assertFalse(node0.isObjectLit());
46:       assertFalse(node0.isDebugger());
47:       assertFalse(node0.isNot());
48:       assertFalse(node0.isGetProp());
49:       assertFalse(node0.isReturn());
50:       assertFalse(node0.isStringKey());
51:       assertFalse(node0.isName());
52:       assertFalse(node0.isCall());
53:       assertFalse(node0.isVar());
54:       assertFalse(node0.isNull());
55:       assertFalse(node0.isParamList());
56:       assertEquals(40, node0.getType());
57:       assertFalse(node0.isContinue());
58:       assertFalse(node0.isFunction());
59:       assertFalse(node0.isOr());
60:       assertEquals(0, node0.getChildCount());
61:       assertFalse(node0.isNew());
62:       assertFalse(node0.isAdd());
63:       assertFalse(node0.isLabel());
64:       assertFalse(node0.isAssignAdd());
65:       assertFalse(node0.isSetterDef());
66:       assertFalse(node0.isDefaultCase());
67:       assertFalse(node0.isDo());
68:       assertFalse(node0.isFor());
69:       assertFalse(node0.isNumber());
70:       assertFalse(node0.isGetterDef());
71:       assertFalse(node0.isNE());
72:       assertFalse(node0.isArrayLit());
73:       assertFalse(node0.isIf());
74:       assertEquals((-1), node0.getLineno());
75:       assertFalse(node0.isLabelName());
76:       assertFalse(node0.isCase());
77:       assertFalse(node0.isWith());
78:       assertFalse(node0.isCatch());
79:       assertFalse(node0.isRegExp());
80:       assertFalse(node0.isInstanceOf());
81:       assertFalse(node0.hasMoreThanOneChild());
82:       assertFalse(node0.isBlock());
83:       assertTrue(node0.isString());
84:       assertFalse(node0.isThis());
85:       assertFalse(node0.isScript());
86:       assertFalse(node0.hasOneChild());
87:       assertFalse(node0.isTry());
88:       assertNotNull(node0);
89:       assertEquals(4095, Node.COLUMN_MASK);
90:       assertEquals(55, Node.INFERRED_FUNCTION);
91:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
92:       assertEquals(48, Node.DIRECTIVES);
93:       assertEquals(43, Node.IS_CONSTANT_NAME);
94:       assertEquals(36, Node.QUOTED_PROP);
95:       assertEquals(39, Node.EMPTY_BLOCK);
96:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
97:       assertEquals(8, Node.FLAG_NO_THROWS);
98:       assertEquals(50, Node.FREE_CALL);
99:       assertEquals(57, Node.REFLECTED_OBJECT);
100:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
101:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
102:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
103:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
104:       assertEquals(51, Node.STATIC_SOURCE_FILE);
105:       assertEquals(12, Node.COLUMN_BITS);
106:       assertEquals(46, Node.IS_NAMESPACE);
107:       assertEquals(1, Node.DECR_FLAG);
108:       assertEquals(37, Node.OPT_ARG_NAME);
109:       assertEquals(49, Node.DIRECT_EVAL);
110:       assertEquals(32, Node.INCRDECR_PROP);
111:       assertEquals(56, Node.CHANGE_TIME);
112:       assertEquals(15, Node.NO_SIDE_EFFECTS);
113:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
114:       assertEquals(29, Node.JSDOC_INFO_PROP);
115:       assertEquals(54, Node.SLASH_V);
116:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
117:       assertEquals(52, Node.LENGTH);
118:       assertEquals(40, Node.ORIGINALNAME_PROP);
119:       assertEquals(53, Node.INPUT_ID);
120:       assertEquals(57, Node.LAST_PROP);
121:       assertEquals(47, Node.IS_DISPATCHER);
122:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
123:       assertEquals(30, Node.VAR_ARGS_NAME);
124:       assertEquals(2, Node.POST_FLAG);
125:       
126:       Iterable<Node> iterable0 = node0.children();
127:       assertFalse(node0.isFalse());
128:       assertFalse(node0.isThrow());
129:       assertFalse(node0.isHook());
130:       assertFalse(node0.isComma());
131:       assertEquals((-1), node0.getCharno());
132:       assertFalse(node0.isSwitch());
133:       assertFalse(node0.isBreak());
134:       assertFalse(node0.isIn());
135:       assertFalse(node0.isInc());
136:       assertFalse(node0.isGetElem());
137:       assertFalse(node0.isCast());
138:       assertFalse(node0.isEmpty());
139:       assertFalse(node0.isTypeOf());
140:       assertEquals((-1), node0.getSourcePosition());
141:       assertFalse(node0.hasChildren());
142:       assertFalse(node0.isDec());
143:       assertFalse(node0.isAssign());
144:       assertFalse(node0.isExprResult());
145:       assertFalse(node0.isTrue());
146:       assertFalse(node0.isDelProp());
147:       assertFalse(node0.isVoid());
148:       assertFalse(node0.isWhile());
149:       assertFalse(node0.isAnd());
150:       assertFalse(node0.isObjectLit());
151:       assertFalse(node0.isDebugger());
152:       assertFalse(node0.isNot());
153:       assertFalse(node0.isGetProp());
154:       assertFalse(node0.isReturn());
155:       assertFalse(node0.isStringKey());
156:       assertFalse(node0.isName());
157:       assertFalse(node0.isCall());
158:       assertFalse(node0.isVar());
159:       assertFalse(node0.isNull());
160:       assertFalse(node0.isParamList());
161:       assertEquals(40, node0.getType());
162:       assertFalse(node0.isContinue());
163:       assertFalse(node0.isFunction());
164:       assertFalse(node0.isOr());
165:       assertEquals(0, node0.getChildCount());
166:       assertFalse(node0.isNew());
167:       assertFalse(node0.isAdd());
168:       assertFalse(node0.isLabel());
169:       assertFalse(node0.isAssignAdd());
170:       assertFalse(node0.isSetterDef());
171:       assertFalse(node0.isDefaultCase());
172:       assertFalse(node0.isDo());
173:       assertFalse(node0.isFor());
174:       assertFalse(node0.isNumber());
175:       assertFalse(node0.isGetterDef());
176:       assertFalse(node0.isNE());
177:       assertFalse(node0.isArrayLit());
178:       assertFalse(node0.isIf());
179:       assertEquals((-1), node0.getLineno());
180:       assertFalse(node0.isLabelName());
181:       assertFalse(node0.isCase());
182:       assertFalse(node0.isWith());
183:       assertFalse(node0.isCatch());
184:       assertFalse(node0.isRegExp());
185:       assertFalse(node0.isInstanceOf());
186:       assertFalse(node0.hasMoreThanOneChild());
187:       assertFalse(node0.isBlock());
188:       assertTrue(node0.isString());
189:       assertFalse(node0.isThis());
190:       assertFalse(node0.isScript());
191:       assertFalse(node0.hasOneChild());
192:       assertFalse(node0.isTry());
193:       assertNotNull(iterable0);
194:       assertFalse(iterable0.contains(node0));
195:       assertEquals(4095, Node.COLUMN_MASK);
196:       assertEquals(55, Node.INFERRED_FUNCTION);
197:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
198:       assertEquals(48, Node.DIRECTIVES);
199:       assertEquals(43, Node.IS_CONSTANT_NAME);
200:       assertEquals(36, Node.QUOTED_PROP);
201:       assertEquals(39, Node.EMPTY_BLOCK);
202:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
203:       assertEquals(8, Node.FLAG_NO_THROWS);
204:       assertEquals(50, Node.FREE_CALL);
205:       assertEquals(57, Node.REFLECTED_OBJECT);
206:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
207:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
208:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
209:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
210:       assertEquals(51, Node.STATIC_SOURCE_FILE);
211:       assertEquals(12, Node.COLUMN_BITS);
212:       assertEquals(46, Node.IS_NAMESPACE);
213:       assertEquals(1, Node.DECR_FLAG);
214:       assertEquals(37, Node.OPT_ARG_NAME);
215:       assertEquals(49, Node.DIRECT_EVAL);
216:       assertEquals(32, Node.INCRDECR_PROP);
217:       assertEquals(56, Node.CHANGE_TIME);
218:       assertEquals(15, Node.NO_SIDE_EFFECTS);
219:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
220:       assertEquals(29, Node.JSDOC_INFO_PROP);
221:       assertEquals(54, Node.SLASH_V);
222:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
223:       assertEquals(52, Node.LENGTH);
224:       assertEquals(40, Node.ORIGINALNAME_PROP);
225:       assertEquals(53, Node.INPUT_ID);
226:       assertEquals(57, Node.LAST_PROP);
227:       assertEquals(47, Node.IS_DISPATCHER);
228:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
229:       assertEquals(30, Node.VAR_ARGS_NAME);
230:       assertEquals(2, Node.POST_FLAG);
231:       
232:       Node node1 = new Node(30, node0);
233:       assertFalse(node1.equals((Object)node0));
234:       assertFalse(node0.isFalse());
235:       assertFalse(node0.isThrow());
236:       assertFalse(node0.isHook());
237:       assertFalse(node0.isComma());
238:       assertEquals((-1), node0.getCharno());
239:       assertFalse(node0.isSwitch());
240:       assertFalse(node0.isBreak());
241:       assertFalse(node0.isIn());
242:       assertFalse(node0.isInc());
243:       assertFalse(node0.isGetElem());
244:       assertFalse(node0.isCast());
245:       assertFalse(node0.isEmpty());
246:       assertFalse(node0.isTypeOf());
247:       assertEquals((-1), node0.getSourcePosition());
248:       assertFalse(node0.hasChildren());
249:       assertFalse(node0.isDec());
250:       assertFalse(node0.isAssign());
251:       assertFalse(node0.isExprResult());
252:       assertFalse(node0.isTrue());
253:       assertFalse(node0.isDelProp());
254:       assertFalse(node0.isVoid());
255:       assertFalse(node0.isWhile());
256:       assertFalse(node0.isAnd());
257:       assertFalse(node0.isObjectLit());
258:       assertFalse(node0.isDebugger());
259:       assertFalse(node0.isNot());
260:       assertFalse(node0.isGetProp());
261:       assertFalse(node0.isReturn());
262:       assertFalse(node0.isStringKey());
263:       assertFalse(node0.isName());
264:       assertFalse(node0.isCall());
265:       assertFalse(node0.isVar());
266:       assertFalse(node0.isNull());
267:       assertFalse(node0.isParamList());
268:       assertEquals(40, node0.getType());
269:       assertFalse(node0.isContinue());
270:       assertFalse(node0.isFunction());
271:       assertFalse(node0.isOr());
272:       assertEquals(0, node0.getChildCount());
273:       assertFalse(node0.isNew());
274:       assertFalse(node0.isAdd());
275:       assertFalse(node0.isLabel());
276:       assertFalse(node0.isAssignAdd());
277:       assertFalse(node0.isSetterDef());
278:       assertFalse(node0.isDefaultCase());
279:       assertFalse(node0.isDo());
280:       assertFalse(node0.isFor());
281:       assertFalse(node0.isNumber());
282:       assertFalse(node0.isGetterDef());
283:       assertFalse(node0.isNE());
284:       assertFalse(node0.isArrayLit());
285:       assertFalse(node0.isIf());
286:       assertEquals((-1), node0.getLineno());
287:       assertFalse(node0.isLabelName());
288:       assertFalse(node0.isCase());
289:       assertFalse(node0.isWith());
290:       assertFalse(node0.isCatch());
291:       assertFalse(node0.isRegExp());
292:       assertFalse(node0.isInstanceOf());
293:       assertFalse(node0.hasMoreThanOneChild());
294:       assertFalse(node0.isBlock());
295:       assertTrue(node0.isString());
296:       assertFalse(node0.isThis());
297:       assertFalse(node0.isScript());
298:       assertFalse(node0.hasOneChild());
299:       assertFalse(node0.isTry());
300:       assertEquals(1, node1.getChildCount());
301:       assertFalse(node1.isString());
302:       assertFalse(node1.isIn());
303:       assertFalse(node1.isNE());
304:       assertFalse(node1.isSwitch());
305:       assertEquals((-1), node1.getCharno());
306:       assertTrue(node1.hasChildren());
307:       assertFalse(node1.isIf());
308:       assertFalse(node1.isDelProp());
309:       assertFalse(node1.isHook());
310:       assertFalse(node1.isFor());
311:       assertTrue(node1.hasOneChild());
312:       assertFalse(node1.isGetterDef());
313:       assertFalse(node1.isThis());
314:       assertFalse(node1.isComma());
315:       assertFalse(node1.isGetProp());
316:       assertFalse(node1.isCase());
317:       assertFalse(node1.isTry());
318:       assertFalse(node1.isCatch());
319:       assertFalse(node1.isAnd());
320:       assertFalse(node1.isInstanceOf());
321:       assertFalse(node1.isWith());
322:       assertFalse(node1.isNot());
323:       assertFalse(node1.isObjectLit());
324:       assertFalse(node1.isRegExp());
325:       assertFalse(node1.isFunction());
326:       assertFalse(node1.isDebugger());
327:       assertFalse(node1.isCast());
328:       assertTrue(node1.isNew());
329:       assertFalse(node1.isThrow());
330:       assertFalse(node1.isFalse());
331:       assertFalse(node1.isSetterDef());
332:       assertFalse(node1.isInc());
333:       assertFalse(node1.hasMoreThanOneChild());
334:       assertFalse(node1.isContinue());
335:       assertFalse(node1.isOr());
336:       assertFalse(node1.isReturn());
337:       assertFalse(node1.isLabel());
338:       assertEquals((-1), node1.getSourcePosition());
339:       assertEquals((-1), node1.getLineno());
340:       assertFalse(node1.isLabelName());
341:       assertFalse(node1.isStringKey());
342:       assertFalse(node1.isGetElem());
343:       assertFalse(node1.isCall());
344:       assertFalse(node1.isAssign());
345:       assertFalse(node1.isDec());
346:       assertFalse(node1.isNumber());
347:       assertFalse(node1.isTypeOf());
348:       assertFalse(node1.isScript());
349:       assertFalse(node1.isBlock());
350:       assertFalse(node1.isWhile());
351:       assertFalse(node1.isParamList());
352:       assertFalse(node1.isNull());
353:       assertFalse(node1.isExprResult());
354:       assertFalse(node1.isTrue());
355:       assertEquals(30, node1.getType());
356:       assertFalse(node1.isBreak());
357:       assertFalse(node1.isVoid());
358:       assertFalse(node1.isName());
359:       assertFalse(node1.isArrayLit());
360:       assertFalse(node1.isEmpty());
361:       assertFalse(node1.isVar());
362:       assertFalse(node1.isAdd());
363:       assertFalse(node1.isDo());
364:       assertFalse(node1.isAssignAdd());
365:       assertFalse(node1.isDefaultCase());
366:       assertNotNull(node1);
367:       assertEquals(4095, Node.COLUMN_MASK);
368:       assertEquals(55, Node.INFERRED_FUNCTION);
369:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
370:       assertEquals(48, Node.DIRECTIVES);
371:       assertEquals(43, Node.IS_CONSTANT_NAME);
372:       assertEquals(36, Node.QUOTED_PROP);
373:       assertEquals(39, Node.EMPTY_BLOCK);
374:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
375:       assertEquals(8, Node.FLAG_NO_THROWS);
376:       assertEquals(50, Node.FREE_CALL);
377:       assertEquals(57, Node.REFLECTED_OBJECT);
378:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
379:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
380:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
381:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
382:       assertEquals(51, Node.STATIC_SOURCE_FILE);
383:       assertEquals(12, Node.COLUMN_BITS);
384:       assertEquals(46, Node.IS_NAMESPACE);
385:       assertEquals(1, Node.DECR_FLAG);
386:       assertEquals(37, Node.OPT_ARG_NAME);
387:       assertEquals(49, Node.DIRECT_EVAL);
388:       assertEquals(32, Node.INCRDECR_PROP);
389:       assertEquals(56, Node.CHANGE_TIME);
390:       assertEquals(15, Node.NO_SIDE_EFFECTS);
391:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
392:       assertEquals(29, Node.JSDOC_INFO_PROP);
393:       assertEquals(54, Node.SLASH_V);
394:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
395:       assertEquals(52, Node.LENGTH);
396:       assertEquals(40, Node.ORIGINALNAME_PROP);
397:       assertEquals(53, Node.INPUT_ID);
398:       assertEquals(57, Node.LAST_PROP);
399:       assertEquals(47, Node.IS_DISPATCHER);
400:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
401:       assertEquals(30, Node.VAR_ARGS_NAME);
402:       assertEquals(2, Node.POST_FLAG);
403:       assertEquals(52, Node.LENGTH);
404:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
405:       assertEquals(54, Node.SLASH_V);
406:       assertEquals(57, Node.REFLECTED_OBJECT);
407:       assertEquals(57, Node.LAST_PROP);
408:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
409:       assertEquals(50, Node.FREE_CALL);
410:       assertEquals(15, Node.NO_SIDE_EFFECTS);
411:       assertEquals(51, Node.STATIC_SOURCE_FILE);
412:       assertEquals(8, Node.FLAG_NO_THROWS);
413:       assertEquals(46, Node.IS_NAMESPACE);
414:       assertEquals(39, Node.EMPTY_BLOCK);
415:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
416:       assertEquals(30, Node.VAR_ARGS_NAME);
417:       assertEquals(47, Node.IS_DISPATCHER);
418:       assertEquals(40, Node.ORIGINALNAME_PROP);
419:       assertEquals(2, Node.POST_FLAG);
420:       assertEquals(53, Node.INPUT_ID);
421:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
422:       assertEquals(43, Node.IS_CONSTANT_NAME);
423:       assertEquals(29, Node.JSDOC_INFO_PROP);
424:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
425:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
426:       assertEquals(55, Node.INFERRED_FUNCTION);
427:       assertEquals(36, Node.QUOTED_PROP);
428:       assertEquals(12, Node.COLUMN_BITS);
429:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
430:       assertEquals(37, Node.OPT_ARG_NAME);
431:       assertEquals(56, Node.CHANGE_TIME);
432:       assertEquals(48, Node.DIRECTIVES);
433:       assertEquals(1, Node.DECR_FLAG);
434:       assertEquals(32, Node.INCRDECR_PROP);
435:       assertEquals(49, Node.DIRECT_EVAL);
436:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
437:       assertEquals(4095, Node.COLUMN_MASK);
438:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
439:       
440:       Node node2 = node1.getChildBefore(node0);
441:       assertFalse(node0.equals((Object)node1));
442:       assertFalse(node1.equals((Object)node0));
443:       assertFalse(node0.isFalse());
444:       assertFalse(node0.isThrow());
445:       assertFalse(node0.isHook());
446:       assertFalse(node0.isComma());
447:       assertEquals((-1), node0.getCharno());
448:       assertFalse(node0.isSwitch());
449:       assertFalse(node0.isBreak());
450:       assertFalse(node0.isIn());
451:       assertFalse(node0.isInc());
452:       assertFalse(node0.isGetElem());
453:       assertFalse(node0.isCast());
454:       assertFalse(node0.isEmpty());
455:       assertFalse(node0.isTypeOf());
456:       assertEquals((-1), node0.getSourcePosition());
457:       assertFalse(node0.hasChildren());
458:       assertFalse(node0.isDec());
459:       assertFalse(node0.isAssign());
460:       assertFalse(node0.isExprResult());
461:       assertFalse(node0.isTrue());
462:       assertFalse(node0.isDelProp());
463:       assertFalse(node0.isVoid());
464:       assertFalse(node0.isWhile());
465:       assertFalse(node0.isAnd());
466:       assertFalse(node0.isObjectLit());
467:       assertFalse(node0.isDebugger());
468:       assertFalse(node0.isNot());
469:       assertFalse(node0.isGetProp());
470:       assertFalse(node0.isReturn());
471:       assertFalse(node0.isStringKey());
472:       assertFalse(node0.isName());
473:       assertFalse(node0.isCall());
474:       assertFalse(node0.isVar());
475:       assertFalse(node0.isNull());
476:       assertFalse(node0.isParamList());
477:       assertEquals(40, node0.getType());
478:       assertFalse(node0.isContinue());
479:       assertFalse(node0.isFunction());
480:       assertFalse(node0.isOr());
481:       assertEquals(0, node0.getChildCount());
482:       assertFalse(node0.isNew());
483:       assertFalse(node0.isAdd());
484:       assertFalse(node0.isLabel());
485:       assertFalse(node0.isAssignAdd());
486:       assertFalse(node0.isSetterDef());
487:       assertFalse(node0.isDefaultCase());
488:       assertFalse(node0.isDo());
489:       assertFalse(node0.isFor());
490:       assertFalse(node0.isNumber());
491:       assertFalse(node0.isGetterDef());
492:       assertFalse(node0.isNE());
493:       assertFalse(node0.isArrayLit());
494:       assertFalse(node0.isIf());
495:       assertEquals((-1), node0.getLineno());
496:       assertFalse(node0.isLabelName());
497:       assertFalse(node0.isCase());
498:       assertFalse(node0.isWith());
499:       assertFalse(node0.isCatch());
500:       assertFalse(node0.isRegExp());
501:       assertFalse(node0.isInstanceOf());
502:       assertFalse(node0.hasMoreThanOneChild());
503:       assertFalse(node0.isBlock());
504:       assertTrue(node0.isString());
505:       assertFalse(node0.isThis());
506:       assertFalse(node0.isScript());
507:       assertFalse(node0.hasOneChild());
508:       assertFalse(node0.isTry());
509:       assertEquals(1, node1.getChildCount());
510:       assertFalse(node1.isString());
511:       assertFalse(node1.isIn());
512:       assertFalse(node1.isNE());
513:       assertFalse(node1.isSwitch());
514:       assertEquals((-1), node1.getCharno());
515:       assertTrue(node1.hasChildren());
516:       assertFalse(node1.isIf());
517:       assertFalse(node1.isDelProp());
518:       assertFalse(node1.isHook());
519:       assertFalse(node1.isFor());
520:       assertTrue(node1.hasOneChild());
521:       assertFalse(node1.isGetterDef());
522:       assertFalse(node1.isThis());
523:       assertFalse(node1.isComma());
524:       assertFalse(node1.isGetProp());
525:       assertFalse(node1.isCase());
526:       assertFalse(node1.isTry());
527:       assertFalse(node1.isCatch());
528:       assertFalse(node1.isAnd());
529:       assertFalse(node1.isInstanceOf());
530:       assertFalse(node1.isWith());
531:       assertFalse(node1.isNot());
532:       assertFalse(node1.isObjectLit());
533:       assertFalse(node1.isRegExp());
534:       assertFalse(node1.isFunction());
535:       assertFalse(node1.isDebugger());
536:       assertFalse(node1.isCast());
537:       assertTrue(node1.isNew());
538:       assertFalse(node1.isThrow());
539:       assertFalse(node1.isFalse());
540:       assertFalse(node1.isSetterDef());
541:       assertFalse(node1.isInc());
542:       assertFalse(node1.hasMoreThanOneChild());
543:       assertFalse(node1.isContinue());
544:       assertFalse(node1.isOr());
545:       assertFalse(node1.isReturn());
546:       assertFalse(node1.isLabel());
547:       assertEquals((-1), node1.getSourcePosition());
548:       assertEquals((-1), node1.getLineno());
549:       assertFalse(node1.isLabelName());
550:       assertFalse(node1.isStringKey());
551:       assertFalse(node1.isGetElem());
552:       assertFalse(node1.isCall());
553:       assertFalse(node1.isAssign());
554:       assertFalse(node1.isDec());
555:       assertFalse(node1.isNumber());
556:       assertFalse(node1.isTypeOf());
557:       assertFalse(node1.isScript());
558:       assertFalse(node1.isBlock());
559:       assertFalse(node1.isWhile());
560:       assertFalse(node1.isParamList());
561:       assertFalse(node1.isNull());
562:       assertFalse(node1.isExprResult());
563:       assertFalse(node1.isTrue());
564:       assertEquals(30, node1.getType());
565:       assertFalse(node1.isBreak());
566:       assertFalse(node1.isVoid());
567:       assertFalse(node1.isName());
568:       assertFalse(node1.isArrayLit());
569:       assertFalse(node1.isEmpty());
570:       assertFalse(node1.isVar());
571:       assertFalse(node1.isAdd());
572:       assertFalse(node1.isDo());
573:       assertFalse(node1.isAssignAdd());
574:       assertFalse(node1.isDefaultCase());
575:       assertNull(node2);
576:       assertEquals(4095, Node.COLUMN_MASK);
577:       assertEquals(55, Node.INFERRED_FUNCTION);
578:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
579:       assertEquals(48, Node.DIRECTIVES);
580:       assertEquals(43, Node.IS_CONSTANT_NAME);
581:       assertEquals(36, Node.QUOTED_PROP);
582:       assertEquals(39, Node.EMPTY_BLOCK);
583:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
584:       assertEquals(8, Node.FLAG_NO_THROWS);
585:       assertEquals(50, Node.FREE_CALL);
586:       assertEquals(57, Node.REFLECTED_OBJECT);
587:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
588:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
589:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
590:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
591:       assertEquals(51, Node.STATIC_SOURCE_FILE);
592:       assertEquals(12, Node.COLUMN_BITS);
593:       assertEquals(46, Node.IS_NAMESPACE);
594:       assertEquals(1, Node.DECR_FLAG);
595:       assertEquals(37, Node.OPT_ARG_NAME);
596:       assertEquals(49, Node.DIRECT_EVAL);
597:       assertEquals(32, Node.INCRDECR_PROP);
598:       assertEquals(56, Node.CHANGE_TIME);
599:       assertEquals(15, Node.NO_SIDE_EFFECTS);
600:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
601:       assertEquals(29, Node.JSDOC_INFO_PROP);
602:       assertEquals(54, Node.SLASH_V);
603:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
604:       assertEquals(52, Node.LENGTH);
605:       assertEquals(40, Node.ORIGINALNAME_PROP);
606:       assertEquals(53, Node.INPUT_ID);
607:       assertEquals(57, Node.LAST_PROP);
608:       assertEquals(47, Node.IS_DISPATCHER);
609:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
610:       assertEquals(30, Node.VAR_ARGS_NAME);
611:       assertEquals(2, Node.POST_FLAG);
612:       assertEquals(52, Node.LENGTH);
613:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
614:       assertEquals(54, Node.SLASH_V);
615:       assertEquals(57, Node.REFLECTED_OBJECT);
616:       assertEquals(57, Node.LAST_PROP);
617:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
618:       assertEquals(50, Node.FREE_CALL);
619:       assertEquals(15, Node.NO_SIDE_EFFECTS);
620:       assertEquals(51, Node.STATIC_SOURCE_FILE);
621:       assertEquals(8, Node.FLAG_NO_THROWS);
622:       assertEquals(46, Node.IS_NAMESPACE);
623:       assertEquals(39, Node.EMPTY_BLOCK);
624:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
625:       assertEquals(30, Node.VAR_ARGS_NAME);
626:       assertEquals(47, Node.IS_DISPATCHER);
627:       assertEquals(40, Node.ORIGINALNAME_PROP);
628:       assertEquals(2, Node.POST_FLAG);
629:       assertEquals(53, Node.INPUT_ID);
630:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
631:       assertEquals(43, Node.IS_CONSTANT_NAME);
632:       assertEquals(29, Node.JSDOC_INFO_PROP);
633:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
634:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
635:       assertEquals(55, Node.INFERRED_FUNCTION);
636:       assertEquals(36, Node.QUOTED_PROP);
637:       assertEquals(12, Node.COLUMN_BITS);
638:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
639:       assertEquals(37, Node.OPT_ARG_NAME);
640:       assertEquals(56, Node.CHANGE_TIME);
641:       assertEquals(48, Node.DIRECTIVES);
642:       assertEquals(1, Node.DECR_FLAG);
643:       assertEquals(32, Node.INCRDECR_PROP);
644:       assertEquals(49, Node.DIRECT_EVAL);
645:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
646:       assertEquals(4095, Node.COLUMN_MASK);
647:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
648:       
649:       node0.addSuppression("already specified skipNulls");
650:       assertFalse(node0.equals((Object)node1));
651:       assertFalse(node0.isFalse());
652:       assertFalse(node0.isThrow());
653:       assertFalse(node0.isHook());
654:       assertFalse(node0.isComma());
655:       assertEquals((-1), node0.getCharno());
656:       assertFalse(node0.isSwitch());
657:       assertFalse(node0.isBreak());
658:       assertFalse(node0.isIn());
659:       assertFalse(node0.isInc());
660:       assertFalse(node0.isGetElem());
661:       assertFalse(node0.isCast());
662:       assertFalse(node0.isEmpty());
663:       assertFalse(node0.isTypeOf());
664:       assertEquals((-1), node0.getSourcePosition());
665:       assertFalse(node0.hasChildren());
666:       assertFalse(node0.isDec());
667:       assertFalse(node0.isAssign());
668:       assertFalse(node0.isExprResult());
669:       assertFalse(node0.isTrue());
670:       assertFalse(node0.isDelProp());
671:       assertFalse(node0.isVoid());
672:       assertFalse(node0.isWhile());
673:       assertFalse(node0.isAnd());
674:       assertFalse(node0.isObjectLit());
675:       assertFalse(node0.isDebugger());
676:       assertFalse(node0.isNot());
677:       assertFalse(node0.isGetProp());
678:       assertFalse(node0.isReturn());
679:       assertFalse(node0.isStringKey());
680:       assertFalse(node0.isName());
681:       assertFalse(node0.isCall());
682:       assertFalse(node0.isVar());
683:       assertFalse(node0.isNull());
684:       assertFalse(node0.isParamList());
685:       assertEquals(40, node0.getType());
686:       assertFalse(node0.isContinue());
687:       assertFalse(node0.isFunction());
688:       assertFalse(node0.isOr());
689:       assertEquals(0, node0.getChildCount());
690:       assertFalse(node0.isNew());
691:       assertFalse(node0.isAdd());
692:       assertFalse(node0.isLabel());
693:       assertFalse(node0.isAssignAdd());
694:       assertFalse(node0.isSetterDef());
695:       assertFalse(node0.isDefaultCase());
696:       assertFalse(node0.isDo());
697:       assertFalse(node0.isFor());
698:       assertFalse(node0.isNumber());
699:       assertFalse(node0.isGetterDef());
700:       assertFalse(node0.isNE());
701:       assertFalse(node0.isArrayLit());
702:       assertFalse(node0.isIf());
703:       assertEquals((-1), node0.getLineno());
704:       assertFalse(node0.isLabelName());
705:       assertFalse(node0.isCase());
706:       assertFalse(node0.isWith());
707:       assertFalse(node0.isCatch());
708:       assertFalse(node0.isRegExp());
709:       assertFalse(node0.isInstanceOf());
710:       assertFalse(node0.hasMoreThanOneChild());
711:       assertFalse(node0.isBlock());
712:       assertTrue(node0.isString());
713:       assertFalse(node0.isThis());
714:       assertFalse(node0.isScript());
715:       assertFalse(node0.hasOneChild());
716:       assertFalse(node0.isTry());
717:       assertEquals(4095, Node.COLUMN_MASK);
718:       assertEquals(55, Node.INFERRED_FUNCTION);
719:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
720:       assertEquals(48, Node.DIRECTIVES);
721:       assertEquals(43, Node.IS_CONSTANT_NAME);
722:       assertEquals(36, Node.QUOTED_PROP);
723:       assertEquals(39, Node.EMPTY_BLOCK);
724:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
725:       assertEquals(8, Node.FLAG_NO_THROWS);
726:       assertEquals(50, Node.FREE_CALL);
727:       assertEquals(57, Node.REFLECTED_OBJECT);
728:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
729:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
730:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
731:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
732:       assertEquals(51, Node.STATIC_SOURCE_FILE);
733:       assertEquals(12, Node.COLUMN_BITS);
734:       assertEquals(46, Node.IS_NAMESPACE);
735:       assertEquals(1, Node.DECR_FLAG);
736:       assertEquals(37, Node.OPT_ARG_NAME);
737:       assertEquals(49, Node.DIRECT_EVAL);
738:       assertEquals(32, Node.INCRDECR_PROP);
739:       assertEquals(56, Node.CHANGE_TIME);
740:       assertEquals(15, Node.NO_SIDE_EFFECTS);
741:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
742:       assertEquals(29, Node.JSDOC_INFO_PROP);
743:       assertEquals(54, Node.SLASH_V);
744:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
745:       assertEquals(52, Node.LENGTH);
746:       assertEquals(40, Node.ORIGINALNAME_PROP);
747:       assertEquals(53, Node.INPUT_ID);
748:       assertEquals(57, Node.LAST_PROP);
749:       assertEquals(47, Node.IS_DISPATCHER);
750:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
751:       assertEquals(30, Node.VAR_ARGS_NAME);
752:       assertEquals(2, Node.POST_FLAG);
753:       
754:       // Undeclared exception!
755:       try { 
756:         node0.replaceChildAfter(node1, node1);
757:         fail("Expecting exception: IllegalArgumentException");
758:       
759:       } catch(IllegalArgumentException e) {
760:          //
761:          // prev is not a child of this node.
762:          //
763:          verifyException("com.google.common.base.Preconditions", e);
764:       }
765:   }
766: }
RegularFileObject[/tmp/EvoSuite_111_1628256022228/com/google/javascript/rhino/Node_111_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:20:22 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_111_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_111_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.VoidType",
119:       "com.google.common.base.Joiner",
120:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
121:       "com.google.common.collect.AbstractListMultimap",
122:       "com.google.javascript.rhino.jstype.JSType",
123:       "com.google.common.collect.ImmutableAsList",
124:       "com.google.javascript.rhino.Node$StringNode",
125:       "com.google.javascript.rhino.jstype.ProxyObjectType",
126:       "com.google.common.collect.Sets$SetView",
127:       "com.google.common.collect.RegularImmutableAsList",
128:       "com.google.javascript.rhino.jstype.TemplateType",
129:       "com.google.javascript.rhino.jstype.NamedType",
130:       "com.google.common.collect.Iterators$13",
131:       "com.google.javascript.rhino.InputId",
132:       "com.google.common.collect.ImmutableList$SerializedForm",
133:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
134:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
135:       "com.google.common.collect.AbstractMapBasedMultimap",
136:       "com.google.common.collect.Lists$Partition",
137:       "com.google.common.collect.Lists",
138:       "com.google.javascript.rhino.Node$SideEffectFlags",
139:       "com.google.common.collect.UnmodifiableListIterator",
140:       "com.google.javascript.rhino.jstype.NullType",
141:       "com.google.common.collect.Lists$TransformingSequentialList",
142:       "com.google.javascript.rhino.ErrorReporter",
143:       "com.google.javascript.rhino.jstype.UnknownType",
144:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
145:       "com.google.javascript.rhino.jstype.ValueType",
146:       "com.google.javascript.rhino.jstype.PropertyMap",
147:       "com.google.javascript.rhino.Token",
148:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
149:       "com.google.common.collect.ObjectArrays",
150:       "com.google.javascript.rhino.jstype.StaticSourceFile",
151:       "com.google.javascript.rhino.jstype.BooleanType",
152:       "com.google.javascript.rhino.jstype.NoObjectType",
153:       "com.google.common.collect.AbstractIterator",
154:       "com.google.javascript.rhino.jstype.FunctionBuilder",
155:       "com.google.javascript.rhino.jstype.JSType$TypePair",
156:       "com.google.common.base.Joiner$MapJoiner",
157:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
158:       "com.google.common.collect.ImmutableList$1",
159:       "com.google.common.collect.MapDifference",
160:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
161:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
162:       "com.google.common.collect.Sets$ImprovedAbstractSet",
163:       "com.google.javascript.rhino.jstype.FunctionType",
164:       "com.google.common.base.Preconditions",
165:       "com.google.common.collect.UnmodifiableIterator",
166:       "com.google.javascript.rhino.JSDocInfo",
167:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
168:       "com.google.javascript.rhino.jstype.Property",
169:       "com.google.common.collect.ImmutableMapValues",
170:       "com.google.common.collect.ImmutableEntry",
171:       "com.google.common.base.Joiner$1",
172:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
173:       "com.google.common.base.Joiner$2",
174:       "com.google.common.collect.ImmutableCollection",
175:       "com.google.common.collect.ImmutableEnumMap",
176:       "com.google.javascript.rhino.jstype.TernaryValue",
177:       "com.google.javascript.rhino.Node$AncestorIterable",
178:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
179:       "com.google.common.collect.Lists$RandomAccessListWrapper",
180:       "com.google.common.collect.ImmutableEnumSet",
181:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
182:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
183:       "com.google.javascript.rhino.jstype.EnumElementType",
184:       "com.google.javascript.rhino.jstype.UnionType",
185:       "com.google.common.base.Objects",
186:       "com.google.javascript.rhino.Node$NumberNode",
187:       "com.google.common.collect.SingletonImmutableList",
188:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
189:       "com.google.common.collect.ImmutableCollection$Builder",
190:       "com.google.javascript.rhino.jstype.StaticSlot",
191:       "com.google.common.collect.Iterators$6",
192:       "com.google.common.collect.BiMap",
193:       "com.google.common.collect.Iterators$7",
194:       "com.google.common.collect.AbstractSetMultimap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Lists$AbstractListWrapper",
198:       "com.google.common.collect.ImmutableMap",
199:       "com.google.common.collect.AbstractIndexedListIterator",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.Maps$1",
202:       "com.google.javascript.rhino.jstype.EnumType",
203:       "com.google.common.collect.Iterators$1",
204:       "com.google.common.collect.Iterators$2",
205:       "com.google.javascript.rhino.jstype.NamespaceType",
206:       "com.google.common.collect.Iterators$3",
207:       "com.google.common.collect.Sets",
208:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
209:       "com.google.javascript.rhino.Node$ObjectPropListItem",
210:       "com.google.common.collect.Lists$StringAsImmutableList",
211:       "com.google.common.collect.Lists$2",
212:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
213:       "com.google.common.collect.ImmutableList$Builder",
214:       "com.google.common.collect.Lists$1",
215:       "com.google.javascript.rhino.jstype.StaticReference",
216:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
217:       "com.google.common.collect.Multiset",
218:       "com.google.common.collect.AbstractMultimap",
219:       "com.google.common.collect.Multimap",
220:       "com.google.common.collect.Iterators",
221:       "com.google.common.collect.Maps$ImprovedAbstractMap",
222:       "com.google.common.collect.ImmutableBiMap",
223:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
224:       "com.google.common.collect.ImmutableList",
225:       "com.google.common.collect.SingletonImmutableBiMap",
226:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
227:       "com.google.javascript.rhino.jstype.StringType",
228:       "com.google.javascript.rhino.Node$AbstractPropListItem",
229:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
230:       "com.google.javascript.rhino.jstype.TemplatizedType",
231:       "com.google.javascript.rhino.jstype.Visitor",
232:       "com.google.javascript.rhino.jstype.NoResolvedType",
233:       "com.google.javascript.rhino.jstype.JSTypeNative",
234:       "com.google.javascript.rhino.jstype.AllType",
235:       "com.google.common.collect.Maps",
236:       "com.google.common.collect.SetMultimap",
237:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
238:       "com.google.common.collect.Maps$EntryTransformer",
239:       "com.google.javascript.rhino.JSTypeExpression",
240:       "com.google.common.collect.Iterators$MergingIterator"
241:     );
242:   } 
243: 
244:   private static void resetClasses() {
245:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_111_tmp__ESTest_scaffolding.class.getClassLoader()); 
246: 
247:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
248:       "com.google.javascript.rhino.Node",
249:       "com.google.javascript.rhino.Node$NumberNode",
250:       "com.google.javascript.rhino.Node$StringNode",
251:       "com.google.javascript.rhino.Node$AbstractPropListItem",
252:       "com.google.javascript.rhino.Node$ObjectPropListItem",
253:       "com.google.javascript.rhino.Node$IntPropListItem",
254:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
255:       "com.google.javascript.rhino.Node$AncestorIterable",
256:       "com.google.javascript.rhino.Node$NodeMismatch",
257:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
258:       "com.google.javascript.rhino.Node$SideEffectFlags",
259:       "com.google.javascript.rhino.SimpleErrorReporter",
260:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
261:       "com.google.common.base.Joiner",
262:       "com.google.common.base.Preconditions",
263:       "com.google.common.base.Joiner$1",
264:       "com.google.common.collect.Collections2",
265:       "com.google.common.base.Joiner$MapJoiner",
266:       "com.google.common.collect.Maps",
267:       "com.google.common.collect.AbstractMultimap",
268:       "com.google.common.collect.AbstractMapBasedMultimap",
269:       "com.google.common.collect.AbstractSetMultimap",
270:       "com.google.common.collect.LinkedHashMultimap",
271:       "com.google.common.collect.AbstractMapEntry",
272:       "com.google.common.collect.ImmutableEntry",
273:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
274:       "com.google.common.collect.AbstractListMultimap",
275:       "com.google.common.collect.ArrayListMultimap",
276:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
277:       "com.google.common.collect.ImmutableCollection",
278:       "com.google.common.collect.RegularImmutableList",
279:       "com.google.common.collect.ObjectArrays",
280:       "com.google.common.collect.ImmutableList",
281:       "com.google.javascript.rhino.jstype.ModificationVisitor",
282:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
283:       "com.google.common.collect.ImmutableCollection$Builder",
284:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
285:       "com.google.common.collect.ImmutableList$Builder",
286:       "com.google.common.collect.UnmodifiableIterator",
287:       "com.google.common.collect.UnmodifiableListIterator",
288:       "com.google.common.collect.Iterators$1",
289:       "com.google.common.collect.Iterators$2",
290:       "com.google.common.collect.Iterators",
291:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
292:       "com.google.javascript.rhino.jstype.JSType$1",
293:       "com.google.javascript.rhino.jstype.JSType",
294:       "com.google.javascript.rhino.jstype.ObjectType",
295:       "com.google.javascript.rhino.jstype.ProxyObjectType",
296:       "com.google.javascript.rhino.jstype.TemplateType",
297:       "com.google.javascript.rhino.jstype.ValueType",
298:       "com.google.javascript.rhino.jstype.BooleanType",
299:       "com.google.javascript.rhino.jstype.NullType",
300:       "com.google.javascript.rhino.jstype.NumberType",
301:       "com.google.javascript.rhino.jstype.StringType",
302:       "com.google.javascript.rhino.jstype.UnknownType",
303:       "com.google.javascript.rhino.jstype.VoidType",
304:       "com.google.javascript.rhino.jstype.AllType",
305:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ImmutableBiMap",
308:       "com.google.common.collect.EmptyImmutableBiMap",
309:       "com.google.javascript.rhino.jstype.PropertyMap$1",
310:       "com.google.javascript.rhino.jstype.PropertyMap",
311:       "com.google.javascript.rhino.jstype.FunctionType",
312:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
313:       "com.google.javascript.rhino.Token",
314:       "com.google.javascript.rhino.jstype.ArrowType",
315:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
316:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
317:       "com.google.javascript.rhino.jstype.InstanceObjectType",
318:       "com.google.javascript.rhino.jstype.Property",
319:       "com.google.common.collect.Lists",
320:       "com.google.javascript.rhino.jstype.NoObjectType",
321:       "com.google.javascript.rhino.jstype.NoType",
322:       "com.google.javascript.rhino.jstype.NoResolvedType",
323:       "com.google.common.collect.SingletonImmutableList",
324:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
325:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
326:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
327:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
328:       "com.google.javascript.rhino.jstype.UnionType",
329:       "com.google.javascript.rhino.jstype.FunctionBuilder",
330:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
331:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
332:       "com.google.common.collect.AbstractIndexedListIterator",
333:       "com.google.common.collect.ImmutableList$1",
334:       "com.google.javascript.rhino.InputId",
335:       "com.google.javascript.rhino.jstype.EnumType",
336:       "com.google.javascript.rhino.jstype.EnumElementType",
337:       "com.google.common.collect.Iterators$11",
338:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
339:       "com.google.javascript.rhino.Node$AncestorIterable$1",
340:       "com.google.javascript.rhino.JSDocInfo",
341:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
342:       "com.google.common.base.Objects",
343:       "com.google.common.collect.Iterables",
344:       "com.google.common.collect.Sets",
345:       "com.google.javascript.rhino.jstype.TemplatizedType",
346:       "com.google.javascript.rhino.jstype.NamedType",
347:       "com.google.javascript.rhino.jstype.TernaryValue",
348:       "com.google.javascript.rhino.jstype.JSType$2",
349:       "com.google.javascript.rhino.jstype.JSType$TypePair",
350:       "com.google.common.collect.Platform",
351:       "com.google.common.collect.ImmutableSet",
352:       "com.google.common.collect.EmptyImmutableSet",
353:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
354:       "com.google.common.collect.Iterators$12",
355:       "com.google.common.collect.AbstractMultimap$Values",
356:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
357:       "com.google.common.collect.AbstractMapBasedMultimap$1",
358:       "com.google.common.collect.Multimaps$Entries",
359:       "com.google.common.collect.AbstractMultimap$Entries",
360:       "com.google.common.collect.AbstractMapBasedMultimap$2",
361:       "com.google.javascript.rhino.JSTypeExpression"
362:     );
363:   }
364: }

[MASTER] 13:20:22.364 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newString("BOOLEAN_TYPE");
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isHook());
assertFalse(node0.isComma());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBreak());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isGetElem());
assertFalse(node0.isCast());
assertFalse(node0.isEmpty());
assertFalse(node0.isTypeOf());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.hasChildren());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isDelProp());
assertFalse(node0.isVoid());
assertFalse(node0.isWhile());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertFalse(node0.isNot());
assertFalse(node0.isGetProp());
assertFalse(node0.isReturn());
assertFalse(node0.isStringKey());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isVar());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertEquals(40, node0.getType());
assertFalse(node0.isContinue());
assertFalse(node0.isFunction());
assertFalse(node0.isOr());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isDo());
assertFalse(node0.isFor());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isArrayLit());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabelName());
assertFalse(node0.isCase());
assertFalse(node0.isWith());
assertFalse(node0.isCatch());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertFalse(node0.isTry());
assertNotNull(node0);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);

Iterable<Node> iterable0 = node0.children();
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isHook());
assertFalse(node0.isComma());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBreak());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isGetElem());
assertFalse(node0.isCast());
assertFalse(node0.isEmpty());
assertFalse(node0.isTypeOf());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.hasChildren());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isDelProp());
assertFalse(node0.isVoid());
assertFalse(node0.isWhile());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertFalse(node0.isNot());
assertFalse(node0.isGetProp());
assertFalse(node0.isReturn());
assertFalse(node0.isStringKey());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isVar());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertEquals(40, node0.getType());
assertFalse(node0.isContinue());
assertFalse(node0.isFunction());
assertFalse(node0.isOr());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isDo());
assertFalse(node0.isFor());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isArrayLit());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabelName());
assertFalse(node0.isCase());
assertFalse(node0.isWith());
assertFalse(node0.isCatch());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertFalse(node0.isTry());
assertNotNull(iterable0);
assertFalse(iterable0.contains(node0));
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);

Node node1 = new Node(30, node0);
assertFalse(node1.equals((Object)node0));
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isHook());
assertFalse(node0.isComma());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBreak());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isGetElem());
assertFalse(node0.isCast());
assertFalse(node0.isEmpty());
assertFalse(node0.isTypeOf());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.hasChildren());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isDelProp());
assertFalse(node0.isVoid());
assertFalse(node0.isWhile());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertFalse(node0.isNot());
assertFalse(node0.isGetProp());
assertFalse(node0.isReturn());
assertFalse(node0.isStringKey());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isVar());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertEquals(40, node0.getType());
assertFalse(node0.isContinue());
assertFalse(node0.isFunction());
assertFalse(node0.isOr());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isDo());
assertFalse(node0.isFor());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isArrayLit());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabelName());
assertFalse(node0.isCase());
assertFalse(node0.isWith());
assertFalse(node0.isCatch());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertFalse(node0.isTry());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isString());
assertFalse(node1.isIn());
assertFalse(node1.isNE());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertTrue(node1.hasChildren());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isCase());
assertFalse(node1.isTry());
assertFalse(node1.isCatch());
assertFalse(node1.isAnd());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isCast());
assertTrue(node1.isNew());
assertFalse(node1.isThrow());
assertFalse(node1.isFalse());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.isLabel());
assertEquals((-1), node1.getSourcePosition());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isAssign());
assertFalse(node1.isDec());
assertFalse(node1.isNumber());
assertFalse(node1.isTypeOf());
assertFalse(node1.isScript());
assertFalse(node1.isBlock());
assertFalse(node1.isWhile());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertEquals(30, node1.getType());
assertFalse(node1.isBreak());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertFalse(node1.isArrayLit());
assertFalse(node1.isEmpty());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDefaultCase());
assertNotNull(node1);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);

Node node2 = node1.getChildBefore(node0);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isHook());
assertFalse(node0.isComma());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBreak());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isGetElem());
assertFalse(node0.isCast());
assertFalse(node0.isEmpty());
assertFalse(node0.isTypeOf());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.hasChildren());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isDelProp());
assertFalse(node0.isVoid());
assertFalse(node0.isWhile());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertFalse(node0.isNot());
assertFalse(node0.isGetProp());
assertFalse(node0.isReturn());
assertFalse(node0.isStringKey());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isVar());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertEquals(40, node0.getType());
assertFalse(node0.isContinue());
assertFalse(node0.isFunction());
assertFalse(node0.isOr());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isDo());
assertFalse(node0.isFor());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isArrayLit());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabelName());
assertFalse(node0.isCase());
assertFalse(node0.isWith());
assertFalse(node0.isCatch());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertFalse(node0.isTry());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isString());
assertFalse(node1.isIn());
assertFalse(node1.isNE());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertTrue(node1.hasChildren());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertTrue(node1.hasOneChild());
assertFalse(node1.isGetterDef());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isCase());
assertFalse(node1.isTry());
assertFalse(node1.isCatch());
assertFalse(node1.isAnd());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isWith());
assertFalse(node1.isNot());
assertFalse(node1.isObjectLit());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isCast());
assertTrue(node1.isNew());
assertFalse(node1.isThrow());
assertFalse(node1.isFalse());
assertFalse(node1.isSetterDef());
assertFalse(node1.isInc());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.isLabel());
assertEquals((-1), node1.getSourcePosition());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isAssign());
assertFalse(node1.isDec());
assertFalse(node1.isNumber());
assertFalse(node1.isTypeOf());
assertFalse(node1.isScript());
assertFalse(node1.isBlock());
assertFalse(node1.isWhile());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertEquals(30, node1.getType());
assertFalse(node1.isBreak());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertFalse(node1.isArrayLit());
assertFalse(node1.isEmpty());
assertFalse(node1.isVar());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDefaultCase());
assertNull(node2);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(57, Node.LAST_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);

node0.addSuppression("already specified skipNulls");
assertFalse(node0.equals((Object)node1));
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isHook());
assertFalse(node0.isComma());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isSwitch());
assertFalse(node0.isBreak());
assertFalse(node0.isIn());
assertFalse(node0.isInc());
assertFalse(node0.isGetElem());
assertFalse(node0.isCast());
assertFalse(node0.isEmpty());
assertFalse(node0.isTypeOf());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.hasChildren());
assertFalse(node0.isDec());
assertFalse(node0.isAssign());
assertFalse(node0.isExprResult());
assertFalse(node0.isTrue());
assertFalse(node0.isDelProp());
assertFalse(node0.isVoid());
assertFalse(node0.isWhile());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertFalse(node0.isNot());
assertFalse(node0.isGetProp());
assertFalse(node0.isReturn());
assertFalse(node0.isStringKey());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isVar());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertEquals(40, node0.getType());
assertFalse(node0.isContinue());
assertFalse(node0.isFunction());
assertFalse(node0.isOr());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isSetterDef());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isDo());
assertFalse(node0.isFor());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isArrayLit());
assertFalse(node0.isIf());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabelName());
assertFalse(node0.isCase());
assertFalse(node0.isWith());
assertFalse(node0.isCatch());
assertFalse(node0.isRegExp());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isThis());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertFalse(node0.isTry());
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(48, Node.DIRECTIVES);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(1, Node.DECR_FLAG);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);

node0.replaceChildAfter(node1, node1);

[MASTER] 13:20:44.628 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_207_1628256044456/com/google/javascript/rhino/Node_207_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_207_1628256044456/com/google/javascript/rhino/Node_207_tmp__ESTest_scaffolding.java]]
[MASTER] 13:20:44.629 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:44.629 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 13:20:44.631 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1099
[MASTER] 13:20:44.632 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_207_1628256044456/com/google/javascript/rhino/Node_207_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 13:20:44 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.rhino.JSDocInfo;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_207_tmp__ESTest extends Node_207_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newNumber(1491.983446165565, (-3516), (-2935));
22:       assertFalse(node0.hasOneChild());
23:       assertFalse(node0.isCast());
24:       assertFalse(node0.isGetElem());
25:       assertFalse(node0.isLabelName());
26:       assertFalse(node0.isExprResult());
27:       assertFalse(node0.isTypeOf());
28:       assertFalse(node0.isDec());
29:       assertFalse(node0.isWith());
30:       assertFalse(node0.isAssign());
31:       assertFalse(node0.isReturn());
32:       assertFalse(node0.hasChildren());
33:       assertFalse(node0.isLabel());
34:       assertFalse(node0.isContinue());
35:       assertFalse(node0.isObjectLit());
36:       assertFalse(node0.isAnd());
37:       assertFalse(node0.isGetProp());
38:       assertFalse(node0.isScript());
39:       assertEquals((-1), node0.getSourcePosition());
40:       assertFalse(node0.isNot());
41:       assertFalse(node0.isFalse());
42:       assertFalse(node0.isInc());
43:       assertFalse(node0.isBlock());
44:       assertFalse(node0.isThrow());
45:       assertFalse(node0.isThis());
46:       assertEquals(39, node0.getType());
47:       assertFalse(node0.isHook());
48:       assertFalse(node0.isCatch());
49:       assertFalse(node0.isInstanceOf());
50:       assertFalse(node0.hasMoreThanOneChild());
51:       assertFalse(node0.isIn());
52:       assertEquals((-1), node0.getLineno());
53:       assertFalse(node0.isSetterDef());
54:       assertFalse(node0.isNE());
55:       assertFalse(node0.isIf());
56:       assertFalse(node0.isArrayLit());
57:       assertFalse(node0.isEmpty());
58:       assertFalse(node0.isTry());
59:       assertFalse(node0.isVoid());
60:       assertFalse(node0.isRegExp());
61:       assertFalse(node0.isFunction());
62:       assertFalse(node0.isDefaultCase());
63:       assertFalse(node0.isFor());
64:       assertEquals(0, node0.getChildCount());
65:       assertFalse(node0.isCase());
66:       assertTrue(node0.isNumber());
67:       assertFalse(node0.isParamList());
68:       assertFalse(node0.isGetterDef());
69:       assertFalse(node0.isString());
70:       assertFalse(node0.isSwitch());
71:       assertFalse(node0.isStringKey());
72:       assertFalse(node0.isDebugger());
73:       assertEquals((-1), node0.getCharno());
74:       assertFalse(node0.isVar());
75:       assertFalse(node0.isNew());
76:       assertFalse(node0.isAdd());
77:       assertFalse(node0.isName());
78:       assertFalse(node0.isCall());
79:       assertFalse(node0.isBreak());
80:       assertFalse(node0.isWhile());
81:       assertFalse(node0.isComma());
82:       assertFalse(node0.isAssignAdd());
83:       assertFalse(node0.isDo());
84:       assertFalse(node0.isNull());
85:       assertFalse(node0.isDelProp());
86:       assertFalse(node0.isOr());
87:       assertFalse(node0.isTrue());
88:       assertNotNull(node0);
89:       assertEquals(56, Node.CHANGE_TIME);
90:       assertEquals(51, Node.STATIC_SOURCE_FILE);
91:       assertEquals(47, Node.IS_DISPATCHER);
92:       assertEquals(2, Node.POST_FLAG);
93:       assertEquals(12, Node.COLUMN_BITS);
94:       assertEquals(46, Node.IS_NAMESPACE);
95:       assertEquals(49, Node.DIRECT_EVAL);
96:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
97:       assertEquals(37, Node.OPT_ARG_NAME);
98:       assertEquals(53, Node.INPUT_ID);
99:       assertEquals(52, Node.LENGTH);
100:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
101:       assertEquals(36, Node.QUOTED_PROP);
102:       assertEquals(57, Node.REFLECTED_OBJECT);
103:       assertEquals(30, Node.VAR_ARGS_NAME);
104:       assertEquals(29, Node.JSDOC_INFO_PROP);
105:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
106:       assertEquals(55, Node.INFERRED_FUNCTION);
107:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
108:       assertEquals(57, Node.LAST_PROP);
109:       assertEquals(15, Node.NO_SIDE_EFFECTS);
110:       assertEquals(39, Node.EMPTY_BLOCK);
111:       assertEquals(48, Node.DIRECTIVES);
112:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
113:       assertEquals(8, Node.FLAG_NO_THROWS);
114:       assertEquals(4095, Node.COLUMN_MASK);
115:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
116:       assertEquals(40, Node.ORIGINALNAME_PROP);
117:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
118:       assertEquals(54, Node.SLASH_V);
119:       assertEquals(43, Node.IS_CONSTANT_NAME);
120:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
121:       assertEquals(1, Node.DECR_FLAG);
122:       assertEquals(50, Node.FREE_CALL);
123:       assertEquals(32, Node.INCRDECR_PROP);
124:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
125:       
126:       String string0 = node0.getQualifiedName();
127:       assertFalse(node0.hasOneChild());
128:       assertFalse(node0.isCast());
129:       assertFalse(node0.isGetElem());
130:       assertFalse(node0.isLabelName());
131:       assertFalse(node0.isExprResult());
132:       assertFalse(node0.isTypeOf());
133:       assertFalse(node0.isDec());
134:       assertFalse(node0.isWith());
135:       assertFalse(node0.isAssign());
136:       assertFalse(node0.isReturn());
137:       assertFalse(node0.hasChildren());
138:       assertFalse(node0.isLabel());
139:       assertFalse(node0.isContinue());
140:       assertFalse(node0.isObjectLit());
141:       assertFalse(node0.isAnd());
142:       assertFalse(node0.isGetProp());
143:       assertFalse(node0.isScript());
144:       assertEquals((-1), node0.getSourcePosition());
145:       assertFalse(node0.isNot());
146:       assertFalse(node0.isFalse());
147:       assertFalse(node0.isInc());
148:       assertFalse(node0.isBlock());
149:       assertFalse(node0.isThrow());
150:       assertFalse(node0.isThis());
151:       assertEquals(39, node0.getType());
152:       assertFalse(node0.isHook());
153:       assertFalse(node0.isCatch());
154:       assertFalse(node0.isInstanceOf());
155:       assertFalse(node0.hasMoreThanOneChild());
156:       assertFalse(node0.isIn());
157:       assertEquals((-1), node0.getLineno());
158:       assertFalse(node0.isSetterDef());
159:       assertFalse(node0.isNE());
160:       assertFalse(node0.isIf());
161:       assertFalse(node0.isArrayLit());
162:       assertFalse(node0.isEmpty());
163:       assertFalse(node0.isTry());
164:       assertFalse(node0.isVoid());
165:       assertFalse(node0.isRegExp());
166:       assertFalse(node0.isFunction());
167:       assertFalse(node0.isDefaultCase());
168:       assertFalse(node0.isFor());
169:       assertEquals(0, node0.getChildCount());
170:       assertFalse(node0.isCase());
171:       assertTrue(node0.isNumber());
172:       assertFalse(node0.isParamList());
173:       assertFalse(node0.isGetterDef());
174:       assertFalse(node0.isString());
175:       assertFalse(node0.isSwitch());
176:       assertFalse(node0.isStringKey());
177:       assertFalse(node0.isDebugger());
178:       assertEquals((-1), node0.getCharno());
179:       assertFalse(node0.isVar());
180:       assertFalse(node0.isNew());
181:       assertFalse(node0.isAdd());
182:       assertFalse(node0.isName());
183:       assertFalse(node0.isCall());
184:       assertFalse(node0.isBreak());
185:       assertFalse(node0.isWhile());
186:       assertFalse(node0.isComma());
187:       assertFalse(node0.isAssignAdd());
188:       assertFalse(node0.isDo());
189:       assertFalse(node0.isNull());
190:       assertFalse(node0.isDelProp());
191:       assertFalse(node0.isOr());
192:       assertFalse(node0.isTrue());
193:       assertNull(string0);
194:       assertEquals(56, Node.CHANGE_TIME);
195:       assertEquals(51, Node.STATIC_SOURCE_FILE);
196:       assertEquals(47, Node.IS_DISPATCHER);
197:       assertEquals(2, Node.POST_FLAG);
198:       assertEquals(12, Node.COLUMN_BITS);
199:       assertEquals(46, Node.IS_NAMESPACE);
200:       assertEquals(49, Node.DIRECT_EVAL);
201:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
202:       assertEquals(37, Node.OPT_ARG_NAME);
203:       assertEquals(53, Node.INPUT_ID);
204:       assertEquals(52, Node.LENGTH);
205:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
206:       assertEquals(36, Node.QUOTED_PROP);
207:       assertEquals(57, Node.REFLECTED_OBJECT);
208:       assertEquals(30, Node.VAR_ARGS_NAME);
209:       assertEquals(29, Node.JSDOC_INFO_PROP);
210:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
211:       assertEquals(55, Node.INFERRED_FUNCTION);
212:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
213:       assertEquals(57, Node.LAST_PROP);
214:       assertEquals(15, Node.NO_SIDE_EFFECTS);
215:       assertEquals(39, Node.EMPTY_BLOCK);
216:       assertEquals(48, Node.DIRECTIVES);
217:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
218:       assertEquals(8, Node.FLAG_NO_THROWS);
219:       assertEquals(4095, Node.COLUMN_MASK);
220:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
221:       assertEquals(40, Node.ORIGINALNAME_PROP);
222:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
223:       assertEquals(54, Node.SLASH_V);
224:       assertEquals(43, Node.IS_CONSTANT_NAME);
225:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
226:       assertEquals(1, Node.DECR_FLAG);
227:       assertEquals(50, Node.FREE_CALL);
228:       assertEquals(32, Node.INCRDECR_PROP);
229:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
230:       
231:       String string1 = node0.getQualifiedName();
232:       assertFalse(node0.hasOneChild());
233:       assertFalse(node0.isCast());
234:       assertFalse(node0.isGetElem());
235:       assertFalse(node0.isLabelName());
236:       assertFalse(node0.isExprResult());
237:       assertFalse(node0.isTypeOf());
238:       assertFalse(node0.isDec());
239:       assertFalse(node0.isWith());
240:       assertFalse(node0.isAssign());
241:       assertFalse(node0.isReturn());
242:       assertFalse(node0.hasChildren());
243:       assertFalse(node0.isLabel());
244:       assertFalse(node0.isContinue());
245:       assertFalse(node0.isObjectLit());
246:       assertFalse(node0.isAnd());
247:       assertFalse(node0.isGetProp());
248:       assertFalse(node0.isScript());
249:       assertEquals((-1), node0.getSourcePosition());
250:       assertFalse(node0.isNot());
251:       assertFalse(node0.isFalse());
252:       assertFalse(node0.isInc());
253:       assertFalse(node0.isBlock());
254:       assertFalse(node0.isThrow());
255:       assertFalse(node0.isThis());
256:       assertEquals(39, node0.getType());
257:       assertFalse(node0.isHook());
258:       assertFalse(node0.isCatch());
259:       assertFalse(node0.isInstanceOf());
260:       assertFalse(node0.hasMoreThanOneChild());
261:       assertFalse(node0.isIn());
262:       assertEquals((-1), node0.getLineno());
263:       assertFalse(node0.isSetterDef());
264:       assertFalse(node0.isNE());
265:       assertFalse(node0.isIf());
266:       assertFalse(node0.isArrayLit());
267:       assertFalse(node0.isEmpty());
268:       assertFalse(node0.isTry());
269:       assertFalse(node0.isVoid());
270:       assertFalse(node0.isRegExp());
271:       assertFalse(node0.isFunction());
272:       assertFalse(node0.isDefaultCase());
273:       assertFalse(node0.isFor());
274:       assertEquals(0, node0.getChildCount());
275:       assertFalse(node0.isCase());
276:       assertTrue(node0.isNumber());
277:       assertFalse(node0.isParamList());
278:       assertFalse(node0.isGetterDef());
279:       assertFalse(node0.isString());
280:       assertFalse(node0.isSwitch());
281:       assertFalse(node0.isStringKey());
282:       assertFalse(node0.isDebugger());
283:       assertEquals((-1), node0.getCharno());
284:       assertFalse(node0.isVar());
285:       assertFalse(node0.isNew());
286:       assertFalse(node0.isAdd());
287:       assertFalse(node0.isName());
288:       assertFalse(node0.isCall());
289:       assertFalse(node0.isBreak());
290:       assertFalse(node0.isWhile());
291:       assertFalse(node0.isComma());
292:       assertFalse(node0.isAssignAdd());
293:       assertFalse(node0.isDo());
294:       assertFalse(node0.isNull());
295:       assertFalse(node0.isDelProp());
296:       assertFalse(node0.isOr());
297:       assertFalse(node0.isTrue());
298:       assertNull(string1);
299:       assertEquals(56, Node.CHANGE_TIME);
300:       assertEquals(51, Node.STATIC_SOURCE_FILE);
301:       assertEquals(47, Node.IS_DISPATCHER);
302:       assertEquals(2, Node.POST_FLAG);
303:       assertEquals(12, Node.COLUMN_BITS);
304:       assertEquals(46, Node.IS_NAMESPACE);
305:       assertEquals(49, Node.DIRECT_EVAL);
306:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
307:       assertEquals(37, Node.OPT_ARG_NAME);
308:       assertEquals(53, Node.INPUT_ID);
309:       assertEquals(52, Node.LENGTH);
310:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
311:       assertEquals(36, Node.QUOTED_PROP);
312:       assertEquals(57, Node.REFLECTED_OBJECT);
313:       assertEquals(30, Node.VAR_ARGS_NAME);
314:       assertEquals(29, Node.JSDOC_INFO_PROP);
315:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
316:       assertEquals(55, Node.INFERRED_FUNCTION);
317:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
318:       assertEquals(57, Node.LAST_PROP);
319:       assertEquals(15, Node.NO_SIDE_EFFECTS);
320:       assertEquals(39, Node.EMPTY_BLOCK);
321:       assertEquals(48, Node.DIRECTIVES);
322:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
323:       assertEquals(8, Node.FLAG_NO_THROWS);
324:       assertEquals(4095, Node.COLUMN_MASK);
325:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
326:       assertEquals(40, Node.ORIGINALNAME_PROP);
327:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
328:       assertEquals(54, Node.SLASH_V);
329:       assertEquals(43, Node.IS_CONSTANT_NAME);
330:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
331:       assertEquals(1, Node.DECR_FLAG);
332:       assertEquals(50, Node.FREE_CALL);
333:       assertEquals(32, Node.INCRDECR_PROP);
334:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
335:       
336:       Node node1 = node0.setJSDocInfo((JSDocInfo) null);
337:       assertFalse(node0.hasOneChild());
338:       assertFalse(node0.isCast());
339:       assertFalse(node0.isGetElem());
340:       assertFalse(node0.isLabelName());
341:       assertFalse(node0.isExprResult());
342:       assertFalse(node0.isTypeOf());
343:       assertFalse(node0.isDec());
344:       assertFalse(node0.isWith());
345:       assertFalse(node0.isAssign());
346:       assertFalse(node0.isReturn());
347:       assertFalse(node0.hasChildren());
348:       assertFalse(node0.isLabel());
349:       assertFalse(node0.isContinue());
350:       assertFalse(node0.isObjectLit());
351:       assertFalse(node0.isAnd());
352:       assertFalse(node0.isGetProp());
353:       assertFalse(node0.isScript());
354:       assertEquals((-1), node0.getSourcePosition());
355:       assertFalse(node0.isNot());
356:       assertFalse(node0.isFalse());
357:       assertFalse(node0.isInc());
358:       assertFalse(node0.isBlock());
359:       assertFalse(node0.isThrow());
360:       assertFalse(node0.isThis());
361:       assertEquals(39, node0.getType());
362:       assertFalse(node0.isHook());
363:       assertFalse(node0.isCatch());
364:       assertFalse(node0.isInstanceOf());
365:       assertFalse(node0.hasMoreThanOneChild());
366:       assertFalse(node0.isIn());
367:       assertEquals((-1), node0.getLineno());
368:       assertFalse(node0.isSetterDef());
369:       assertFalse(node0.isNE());
370:       assertFalse(node0.isIf());
371:       assertFalse(node0.isArrayLit());
372:       assertFalse(node0.isEmpty());
373:       assertFalse(node0.isTry());
374:       assertFalse(node0.isVoid());
375:       assertFalse(node0.isRegExp());
376:       assertFalse(node0.isFunction());
377:       assertFalse(node0.isDefaultCase());
378:       assertFalse(node0.isFor());
379:       assertEquals(0, node0.getChildCount());
380:       assertFalse(node0.isCase());
381:       assertTrue(node0.isNumber());
382:       assertFalse(node0.isParamList());
383:       assertFalse(node0.isGetterDef());
384:       assertFalse(node0.isString());
385:       assertFalse(node0.isSwitch());
386:       assertFalse(node0.isStringKey());
387:       assertFalse(node0.isDebugger());
388:       assertEquals((-1), node0.getCharno());
389:       assertFalse(node0.isVar());
390:       assertFalse(node0.isNew());
391:       assertFalse(node0.isAdd());
392:       assertFalse(node0.isName());
393:       assertFalse(node0.isCall());
394:       assertFalse(node0.isBreak());
395:       assertFalse(node0.isWhile());
396:       assertFalse(node0.isComma());
397:       assertFalse(node0.isAssignAdd());
398:       assertFalse(node0.isDo());
399:       assertFalse(node0.isNull());
400:       assertFalse(node0.isDelProp());
401:       assertFalse(node0.isOr());
402:       assertFalse(node0.isTrue());
403:       assertFalse(node1.isThis());
404:       assertFalse(node1.isComma());
405:       assertFalse(node1.isGetProp());
406:       assertFalse(node1.isFalse());
407:       assertFalse(node1.isThrow());
408:       assertFalse(node1.isHook());
409:       assertFalse(node1.isSwitch());
410:       assertEquals((-1), node1.getCharno());
411:       assertFalse(node1.isScript());
412:       assertFalse(node1.isNot());
413:       assertFalse(node1.isString());
414:       assertFalse(node1.isObjectLit());
415:       assertFalse(node1.isCast());
416:       assertFalse(node1.isAnd());
417:       assertFalse(node1.isLabelName());
418:       assertFalse(node1.isNE());
419:       assertFalse(node1.isIn());
420:       assertFalse(node1.isGetterDef());
421:       assertFalse(node1.isFor());
422:       assertFalse(node1.isCase());
423:       assertFalse(node1.hasOneChild());
424:       assertFalse(node1.isTry());
425:       assertFalse(node1.isInc());
426:       assertFalse(node1.isBlock());
427:       assertEquals(39, node1.getType());
428:       assertFalse(node1.isWith());
429:       assertFalse(node1.isRegExp());
430:       assertFalse(node1.hasMoreThanOneChild());
431:       assertFalse(node1.isCatch());
432:       assertFalse(node1.isInstanceOf());
433:       assertEquals((-1), node1.getLineno());
434:       assertFalse(node1.isIf());
435:       assertFalse(node1.isSetterDef());
436:       assertFalse(node1.isParamList());
437:       assertFalse(node1.isNull());
438:       assertEquals(0, node1.getChildCount());
439:       assertFalse(node1.isVar());
440:       assertFalse(node1.isNew());
441:       assertFalse(node1.isDefaultCase());
442:       assertFalse(node1.isFunction());
443:       assertFalse(node1.isDebugger());
444:       assertFalse(node1.isContinue());
445:       assertFalse(node1.isArrayLit());
446:       assertFalse(node1.isStringKey());
447:       assertEquals((-1), node1.getSourcePosition());
448:       assertFalse(node1.isAssign());
449:       assertFalse(node1.isOr());
450:       assertFalse(node1.isReturn());
451:       assertFalse(node1.hasChildren());
452:       assertFalse(node1.isLabel());
453:       assertFalse(node1.isDec());
454:       assertFalse(node1.isTypeOf());
455:       assertFalse(node1.isEmpty());
456:       assertTrue(node1.isNumber());
457:       assertFalse(node1.isAssignAdd());
458:       assertFalse(node1.isDo());
459:       assertFalse(node1.isWhile());
460:       assertFalse(node1.isExprResult());
461:       assertFalse(node1.isTrue());
462:       assertFalse(node1.isAdd());
463:       assertFalse(node1.isGetElem());
464:       assertFalse(node1.isCall());
465:       assertFalse(node1.isBreak());
466:       assertFalse(node1.isDelProp());
467:       assertFalse(node1.isVoid());
468:       assertFalse(node1.isName());
469:       assertSame(node0, node1);
470:       assertSame(node1, node0);
471:       assertNotNull(node1);
472:       assertEquals(56, Node.CHANGE_TIME);
473:       assertEquals(51, Node.STATIC_SOURCE_FILE);
474:       assertEquals(47, Node.IS_DISPATCHER);
475:       assertEquals(2, Node.POST_FLAG);
476:       assertEquals(12, Node.COLUMN_BITS);
477:       assertEquals(46, Node.IS_NAMESPACE);
478:       assertEquals(49, Node.DIRECT_EVAL);
479:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
480:       assertEquals(37, Node.OPT_ARG_NAME);
481:       assertEquals(53, Node.INPUT_ID);
482:       assertEquals(52, Node.LENGTH);
483:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
484:       assertEquals(36, Node.QUOTED_PROP);
485:       assertEquals(57, Node.REFLECTED_OBJECT);
486:       assertEquals(30, Node.VAR_ARGS_NAME);
487:       assertEquals(29, Node.JSDOC_INFO_PROP);
488:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
489:       assertEquals(55, Node.INFERRED_FUNCTION);
490:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
491:       assertEquals(57, Node.LAST_PROP);
492:       assertEquals(15, Node.NO_SIDE_EFFECTS);
493:       assertEquals(39, Node.EMPTY_BLOCK);
494:       assertEquals(48, Node.DIRECTIVES);
495:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
496:       assertEquals(8, Node.FLAG_NO_THROWS);
497:       assertEquals(4095, Node.COLUMN_MASK);
498:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
499:       assertEquals(40, Node.ORIGINALNAME_PROP);
500:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
501:       assertEquals(54, Node.SLASH_V);
502:       assertEquals(43, Node.IS_CONSTANT_NAME);
503:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
504:       assertEquals(1, Node.DECR_FLAG);
505:       assertEquals(50, Node.FREE_CALL);
506:       assertEquals(32, Node.INCRDECR_PROP);
507:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
508:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
509:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
510:       assertEquals(43, Node.IS_CONSTANT_NAME);
511:       assertEquals(4095, Node.COLUMN_MASK);
512:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
513:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
514:       assertEquals(29, Node.JSDOC_INFO_PROP);
515:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
516:       assertEquals(47, Node.IS_DISPATCHER);
517:       assertEquals(37, Node.OPT_ARG_NAME);
518:       assertEquals(56, Node.CHANGE_TIME);
519:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
520:       assertEquals(48, Node.DIRECTIVES);
521:       assertEquals(52, Node.LENGTH);
522:       assertEquals(39, Node.EMPTY_BLOCK);
523:       assertEquals(53, Node.INPUT_ID);
524:       assertEquals(57, Node.REFLECTED_OBJECT);
525:       assertEquals(55, Node.INFERRED_FUNCTION);
526:       assertEquals(36, Node.QUOTED_PROP);
527:       assertEquals(8, Node.FLAG_NO_THROWS);
528:       assertEquals(30, Node.VAR_ARGS_NAME);
529:       assertEquals(49, Node.DIRECT_EVAL);
530:       assertEquals(15, Node.NO_SIDE_EFFECTS);
531:       assertEquals(57, Node.LAST_PROP);
532:       assertEquals(1, Node.DECR_FLAG);
533:       assertEquals(32, Node.INCRDECR_PROP);
534:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
535:       assertEquals(12, Node.COLUMN_BITS);
536:       assertEquals(2, Node.POST_FLAG);
537:       assertEquals(50, Node.FREE_CALL);
538:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
539:       assertEquals(40, Node.ORIGINALNAME_PROP);
540:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
541:       assertEquals(46, Node.IS_NAMESPACE);
542:       assertEquals(54, Node.SLASH_V);
543:       assertEquals(51, Node.STATIC_SOURCE_FILE);
544:       
545:       JSDocInfo jSDocInfo0 = node1.getJSDocInfo();
546:       assertFalse(node0.hasOneChild());
547:       assertFalse(node0.isCast());
548:       assertFalse(node0.isGetElem());
549:       assertFalse(node0.isLabelName());
550:       assertFalse(node0.isExprResult());
551:       assertFalse(node0.isTypeOf());
552:       assertFalse(node0.isDec());
553:       assertFalse(node0.isWith());
554:       assertFalse(node0.isAssign());
555:       assertFalse(node0.isReturn());
556:       assertFalse(node0.hasChildren());
557:       assertFalse(node0.isLabel());
558:       assertFalse(node0.isContinue());
559:       assertFalse(node0.isObjectLit());
560:       assertFalse(node0.isAnd());
561:       assertFalse(node0.isGetProp());
562:       assertFalse(node0.isScript());
563:       assertEquals((-1), node0.getSourcePosition());
564:       assertFalse(node0.isNot());
565:       assertFalse(node0.isFalse());
566:       assertFalse(node0.isInc());
567:       assertFalse(node0.isBlock());
568:       assertFalse(node0.isThrow());
569:       assertFalse(node0.isThis());
570:       assertEquals(39, node0.getType());
571:       assertFalse(node0.isHook());
572:       assertFalse(node0.isCatch());
573:       assertFalse(node0.isInstanceOf());
574:       assertFalse(node0.hasMoreThanOneChild());
575:       assertFalse(node0.isIn());
576:       assertEquals((-1), node0.getLineno());
577:       assertFalse(node0.isSetterDef());
578:       assertFalse(node0.isNE());
579:       assertFalse(node0.isIf());
580:       assertFalse(node0.isArrayLit());
581:       assertFalse(node0.isEmpty());
582:       assertFalse(node0.isTry());
583:       assertFalse(node0.isVoid());
584:       assertFalse(node0.isRegExp());
585:       assertFalse(node0.isFunction());
586:       assertFalse(node0.isDefaultCase());
587:       assertFalse(node0.isFor());
588:       assertEquals(0, node0.getChildCount());
589:       assertFalse(node0.isCase());
590:       assertTrue(node0.isNumber());
591:       assertFalse(node0.isParamList());
592:       assertFalse(node0.isGetterDef());
593:       assertFalse(node0.isString());
594:       assertFalse(node0.isSwitch());
595:       assertFalse(node0.isStringKey());
596:       assertFalse(node0.isDebugger());
597:       assertEquals((-1), node0.getCharno());
598:       assertFalse(node0.isVar());
599:       assertFalse(node0.isNew());
600:       assertFalse(node0.isAdd());
601:       assertFalse(node0.isName());
602:       assertFalse(node0.isCall());
603:       assertFalse(node0.isBreak());
604:       assertFalse(node0.isWhile());
605:       assertFalse(node0.isComma());
606:       assertFalse(node0.isAssignAdd());
607:       assertFalse(node0.isDo());
608:       assertFalse(node0.isNull());
609:       assertFalse(node0.isDelProp());
610:       assertFalse(node0.isOr());
611:       assertFalse(node0.isTrue());
612:       assertFalse(node1.isThis());
613:       assertFalse(node1.isComma());
614:       assertFalse(node1.isGetProp());
615:       assertFalse(node1.isFalse());
616:       assertFalse(node1.isThrow());
617:       assertFalse(node1.isHook());
618:       assertFalse(node1.isSwitch());
619:       assertEquals((-1), node1.getCharno());
620:       assertFalse(node1.isScript());
621:       assertFalse(node1.isNot());
622:       assertFalse(node1.isString());
623:       assertFalse(node1.isObjectLit());
624:       assertFalse(node1.isCast());
625:       assertFalse(node1.isAnd());
626:       assertFalse(node1.isLabelName());
627:       assertFalse(node1.isNE());
628:       assertFalse(node1.isIn());
629:       assertFalse(node1.isGetterDef());
630:       assertFalse(node1.isFor());
631:       assertFalse(node1.isCase());
632:       assertFalse(node1.hasOneChild());
633:       assertFalse(node1.isTry());
634:       assertFalse(node1.isInc());
635:       assertFalse(node1.isBlock());
636:       assertEquals(39, node1.getType());
637:       assertFalse(node1.isWith());
638:       assertFalse(node1.isRegExp());
639:       assertFalse(node1.hasMoreThanOneChild());
640:       assertFalse(node1.isCatch());
641:       assertFalse(node1.isInstanceOf());
642:       assertEquals((-1), node1.getLineno());
643:       assertFalse(node1.isIf());
644:       assertFalse(node1.isSetterDef());
645:       assertFalse(node1.isParamList());
646:       assertFalse(node1.isNull());
647:       assertEquals(0, node1.getChildCount());
648:       assertFalse(node1.isVar());
649:       assertFalse(node1.isNew());
650:       assertFalse(node1.isDefaultCase());
651:       assertFalse(node1.isFunction());
652:       assertFalse(node1.isDebugger());
653:       assertFalse(node1.isContinue());
654:       assertFalse(node1.isArrayLit());
655:       assertFalse(node1.isStringKey());
656:       assertEquals((-1), node1.getSourcePosition());
657:       assertFalse(node1.isAssign());
658:       assertFalse(node1.isOr());
659:       assertFalse(node1.isReturn());
660:       assertFalse(node1.hasChildren());
661:       assertFalse(node1.isLabel());
662:       assertFalse(node1.isDec());
663:       assertFalse(node1.isTypeOf());
664:       assertFalse(node1.isEmpty());
665:       assertTrue(node1.isNumber());
666:       assertFalse(node1.isAssignAdd());
667:       assertFalse(node1.isDo());
668:       assertFalse(node1.isWhile());
669:       assertFalse(node1.isExprResult());
670:       assertFalse(node1.isTrue());
671:       assertFalse(node1.isAdd());
672:       assertFalse(node1.isGetElem());
673:       assertFalse(node1.isCall());
674:       assertFalse(node1.isBreak());
675:       assertFalse(node1.isDelProp());
676:       assertFalse(node1.isVoid());
677:       assertFalse(node1.isName());
678:       assertSame(node0, node1);
679:       assertSame(node1, node0);
680:       assertNull(jSDocInfo0);
681:       assertEquals(56, Node.CHANGE_TIME);
682:       assertEquals(51, Node.STATIC_SOURCE_FILE);
683:       assertEquals(47, Node.IS_DISPATCHER);
684:       assertEquals(2, Node.POST_FLAG);
685:       assertEquals(12, Node.COLUMN_BITS);
686:       assertEquals(46, Node.IS_NAMESPACE);
687:       assertEquals(49, Node.DIRECT_EVAL);
688:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
689:       assertEquals(37, Node.OPT_ARG_NAME);
690:       assertEquals(53, Node.INPUT_ID);
691:       assertEquals(52, Node.LENGTH);
692:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
693:       assertEquals(36, Node.QUOTED_PROP);
694:       assertEquals(57, Node.REFLECTED_OBJECT);
695:       assertEquals(30, Node.VAR_ARGS_NAME);
696:       assertEquals(29, Node.JSDOC_INFO_PROP);
697:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
698:       assertEquals(55, Node.INFERRED_FUNCTION);
699:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
700:       assertEquals(57, Node.LAST_PROP);
701:       assertEquals(15, Node.NO_SIDE_EFFECTS);
702:       assertEquals(39, Node.EMPTY_BLOCK);
703:       assertEquals(48, Node.DIRECTIVES);
704:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
705:       assertEquals(8, Node.FLAG_NO_THROWS);
706:       assertEquals(4095, Node.COLUMN_MASK);
707:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
708:       assertEquals(40, Node.ORIGINALNAME_PROP);
709:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
710:       assertEquals(54, Node.SLASH_V);
711:       assertEquals(43, Node.IS_CONSTANT_NAME);
712:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
713:       assertEquals(1, Node.DECR_FLAG);
714:       assertEquals(50, Node.FREE_CALL);
715:       assertEquals(32, Node.INCRDECR_PROP);
716:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
717:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
718:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
719:       assertEquals(43, Node.IS_CONSTANT_NAME);
720:       assertEquals(4095, Node.COLUMN_MASK);
721:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
722:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
723:       assertEquals(29, Node.JSDOC_INFO_PROP);
724:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
725:       assertEquals(47, Node.IS_DISPATCHER);
726:       assertEquals(37, Node.OPT_ARG_NAME);
727:       assertEquals(56, Node.CHANGE_TIME);
728:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
729:       assertEquals(48, Node.DIRECTIVES);
730:       assertEquals(52, Node.LENGTH);
731:       assertEquals(39, Node.EMPTY_BLOCK);
732:       assertEquals(53, Node.INPUT_ID);
733:       assertEquals(57, Node.REFLECTED_OBJECT);
734:       assertEquals(55, Node.INFERRED_FUNCTION);
735:       assertEquals(36, Node.QUOTED_PROP);
736:       assertEquals(8, Node.FLAG_NO_THROWS);
737:       assertEquals(30, Node.VAR_ARGS_NAME);
738:       assertEquals(49, Node.DIRECT_EVAL);
739:       assertEquals(15, Node.NO_SIDE_EFFECTS);
740:       assertEquals(57, Node.LAST_PROP);
741:       assertEquals(1, Node.DECR_FLAG);
742:       assertEquals(32, Node.INCRDECR_PROP);
743:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
744:       assertEquals(12, Node.COLUMN_BITS);
745:       assertEquals(2, Node.POST_FLAG);
746:       assertEquals(50, Node.FREE_CALL);
747:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
748:       assertEquals(40, Node.ORIGINALNAME_PROP);
749:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
750:       assertEquals(46, Node.IS_NAMESPACE);
751:       assertEquals(54, Node.SLASH_V);
752:       assertEquals(51, Node.STATIC_SOURCE_FILE);
753:       
754:       boolean boolean0 = node1.isNumber();
755:       assertTrue(boolean0);
756:       assertFalse(node0.hasOneChild());
757:       assertFalse(node0.isCast());
758:       assertFalse(node0.isGetElem());
759:       assertFalse(node0.isLabelName());
760:       assertFalse(node0.isExprResult());
761:       assertFalse(node0.isTypeOf());
762:       assertFalse(node0.isDec());
763:       assertFalse(node0.isWith());
764:       assertFalse(node0.isAssign());
765:       assertFalse(node0.isReturn());
766:       assertFalse(node0.hasChildren());
767:       assertFalse(node0.isLabel());
768:       assertFalse(node0.isContinue());
769:       assertFalse(node0.isObjectLit());
770:       assertFalse(node0.isAnd());
771:       assertFalse(node0.isGetProp());
772:       assertFalse(node0.isScript());
773:       assertEquals((-1), node0.getSourcePosition());
774:       assertFalse(node0.isNot());
775:       assertFalse(node0.isFalse());
776:       assertFalse(node0.isInc());
777:       assertFalse(node0.isBlock());
778:       assertFalse(node0.isThrow());
779:       assertFalse(node0.isThis());
780:       assertEquals(39, node0.getType());
781:       assertFalse(node0.isHook());
782:       assertFalse(node0.isCatch());
783:       assertFalse(node0.isInstanceOf());
784:       assertFalse(node0.hasMoreThanOneChild());
785:       assertFalse(node0.isIn());
786:       assertEquals((-1), node0.getLineno());
787:       assertFalse(node0.isSetterDef());
788:       assertFalse(node0.isNE());
789:       assertFalse(node0.isIf());
790:       assertFalse(node0.isArrayLit());
791:       assertFalse(node0.isEmpty());
792:       assertFalse(node0.isTry());
793:       assertFalse(node0.isVoid());
794:       assertFalse(node0.isRegExp());
795:       assertFalse(node0.isFunction());
796:       assertFalse(node0.isDefaultCase());
797:       assertFalse(node0.isFor());
798:       assertEquals(0, node0.getChildCount());
799:       assertFalse(node0.isCase());
800:       assertTrue(node0.isNumber());
801:       assertFalse(node0.isParamList());
802:       assertFalse(node0.isGetterDef());
803:       assertFalse(node0.isString());
804:       assertFalse(node0.isSwitch());
805:       assertFalse(node0.isStringKey());
806:       assertFalse(node0.isDebugger());
807:       assertEquals((-1), node0.getCharno());
808:       assertFalse(node0.isVar());
809:       assertFalse(node0.isNew());
810:       assertFalse(node0.isAdd());
811:       assertFalse(node0.isName());
812:       assertFalse(node0.isCall());
813:       assertFalse(node0.isBreak());
814:       assertFalse(node0.isWhile());
815:       assertFalse(node0.isComma());
816:       assertFalse(node0.isAssignAdd());
817:       assertFalse(node0.isDo());
818:       assertFalse(node0.isNull());
819:       assertFalse(node0.isDelProp());
820:       assertFalse(node0.isOr());
821:       assertFalse(node0.isTrue());
822:       assertFalse(node1.isThis());
823:       assertFalse(node1.isComma());
824:       assertFalse(node1.isGetProp());
825:       assertFalse(node1.isFalse());
826:       assertFalse(node1.isThrow());
827:       assertFalse(node1.isHook());
828:       assertFalse(node1.isSwitch());
829:       assertEquals((-1), node1.getCharno());
830:       assertFalse(node1.isScript());
831:       assertFalse(node1.isNot());
832:       assertFalse(node1.isString());
833:       assertFalse(node1.isObjectLit());
834:       assertFalse(node1.isCast());
835:       assertFalse(node1.isAnd());
836:       assertFalse(node1.isLabelName());
837:       assertFalse(node1.isNE());
838:       assertFalse(node1.isIn());
839:       assertFalse(node1.isGetterDef());
840:       assertFalse(node1.isFor());
841:       assertFalse(node1.isCase());
842:       assertFalse(node1.hasOneChild());
843:       assertFalse(node1.isTry());
844:       assertFalse(node1.isInc());
845:       assertFalse(node1.isBlock());
846:       assertEquals(39, node1.getType());
847:       assertFalse(node1.isWith());
848:       assertFalse(node1.isRegExp());
849:       assertFalse(node1.hasMoreThanOneChild());
850:       assertFalse(node1.isCatch());
851:       assertFalse(node1.isInstanceOf());
852:       assertEquals((-1), node1.getLineno());
853:       assertFalse(node1.isIf());
854:       assertFalse(node1.isSetterDef());
855:       assertFalse(node1.isParamList());
856:       assertFalse(node1.isNull());
857:       assertEquals(0, node1.getChildCount());
858:       assertFalse(node1.isVar());
859:       assertFalse(node1.isNew());
860:       assertFalse(node1.isDefaultCase());
861:       assertFalse(node1.isFunction());
862:       assertFalse(node1.isDebugger());
863:       assertFalse(node1.isContinue());
864:       assertFalse(node1.isArrayLit());
865:       assertFalse(node1.isStringKey());
866:       assertEquals((-1), node1.getSourcePosition());
867:       assertFalse(node1.isAssign());
868:       assertFalse(node1.isOr());
869:       assertFalse(node1.isReturn());
870:       assertFalse(node1.hasChildren());
871:       assertFalse(node1.isLabel());
872:       assertFalse(node1.isDec());
873:       assertFalse(node1.isTypeOf());
874:       assertFalse(node1.isEmpty());
875:       assertTrue(node1.isNumber());
876:       assertFalse(node1.isAssignAdd());
877:       assertFalse(node1.isDo());
878:       assertFalse(node1.isWhile());
879:       assertFalse(node1.isExprResult());
880:       assertFalse(node1.isTrue());
881:       assertFalse(node1.isAdd());
882:       assertFalse(node1.isGetElem());
883:       assertFalse(node1.isCall());
884:       assertFalse(node1.isBreak());
885:       assertFalse(node1.isDelProp());
886:       assertFalse(node1.isVoid());
887:       assertFalse(node1.isName());
888:       assertSame(node0, node1);
889:       assertSame(node1, node0);
890:       assertEquals(56, Node.CHANGE_TIME);
891:       assertEquals(51, Node.STATIC_SOURCE_FILE);
892:       assertEquals(47, Node.IS_DISPATCHER);
893:       assertEquals(2, Node.POST_FLAG);
894:       assertEquals(12, Node.COLUMN_BITS);
895:       assertEquals(46, Node.IS_NAMESPACE);
896:       assertEquals(49, Node.DIRECT_EVAL);
897:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
898:       assertEquals(37, Node.OPT_ARG_NAME);
899:       assertEquals(53, Node.INPUT_ID);
900:       assertEquals(52, Node.LENGTH);
901:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
902:       assertEquals(36, Node.QUOTED_PROP);
903:       assertEquals(57, Node.REFLECTED_OBJECT);
904:       assertEquals(30, Node.VAR_ARGS_NAME);
905:       assertEquals(29, Node.JSDOC_INFO_PROP);
906:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
907:       assertEquals(55, Node.INFERRED_FUNCTION);
908:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
909:       assertEquals(57, Node.LAST_PROP);
910:       assertEquals(15, Node.NO_SIDE_EFFECTS);
911:       assertEquals(39, Node.EMPTY_BLOCK);
912:       assertEquals(48, Node.DIRECTIVES);
913:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
914:       assertEquals(8, Node.FLAG_NO_THROWS);
915:       assertEquals(4095, Node.COLUMN_MASK);
916:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
917:       assertEquals(40, Node.ORIGINALNAME_PROP);
918:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
919:       assertEquals(54, Node.SLASH_V);
920:       assertEquals(43, Node.IS_CONSTANT_NAME);
921:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
922:       assertEquals(1, Node.DECR_FLAG);
923:       assertEquals(50, Node.FREE_CALL);
924:       assertEquals(32, Node.INCRDECR_PROP);
925:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
926:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
927:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
928:       assertEquals(43, Node.IS_CONSTANT_NAME);
929:       assertEquals(4095, Node.COLUMN_MASK);
930:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
931:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
932:       assertEquals(29, Node.JSDOC_INFO_PROP);
933:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
934:       assertEquals(47, Node.IS_DISPATCHER);
935:       assertEquals(37, Node.OPT_ARG_NAME);
936:       assertEquals(56, Node.CHANGE_TIME);
937:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
938:       assertEquals(48, Node.DIRECTIVES);
939:       assertEquals(52, Node.LENGTH);
940:       assertEquals(39, Node.EMPTY_BLOCK);
941:       assertEquals(53, Node.INPUT_ID);
942:       assertEquals(57, Node.REFLECTED_OBJECT);
943:       assertEquals(55, Node.INFERRED_FUNCTION);
944:       assertEquals(36, Node.QUOTED_PROP);
945:       assertEquals(8, Node.FLAG_NO_THROWS);
946:       assertEquals(30, Node.VAR_ARGS_NAME);
947:       assertEquals(49, Node.DIRECT_EVAL);
948:       assertEquals(15, Node.NO_SIDE_EFFECTS);
949:       assertEquals(57, Node.LAST_PROP);
950:       assertEquals(1, Node.DECR_FLAG);
951:       assertEquals(32, Node.INCRDECR_PROP);
952:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
953:       assertEquals(12, Node.COLUMN_BITS);
954:       assertEquals(2, Node.POST_FLAG);
955:       assertEquals(50, Node.FREE_CALL);
956:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
957:       assertEquals(40, Node.ORIGINALNAME_PROP);
958:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
959:       assertEquals(46, Node.IS_NAMESPACE);
960:       assertEquals(54, Node.SLASH_V);
961:       assertEquals(51, Node.STATIC_SOURCE_FILE);
962:       
963:       Iterable<Node> iterable0 = node1.children();
964:       assertFalse(node0.hasOneChild());
965:       assertFalse(node0.isCast());
966:       assertFalse(node0.isGetElem());
967:       assertFalse(node0.isLabelName());
968:       assertFalse(node0.isExprResult());
969:       assertFalse(node0.isTypeOf());
970:       assertFalse(node0.isDec());
971:       assertFalse(node0.isWith());
972:       assertFalse(node0.isAssign());
973:       assertFalse(node0.isReturn());
974:       assertFalse(node0.hasChildren());
975:       assertFalse(node0.isLabel());
976:       assertFalse(node0.isContinue());
977:       assertFalse(node0.isObjectLit());
978:       assertFalse(node0.isAnd());
979:       assertFalse(node0.isGetProp());
980:       assertFalse(node0.isScript());
981:       assertEquals((-1), node0.getSourcePosition());
982:       assertFalse(node0.isNot());
983:       assertFalse(node0.isFalse());
984:       assertFalse(node0.isInc());
985:       assertFalse(node0.isBlock());
986:       assertFalse(node0.isThrow());
987:       assertFalse(node0.isThis());
988:       assertEquals(39, node0.getType());
989:       assertFalse(node0.isHook());
990:       assertFalse(node0.isCatch());
991:       assertFalse(node0.isInstanceOf());
992:       assertFalse(node0.hasMoreThanOneChild());
993:       assertFalse(node0.isIn());
994:       assertEquals((-1), node0.getLineno());
995:       assertFalse(node0.isSetterDef());
996:       assertFalse(node0.isNE());
997:       assertFalse(node0.isIf());
998:       assertFalse(node0.isArrayLit());
999:       assertFalse(node0.isEmpty());
1000:       assertFalse(node0.isTry());
1001:       assertFalse(node0.isVoid());
1002:       assertFalse(node0.isRegExp());
1003:       assertFalse(node0.isFunction());
1004:       assertFalse(node0.isDefaultCase());
1005:       assertFalse(node0.isFor());
1006:       assertEquals(0, node0.getChildCount());
1007:       assertFalse(node0.isCase());
1008:       assertTrue(node0.isNumber());
1009:       assertFalse(node0.isParamList());
1010:       assertFalse(node0.isGetterDef());
1011:       assertFalse(node0.isString());
1012:       assertFalse(node0.isSwitch());
1013:       assertFalse(node0.isStringKey());
1014:       assertFalse(node0.isDebugger());
1015:       assertEquals((-1), node0.getCharno());
1016:       assertFalse(node0.isVar());
1017:       assertFalse(node0.isNew());
1018:       assertFalse(node0.isAdd());
1019:       assertFalse(node0.isName());
1020:       assertFalse(node0.isCall());
1021:       assertFalse(node0.isBreak());
1022:       assertFalse(node0.isWhile());
1023:       assertFalse(node0.isComma());
1024:       assertFalse(node0.isAssignAdd());
1025:       assertFalse(node0.isDo());
1026:       assertFalse(node0.isNull());
1027:       assertFalse(node0.isDelProp());
1028:       assertFalse(node0.isOr());
1029:       assertFalse(node0.isTrue());
1030:       assertFalse(node1.isThis());
1031:       assertFalse(node1.isComma());
1032:       assertFalse(node1.isGetProp());
1033:       assertFalse(node1.isFalse());
1034:       assertFalse(node1.isThrow());
1035:       assertFalse(node1.isHook());
1036:       assertFalse(node1.isSwitch());
1037:       assertEquals((-1), node1.getCharno());
1038:       assertFalse(node1.isScript());
1039:       assertFalse(node1.isNot());
1040:       assertFalse(node1.isString());
1041:       assertFalse(node1.isObjectLit());
1042:       assertFalse(node1.isCast());
1043:       assertFalse(node1.isAnd());
1044:       assertFalse(node1.isLabelName());
1045:       assertFalse(node1.isNE());
1046:       assertFalse(node1.isIn());
1047:       assertFalse(node1.isGetterDef());
1048:       assertFalse(node1.isFor());
1049:       assertFalse(node1.isCase());
1050:       assertFalse(node1.hasOneChild());
1051:       assertFalse(node1.isTry());
1052:       assertFalse(node1.isInc());
1053:       assertFalse(node1.isBlock());
1054:       assertEquals(39, node1.getType());
1055:       assertFalse(node1.isWith());
1056:       assertFalse(node1.isRegExp());
1057:       assertFalse(node1.hasMoreThanOneChild());
1058:       assertFalse(node1.isCatch());
1059:       assertFalse(node1.isInstanceOf());
1060:       assertEquals((-1), node1.getLineno());
1061:       assertFalse(node1.isIf());
1062:       assertFalse(node1.isSetterDef());
1063:       assertFalse(node1.isParamList());
1064:       assertFalse(node1.isNull());
1065:       assertEquals(0, node1.getChildCount());
1066:       assertFalse(node1.isVar());
1067:       assertFalse(node1.isNew());
1068:       assertFalse(node1.isDefaultCase());
1069:       assertFalse(node1.isFunction());
1070:       assertFalse(node1.isDebugger());
1071:       assertFalse(node1.isContinue());
1072:       assertFalse(node1.isArrayLit());
1073:       assertFalse(node1.isStringKey());
1074:       assertEquals((-1), node1.getSourcePosition());
1075:       assertFalse(node1.isAssign());
1076:       assertFalse(node1.isOr());
1077:       assertFalse(node1.isReturn());
1078:       assertFalse(node1.hasChildren());
1079:       assertFalse(node1.isLabel());
1080:       assertFalse(node1.isDec());
1081:       assertFalse(node1.isTypeOf());
1082:       assertFalse(node1.isEmpty());
1083:       assertTrue(node1.isNumber());
1084:       assertFalse(node1.isAssignAdd());
1085:       assertFalse(node1.isDo());
1086:       assertFalse(node1.isWhile());
1087:       assertFalse(node1.isExprResult());
1088:       assertFalse(node1.isTrue());
1089:       assertFalse(node1.isAdd());
1090:       assertFalse(node1.isGetElem());
1091:       assertFalse(node1.isCall());
1092:       assertFalse(node1.isBreak());
1093:       assertFalse(node1.isDelProp());
1094:       assertFalse(node1.isVoid());
1095:       assertFalse(node1.isName());
1096:       assertSame(node0, node1);
1097:       assertSame(node1, node0);
1098:       assertNotNull(iterable0);
1099:       assertFalse(iterable0.contains(node0));
1100:       assertEquals(56, Node.CHANGE_TIME);
1101:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1102:       assertEquals(47, Node.IS_DISPATCHER);
1103:       assertEquals(2, Node.POST_FLAG);
1104:       assertEquals(12, Node.COLUMN_BITS);
1105:       assertEquals(46, Node.IS_NAMESPACE);
1106:       assertEquals(49, Node.DIRECT_EVAL);
1107:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1108:       assertEquals(37, Node.OPT_ARG_NAME);
1109:       assertEquals(53, Node.INPUT_ID);
1110:       assertEquals(52, Node.LENGTH);
1111:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1112:       assertEquals(36, Node.QUOTED_PROP);
1113:       assertEquals(57, Node.REFLECTED_OBJECT);
1114:       assertEquals(30, Node.VAR_ARGS_NAME);
1115:       assertEquals(29, Node.JSDOC_INFO_PROP);
1116:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1117:       assertEquals(55, Node.INFERRED_FUNCTION);
1118:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1119:       assertEquals(57, Node.LAST_PROP);
1120:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1121:       assertEquals(39, Node.EMPTY_BLOCK);
1122:       assertEquals(48, Node.DIRECTIVES);
1123:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1124:       assertEquals(8, Node.FLAG_NO_THROWS);
1125:       assertEquals(4095, Node.COLUMN_MASK);
1126:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1127:       assertEquals(40, Node.ORIGINALNAME_PROP);
1128:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1129:       assertEquals(54, Node.SLASH_V);
1130:       assertEquals(43, Node.IS_CONSTANT_NAME);
1131:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1132:       assertEquals(1, Node.DECR_FLAG);
1133:       assertEquals(50, Node.FREE_CALL);
1134:       assertEquals(32, Node.INCRDECR_PROP);
1135:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1136:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1137:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1138:       assertEquals(43, Node.IS_CONSTANT_NAME);
1139:       assertEquals(4095, Node.COLUMN_MASK);
1140:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1141:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1142:       assertEquals(29, Node.JSDOC_INFO_PROP);
1143:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1144:       assertEquals(47, Node.IS_DISPATCHER);
1145:       assertEquals(37, Node.OPT_ARG_NAME);
1146:       assertEquals(56, Node.CHANGE_TIME);
1147:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1148:       assertEquals(48, Node.DIRECTIVES);
1149:       assertEquals(52, Node.LENGTH);
1150:       assertEquals(39, Node.EMPTY_BLOCK);
1151:       assertEquals(53, Node.INPUT_ID);
1152:       assertEquals(57, Node.REFLECTED_OBJECT);
1153:       assertEquals(55, Node.INFERRED_FUNCTION);
1154:       assertEquals(36, Node.QUOTED_PROP);
1155:       assertEquals(8, Node.FLAG_NO_THROWS);
1156:       assertEquals(30, Node.VAR_ARGS_NAME);
1157:       assertEquals(49, Node.DIRECT_EVAL);
1158:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1159:       assertEquals(57, Node.LAST_PROP);
1160:       assertEquals(1, Node.DECR_FLAG);
1161:       assertEquals(32, Node.INCRDECR_PROP);
1162:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1163:       assertEquals(12, Node.COLUMN_BITS);
1164:       assertEquals(2, Node.POST_FLAG);
1165:       assertEquals(50, Node.FREE_CALL);
1166:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1167:       assertEquals(40, Node.ORIGINALNAME_PROP);
1168:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1169:       assertEquals(46, Node.IS_NAMESPACE);
1170:       assertEquals(54, Node.SLASH_V);
1171:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1172:   }
1173: }
RegularFileObject[/tmp/EvoSuite_207_1628256044456/com/google/javascript/rhino/Node_207_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 13:20:44 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_207_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_207_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.VoidType",
119:       "com.google.common.base.Joiner",
120:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
121:       "com.google.common.collect.AbstractListMultimap",
122:       "com.google.javascript.rhino.jstype.JSType",
123:       "com.google.common.collect.ImmutableAsList",
124:       "com.google.javascript.rhino.Node$StringNode",
125:       "com.google.javascript.rhino.jstype.ProxyObjectType",
126:       "com.google.common.collect.Sets$SetView",
127:       "com.google.common.collect.RegularImmutableAsList",
128:       "com.google.javascript.rhino.jstype.TemplateType",
129:       "com.google.javascript.rhino.jstype.NamedType",
130:       "com.google.common.collect.Iterators$13",
131:       "com.google.javascript.rhino.InputId",
132:       "com.google.common.collect.ImmutableList$SerializedForm",
133:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
134:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
135:       "com.google.common.collect.AbstractMapBasedMultimap",
136:       "com.google.common.collect.Lists$Partition",
137:       "com.google.common.collect.Lists",
138:       "com.google.javascript.rhino.Node$SideEffectFlags",
139:       "com.google.common.collect.UnmodifiableListIterator",
140:       "com.google.javascript.rhino.jstype.NullType",
141:       "com.google.common.collect.Lists$TransformingSequentialList",
142:       "com.google.javascript.rhino.ErrorReporter",
143:       "com.google.javascript.rhino.jstype.UnknownType",
144:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
145:       "com.google.javascript.rhino.jstype.ValueType",
146:       "com.google.javascript.rhino.jstype.PropertyMap",
147:       "com.google.javascript.rhino.Token",
148:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
149:       "com.google.common.collect.ObjectArrays",
150:       "com.google.javascript.rhino.jstype.StaticSourceFile",
151:       "com.google.javascript.rhino.jstype.BooleanType",
152:       "com.google.javascript.rhino.jstype.NoObjectType",
153:       "com.google.common.collect.AbstractIterator",
154:       "com.google.javascript.rhino.jstype.FunctionBuilder",
155:       "com.google.javascript.rhino.jstype.JSType$TypePair",
156:       "com.google.common.base.Joiner$MapJoiner",
157:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
158:       "com.google.common.collect.ImmutableList$1",
159:       "com.google.common.collect.MapDifference",
160:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
161:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
162:       "com.google.common.collect.Sets$ImprovedAbstractSet",
163:       "com.google.javascript.rhino.jstype.FunctionType",
164:       "com.google.common.base.Preconditions",
165:       "com.google.common.collect.UnmodifiableIterator",
166:       "com.google.javascript.rhino.JSDocInfo",
167:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
168:       "com.google.javascript.rhino.jstype.Property",
169:       "com.google.common.collect.ImmutableMapValues",
170:       "com.google.common.collect.ImmutableEntry",
171:       "com.google.common.base.Joiner$1",
172:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
173:       "com.google.common.base.Joiner$2",
174:       "com.google.common.collect.ImmutableCollection",
175:       "com.google.common.collect.ImmutableEnumMap",
176:       "com.google.javascript.rhino.jstype.TernaryValue",
177:       "com.google.javascript.rhino.Node$AncestorIterable",
178:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
179:       "com.google.common.collect.Lists$RandomAccessListWrapper",
180:       "com.google.common.collect.ImmutableEnumSet",
181:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
182:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
183:       "com.google.javascript.rhino.jstype.EnumElementType",
184:       "com.google.javascript.rhino.jstype.UnionType",
185:       "com.google.common.base.Objects",
186:       "com.google.javascript.rhino.Node$NumberNode",
187:       "com.google.common.collect.SingletonImmutableList",
188:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
189:       "com.google.common.collect.ImmutableCollection$Builder",
190:       "com.google.javascript.rhino.jstype.StaticSlot",
191:       "com.google.common.collect.Iterators$6",
192:       "com.google.common.collect.BiMap",
193:       "com.google.common.collect.Iterators$7",
194:       "com.google.common.collect.AbstractSetMultimap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Lists$AbstractListWrapper",
198:       "com.google.common.collect.ImmutableMap",
199:       "com.google.common.collect.AbstractIndexedListIterator",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.Maps$1",
202:       "com.google.javascript.rhino.jstype.EnumType",
203:       "com.google.common.collect.Iterators$1",
204:       "com.google.common.collect.Iterators$2",
205:       "com.google.javascript.rhino.jstype.NamespaceType",
206:       "com.google.common.collect.Iterators$3",
207:       "com.google.common.collect.Sets",
208:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
209:       "com.google.javascript.rhino.Node$ObjectPropListItem",
210:       "com.google.common.collect.Lists$StringAsImmutableList",
211:       "com.google.common.collect.Lists$2",
212:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
213:       "com.google.common.collect.ImmutableList$Builder",
214:       "com.google.common.collect.Lists$1",
215:       "com.google.javascript.rhino.jstype.StaticReference",
216:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
217:       "com.google.common.collect.Multiset",
218:       "com.google.common.collect.AbstractMultimap",
219:       "com.google.common.collect.Multimap",
220:       "com.google.common.collect.Iterators",
221:       "com.google.common.collect.Maps$ImprovedAbstractMap",
222:       "com.google.common.collect.ImmutableBiMap",
223:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
224:       "com.google.common.collect.ImmutableList",
225:       "com.google.common.collect.SingletonImmutableBiMap",
226:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
227:       "com.google.javascript.rhino.jstype.StringType",
228:       "com.google.javascript.rhino.Node$AbstractPropListItem",
229:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
230:       "com.google.javascript.rhino.jstype.TemplatizedType",
231:       "com.google.javascript.rhino.jstype.Visitor",
232:       "com.google.javascript.rhino.jstype.NoResolvedType",
233:       "com.google.javascript.rhino.jstype.JSTypeNative",
234:       "com.google.javascript.rhino.jstype.AllType",
235:       "com.google.common.collect.Maps",
236:       "com.google.common.collect.SetMultimap",
237:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
238:       "com.google.common.collect.Maps$EntryTransformer",
239:       "com.google.javascript.rhino.JSTypeExpression",
240:       "com.google.common.collect.Iterators$MergingIterator"
241:     );
242:   } 
243: 
244:   private static void resetClasses() {
245:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_207_tmp__ESTest_scaffolding.class.getClassLoader()); 
246: 
247:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
248:       "com.google.javascript.rhino.Node",
249:       "com.google.javascript.rhino.Node$NumberNode",
250:       "com.google.javascript.rhino.Node$StringNode",
251:       "com.google.javascript.rhino.Node$AbstractPropListItem",
252:       "com.google.javascript.rhino.Node$ObjectPropListItem",
253:       "com.google.javascript.rhino.Node$IntPropListItem",
254:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
255:       "com.google.javascript.rhino.Node$AncestorIterable",
256:       "com.google.javascript.rhino.Node$NodeMismatch",
257:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
258:       "com.google.javascript.rhino.Node$SideEffectFlags",
259:       "com.google.javascript.rhino.SimpleErrorReporter",
260:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
261:       "com.google.common.base.Joiner",
262:       "com.google.common.base.Preconditions",
263:       "com.google.common.base.Joiner$1",
264:       "com.google.common.collect.Collections2",
265:       "com.google.common.base.Joiner$MapJoiner",
266:       "com.google.common.collect.Maps",
267:       "com.google.common.collect.AbstractMultimap",
268:       "com.google.common.collect.AbstractMapBasedMultimap",
269:       "com.google.common.collect.AbstractSetMultimap",
270:       "com.google.common.collect.LinkedHashMultimap",
271:       "com.google.common.collect.AbstractMapEntry",
272:       "com.google.common.collect.ImmutableEntry",
273:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
274:       "com.google.common.collect.AbstractListMultimap",
275:       "com.google.common.collect.ArrayListMultimap",
276:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
277:       "com.google.common.collect.ImmutableCollection",
278:       "com.google.common.collect.RegularImmutableList",
279:       "com.google.common.collect.ObjectArrays",
280:       "com.google.common.collect.ImmutableList",
281:       "com.google.javascript.rhino.jstype.ModificationVisitor",
282:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
283:       "com.google.common.collect.ImmutableCollection$Builder",
284:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
285:       "com.google.common.collect.ImmutableList$Builder",
286:       "com.google.common.collect.UnmodifiableIterator",
287:       "com.google.common.collect.UnmodifiableListIterator",
288:       "com.google.common.collect.Iterators$1",
289:       "com.google.common.collect.Iterators$2",
290:       "com.google.common.collect.Iterators",
291:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
292:       "com.google.javascript.rhino.jstype.JSType$1",
293:       "com.google.javascript.rhino.jstype.JSType",
294:       "com.google.javascript.rhino.jstype.ObjectType",
295:       "com.google.javascript.rhino.jstype.ProxyObjectType",
296:       "com.google.javascript.rhino.jstype.TemplateType",
297:       "com.google.javascript.rhino.jstype.ValueType",
298:       "com.google.javascript.rhino.jstype.BooleanType",
299:       "com.google.javascript.rhino.jstype.NullType",
300:       "com.google.javascript.rhino.jstype.NumberType",
301:       "com.google.javascript.rhino.jstype.StringType",
302:       "com.google.javascript.rhino.jstype.UnknownType",
303:       "com.google.javascript.rhino.jstype.VoidType",
304:       "com.google.javascript.rhino.jstype.AllType",
305:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
306:       "com.google.common.collect.ImmutableMap",
307:       "com.google.common.collect.ImmutableBiMap",
308:       "com.google.common.collect.EmptyImmutableBiMap",
309:       "com.google.javascript.rhino.jstype.PropertyMap$1",
310:       "com.google.javascript.rhino.jstype.PropertyMap",
311:       "com.google.javascript.rhino.jstype.FunctionType",
312:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
313:       "com.google.javascript.rhino.Token",
314:       "com.google.javascript.rhino.jstype.ArrowType",
315:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
316:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
317:       "com.google.javascript.rhino.jstype.InstanceObjectType",
318:       "com.google.javascript.rhino.jstype.Property",
319:       "com.google.common.collect.Lists",
320:       "com.google.javascript.rhino.jstype.NoObjectType",
321:       "com.google.javascript.rhino.jstype.NoType",
322:       "com.google.javascript.rhino.jstype.NoResolvedType",
323:       "com.google.common.collect.SingletonImmutableList",
324:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
325:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
326:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
327:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
328:       "com.google.javascript.rhino.jstype.UnionType",
329:       "com.google.javascript.rhino.jstype.FunctionBuilder",
330:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
331:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
332:       "com.google.common.collect.AbstractIndexedListIterator",
333:       "com.google.common.collect.ImmutableList$1",
334:       "com.google.javascript.rhino.InputId",
335:       "com.google.javascript.rhino.jstype.EnumType",
336:       "com.google.javascript.rhino.jstype.EnumElementType",
337:       "com.google.common.collect.Iterators$11",
338:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
339:       "com.google.javascript.rhino.Node$AncestorIterable$1",
340:       "com.google.javascript.rhino.JSDocInfo",
341:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
342:       "com.google.common.base.Objects",
343:       "com.google.common.collect.Iterables",
344:       "com.google.common.collect.Sets",
345:       "com.google.javascript.rhino.jstype.TemplatizedType",
346:       "com.google.javascript.rhino.jstype.NamedType",
347:       "com.google.javascript.rhino.jstype.TernaryValue",
348:       "com.google.javascript.rhino.jstype.JSType$2",
349:       "com.google.javascript.rhino.jstype.JSType$TypePair",
350:       "com.google.common.collect.Platform",
351:       "com.google.common.collect.ImmutableSet",
352:       "com.google.common.collect.EmptyImmutableSet",
353:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
354:       "com.google.common.collect.Iterators$12",
355:       "com.google.common.collect.AbstractMultimap$Values",
356:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
357:       "com.google.common.collect.AbstractMapBasedMultimap$1",
358:       "com.google.common.collect.Multimaps$Entries",
359:       "com.google.common.collect.AbstractMultimap$Entries",
360:       "com.google.common.collect.AbstractMapBasedMultimap$2",
361:       "com.google.javascript.rhino.JSTypeExpression"
362:     );
363:   }
364: }

[MASTER] 13:20:44.673 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newNumber(1491.983446165565, (-3516), (-2935));
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertNotNull(node0);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);

String string0 = node0.getQualifiedName();
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertNull(string0);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);

String string1 = node0.getQualifiedName();
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertNull(string1);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);

Node node1 = node0.setJSDocInfo((JSDocInfo) null);
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isScript());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isCast());
assertFalse(node1.isAnd());
assertFalse(node1.isLabelName());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isCase());
assertFalse(node1.hasOneChild());
assertFalse(node1.isTry());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertEquals(39, node1.getType());
assertFalse(node1.isWith());
assertFalse(node1.isRegExp());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIf());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isVar());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isContinue());
assertFalse(node1.isArrayLit());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.hasChildren());
assertFalse(node1.isLabel());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isEmpty());
assertTrue(node1.isNumber());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertFalse(node1.isAdd());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertSame(node0, node1);
assertSame(node1, node0);
assertNotNull(node1);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);

JSDocInfo jSDocInfo0 = node1.getJSDocInfo();
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isScript());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isCast());
assertFalse(node1.isAnd());
assertFalse(node1.isLabelName());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isCase());
assertFalse(node1.hasOneChild());
assertFalse(node1.isTry());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertEquals(39, node1.getType());
assertFalse(node1.isWith());
assertFalse(node1.isRegExp());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIf());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isVar());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isContinue());
assertFalse(node1.isArrayLit());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.hasChildren());
assertFalse(node1.isLabel());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isEmpty());
assertTrue(node1.isNumber());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertFalse(node1.isAdd());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertSame(node0, node1);
assertSame(node1, node0);
assertNull(jSDocInfo0);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);

boolean boolean0 = node1.isNumber();
assertTrue(boolean0);
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isScript());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isCast());
assertFalse(node1.isAnd());
assertFalse(node1.isLabelName());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isCase());
assertFalse(node1.hasOneChild());
assertFalse(node1.isTry());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertEquals(39, node1.getType());
assertFalse(node1.isWith());
assertFalse(node1.isRegExp());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIf());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isVar());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isContinue());
assertFalse(node1.isArrayLit());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.hasChildren());
assertFalse(node1.isLabel());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isEmpty());
assertTrue(node1.isNumber());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertFalse(node1.isAdd());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertSame(node0, node1);
assertSame(node1, node0);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);

Iterable<Node> iterable0 = node1.children();
assertFalse(node0.hasOneChild());
assertFalse(node0.isCast());
assertFalse(node0.isGetElem());
assertFalse(node0.isLabelName());
assertFalse(node0.isExprResult());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.isWith());
assertFalse(node0.isAssign());
assertFalse(node0.isReturn());
assertFalse(node0.hasChildren());
assertFalse(node0.isLabel());
assertFalse(node0.isContinue());
assertFalse(node0.isObjectLit());
assertFalse(node0.isAnd());
assertFalse(node0.isGetProp());
assertFalse(node0.isScript());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isNot());
assertFalse(node0.isFalse());
assertFalse(node0.isInc());
assertFalse(node0.isBlock());
assertFalse(node0.isThrow());
assertFalse(node0.isThis());
assertEquals(39, node0.getType());
assertFalse(node0.isHook());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isIn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isSetterDef());
assertFalse(node0.isNE());
assertFalse(node0.isIf());
assertFalse(node0.isArrayLit());
assertFalse(node0.isEmpty());
assertFalse(node0.isTry());
assertFalse(node0.isVoid());
assertFalse(node0.isRegExp());
assertFalse(node0.isFunction());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isFor());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCase());
assertTrue(node0.isNumber());
assertFalse(node0.isParamList());
assertFalse(node0.isGetterDef());
assertFalse(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isStringKey());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isVar());
assertFalse(node0.isNew());
assertFalse(node0.isAdd());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isBreak());
assertFalse(node0.isWhile());
assertFalse(node0.isComma());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isDo());
assertFalse(node0.isNull());
assertFalse(node0.isDelProp());
assertFalse(node0.isOr());
assertFalse(node0.isTrue());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isGetProp());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isHook());
assertFalse(node1.isSwitch());
assertEquals((-1), node1.getCharno());
assertFalse(node1.isScript());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isCast());
assertFalse(node1.isAnd());
assertFalse(node1.isLabelName());
assertFalse(node1.isNE());
assertFalse(node1.isIn());
assertFalse(node1.isGetterDef());
assertFalse(node1.isFor());
assertFalse(node1.isCase());
assertFalse(node1.hasOneChild());
assertFalse(node1.isTry());
assertFalse(node1.isInc());
assertFalse(node1.isBlock());
assertEquals(39, node1.getType());
assertFalse(node1.isWith());
assertFalse(node1.isRegExp());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isCatch());
assertFalse(node1.isInstanceOf());
assertEquals((-1), node1.getLineno());
assertFalse(node1.isIf());
assertFalse(node1.isSetterDef());
assertFalse(node1.isParamList());
assertFalse(node1.isNull());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isVar());
assertFalse(node1.isNew());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isFunction());
assertFalse(node1.isDebugger());
assertFalse(node1.isContinue());
assertFalse(node1.isArrayLit());
assertFalse(node1.isStringKey());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.hasChildren());
assertFalse(node1.isLabel());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isEmpty());
assertTrue(node1.isNumber());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isDo());
assertFalse(node1.isWhile());
assertFalse(node1.isExprResult());
assertFalse(node1.isTrue());
assertFalse(node1.isAdd());
assertFalse(node1.isGetElem());
assertFalse(node1.isCall());
assertFalse(node1.isBreak());
assertFalse(node1.isDelProp());
assertFalse(node1.isVoid());
assertFalse(node1.isName());
assertSame(node0, node1);
assertSame(node1, node0);
assertNotNull(iterable0);
assertFalse(iterable0.contains(node0));
assertEquals(56, Node.CHANGE_TIME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(52, Node.LENGTH);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.LAST_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(52, Node.LENGTH);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);


[MASTER] 13:21:04.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:04.633 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:05.331 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:05.575 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:05.808 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:06.028 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 13:21:06.282 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-100/tests/21
* Done!

* Computation finished
