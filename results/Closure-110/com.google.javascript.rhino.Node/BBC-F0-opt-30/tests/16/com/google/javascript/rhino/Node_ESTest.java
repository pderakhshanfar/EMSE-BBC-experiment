/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 14:47:13 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.StringType;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getAncestors();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(132);
      node0.cloneNode();
      Node node1 = Node.newNumber((double) 57);
      node0.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isLabel();
      Node node1 = Node.newString(54, "NUMBER_STRING", 5760, 51);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(120);
      node0.getNext();
      Node node1 = Node.newString("input_id", 29, 13);
      Node node2 = node0.srcref(node1);
      node2.toString(true, true, true);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = Node.newString((-3047), "w");
      node0.copyInformationFromForTree(node1);
      node0.setSourceFileForTesting("w");
      try { 
        node0.setDouble(120);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CATCH [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = new Node(47, 0, 4095);
      node0.srcref(node1);
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(116);
      node0.type = 116;
      Node node1 = new Node(56, node0, node0, node0, node0, 32, 1);
      node0.isDefaultCase();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(122);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(32);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(101);
      int int0 = Node.INPUT_ID;
      node0.isTry();
      Node node1 = new Node(125, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(2872);
      Node node1 = new Node(31, node0, node0);
      int int0 = Node.DIRECT_EVAL;
      node0.isInstanceOf();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isLocalResultCall();
      node0.isEquivalentTo(node1, true, false, false);
      node0.isExprResult();
      node2.getBooleanProp(55);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.ANY", 2384, 2384);
      Node node1 = new Node(42);
      node1.isFalse();
      node1.isFalse();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(1084, node0, node0, node0, node0);
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.getChangeTime();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(110, 110, 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isAnd();
      node0.isVar();
      node0.isThrow();
      Node node2 = node1.clonePropsFrom(node0);
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(27);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getChildBefore(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.newString("/", 159, 3798);
      Node node0 = new Node(1222);
      Node node1 = new Node(119, node0);
      node1.isFalse();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(126, node0, node0, node0);
      Node node2 = new Node(16, node1, 57, 47);
      node1.addChildrenToBack(node2);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(37, nodeArray0);
      Node node1 = new Node(8, nodeArray0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(47);
      Node node1 = new Node(47, node0, node0);
      node1.getAncestor(57);
      node1.setLineno(56);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node(52, node0, node0, node0, node0);
      Node node2 = new Node(16, node1, 530, (-1));
      Node node3 = node1.detachFromParent();
      node3.getChildBefore(node0);
      node3.isFor();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(4, node0, node0, node0);
      node1.isQuotedString();
      Node node2 = new Node(43, 4095, 52);
      node0.addChildrenToBack(node2);
      node1.mayMutateGlobalStateOrThrow();
      node2.isTry();
      node2.useSourceInfoFromForTree(node0);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.addChildToFront(node0);
      node0.isFor();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node((-471), (-471), 153);
      Node node1 = new Node(40);
      Node node2 = new Node(50, node1, node0);
      node0.setLineno(108);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -471
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(49);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isContinue();
      node0.addSuppression("com.google.common.collect.ImmutableMapValues");
      node0.isExprResult();
      Node node1 = new Node(51, (-499), 55);
      node1.isUnscopedQualifiedName();
      Node node2 = node0.copyInformationFrom(node1);
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = Node.newNumber(1.2, 1024, 36);
      node0.copyInformationFrom(node1);
      node0.getQualifiedName();
      node0.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.toStringTree();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(132);
      Node.newNumber((double) 52);
      node0.getProp(132);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(132);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node node1 = Node.newString("5lk~,wo", 50, 29);
      node1.getProp(3078);
      node0.useSourceInfoFrom(node1);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = new Node(4095, node1, node1);
      node1.isVarArgs();
      node1.isTrue();
      node2.isThrow();
      Node node3 = node0.cloneTree();
      node3.isOptionalArg();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(54, node0);
      node0.isLocalResultCall();
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '\"';
      charArray0[2] = '^';
      charArray0[3] = '(';
      charArray0[4] = 'q';
      charArray0[5] = '*';
      charArray0[6] = '/';
      charArray0[7] = 'O';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(4, node0, node0);
      node0.setLineno(33);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.getBooleanProp(120);
      node0.toStringTree();
      node0.isArrayLit();
      node0.getSourceFileName();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(32, node0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.children();
      int int0 = Node.DIRECT_EVAL;
      Node node2 = new Node(32, node0);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(524321);
      Node node1 = new Node(39, node0, node0);
      int int0 = Node.DIRECT_EVAL;
      node0.isInstanceOf();
      node1.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(13, 153, 13);
      Node node1 = Node.newNumber((double) 4095);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node1.isFromExterns();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node((-1349), 2138, 2138);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString(2138, ": ", 46, (-1444));
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(49, node0, node0, node0);
      node0.isQuotedString();
      node0.addChildToFront(node2);
      node0.isFor();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isFalse();
      int int0 = Node.INPUT_ID;
      node0.isOr();
      Node node1 = node0.cloneTree();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(44);
      Node node1 = Node.newNumber(0.0, 30, 38);
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node(843, node0, node0, 56, 8233);
      node0.clonePropsFrom(node1);
      Node node2 = null;
      try {
        node2 = new Node(52, node0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(31, (-1004), 21);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(31, node0, node0, 1711, 100);
      node0.isEquivalentToShallow(node1);
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(">;");
      Node node1 = Node.newString(93, ">;");
      Node node2 = new Node(93, node0, node0, node0, node1, 39, 357);
      node2.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0, 126, 126);
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getBooleanProp(126);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = node0.getLastSibling();
      node1.isTrue();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "new child has existing parent");
      node1.isUnscopedQualifiedName();
      node1.setOptionalArg(false);
      node1.mayMutateArguments();
      Node.newNumber((-291.0));
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isDo();
      Node node1 = new Node(37, node0, 1, 51);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(27);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getQualifiedName();
      node2.copyInformationFromForTree(node0);
      Node node3 = node1.useSourceInfoFrom(node2);
      node2.getLastSibling();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(114);
      node0.toStringTree();
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = new Node(54, node1, node1);
      node2.children();
      node1.addChildBefore(node2, node0);
      node0.isLabel();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(93, 69, (-390));
      node0.getChangeTime();
      node0.isThis();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.cloneNode();
      node0.isScript();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(49, 49, 49);
      Node node1 = new Node(49, node0, node0);
      node1.setLineno(56);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(1, "iA~V#E>b");
      Node node1 = Node.newString("iA~V#E>b", 32, 1);
      Node node2 = Node.newString("iA~V#E>b", 4095, 1719);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iA~V#E>b");
      node1.clonePropsFrom(node2);
      node0.removeProp(1193);
      Node node3 = new Node(31, (-1660), 64);
      node1.getQualifiedName();
      node2.getQualifiedName();
      node1.isCall();
      node1.getType();
      node0.isUnscopedQualifiedName();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(49, 49, 49);
      Node node1 = new Node(49, node0, node0);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newString("\n\nSubtree1: ", 51, 149);
      node2.isBlock();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(43, node0, node0, 73, 2);
      Node node2 = new Node(4095, node1, node1);
      node0.getSideEffectFlags();
      node2.setWasEmptyNode(true);
      node1.isVarArgs();
      Node node3 = node1.removeChildren();
      node3.getJSDocInfo();
      node1.isTrue();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = new Node(37);
      node0.isVoid();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.clearAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.toStringTree();
      node0.isLocalResultCall();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(103);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = new Node(4095, node1, node1);
      node1.isVarArgs();
      node1.isTrue();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(152, 537, 537);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isAdd();
      node0.isDelProp();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isStringKey();
      node0.getQualifiedName();
      Node node1 = node0.cloneNode();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(103);
      node0.cloneNode();
      node0.isFromExterns();
      node0.isFromExterns();
      node0.checkTreeEquals(node0);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node(114, 114, 114);
      node0.srcrefTree(node1);
      Node node2 = new Node(36, node1, node1, node0, 50, 39);
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(49, 49, 49);
      Node node1 = new Node(49, node0, node0);
      node1.setLineno(56);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber((double) 110);
      Node node1 = new Node(110, node0, node0);
      node0.setCharno(1917);
      node1.setType(31);
      Node node2 = new Node((-1397), node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      boolean boolean0 = true;
      Node node4 = node1.copyInformationFromForTree(node3);
      node4.removeProp(48);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node2.getSideEffectFlags();
      Node node3 = node1.detachFromParent();
      node3.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node((-497));
      Node node1 = new Node((-497), node0, node0, node0, node0, 29, 2);
      node1.mayMutateGlobalStateOrThrow();
      node1.getChildAtIndex((-2014));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("PI1!3C]&#z]OIN.6M", 52, 4514);
      Node node1 = new Node(4, node0, node0, (-885), 3170);
      node0.getQualifiedName();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(524321);
      Node node1 = new Node(39, node0, node0);
      int int0 = Node.DIRECT_EVAL;
      node0.isInstanceOf();
      node1.isStringKey();
      Node.newString(196623, "ZS*");
      Node.newString("ZS*", 89, 15);
      node1.getQualifiedName();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(524262);
      Node node1 = new Node(30);
      Node node2 = new Node(0, node1, 56, 48);
      Node node3 = node1.detachFromParent();
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString("&ff}?n`_ 'q{j");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(32, nodeArray0);
      Node node2 = new Node(25, node0, node0, node1);
      node0.mayMutateGlobalStateOrThrow();
      node2.children();
      node2.removeChildAfter(node0);
      Node node3 = new Node(29, node2, node2, 57, 1);
      node3.isInc();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = new Node(130, node0, node0, 53, 47);
      Node node2 = new Node((-1484), node1, 496, 159);
      node1.detachFromParent();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString("l|H'(kCVX|");
      Node node1 = new Node(32, node0, node0, node0, 48, 15);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node1.mayMutateGlobalStateOrThrow();
      node1.isGetProp();
      node0.isAdd();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals("l|H'(kCVX|");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      node0.putIntProp(32, 32);
      node0.isNot();
      node0.isLocalResultCall();
      try { 
        node0.setDouble(32);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node$NumberNode [incrdecr: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = Node.newString(12, "change_time", 39, 49);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isEquivalentToTyped(node0);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(38, node0, node0, 2, 57);
      node0.getAncestor(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = Node.newString(">;", 49, 49);
      node0.srcrefTree(node1);
      node0.addChildToBack(node1);
      node0.isEquivalentToTyped(node0);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.putIntProp(33, 64);
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setDouble(0.5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 33
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(152, 537, 537);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isWith();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<StringType> hashSet0 = new HashSet<StringType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) hashSet0);
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(49, 49, 49);
      Node node1 = new Node(49, node0, node0);
      node0.getQualifiedName();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUp{o'7kx=N6n");
      node0.cloneNode();
      node0.mayMutateArguments();
      Node node1 = Node.newString(42, "[mk2<a'v#&q/b;");
      node1.getQualifiedName();
      node1.isAdd();
      Node.newNumber((double) 57);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.setChangeTime(114);
      node0.toStringTree();
      Node node1 = new Node(2460, node0, node0, 55, 32);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(111, "CnarMatcher.6Y", 111, 111);
      node0.isCase();
      node0.setLineno(10);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isBreak();
      node0.checkTreeEquals(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString(Integer.MAX_VALUE, "~wG[wGa{}m&}j", 17, 32);
      node1.isVarArgs();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(8, node0, node0, node0, node0, 1787, 12);
      node0.srcref(node1);
      node0.setChangeTime(114);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(304, 304, 304);
      Node node1 = Node.newString("`");
      Node node2 = new Node(993, node1, node0, node0);
      node2.mayMutateGlobalStateOrThrow();
      node0.children();
      node2.removeChildAfter(node1);
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(12);
      node0.isGetterDef();
      Node[] nodeArray0 = new Node[2];
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(17, nodeArray0);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getChangeTime();
      node0.getBooleanProp(101);
      Node node1 = node0.getAncestor(0);
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(27);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getQualifiedName();
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isEquivalentToTyped(node0);
      node0.isExprResult();
      Node node1 = new Node(12, node0, node0, node0, 16, 29);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString("rKj", 4592, 4592);
      node0.removeProp(101);
      Node node1 = Node.newString("eT");
      Node node2 = new Node(49, node0, node1, node0);
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = new Node(54, node1, node1);
      node2.children();
      node1.addChildBefore(node2, node0);
      node0.getProp(65535);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(4, (-3113), 4);
      Node node1 = new Node(4, node0, node0, node0, 57, 16);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ");,SjhVX,");
      Node node2 = new Node(4, node1, 147, 2);
      node2.isLabel();
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.isNoSideEffectsCall();
      try { 
        node2.setDouble((-354.059381));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(114);
      node0.getIntProp(124);
      node0.getQualifiedName();
      Node node1 = new Node(4095, (-679), 122);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(96, 124, 96);
      node0.putIntProp(35, 96);
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setDouble(124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 35
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber(227.442607864562);
      node0.isExprResult();
      Node node1 = new Node(32, 52, 40);
      node1.isLabelName();
      node0.copyInformationFrom(node1);
      Node node2 = node1.cloneNode();
      Node node3 = node0.cloneNode();
      node2.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = Node.newString(37, "#e", (-1623), 31);
      Node node2 = node0.srcrefTree(node1);
      node0.isStringKey();
      node0.isGetterDef();
      node2.getProp(4095);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(30, "T", 53, (-408));
      nodeArray0[0] = node0;
      Node node1 = new Node(53, nodeArray0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.ANY", 2384, 2384);
      Node node1 = new Node(42);
      node1.isFalse();
      node1.useSourceInfoFrom(node0);
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(152, 588, 588);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(12, node0, node0, node0);
      node0.isCast();
      node0.isDebugger();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      node0.isCase();
      Node node1 = Node.newString("z", 132, (-1879));
      node0.useSourceInfoFromForTree(node1);
      Node node2 = new Node((-2444), node0, 102, 51);
      node0.useSourceInfoIfMissingFrom(node2);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = new Node(0, 124, (-867));
      node0.srcrefTree(node2);
      Node.newNumber((double) 15);
      Node.newNumber((double) 53, 79, 1);
      node1.isTrue();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(116);
      node0.isBreak();
      Node node1 = new Node(4, node0, node0, node0);
      node0.checkTreeEquals(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isBreak();
      node0.checkTreeEquals(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(42, node0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(152, 152, 152);
      node0.cloneTree();
      node0.isStringKey();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(85, 105, 56);
      node0.isScript();
      node0.isAssignAdd();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = Node.newString("zACE}");
      Node node2 = new Node((-1272), node0, node0, node1);
      node2.mayMutateGlobalStateOrThrow();
      node1.children();
      node2.removeChildAfter(node0);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node");
      node0.setQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isQuotedString();
      node0.isComma();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(40);
      node1.getAncestors();
      Node node2 = new Node(26, node0, node1, 12, 29);
      node2.putIntProp(46, 31);
      node2.isNot();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(136, 136, 136);
      node0.addChildToFront(node0);
      Node node1 = new Node(136);
      node0.addChildrenToBack(node1);
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString(132, ".MmSPG471H^w", 101, 132);
      node0.isDebugger();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = Node.newNumber((double) 15);
      Node node3 = Node.newNumber((double) 53, 79, 1);
      node0.useSourceInfoFromForTree(node2);
      Node node4 = new Node(38, node1, node3, node3);
      node1.isCast();
      node2.isDebugger();
      node4.isFalse();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node.newString("");
      Node node0 = new Node(13);
      Node node1 = new Node(4629, node0, node0, node0, 47, 12);
      node0.detachFromParent();
      node0.getQualifiedName();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      Node node1 = new Node(16, 4, 52);
      node0.copyInformationFromForTree(node1);
      node1.mayMutateArguments();
      node0.isIf();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceFileForTesting("n<KR?l<");
      Node node1 = new Node(31, node0, node0, node0, node0);
      node0.isBreak();
      node0.isRegExp();
      node0.isIn();
      node1.isObjectLit();
      node0.siblings();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      Node node1 = new Node(43, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node((-383));
      Node node1 = new Node(31, node0, node0, 49, (-28));
      Node node2 = new Node((-322), node1, 55, 77);
      node0.detachFromParent();
      Node node3 = null;
      try {
        node3 = new Node(52, node1, node2, 4550, 16777216);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isGetElem();
      node0.checkTreeEquals(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(41);
      node0.isScript();
      Node node1 = new Node(1, 57, 38);
      node1.isOptionalArg();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.ANY", 2384, 2384);
      Node node1 = new Node(42);
      node1.putBooleanProp(1795, false);
      node1.setSourceEncodedPosition(53);
      node1.isFalse();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = Node.newString(331, "@GlSLKU", 57, 1194);
      node0.clonePropsFrom(node1);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(152, 588, 588);
      node0.setVarArgs(true);
      node0.cloneNode();
      node0.getDirectives();
      node0.isDo();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEBUGGER 588 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(1331);
      Node node1 = new Node(51);
      Node node2 = new Node(98, node1, node0, node0);
      node0.isVar();
      node1.children();
      Node node3 = node2.removeChildAfter(node1);
      Node node4 = new Node(37, node2, node3, node0, 108, 0);
      node4.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(40);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = new Node(21, node0, node1, 12, 29);
      node2.putIntProp(46, 31);
      node2.isNot();
      node1.cloneNode();
      Node node3 = node0.getLastSibling();
      node3.toString();
      node2.isComma();
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString("zACE}");
      Node node2 = new Node((-1272), node0, node0, node1);
      node2.mayMutateGlobalStateOrThrow();
      node1.children();
      Node node3 = node2.removeChildAfter(node0);
      node3.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.Lists$RandomAccessPartition");
      Node node0 = new Node(152, 588, 588);
      node0.setVarArgs(true);
      node0.isGetterDef();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isExprResult();
      Node node1 = Node.newString(869, "Unknown class name");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0, 113, (-1701));
      Node node1 = Node.newNumber((-452.2123214841461));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.cloneTree();
      node2.isDebugger();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node0.getAncestor((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isLabel();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n");
      node0.type = 64;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(155, 69, (-2959));
      node1.getQualifiedName();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(114, node0, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      node1.children();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(125, nodeArray0);
      node0.toString();
      node0.removeProp(27);
      Node node1 = new Node(427, node0, 63, 50);
      Node node2 = node0.copyInformationFrom(node1);
      node0.setChangeTime(4166);
      Node node3 = node2.srcref(node0);
      node3.addSuppression("THIS");
      node3.isFromExterns();
      node0.getProp(125);
      node2.isQualifiedName();
      try { 
        node2.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK 63 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      Object object0 = new Object();
      node0.hasChildren();
      InputId inputId0 = new InputId("o^c].qjJgvTB0GT-aG");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.toStringTree();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(85);
      node0.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(31, node0, node0);
      Node node2 = new Node(0, node1, 56, 48);
      Node node3 = node1.detachFromParent();
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isAnd();
      Node node1 = Node.newNumber(0.0);
      node1.isDo();
      node0.getIntProp(29);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(0, node0, 56, 48);
      node0.setSourceEncodedPosition(32);
      Node node2 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      Node node1 = new Node(15, node0, node0, node0, node0, 2, 12);
      node1.putIntProp(47, 44);
      node1.isNot();
      try { 
        node1.setDouble(36);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LE 2 [is_dispatcher: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(113, 588, 113);
      node0.setVarArgs(true);
      node0.isStringKey();
      node0.isSetterDef();
      node0.isAdd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getProp((-842));
      Node node1 = new Node(56, node0, 31, 55);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getIntProp(118);
      Node node2 = null;
      try {
        node2 = new Node(1, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isWith();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.checkTreeEquals(node2);
      node2.getQualifiedName();
      try { 
        node2.setString("@_%p=A");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter.getMessage1("msg.jsdoc.function.varargs", "msg.jsdoc.function.varargs");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(46, node0, node0, node0, 43, 50);
      node0.isEquivalentToShallow(node1);
      node0.getQualifiedName();
      node1.isLabel();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.collect.ImmutableMapKeySet", true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, (Node) null);
      Node node0 = Node.newNumber((double) 0, (-5402), (-413));
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, node0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, (Map<TemplateType, JSType>) hashMap0);
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      templatizedType0.getPropertiesCount();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      templateTypeMapReplacer0.caseFunctionType(functionType1);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getQualifiedName();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      node1.removeChildren();
      Node node2 = new Node(131, (-2730), 42);
      Node.newString(1, "Object#Key");
      node1.isDelProp();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      String string0 = "XS=>WaUo/'7kx=N6n";
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isThis();
      node0.removeProp(64);
      node0.isString();
      node0.isFalse();
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n");
      node0.isContinue();
      Node node2 = new Node(22, node0, node1, node0);
      node2.isDo();
      String string1 = "}j[";
      node2.addSuppression("}j[");
      node0.addChildToFront(node2);
      node2.addSuppression("XS=>WaUo/'7kx=N6n");
      node2.isAdd();
      CharArrayWriter charArrayWriter0 = null;
      try {
        charArrayWriter0 = new CharArrayWriter((-3038));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -3038
         //
         verifyException("java.io.CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getAncestors();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(153, node0, node0, node0);
      node1.isCast();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getSourceFileName();
      node1.isDebugger();
      node1.isContinue();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(1736, node0, node0, node0);
      node0.addChildrenToBack(node1);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      Node node1 = new Node(30, node0, node0, node0, node0, 1, 54);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString(108, "CharMatcher.AY", 108, 108);
      HashSet<String> hashSet0 = new HashSet<String>(49);
      node0.setDirectives(hashSet0);
      node0.isDebugger();
      node0.isIf();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      node0.isInc();
      node0.setSideEffectFlags(493);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp(4);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(52, nodeArray0, (-334), 8199);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      Node node1 = new Node(56, node0, node0, node0, node0, 31, 50);
      node1.removeFirstChild();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("com.google.jvascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = Node.newNumber((double) 53, 79, 1);
      node0.useSourceInfoFrom(node2);
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 53.0 79 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(47, 42, 4);
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newString("qiES4[", 0, 57);
      Node node5 = new Node(2582);
      node4.isFalse();
      node2.getBooleanProp(56);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString("directives", 148, 0);
      Node node1 = new Node(148, node0, node0, 0, (-24));
      node1.copyInformationFrom(node0);
      node1.isStringKey();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isEquivalentToTyped(node0);
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n", 15, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node0.setSideEffectFlags(node_SideEffectFlags2);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = "E}tLpxJP?Rl]+p";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "E}tLpxJP?Rl]+p");
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-953));
      node0.getChangeTime();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[0] = node0;
      Node node1 = new Node((-953), nodeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.getImplementedInterfaces();
      node0.getJsDocBuilderForNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -953
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString(108, "CharMatcher.AY", 108, 108);
      node0.setSourceFileForTesting("CharMatcher.AY");
      HashSet<String> hashSet0 = new HashSet<String>(49);
      hashSet0.add("CharMatcher.AY");
      node0.setDirectives(hashSet0);
      node0.isSwitch();
      node0.isBlock();
      node0.getSourceOffset();
      node0.isInstanceOf();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      Node node1 = new Node(49, node0, node0, node0, node0, 64, 47);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1M4TPf'auhWmj");
      Node node0 = Node.newString("directives", (-279), 0);
      Node node1 = new Node(148, node0, node0, 0, (-24));
      node1.cloneTree();
      Node.newNumber((double) 57);
      Node node2 = Node.newNumber((double) 51, 2, 30);
      node1.isStringKey();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(13);
      node0.wasEmptyNode();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(118, nodeArray0);
      node0.copyInformationFrom(node1);
      Node node2 = Node.newString("Node has existing properties.", 49, 1567);
      node0.isEquivalentToShallow(node2);
      node2.getQualifiedName();
      node0.isLabel();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(105);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isEquivalentToTyped(node0);
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n", 15, 4095);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(227.442607864562);
      Node node1 = new Node((-4096), node0);
      node0.isEquivalentTo(node1, false, true, false);
      node0.isEquivalentTo(node1, true, true, true);
      node1.setCharno(1);
      node1.removeChildren();
      node0.isAdd();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(38, node0, node0, 2, 57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node1);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      Node node1 = new Node(57, node0, node0, node0, node0, 1165, 57);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isOptionalArg();
      node0.isScript();
      Node node1 = new Node(4095, node0, node0, node0, 39, 37);
      node0.useSourceInfoFrom(node1);
      int int0 = Node.LENGTH;
      node0.isOr();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-3596));
      Node node1 = Node.newString(38, "@>Q#(}XV$[i");
      node1.isCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NAME
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(120, 120, 120);
      node0.isWith();
      node0.isLocalResultCall();
      node0.isInstanceOf();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString(108, "CharMatcher.ANY", 108, 108);
      HashSet<String> hashSet0 = new HashSet<String>(49);
      node0.setDirectives(hashSet0);
      node0.isSwitch();
      node0.isDebugger();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isParamList();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(29, node0, node0, (-575), 54);
      node0.copyInformationFromForTree(node1);
      node0.isIf();
      node0.mayMutateArguments();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getIntProp(118);
      node0.mayMutateArguments();
      node0.isTrue();
      node0.isVar();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(114);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getProp(1746);
      Node node1 = new Node(16384, node0, node0, node0);
      Node node2 = node1.getLastChild();
      Node node3 = new Node((-3170), 36, 57);
      node2.addChildrenToBack(node1);
      node2.isNull();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber(24.814003770459962);
      node0.setChangeTime(48);
      node0.isNot();
      node0.isSetterDef();
      node0.toStringTree();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.extractLineno(380);
      String string0 = "com.google.common.io.PatternFilenameFilter";
      Node node0 = Node.newString("com.google.common.io.PatternFilenameFilter");
      node0.isQuotedString();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(115, node0, node0, node0, 54, 2646);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("rKj", 4592, 98);
      node0.isTry();
      Node node1 = new Node(4, node0, node0, node0, node0, 52, 30);
      Node node2 = Node.newString("rKj", 56, 55);
      node0.useSourceInfoIfMissingFrom(node2);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getAncestors();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(153, node0, node0, node0);
      node1.isCast();
      node1.isDebugger();
      node0.isThrow();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(78, (-713), 78);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(12, nodeArray0);
      Node node2 = node0.srcrefTree(node1);
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString("l|H'(kCVX|");
      Node node1 = new Node(32, node0, node0, node0, (-524), 15);
      Node node2 = Node.newString(30, "second new child has existing sibling", (-149), 30);
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createFunctionType((JSType) null, node1);
      node0.isEquivalentToShallow(node2);
      node2.getQualifiedName();
      node1.isLabel();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(52);
      node0.setLength(52);
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isThis();
      node0.removeProp(64);
      node0.isString();
      node0.isWith();
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n");
      node0.isContinue();
      Node node2 = new Node(22, node0, node1, node0);
      node2.isGetterDef();
      node0.addChildToFront(node2);
      node2.addSuppression("XS=>WaUo/'7kx=N6n");
      node2.isAdd();
      MockFile mockFile0 = new MockFile("rKj");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      PrintWriter printWriter0 = mockPrintWriter0.append('r');
      // Undeclared exception!
      node2.appendStringTree(printWriter0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(689);
      Node node1 = Node.newString(100, "com.google.common.collect.Iterators$12", 1019, (-1119));
      Node node2 = new Node(57, node0, node1, 37, 39);
      Node node3 = new Node(1, node2, 55, 48);
      node0.isAssign();
      node2.detachFromParent();
      Node node4 = new Node(4583);
      Node node5 = new Node(12, node4, node4, 49, 4095);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber((double) 114);
      Node node1 = new Node(114, node0, node0, node0);
      node1.isNoSideEffectsCall();
      node0.children();
      node1.checkTreeEquals(node0);
      node0.isFor();
      node1.isNew();
      node1.isSetterDef();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(152, node0, node0, 4, 54);
      node1.mayMutateGlobalStateOrThrow();
      node1.isRegExp();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(2048, (-1372), 130);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("Yt~s#P_Oo", 50, 50);
      Node node1 = new Node(50, node0, node0, node0);
      node1.setLineno(113);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getStaticSourceFile();
      node1.isAnd();
      node1.getParent();
      Node node3 = Node.newString("Q(I;{#", 37, 103);
      node0.getSourcePosition();
      node3.children();
      // Undeclared exception!
      try { 
        node1.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(45, "fT:xd@Sn5e", 45, 45);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(45, node0);
      node1.type = 37;
      node1.getSideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fT:xd@Sn5e");
      node0.siblings();
      node0.setLineno(37);
      node1.mayMutateGlobalStateOrThrow();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isNoSideEffectsCall();
      node1.getJSType();
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(21);
      node0.setType(21);
      Node node1 = new Node(55, node0, node0);
      node0.copyInformationFrom(node1);
      Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      node0.getQualifiedName();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(152, node0, node0, 4, 54);
      node1.useSourceInfoFromForTree(node0);
      node1.mayMutateGlobalStateOrThrow();
      node1.isRegExp();
      node1.isIn();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(42);
      node1.isFalse();
      node0.setLineno(105);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(1662, "com.google.javascript.rhino.jstype.StringType", 1662, (-3036));
      Node node1 = new Node(43, node0, node0, node0, node0);
      Node node2 = new Node(38, 31, 38);
      node1.copyInformationFrom(node2);
      node0.isLabelName();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      node0.getIntProp(124);
      node0.isLabel();
      Node node1 = new Node(53, node0, node0, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(37, 12, 50);
      node2.useSourceInfoFrom(node1);
      node0.isFalse();
      node1.isAssign();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isBlock();
      node0.isNew();
      node0.isDebugger();
      Node node1 = new Node(56, node0, node0, node0, node0, 4095, 16);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(1632);
      Node node1 = Node.newString(4, "");
      Node node2 = new Node(39, node0, 36, (-2334));
      node1.hasChildren();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node1.isReturn();
      node1.isCatch();
      node0.isSetterDef();
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.getIntProp(124);
      node0.isVarArgs();
      node0.isBlock();
      Node node1 = new Node(32);
      node1.cloneTree();
      node0.isFalse();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(105);
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node0.isInstanceOf();
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = node0.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FUNCTION
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString("om.google.javascript.rhino.Node$IntPropListItem", 50, 29);
      node1.isParamList();
      node0.isTry();
      node1.isOnlyModifiesArgumentsCall();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      node0.getProp(4);
      node0.isThis();
      InputId inputId0 = new InputId("o^c].qjJgvTB0GT-aG");
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isFor();
      Node node1 = node0.copyInformationFrom(node0);
      node1.setType(48);
      node0.setOptionalArg(false);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp(0);
      node0.getDouble();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      node0.getIntProp(124);
      node0.isLabel();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node0.clonePropsFrom(node1);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(37, 12, 50);
      node0.isFalse();
      node1.isAssign();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isUnscopedQualifiedName();
      node0.addChildrenToBack(node0);
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(1632);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(4, node0, node0, 21, 32);
      node1.putIntProp(40, 39);
      node1.isNot();
      try { 
        node1.setDouble(32);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN 21 [originalname: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) 1367, 119, 119);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.setSourceFileForTesting("missing prop: ");
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(43, node0, node0, 79, 2);
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = Node.newNumber(0.7, 79, 1);
      node3.detachChildren();
      node1.isTrue();
      node0.isThrow();
      node0.detachFromParent();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECT_EVAL;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isHook();
      node0.isThis();
      node0.removeProp(101);
      node0.isInc();
      node0.isArrayLit();
      Node node1 = Node.newString(39, "CharMatcher.JAVA_UPPER_CASE");
      Node node2 = node0.srcrefTree(node1);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(37, node0, 1, (-2015));
      node0.isAssign();
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      ImmutableList.copyOf((Collection<? extends StringType>) linkedHashSet0);
      ImmutableList.copyOf((Collection<? extends JSType>) linkedHashSet0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isThis();
      node0.removeProp(1018);
      node0.isInc();
      node0.isArrayLit();
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry3 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry3);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      node0.clonePropsFrom(node1);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node2.removeFirstChild();
      node1.isAssign();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(44, "rKj", 2299, (-3596));
      Node node2 = new Node(125, node1, node1, node0, node0);
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(21);
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isBlock();
      node0.isNew();
      Node node1 = Node.newString("CharMatcher.inRange('", 4095, 43);
      node0.useSourceInfoFrom(node1);
      node0.isParamList();
      node0.isAssign();
      node0.isObjectLit();
      Node.newString(36, "");
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString("rKj", 4592, 98);
      node0.isTry();
      node0.removeProp(101);
      int int0 = Node.DIRECT_EVAL;
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(33);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      Node node2 = new Node(1093, node0, node1, 32, 50);
      Node node3 = new Node(113, node2, node2, (-1563), 1);
      node3.isQuotedString();
      node0.getQualifiedName();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isParamList();
      node0.getDirectives();
      node0.isTry();
      node0.toStringTree();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-1205), nodeArray0);
      node0.srcref(node1);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(114, node0, node0, node0);
      node1.children();
      node1.checkTreeEquals(node1);
      node1.isWhile();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      Node node2 = new Node(131, (-2706), 42);
      node2.isEquivalentTo(node1, false, false, false);
      Node node3 = new Node(2, node2, node1);
      node2.isIf();
      InputId inputId0 = new InputId("Object#Key");
      node0.setVarArgs(false);
      node2.isScript();
      node0.isAdd();
      node3.getFirstChild();
      node2.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      Node node1 = Node.newString(2, "");
      Node node2 = new Node(30, node0, 40, 2);
      node1.hasChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of();
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry1.createTemplateTypeMap(immutableList0, (ImmutableList<JSType>) null);
      node0.cloneNode();
      templateTypeMap0.getTemplateTypeKeyByName("XS=>WaUo/'7kx=N6n");
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) null, (Map<TemplateType, JSType>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newNumber(46.0, 113, 113);
      Node node1 = new Node(8202, 1709, 31);
      node0.clonePropsFrom(node1);
      EvoSuiteFile evoSuiteFile0 = null;
      node0.setVarArgs(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v2@D\"Emr");
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(56, node0, node0, node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.isQuotedString();
      node0.isIn();
      node0.toStringTree();
      node0.isDo();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(1632);
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(48);
      Node node1 = new Node(39, node0, node0, node0);
      node1.isQuotedString();
      node1.isIn();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString("om.google.javascript.rhino.Node$IntPropListItem", 50, 29);
      InputId inputId0 = new InputId("om.google.javascript.rhino.Node$IntPropListItem");
      node0.setInputId(inputId0);
      node1.isParamList();
      Node node2 = new Node(42, node1, 57, 42);
      node1.isGetterDef();
      node0.isFunction();
      // Undeclared exception!
      try { 
        node1.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(114);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isInc();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber(227.442607864562);
      node0.addSuppression("");
      node0.isExprResult();
      Node node1 = new Node(32, 52, 40);
      node1.isLabelName();
      node0.copyInformationFrom(node1);
      node1.cloneNode();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber((-4152.432217272489));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getAncestors();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(153, node0, node0, node0);
      node1.isCast();
      node1.isDebugger();
      node0.isNE();
      Node node2 = new Node(108, 46, 122);
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(0, 50, (-1524));
      node1.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(38, node0, node0, 2, 118);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      ImmutableList<JSType> immutableList2 = immutableList1.reverse();
      ImmutableList<JSType> immutableList3 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList2);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList3);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      node1.isParamList();
      node0.isTry();
      node2.toStringTree();
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = new Node(36, node1, 8, 53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isCase();
      node1.isFor();
      node2.isNew();
      node2.isSetterDef();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-291), 77843, 1368);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node0.hasChildren();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isEquivalentToShallow(node0);
      node1.isCatch();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(47, node0, node0, 2490, 12);
      node0.mayMutateGlobalStateOrThrow();
      node1.isRegExp();
      node0.isIn();
      Node node2 = Node.newString("Eb&IrH*", 130, 39);
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node0.isAssign();
      node2.cloneNode();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(38, node0, node0, 2, 118);
      node1.mayMutateGlobalStateOrThrow();
      node1.isRegExp();
      node0.isIn();
      node0.getSourceOffset();
      node1.removeFirstChild();
      Node node2 = new Node(29, node1, 524278, 92);
      node0.setCharno(43);
      node2.isGetterDef();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      node0.setLength(547);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("second new child has existing parent", 40, 4180);
      node1.isCatch();
      node0.isWith();
      node0.toStringTree();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      ImmutableList.copyOf((Collection<? extends StringType>) linkedHashSet0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedHashSet0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry2.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node(45, node1, node1, 4095, 4);
      node2.isSetterDef();
      node2.removeProp((-234));
      node2.isInc();
      node0.isArrayLit();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString(",.RA`_w]@Wgm>T|J8*");
      node0.getJSDocInfo();
      Node node1 = new Node(108, node0, node0);
      Node node2 = node1.getLastSibling();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.setWasEmptyNode(true);
      node1.removeProp(4095);
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(23);
      node0.isNoSideEffectsCall();
      node0.getIntProp((-1924));
      node0.isLabel();
      Node node1 = new Node(8, node0, node0, node0, node0);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(52, 57, 50);
      node2.copyInformationFrom(node1);
      node1.isFalse();
      node1.isAssign();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(117);
      node0.addSuppression("com.google.common.collect.ImmutableMapValues");
      node0.isExprResult();
      Node node1 = new Node(120, 31, 1);
      node1.isUnscopedQualifiedName();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      node0.isOptionalArg();
      node0.getBooleanProp(152);
      node0.isHook();
      node0.isScript();
      node0.isAssignAdd();
      Node node1 = Node.newNumber((-163.492111));
      node0.isNoSideEffectsCall();
      node0.srcref(node1);
      Node.newNumber((-613.143445119852));
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(19);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(32, node0, node1, 12, 1);
      node2.getQualifiedName();
      node2.getChildAtIndex(0);
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(19);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(54, node0, node1, (-2196), (-2570));
      node0.isBreak();
      node1.isUnscopedQualifiedName();
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString("ORiDINAWY", 524276, (-94));
      node0.isThis();
      node0.removeProp(112);
      node0.isInc();
      node1.isArrayLit();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.hasChildren();
      Node node1 = new Node(38, node0, node0, 2, 118);
      node1.mayMutateGlobalStateOrThrow();
      node1.isRegExp();
      node0.isIn();
      node0.getSourceOffset();
      Node node2 = new Node(29, node1, 524278, 92);
      node2.isGetterDef();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCase();
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isGetterDef();
      int int0 = Node.SLASH_V;
      node0.putIntProp(51, 0);
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      Node node2 = new Node(1093, node0, node1, 32, 50);
      node2.isInstanceOf();
      node1.isEquivalentTo(node0, false, false, false);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.setChangeTime(26);
      int int0 = Node.STATIC_SOURCE_FILE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.write("kE.~Mwk`wd?", 0, 1);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isOptionalArg();
      node0.getBooleanProp(113);
      Node node1 = Node.newNumber(1.0);
      Node node2 = new Node(50, node0, node0);
      node2.isVar();
      Node node3 = new Node(4095, node1, node1, 113, (-1063));
      node0.putIntProp(55, 8);
      node2.isNot();
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // AND [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isContinue();
      node0.setIsSyntheticBlock(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.LENGTH;
      node0.isOr();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(40, node0, node0, node0, 39, 1399);
      node0.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isContinue();
      node0.addSuppression("com.google.common.collect.ImmutableMapValues");
      node0.isExprResult();
      Node node1 = new Node(51, (-499), 39);
      node1.isUnscopedQualifiedName();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString("dIJ4%;|RGK*0p'X", 138, 138);
      node0.isSwitch();
      Node node1 = new Node(38);
      node1.getJSDocInfo();
      node1.clonePropsFrom(node0);
      node0.isFalse();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(117);
      node0.putProp((-1242), "");
      Node node1 = Node.newString(2, "");
      Node.newString(42, "");
      node1.hasChildren();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node1.isReturn();
      node1.isCatch();
      node1.isSwitch();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(101);
      int int0 = Node.DIRECT_EVAL;
      node0.cloneTree();
      node0.setSourceFileForTesting("Y}Vp8to(");
      node0.isInstanceOf();
      MockFileWriter mockFileWriter0 = null;
      try {
        mockFileWriter0 = new MockFileWriter((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(23);
      Node node1 = new Node((-1924), node0, node0, node0, node0);
      node0.mayMutateArguments();
      node0.useSourceInfoFromForTree(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "first new child has existing sibling");
      node0.mayMutateGlobalStateOrThrow();
      node0.setWasEmptyNode(true);
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // MUL [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isOptionalArg();
      node0.getBooleanProp(113);
      node0.isHook();
      node0.isScript();
      int int0 = Node.LENGTH;
      node0.isOr();
      Node node1 = new Node(122, node0, node0, node0, 1, 2);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isThis();
      node0.removeProp(64);
      node0.isString();
      node0.isWith();
      node0.isFromExterns();
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n");
      node0.isContinue();
      Node node2 = new Node(22, node0, node1, node0);
      node2.isGetterDef();
      node0.addChildToFront(node2);
      node2.addSuppression("XS=>WaUo/'7kx=N6n");
      node2.isAdd();
      node2.getSideEffectFlags();
      Node.extractCharno((-1));
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node0.detachFromParent();
      node0.isReturn();
      node2.getQualifiedName();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(155701);
      Node node1 = new Node((-1940), node0, node0, 8, 83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.addChildToBack(node1);
      Node node2 = node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node(524288);
      Node node1 = new Node(29, node0, node0, 37, 83);
      node1.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      node0.isInstanceOf();
      node1.isEquivalentTo(node1, false, true, true);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-291), 77843, 1367);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node0.getDouble();
      node0.getLength();
      node0.addChildToFront(node1);
      node0.setSourceFileForTesting("missing prop: ");
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -291.0 77843 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(117);
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isParamList();
      Node node1 = node0.getAncestor(0);
      node1.isDefaultCase();
      Node node2 = new Node(51, node1, 21, 31);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-540));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      node0.getAncestors();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(13, node0, node0, node0);
      node1.isCast();
      node1.isDebugger();
      node1.isNE();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ObjectType.cast(jSType0);
      jSTypeRegistry0.createObjectType((ObjectType) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(83);
      InputId inputId0 = new InputId("w0Z");
      node0.setInputId(inputId0);
      node0.isAnd();
      node0.isIf();
      Node node1 = Node.newNumber(16.0);
      Node node2 = new Node(43, node1, node1, node0);
      node1.isTry();
      node1.toStringTree();
      node2.srcrefTree(node1);
      node2.isNot();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(40);
      ImmutableList.of();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(118, node0, node0, 52, 101);
      node1.copyInformationFromForTree(node0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(524257);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node1.isAssign();
      int int0 = Node.DIRECT_EVAL;
      Node node3 = node1.cloneTree();
      node3.isInstanceOf();
      Node node4 = null;
      try {
        node4 = new Node((-9), node3, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = new Node(43, node1, 4095, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.setJSType((JSType) null);
      Node node3 = Node.newString(34, "b3ytrRs+*$O(s:&", 1, 1);
      node0.addChildToFront(node3);
      node1.cloneNode();
      node1.isCase();
      node2.isFor();
      node0.isUnscopedQualifiedName();
      node0.isNew();
      node1.isSetterDef();
      node0.isWith();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(26);
      int int0 = Node.DIRECT_EVAL;
      Node node1 = new Node(52, node0);
      node1.isInstanceOf();
      node1.isEquivalentTo(node0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(105);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      Node node2 = new Node(12, node0, node1, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = node0.detachFromParent();
      node1.isReturn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      node0.getAncestors();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(153, node0, node0, node0);
      node1.isCast();
      node1.isDebugger();
      node0.isNE();
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ObjectType.cast(jSType0);
      jSTypeArray0[0] = (JSType) null;
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      jSTypeArray0[1] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isSwitch();
      Node node1 = new Node(69);
      node1.getAncestors();
      Node node2 = Node.newNumber(1.2);
      node0.isVar();
      Node node3 = new Node(21, node0, node2, 12, 29);
      node3.putIntProp(46, 31);
      node3.isNot();
      try { 
        node3.setDouble(57);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ADD 12 [is_namespace: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(524258);
      Node node1 = new Node(38, node0, node0, 524258, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node1.isAssign();
      node1.mayMutateGlobalStateOrThrow();
      node1.getInputId();
      Node node3 = node1.detachFromParent();
      node2.isReturn();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 524258 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(52, node0, node0, node0, node0, 2, 37);
      int int0 = Node.COLUMN_BITS;
      Node node2 = node0.cloneTree();
      node2.isInstanceOf();
      node2.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isThis();
      node0.removeProp(64);
      node0.isVarArgs();
      node0.isArrayLit();
      node0.isInc();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString(114, "CharMatcher.ANY");
      node0.isSwitch();
      Node node1 = new Node(42);
      node0.isInc();
      node1.isDo();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = new Node(49, node0, node0);
      node1.cloneTree();
      node1.isInstanceOf();
      Node node2 = Node.newString("Number node not created with Node.newNumber");
      node0.setVarArgs(false);
      node2.isEquivalentTo(node1, false, false, false);
      try { 
        node0.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EMPTY 124 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node((-3596));
      Node node1 = Node.newString(138, "`", 8, (-2077));
      node0.isParamList();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.children();
      Node node2 = new Node(6, node1, node1);
      Node node3 = node0.cloneTree();
      node3.isScript();
      node0.isNoSideEffectsCall();
      node0.isWhile();
      Node node4 = new Node(42, node2);
      Node node5 = node0.useSourceInfoIfMissingFromForTree(node4);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node4, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setQuotedString();
      node0.isNull();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node$NumberNode [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      Node node0 = Node.newString("Object#Key");
      Node node1 = Node.newString("side_effect_flags", 56, 46);
      Node node2 = new Node(0, node0, node1, node0, node0, 37, (-2292));
      ObjectType.cast((JSType) null);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, false, jSTypeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("D?]Y^(cXyw- pN*Yz", node2, functionType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      jSTypeArray0[0] = (JSType) enumType1;
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) enumType0);
      jSTypeArray0[1] = (JSType) objectType0;
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) enumType0, node1);
      jSTypeArray0[2] = (JSType) functionType1;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) enumType1, (Map<TemplateType, JSType>) hashMap0);
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      jSTypeArray0[3] = jSType0;
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseFunctionType(functionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.setChangeTime(26);
      int int0 = Node.STATIC_SOURCE_FILE;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = new Node(0, node0, node0, node1);
      node2.isTry();
      node0.toStringTree();
      Node node3 = Node.newString("NOT [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n");
      node3.getChangeTime();
      node0.srcrefTree(node3);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(105);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setInputId(inputId0);
      node0.isAnd();
      node0.isIf();
      Node node1 = Node.newNumber((double) 37);
      Node node2 = new Node(46, node1, node1, node1);
      node0.isTry();
      node0.toStringTree();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isTry();
      node0.removeProp(64);
      int int0 = Node.DIRECT_EVAL;
      Node node1 = Node.newString("ORDINARY");
      Node node2 = node1.cloneTree();
      node2.isInstanceOf();
      node1.isEquivalentTo(node0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0);
      node0.isDelProp();
      node0.setChangeTime((-1939));
      Node[] nodeArray0 = new Node[0];
      Node.extractCharno(37);
      Node.mergeLineCharNo(1603, 2048);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = new CharArrayWriter(48);
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      Node node2 = new Node(131, (-2706), 42);
      node2.isEquivalentTo(node1, false, false, false);
      Node node3 = new Node(2, node2, node1);
      node2.isIf();
      InputId inputId0 = new InputId("Object#Key");
      Node node4 = new Node((-2358));
      node4.useSourceInfoFromForTree(node0);
      node0.isDefaultCase();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(21);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node0.hasChildren();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newNumber(3375.543520909);
      String string0 = "\n";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\n");
      Node node1 = Node.newString(262144, "7zn*hS7W^[:/+Abm");
      Node node2 = new Node((-764), node0, node1, (-447), 578);
      node1.setWasEmptyNode(true);
      node2.addSuppression("<");
      node2.getLineno();
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node3.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node0.isCatch();
      Node node1 = node0.getLastSibling();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(30, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp(4);
      node_NodeMismatch0.equals((Object) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node0.setSideEffectFlags(node_SideEffectFlags5);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      ImmutableList.of();
      Node node1 = new Node(32, 3299, 54);
      Node node2 = new Node(21, node0, node1, node0);
      node2.isFor();
      node1.isUnscopedQualifiedName();
      node2.isIn();
      node1.isTypeOf();
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node1.isInstanceOf();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(105);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$IntPropListItem");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.isParamList();
      node0.cloneNode();
      node0.isTry();
      node0.isIf();
      // Undeclared exception!
      try { 
        node0.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(40);
      ImmutableList.of();
      node0.isParamList();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(40);
      Node node2 = new Node(52, node1, node0);
      node1.isTry();
      node0.cloneTree();
      node2.isScript();
      node0.isNoSideEffectsCall();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newNumber(2328.8209443535075);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      Node node1 = new Node(98, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(36, node1);
      node3.removeProp(416);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 50, 29);
      node1.getProp(3078);
      node0.useSourceInfoFrom(node1);
      node1.isGetterDef();
      try { 
        node1.setDouble(50);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node$IntPropListItem 50 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(117);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node0.isInstanceOf();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node((-3596));
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = new Node(36, node1, 8, 53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAnd();
      node1.isFor();
      node0.isUnscopedQualifiedName();
      node1.useSourceInfoFromForTree(node0);
      node1.isVar();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isExprResult();
      Node node1 = new Node(122, node0, node0, 4, 54);
      node1.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(815);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.isVar();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString(114, "CharMatcher.ANY");
      node0.isSwitch();
      Node node1 = new Node(42);
      Node node2 = Node.newString(57, "CharMatcher.ANY");
      node0.getBooleanProp(51);
      node2.getAncestors();
      node0.wasEmptyNode();
      int int0 = Node.DIRECT_EVAL;
      node1.cloneTree();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isEquivalentTo(node2, false, false, false);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(40);
      String string0 = "thisType";
      Node node1 = Node.newString(53, "thisType");
      node1.getBooleanProp(47);
      // Undeclared exception!
      try { 
        node0.setString("o@} :ZIj");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(12, node0, node0, node0, node0, 2889, 39);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp(4);
      node0.isThis();
      InputId inputId0 = new InputId("o^c].qjJgvTB0GT-aG");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getInputId();
      node0.getProp(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      node0.putProp(971, jSType0);
      node0.isContinue();
      node0.getQualifiedName();
      Node node1 = new Node(4095, node0, node0, node0, node0, (-3564), 36);
      node1.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newNumber(848.013292686);
      ImmutableList.of();
      Node node1 = Node.newNumber((double) 57);
      Node node2 = new Node(0, node1, node0, node1, node1, 52, (-1957));
      node2.mayMutateGlobalStateOrThrow();
      node0.setIsSyntheticBlock(true);
      node0.srcref(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isIf();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isFunction();
      node1.getFirstChild();
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(26);
      node0.setCharno(26);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("8dWK0$m@|+%", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node0.copyInformationFromForTree(node1);
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isExprResult();
      Node node1 = new Node(122, node0, node0, 4, 54);
      node1.isExprResult();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(815);
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(115);
      node2.isTypeOf();
      node1.srcref(node2);
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(35);
      ImmutableList.of();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node0);
      node0.putIntProp((-1), (-1));
      node0.isAssignAdd();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((-1395.2187));
      Node node1 = new Node(85, node0, node0);
      Node node2 = new Node(85, node1, 117, 4095);
      node2.isEquivalentTo(node0);
      node2.isBlock();
      node2.useSourceInfoFromForTree(node0);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber(848.013292686);
      ImmutableList.of();
      Node node1 = new Node(1, 30, (-693));
      Node node2 = new Node(30, node0, node1, node1);
      node2.isFor();
      node2.isUnscopedQualifiedName();
      node2.cloneTree();
      node0.isScript();
      node0.isNoSideEffectsCall();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node((-2959), node0);
      Node node2 = node1.removeChildren();
      node1.isOnlyModifiesThisCall();
      Node.newString("T72&<rgm", 120, (-1860));
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newNumber(916.2, 105, 2018);
      node0.copyInformationFrom(node1);
      Node node2 = Node.newString(48, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte) (-110);
      byteArray0[6] = (byte)51;
      byteArray0[7] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.hasOneChild();
      node0.isUnscopedQualifiedName();
      node0.isIf();
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(424);
      Node node1 = new Node(424, node0, node0, 0, 37);
      node1.setSourceEncodedPositionForTree(126);
      Node node2 = Node.newString(118, "");
      node2.isFalse();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node1, jSType0);
      node2.putProp(57, enumType0);
      node2.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      node2.isVoid();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString(2381, "`", 30, 40);
      node0.isParamList();
      node1.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(52, node0, node1);
      node1.isReturn();
      Node node3 = node0.cloneTree();
      node3.isScript();
      node2.isNoSideEffectsCall();
      node3.isNoSideEffectsCall();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(524288);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = new Node(153, node1, node0, node1);
      node1.isRegExp();
      node0.isIn();
      node1.isTypeOf();
      node2.isCatch();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(4, node0, node0, 14, 52);
      Node node2 = new Node(55, node1, 57, 31);
      node2.isAssign();
      node0.isDefaultCase();
      node2.mayMutateGlobalStateOrThrow();
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString((-540), "is_consJant_name");
      node0.isExprResult();
      Node node1 = new Node(103, node0, node0, 4194304, 95);
      node0.addSuppression((String) null);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node0.isEquivalentToShallow(node1);
      node0.cloneTree();
      node0.isScript();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber(848.013292686);
      ImmutableList.of();
      Node node1 = Node.newNumber((double) 57);
      Node node2 = new Node(0, node1, node0, node1, node1, 52, 43);
      node2.mayMutateGlobalStateOrThrow();
      node0.setIsSyntheticBlock(true);
      Node node3 = node0.srcref(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isIf();
      node_SideEffectFlags3.setReturnsTainted();
      node3.isDelProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeArray0[0] = (JSType) templateType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[1] = jSType0;
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.isThis();
      node0.removeProp(64);
      node0.hasChild(node0);
      node0.isWith();
      node0.isFromExterns();
      Node node1 = Node.newString("XS=>WaUo/'7kx=N6n");
      node0.isContinue();
      Node node2 = new Node(22, node0, node1, node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString(": ");
      node0.isGetProp();
      Node node1 = new Node(112, node0, node0, node0);
      node0.addChildToBack(node1);
      Node node2 = new Node(51);
      Node node3 = Node.newNumber((double) 55);
      node3.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newNumber(0.0);
      // Undeclared exception!
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(152);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(57, node0, node0, node0);
      node1.setJSDocInfo((JSDocInfo) null);
      node1.isRegExp();
      node0.isIn();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("e2QoPeCxM!_v9J", 959, 959);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e2QoPeCxM!_v9J");
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeRegistry0.getObjectIndexKey();
      jSTypeRegistry0.unregisterPropertyOnType("~D", functionType0);
      jSTypeArray0[0] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      functionType1.toAnnotationString();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.addChildToFront(node1);
      node1.setLineno((-753));
      node1.useSourceInfoIfMissingFromForTree(node2);
      JSType jSType0 = null;
      node0.isNoSideEffectsCall();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      // Undeclared exception!
      try { 
        immutableList0.remove((Object) jSTypeNative0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node.newString("");
      Node node0 = new Node(69);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4665));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.newString("BOJ^PdD`zSd^4C", 2, 1507);
      node0.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 69
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node((-9));
      ImmutableList.of();
      Node.newString(30, "com.google.javascript.rhino.Node$IntPropListItem");
      Node node1 = new Node(43, 54, 37);
      node1.srcref(node0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(57, node0, node0, 30, 52);
      node0.isExprResult();
      node0.isGetElem();
      Node node2 = node1.removeChildren();
      node2.isOnlyModifiesThisCall();
      Node node3 = Node.newString("    ", 47, 43);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 50, 29);
      node1.setIsSyntheticBlock(true);
      node0.isDebugger();
      node1.isFor();
      node1.isTypeOf();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString((-540), "is_consJant_name");
      node0.isExprResult();
      Node node1 = new Node(103, node0, node0, 4194304, 95);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isVar();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp(4);
      node_NodeMismatch0.equals((Object) null);
      InputId inputId0 = new InputId("o^c].qjJgvTB0GT-aG");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getInputId();
      node0.getProp(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      node0.putProp(958, jSType0);
      node0.isContinue();
      node0.isGetterDef();
      node0.isNew();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("");
      Node node1 = new Node(69);
      node1.isIf();
      node1.isQualifiedName();
      node0.isParamList();
      node0.getSourcePosition();
      node1.isDec();
      Node node2 = new Node(29, node1, node0, node1, 0, 52);
      Node node3 = new Node(36, node2, 57, 37);
      node2.hasChild(node3);
      node3.getInputId();
      Object object0 = new Object();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.putProp(128, simpleSourceFile0);
      node0.isContinue();
      node0.isGetterDef();
      node2.addChildToFront(node3);
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node((-3596));
      Node node1 = Node.newString(138, "`", 8, (-2077));
      node0.isParamList();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      ImmutableList<StringType> immutableList0 = ImmutableList.copyOf((Collection<? extends StringType>) linkedHashSet0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node2.isInc();
      node2.isSetterDef();
      node2.isDo();
      node1.isDelProp();
      node1.hasMoreThanOneChild();
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.r|ino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(154, 12, 49);
      Node node2 = new Node(46, node1, node0);
      node2.useSourceInfoFromForTree(node0);
      node2.copyInformationFromForTree(node0);
      node2.hasChild(node0);
      node2.getInputId();
      Object object0 = new Object();
      node0.putProp(38, object0);
      node1.isContinue();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isExprResult();
      Node node1 = new Node(122, node0, node0, 4, 54);
      node1.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(815);
      node0.isEquivalentToShallow(node1);
      node1.isVar();
      node1.isLabel();
      node1.getChildAtIndex(1);
      // Undeclared exception!
      try { 
        node1.replaceChild((Node) null, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(19);
      ImmutableList.of();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = new Node(43, 54, 37);
      node2.clonePropsFrom(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(19);
      ImmutableList.of();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 38, 53);
      Node node2 = Node.newString(16, "'nDpui");
      Node node3 = new Node(53, node2, 2598, 15);
      Node node4 = node3.getAncestor(0);
      node3.isStringKey();
      node0.isVarArgs();
      node4.isTrue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node3.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = new Node(26);
      node0.setCharno(26);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("8dWK0$m@|+%", false);
      simpleSourceFile0.getLineOffset(1);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      node1.isSyntheticBlock();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isEquivalentTo(node0, true, false, true);
      node1.isScript();
      Node.extractLineno(Integer.MIN_VALUE);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(13);
      ImmutableList.of();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(46, (-1936), 2);
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".EX?|kMXqq2-X[");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(524288);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = new Node(153, node1, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2732));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node2.isCast();
      node2.isDebugger();
      node0.isOptionalArg();
      node2.isCatch();
      node1.isVoid();
      node2.getChildAtIndex((-2968));
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCase();
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isBlock();
      node0.isNew();
      node0.isParamList();
      Node node1 = node0.getAncestor(0);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(424);
      Node node1 = new Node(424, node0, node0, 0, 37);
      node1.setSourceEncodedPositionForTree(126);
      Node node2 = Node.newString(118, "");
      node0.getBooleanProp(40);
      node2.setIsSyntheticBlock(false);
      node2.isFalse();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node2.isInc();
      node1.isSetterDef();
      node3.isDo();
      node0.isDebugger();
      node3.isBreak();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node((-3596));
      Node node1 = new Node(42, node0, node0, node0, 42, 36);
      node0.isParamList();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<StringType> linkedHashSet0 = new LinkedHashSet<StringType>();
      ImmutableList<StringType> immutableList0 = ImmutableList.copyOf((Collection<? extends StringType>) linkedHashSet0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node2.isInc();
      node1.isSyntheticBlock();
      node2.isDo();
      node1.isDebugger();
      node1.isBreak();
      node1.cloneNode();
      node2.getAncestor(113);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString((-540), "is_constant_name");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_constant_name");
      Node node1 = new Node((-774), node0, 15, (-1329));
      node0.isEquivalentTo(node1, true, false, false);
      Node node2 = new Node(103, 55, 4095);
      Node node3 = new Node(0, node1, 1, 15);
      node3.srcref(node0);
      node2.isDo();
      node3.isDebugger();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      node0.isExprResult();
      node1.isGetElem();
      node1.removeChildren();
      node0.isOnlyModifiesThisCall();
      Node.newString("T72&<rgm", 55, 2);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isContinue();
      node0.cloneNode();
      node0.getChildCount();
      node0.addSuppression("");
      node0.toStringTree();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(2287);
      Node node1 = new Node(83, node0, node0, node0, 56, 2216);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isGetProp();
      node2.isEquivalentToTyped(node1);
      Node node3 = node2.removeChildren();
      node3.getProp(46);
      node1.useSourceInfoFrom(node3);
      node3.cloneNode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasChild(node2);
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isExprResult();
      Node node1 = new Node(122, node0, node0, 4, 54);
      node1.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(815);
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(148, node0, node0, 2222, (-24));
      Node node2 = Node.newNumber((-11.432442478360624));
      InputId inputId0 = new InputId("reflected_object");
      inputId0.toString();
      node0.setInputId(inputId0);
      node2.getInputId();
      node0.isArrayLit();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(26);
      node0.setCharno(26);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("8dWK0$m@|+%", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getAncestors();
      int int0 = Node.DIRECT_EVAL;
      Node node1 = node0.cloneTree();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isEquivalentTo(node0, false, true, false);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node node2 = Node.newString("A;m\"gXi-5Q)$sC/S M", 29, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.isCast();
      node2.isQualifiedName();
      node1.isDelProp();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString(114, "CharMatcher.ANY");
      Node node1 = Node.newString("CharMatcher.ANY");
      node0.isSwitch();
      Node node2 = new Node(42);
      node2.isIf();
      node2.isQualifiedName();
      node1.isParamList();
      node1.getSourcePosition();
      node2.isDec();
      Node node3 = new Node(31, 69, 38);
      Node node4 = new Node(40, node2, node3, node1, 36, 40);
      String string0 = "=HKge!v$)%~s";
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("g?~|9-N,MAr?mhR/", node3, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node((-3929), (-3929), (-1925));
      node0.children();
      node0.checkTreeEquals(node0);
      node0.getSideEffectFlags();
      node0.getAncestor(31);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFor();
      Node node1 = new Node((-1144), node0, node0, 4095, 54);
      Node node2 = node0.copyInformationFrom(node1);
      node2.getSourceOffset();
      node2.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(false);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(43);
      node0.getIntProp(52);
      node0.isQualifiedName();
      node0.isParamList();
      node0.isArrayLit();
      node0.putIntProp(1, 1);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(132, "dIFJ4%;|[GK*p'X");
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 41, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node0.isCast();
      node1.isQualifiedName();
      node0.isDelProp();
      node1.hasMoreThanOneChild();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(117, "CharMatcher.ANY");
      node0.setSourceEncodedPositionForTree(117);
      Node node1 = Node.newString(53, "Lv5+fX");
      node0.getBooleanProp(1832);
      node1.putBooleanProp(117, false);
      node0.setIsSyntheticBlock(true);
      node1.isFalse();
      node0.putProp(2, "CharMatcher.ANY");
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(52);
      node1.isVoid();
      node1.setString("Lv5+fX");
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newNumber(859.898235238654);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(524288);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = new Node(153, node1, node0, node1);
      node1.isRegExp();
      node0.isIn();
      node1.isTypeOf();
      node2.isNull();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      node0.isEquivalentTo(node0, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      InputId inputId0 = new InputId("Object#Key");
      inputId0.toString();
      InputId inputId1 = new InputId("+S~%N.\"5Ic");
      Node node1 = Node.newString("+S~%N.\"5Ic", 39, 253);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.srcrefTree(node2);
      node1.getQualifiedName();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node((-311));
      node0.isEquivalentTo(node1, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      InputId inputId0 = new InputId("Object#Key");
      inputId0.toString();
      inputId0.toString();
      InputId inputId1 = new InputId("Object#Element");
      node0.hasChild(node1);
      InputId inputId2 = new InputId("InputId: Object#Key");
      inputId2.toString();
      node1.isDo();
      node0.isWhile();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node((-3174));
      Node node1 = new Node(1, node0, node0, node0, (-1628), 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isGetProp();
      node0.isEquivalentToTyped(node1);
      Node node3 = null;
      try {
        node3 = new Node(36, node0, node0, node2, node1, 63, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(524302, 524302, 524302);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = new Node(16);
      Node node3 = new Node(12, node2, node1, node2, 36, 8287);
      // Undeclared exception!
      try { 
        node2.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      Node node3 = Node.newNumber((double) 54);
      node3.mayMutateGlobalStateOrThrow();
      node1.removeProp(4095);
      node3.getIntProp(48);
      node2.isQualifiedName();
      node3.isParamList();
      node0.isArrayLit();
      node0.putIntProp(132, 50);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      Node node1 = new Node(154, 12, 49);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      Node node3 = node0.detachFromParent();
      node2.isReturn();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node((-3596));
      node0.getProp(1);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = node1.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.srcref(node1);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      node1.isAnd();
      node2.putProp(4222, templateType0);
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node0.isGetterDef();
      // Undeclared exception!
      try { 
        node0.setDouble((-1520.931));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3596
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 16, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      Node node3 = new Node(53, node2, 41, 803);
      int int0 = Node.DIRECT_EVAL;
      node1.isAssignAdd();
      Node.newNumber((double) 52);
      node1.isName();
      Node node4 = new Node(2674, 37, 37);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(29, node0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isIf();
      InputId inputId0 = new InputId("Object#Element");
      node0.setInputId(inputId0);
      Node node2 = new Node(1, node1, node1, 975, 52);
      linkedList0.parallelStream();
      node0.getChildCount();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      node0.getIntProp(124);
      node0.isAnd();
      node0.isBlock();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(37, 12, 50);
      node0.isEmpty();
      node1.isAssign();
      node0.isHook();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.useSourceInfoIfMissingFrom(node0);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isExprResult();
      Node node1 = new Node(122, node0, node0, 4, 54);
      node1.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(815);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.isVar();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), (-550));
      Node node1 = new Node(148, node0, node0, 2222, 4);
      Node node2 = Node.newNumber(0.0);
      node1.getAncestor(12);
      node1.isSyntheticBlock();
      node2.mayMutateGlobalStateOrThrow();
      node1.isBreak();
      Node node3 = node1.srcref(node0);
      node3.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node3.isCast();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("directives");
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      Node node2 = new Node(131, (-2732), 42);
      node2.isEquivalentTo(node1, false, false, false);
      Node node3 = new Node(2, node2, node1);
      node3.hasChild(node2);
      Node node4 = node0.setJSDocInfo((JSDocInfo) null);
      node4.setType(32);
      node2.isIf();
      InputId inputId0 = new InputId("Object#Key");
      inputId0.toString();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      node3.isThis();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber(40.0);
      Node node1 = new Node(37, node0);
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-244));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -244
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString((-540), "is_constant_name");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_constant_name");
      Node node1 = new Node((-774), node0, 15, (-1329));
      node1.isNE();
      node1.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      ImmutableList.of();
      Node node1 = Node.newNumber((double) 49);
      Node node2 = new Node(1, 30, (-693));
      Node node3 = new Node(30, node1, node2, node2);
      node2.getSourceOffset();
      node3.isFor();
      node3.isUnscopedQualifiedName();
      node1.isIn();
      node3.isTypeOf();
      node3.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node((-319));
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(46, node0, node0, node0);
      node1.isRegExp();
      node1.getBooleanProp((-1660));
      node1.useSourceInfoFromForTree(node0);
      node0.isHook();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node2.isFor();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(2905);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      node0.getIntProp(124);
      node0.isInc();
      node0.isGetElem();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.getChildCount();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("`. Eq=8e:&<?@w9{");
      node_FileLevelJsDocBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString((-540), "is_constant_name");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_constant_name");
      int int0 = (-774);
      int int1 = (-1329);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node node2 = new Node(42, 2998, 4);
      Node node3 = new Node(1417, node1, node1, node2, 4095, 50);
      node0.addChildrenToFront(node3);
      node1.isTypeOf();
      node3.isAssignAdd();
      node2.isContinue();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      Node node0 = Node.newString("Object#Key");
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      Node node1 = new Node((-1049), node0, node0, node0, node0, (-1049), 37);
      node0.isFor();
      node0.isUnscopedQualifiedName();
      node1.isIn();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node(269);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isLabelName();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString(138, "dIFJ4%;|[GK*0p'X");
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(26);
      Node node1 = new Node(26, node0, node0, node0, node0);
      node0.isEquivalentTo(node1);
      ImmutableList.of();
      node0.getAncestors();
      node0.toString(true, true, true);
      node0.isAssignAdd();
      node0.isThis();
      node0.isNew();
      node1.isOr();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(114);
      node0.getProp(1746);
      Node node1 = new Node(16384, node0, node0, node0);
      Node node2 = node1.getLastChild();
      Node node3 = new Node((-3170), 36, 57);
      node2.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      jSTypeArray0[7] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isBlock();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isWith();
      node1.isFromExterns();
      node0.isTrue();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node1.isAssign();
      node0.isDefaultCase();
      node1.mayMutateGlobalStateOrThrow();
      Node node3 = node1.detachFromParent();
      node3.cloneNode();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(2287);
      Node node1 = new Node(83, node0, node0, node0, 56, 2216);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isGetProp();
      node2.isEquivalentToTyped(node1);
      Node node3 = node2.removeChildren();
      node3.getProp(46);
      node3.cloneNode();
      node3.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(38, node0, node0, 2, 57);
      node1.isEquivalentToShallow(node1);
      node1.isVar();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(0);
      Node node2 = new Node(39, node0, node0, 52, 49);
      Node node3 = new Node(4, node1, 30, 41);
      node2.isAssign();
      node2.isDefaultCase();
      node1.mayMutateGlobalStateOrThrow();
      Node node4 = node1.detachFromParent();
      node1.isScript();
      Node node5 = new Node(132, node2, node3, node4, node2);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      inputId0.toString();
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node1.getProp(30);
      node0.putProp(38, (Object) null);
      node1.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isDec();
      Node node3 = node1.cloneNode();
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      int int0 = (-1278);
      Node node1 = new Node(97, node0, node0, 49, (-1278));
      node1.setLength(2);
      node1.isInstanceOf();
      Node node2 = null;
      try {
        node2 = new Node(148, node0, 2488, (-2252));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(105, node0, node0, node0, node0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 41, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.isBreak();
      node1.isNull();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(1309);
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.srcrefTree(node1);
      node1.hasOneChild();
      node1.isLabelName();
      node0.isVar();
      node0.isLocalResultCall();
      node1.addChildrenAfter(node1, node0);
      node1.isFor();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 12, 49);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6");
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      node2.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(38, "no naxt siblin.");
      node1.getBooleanProp(1);
      node1.setIsSyntheticBlock(true);
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isSyntheticBlock();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0);
      node0.isDelProp();
      node0.setChangeTime((-1939));
      Node[] nodeArray0 = new Node[0];
      Node.extractCharno(37);
      Node.mergeLineCharNo(1603, 2048);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = new CharArrayWriter(48);
      node0.appendStringTree(charArrayWriter1);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(40);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 40
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(1309);
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      Node node2 = new Node(2, node1, 50, 51);
      Node node3 = new Node((-3491), node2);
      node0.srcrefTree(node3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node1.isLabelName();
      node0.isVar();
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node((-3596));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "direct_eval");
      node0.getProp(1);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = node1.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.createTemplateType("direct_eval");
      node2.cloneNode();
      node2.putProp(42, simpleErrorReporter0);
      node2.isContinue();
      node0.isGetterDef();
      HashSet<JSType> hashSet0 = null;
      try {
        hashSet0 = new HashSet<JSType>(44, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(1, node0, node0, node0, node0, 32, (-2267));
      Node node2 = new Node(674, node1, node1, (-2825), 303);
      Node node3 = node1.copyInformationFrom(node0);
      node3.setOptionalArg(false);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(40);
      node2.getIntProp(472);
      node3.isQualifiedName();
      node2.isParamList();
      node3.isArrayLit();
      Node node4 = null;
      try {
        node4 = new Node(105, node2, node0, node1, node0, 54, 188);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isDefaultCase();
      node1.isParamList();
      node1.isTry();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDebugger();
      int int0 = 128;
      Node node1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.cloneTree();
      Node node2 = Node.newString("");
      // Undeclared exception!
      try { 
        node2.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isCase();
      Node node1 = Node.newString(51, "*IS`$+/;", 132, 32);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(55, node1, node1, 40, 47);
      node2.isNull();
      Node node3 = new Node((-605));
      node2.replaceChild(node1, node0);
      node3.getBooleanProp(47);
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Object object0 = new Object();
      Node node1 = new Node(249, node0, node0, node0);
      Node node2 = node1.getLastChild();
      Node node3 = new Node(41, (-482), 37);
      node1.addChildrenToBack(node3);
      Node node4 = node2.cloneTree();
      node3.isScript();
      node0.isTypeOf();
      node0.checkTreeTypeAwareEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("MK>", 35, 32);
      Object object0 = new Object();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node_NodeMismatch0.equals(templateType0);
      node0.isVarArgs();
      node1.getAncestors();
      node1.isOnlyModifiesThisCall();
      node0.isGetProp();
      node1.isBlock();
      node0.setDouble((-1.0));
      Node node2 = new Node(3950);
      node0.addChildToBack(node1);
      node2.isSwitch();
      node2.isFor();
      Node node3 = Node.newNumber((-824.0251));
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(56, nodeArray0, (-2087), (-1565));
      nodeArray0[0].type = 4095;
      Node.extractCharno(54);
      Node.mergeLineCharNo((-1935), (-1));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = new CharArrayWriter(46);
      charArrayWriter1.append((CharSequence) "Object#Key");
      // Undeclared exception!
      try { 
        node1.appendStringTree(charArrayWriter1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)106;
      byteArray0[5] = (byte)111;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber(0.5);
      node0.isDelProp();
      node0.setLineno(24);
      node0.siblings();
      node0.getJSDocInfo();
      int int0 = Node.DIRECT_EVAL;
      node0.isAssignAdd();
      node0.isName();
      node0.isNew();
      node0.isFor();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node((-3596));
      Node node1 = Node.newString("xjE)Im*", 36, (-2989));
      node1.isThis();
      node1.isCast();
      node1.setOptionalArg(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.isParamList();
      node1.getSourceOffset();
      node0.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.setString("side_effect_flags");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3596
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 3243, 3243);
      node0.isDelProp();
      node0.getProp(51);
      Node node1 = new Node((-286), node0, node0, node0);
      node0.getLastChild();
      Node node2 = new Node((-992), (-495), 36);
      Node node3 = null;
      try {
        node3 = new Node(19, node2, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(48, (Node) null, node0, (Node) null, 42, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString(1769904, "Object#Key", 86, 36);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setOptionalArg(false);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp(43);
      node2.getDouble();
      node0.toString();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.isUnscopedQualifiedName();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.isFor();
      Node node1 = new Node(31, node0, node0, 54, 55);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setOptionalArg(false);
      node1.mayMutateGlobalStateOrThrow();
      node2.removeProp(1866);
      node0.getIntProp(37);
      node2.isQualifiedName();
      node2.isParamList();
      node2.isArrayLit();
      node1.putIntProp(30, 38);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(51, node0, node0, node0, 53, 0);
      node0.hasChild(node1);
      node0.isNull();
      Node.newString("String");
      Node node2 = node1.useSourceInfoFrom(node0);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node((-3596));
      node0.getProp(1);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = node1.removeChildren();
      node2.getProp((-2172));
      Node node3 = node1.cloneNode();
      Node node4 = Node.newString(101, "VoXZ$M&Zj");
      node0.isEquivalentToShallow(node4);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(766.683078122621, 187, (-5405));
      node0.isFor();
      node0.isGetProp();
      node0.isCase();
      Node node1 = Node.newString(50, "com.google.common.base.Joiner$2", 38, 50);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(42, node1, node0, 49, 31);
      node2.isNull();
      Node node3 = new Node(4);
      node2.replaceChild(node1, node3);
      node3.getBooleanProp(1664);
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(15, "?^LcD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?^LcD");
      Node node1 = new Node(15, node0, (-2159), 1);
      node1.isEquivalentTo(node0, true, false, true);
      Node node2 = new Node(4136, (-3576), (-3377));
      node0.setLineno(51);
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$NumberNode";
      Node node0 = Node.newNumber(0.0, (-449), (-795));
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.setSourceEncodedPositionForTree(51);
      node0.getBooleanProp(37);
      Node node2 = node1.srcref(node0);
      node1.detachChildren();
      Node node3 = new Node((-635), node2, node0, node1, 57, 12);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -635
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) 418, 418, 50);
      Node node1 = new Node(418, node0, 225299, 124);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      jSTypeArray0[4] = (JSType) objectType0;
      jSTypeArray0[5] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      Node node3 = Node.newNumber((double) 57, 38, 57);
      node3.isSwitch();
      Node node4 = Node.newString(36, "`kagi|\"", 32, 56);
      node4.isDec();
      Node node5 = Node.newString("E[t{jO^?R~~K?'\"9}2K");
      node5.isGetProp();
      node0.isWith();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(1309);
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node1.isLabelName();
      node0.isVar();
      node0.isLocalResultCall();
      node1.addChildrenAfter(node1, node0);
      node1.isFor();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = Node.newString(113, "N#<;V&7-&i?wLMMnr");
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node1.isLabelName();
      node1.isLocalResultCall();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.siblings();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(148, node0, node0, 2222, 0);
      Node node2 = Node.newNumber((double) 2);
      node1.getAncestor(12);
      node1.wasEmptyNode();
      node2.mayMutateGlobalStateOrThrow();
      node1.isBreak();
      Node node3 = node1.srcref(node0);
      node3.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node node4 = new Node(37, 43, (-108));
      node3.getQualifiedName();
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(5076);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("\n\nSubtree2: ");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = Node.newString((-3151), "9=]Hn>|Z'G", 37, (-4430));
      node1.isBlock();
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = node1.cloneNode();
      node2.mayMutateArguments();
      node0.getBooleanProp(130);
      Node node4 = new Node(55, node0, node3, node3, node0, 48, 46);
      node4.isHook();
      node4.getCharno();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(1309);
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node1.isLabelName();
      node0.isVar();
      node0.isLocalResultCall();
      node1.addChildrenAfter(node1, node0);
      node1.setLineno(52);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node1.isArrayLit();
      node0.isInc();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 84, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      Node node3 = new Node(1413, node1, node1, node2, 4095, 50);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 524288 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Object object0 = new Object();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("directives");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(49, node0);
      node1.isIf();
      node1.isQualifiedName();
      node0.isParamList();
      node1.getSourcePosition();
      node0.isDec();
      Node node2 = node1.cloneNode();
      Node node3 = null;
      try {
        node3 = new Node(47, node2, node2, node0, 2, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getAncestors();
      node0.setLineno(2101);
      node0.siblings();
      node0.getJSDocInfo();
      int int0 = Node.DIRECT_EVAL;
      node0.isAssignAdd();
      node0.isName();
      node0.isQuotedString();
      node0.isFor();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(132, "dIFJ4%;|[GK*0p'X");
      node0.isLabel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node0.isLabelName();
      node0.isVar();
      Node node1 = new Node(51, node0, node0, node0, node0);
      node0.addChildrenAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString(1, "iA~V#E>b");
      Node node1 = Node.newString("iA~V#E>b", 32, 1);
      Node node2 = Node.newString("iA~V#E>b", 4095, 1719);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iA~V#E>b");
      node0.removeProp(1193);
      Node node3 = new Node(31, (-1660), 64);
      node2.getQualifiedName();
      node1.isCall();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(51, node0, node0, node0, 53, 0);
      node0.hasChild(node1);
      node0.isNull();
      Node node2 = new Node(8);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(1614, 1614, 1614);
      node0.getLength();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isDebugger();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(38, node1);
      node2.isIf();
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isFor();
      Node node1 = new Node(32, node0, node0, (-1), 83);
      Node node2 = node1.copyInformationFrom(node0);
      node0.setOptionalArg(false);
      node2.mayMutateGlobalStateOrThrow();
      node2.removeProp(0);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(40, node0, node0);
      node1.getChildCount();
      node_FileLevelJsDocBuilder0.append("this");
      Node node2 = new Node(4095);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      node0.putBooleanProp(8, false);
      node0.isFor();
      node0.isUnscopedQualifiedName();
      node0.isIn();
      Node node1 = new Node(51);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.getAncestors();
      node0.getAncestors();
      node0.isOnlyModifiesThisCall();
      node0.isGetProp();
      node0.isBlock();
      try { 
        node0.setDouble(26);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NOT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      node1.isGetElem();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(33);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node1.getChildCount();
      node_FileLevelJsDocBuilder0.append("");
      node1.addSuppression("null");
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 524288
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(36);
      node0.isEquivalentTo(node1, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      Node node2 = Node.newString(",5<!JBZq]w28", 50, (-3878));
      node2.isFromExterns();
      Node node3 = new Node(4, 131072, 51);
      node2.getQualifiedName();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node((-3596));
      node0.getProp(1);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = node1.getLastChild();
      Node node3 = new Node(1115, 57, 57);
      node0.addChildrenToBack(node3);
      node2.cloneTree();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isBlock();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.cloneNode();
      node2.mayMutateArguments();
      node0.getBooleanProp(30);
      node1.isHook();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node((-3596));
      node0.getProp(1);
      Node node1 = new Node(114, node0, node0, node0);
      Node node2 = node1.getLastChild();
      Node node3 = new Node(1115, 57, 57);
      node0.addChildrenToBack(node3);
      node2.putBooleanProp(8, false);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      node0.removeChildren();
      node0.getProp(42);
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(766.683078122621, 187, (-5405));
      node0.isFor();
      node0.isGetProp();
      node0.isCase();
      Node node1 = Node.newString(50, "com.google.common.base.Joiner$2", 38, 50);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(1, node1);
      node2.addChildBefore(node0, node1);
      node2.setSourceEncodedPosition(1337);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString("com.google.common.base.Joiner$2");
      node3.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(1, node0);
      Node node2 = new Node(131, (-2732), 42);
      node2.isEquivalentTo(node1, true, false, false);
      Node node3 = new Node(2, node2, node1);
      node3.hasChild(node2);
      node2.isIf();
      InputId inputId0 = new InputId("Object#Key");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getIndexOfChild(node1);
      node1.isObjectLit();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = new Node(44, node0, 57, 64);
      Node node2 = Node.newNumber((double) 53);
      node1.isEquivalentToShallow(node2);
      node1.srcref(node0);
      node1.toString(false, false, false);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      node0.setSourceEncodedPositionForTree(2289);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node(27591, 1706, 33);
      node1.hasChild(node0);
      node0.isIf();
      node0.setSourceEncodedPositionForTree(42);
      node1.isCase();
      node1.isFunction();
      node0.setQuotedString();
      Node node2 = new Node(57, node1, node1, node1, node1, 30, 47);
      node0.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node0.setSourceEncodedPositionForTree(2289);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node(27591, 1706, 33);
      node1.hasChild(node0);
      node0.isIf();
      Node.newString("mUqygR@O1Nf} J!M4Y");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.hasChildren();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      ImmutableList.of();
      Node node1 = Node.newString(2, "");
      Node node2 = Node.newString(30, "");
      Node node3 = new Node(30, node1, node2, node2);
      node3.mayMutateArguments();
      node2.getSourceOffset();
      node3.isFor();
      node3.setSideEffectFlags((-4372));
      node3.getInputId();
      node3.isUnscopedQualifiedName();
      node1.isIn();
      node3.isTypeOf();
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node((-3280));
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 37, 57);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 131, 54);
      node0.isFromExterns();
      Node node3 = new Node(54, 56, 118);
      node1.getQualifiedName();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      Node node2 = Node.newNumber((double) 4, 480, (-1523));
      node0.useSourceInfoFrom(node2);
      node1.isQualifiedName();
      boolean boolean0 = false;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(148, node0, node0, 2222, 0);
      Node.newNumber(0.0);
      node1.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      JSType jSType0 = jSTypeRegistry0.createFromTypeNodes(node0, "Object#Key", (StaticScope<JSType>) null);
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType(jSType0, jSTypeArray0);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createFunctionTypeWithVarArgs((JSType) functionType0, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(514);
      node0.siblings();
      node0.getJSDocInfo();
      Node node1 = new Node((-1479), node0, node0, node0, node0, 37, 52);
      node0.putBooleanProp(40, false);
      node0.isFor();
      node0.isUnscopedQualifiedName();
      node0.isIn();
      Node node2 = new Node(37);
      node2.useSourceInfoIfMissingFrom(node1);
      Node node3 = null;
      try {
        node3 = new Node(751619276, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      Node node1 = Node.newString(0, "XS=>WaUo/'7kx=N6n", (-5108), 9);
      Node node2 = new Node(42, node1, node1, 31, 514);
      Node node3 = node2.copyInformationFrom(node1);
      node0.toStringTree();
      node1.setOptionalArg(true);
      node3.mayMutateGlobalStateOrThrow();
      node1.removeProp(30);
      node2.getIntProp((-719));
      node1.isQualifiedName();
      Node node4 = new Node(15);
      node4.isParamList();
      node1.isArrayLit();
      node3.putIntProp(31, 53);
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(36, 3155, 37);
      Node node2 = new Node(310, node0, node0, 43, 53);
      Node node3 = new Node(101, node1, 56, 30);
      node3.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType objectType0 = jSTypeRegistry1.createAnonymousObjectType((JSDocInfo) null);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString(91, "pXIQ<F*?%H~c");
      node0.getInputId();
      node0.isName();
      String string0 = "#oTGb}\"noe Ts/U";
      Node node1 = Node.newString(47, "#oTGb}\"noe Ts/U");
      node0.addChildToBack(node1);
      node1.isCase();
      Node node2 = node1.cloneTree();
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.isName();
      node1.mayMutateArguments();
      node0.removeFirstChild();
      node3.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(3309);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3309
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.5);
      node0.isDelProp();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1, nodeArray0, 1, (-3920));
      Node.extractCharno(37);
      Node.mergeLineCharNo(1626, 2048);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "Zrz?Zu3eiI*");
      // Undeclared exception!
      try { 
        node1.appendStringTree(charArrayWriter1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString(15, "?^LcD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?^LcD");
      Node node1 = new Node(15, node0, (-2159), 1);
      Node node2 = new Node(2, node1, node1, 536870912, 36);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(57, node0, node0);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      node2.isLocalResultCall();
      Node node3 = new Node(42, 2998, 4);
      node1.addSuppression("first new child has existing sibling");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.getChildCount();
      node_FileLevelJsDocBuilder0.append("");
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(33, 100, 33);
      Node node1 = new Node(4095, node0, node0, 154, (-336));
      Node node2 = Node.newNumber((double) 55);
      node0.cloneNode();
      node2.mayMutateArguments();
      Node node3 = Node.newString("");
      Node node4 = null;
      try {
        node4 = new Node(53, node1, node0, node3, node3, 15, (-243));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("Zrz?Zu3eiI*");
      double double0 = 0.5;
      Node node1 = new Node(46, node0);
      node1.getDirectives();
      node0.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node1.setSourceEncodedPositionForTree(15);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber((double) 880, 2344, 2344);
      Node node1 = new Node(880, node0, node0, node0, node0);
      node1.setSourceEncodedPositionForTree(43);
      node1.getBooleanProp(38);
      Node node2 = node1.srcref(node0);
      node2.detachChildren();
      Node node3 = new Node(100, node1, node0, node1, 15, (-499));
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 880
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString(15, "?^LcD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?^LcD");
      Node node1 = new Node(15, node0, (-2159), 1);
      node1.isEquivalentTo(node0, true, false, true);
      Node node2 = new Node(4136, (-3576), (-3377));
      node0.setLineno(51);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      node0.setSourceEncodedPositionForTree(2289);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node(27591, 1706, 33);
      node1.hasChild(node0);
      node0.isIf();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node1.setInputId(inputId0);
      node1.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("7eO(h", "7eO(h", 4, 43);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      int int0 = Node.DIRECT_EVAL;
      node0.isAssignAdd();
      node0.isName();
      node0.isNew();
      node0.isFor();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(33, 2605, 2605);
      Node node1 = new Node(56, node0, node0, 56, 4095);
      Node node2 = Node.newNumber((double) 39);
      node0.isNE();
      node0.hasOneChild();
      node2.isNew();
      Node node3 = node0.cloneTree();
      node2.setVarArgs(false);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isIf();
      Node node1 = new Node(2971, node0, node0, node0);
      node1.isQualifiedName();
      node0.isParamList();
      node0.getSourceOffset();
      node1.getSourcePosition();
      node1.isDec();
      node1.cloneNode();
      node1.isFromExterns();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.hasChild((Node) null);
      Node node1 = new Node(40, 64, (-956));
      node0.isEquivalentTo(node1, false, true, false);
      Node node2 = new Node(31, 38, 15);
      node2.hasChild(node0);
      node0.isIf();
      InputId inputId0 = new InputId("");
      node2.setInputId(inputId0);
      Node node3 = Node.newNumber((double) 40);
      Node node4 = null;
      try {
        node4 = new Node(110, node3, (Node) null, 40, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node3 = new Node(42, 2998, 4);
      Node node4 = new Node(1417, node1, node1, node3, 4095, 50);
      node0.isIf();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$AbstractPropListItem");
      inputId0.toString();
      node4.setInputId(inputId0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)18;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newNumber(1471.93302777494, 36, 803);
      Node node1 = new Node(32, 29, 31);
      node1.setLength(35);
      node1.isInstanceOf();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node node2 = new Node(42, 2998, 4);
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 553);
      Node node3 = new Node(57, (-1144), (-336));
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = new Node(18);
      node0.type = 64;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = null;
      node0.mayMutateGlobalStateOrThrow();
      node0.setIsSyntheticBlock(true);
      node0.isBreak();
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSTypeArray0[0];
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSTypeArray0[0];
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isBlock();
      JSType[] jSTypeArray1 = new JSType[5];
      jSTypeArray1[0] = jSType0;
      jSTypeArray1[1] = jSType0;
      jSTypeArray1[2] = jSType0;
      jSTypeArray1[3] = jSType0;
      jSTypeArray1[4] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = "G2Ir\\yU3?mw?v_Y[h&V";
      Node node0 = new Node(1366, 1366, 1366);
      Node node1 = Node.newNumber(0.7);
      Node node2 = new Node(1366, node0, node1, node1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("G2IryU3?mw?v_Y[h&V", node2, (ImmutableList<TemplateType>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isLocalResultCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "InputId: com.google.javascript.rhino.Node$NumberNode");
      Node node1 = new Node(154, 44, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(155, 12, 2);
      node0.setLineno(309);
      node2.isOr();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      node0.isFalse();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      node0.getAncestors();
      Node node1 = new Node(10, node0, node0, 524288, 310);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = node2.copyInformationFrom(node1);
      node1.setOptionalArg(false);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2993));
      node2.getIntProp(51);
      node1.isQualifiedName();
      Node node4 = new Node(475193, node2, node1, node3);
      Node.newString(43, "Object#Element");
      node4.isParamList();
      node0.isArrayLit();
      node3.putIntProp(954, 122);
      node1.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      node0.isObjectLit();
      Node.newString("5OX)'t*W/wRN<%|");
      node1.setLineno(83);
      node0.isFunction();
      node0.isCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      Node node1 = new Node(56, node0, node0, node0, node0, 48, 54);
      node0.putBooleanProp(8, false);
      node1.isFor();
      node0.isUnscopedQualifiedName();
      node1.isIn();
      Node node2 = new Node(51);
      node2.useSourceInfoIfMissingFrom(node1);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      node2.getIntProp(57);
      node1.isAnd();
      node2.isGetElem();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(750);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node1 = new Node(39, node0, node0, node0, node0, 16, 39);
      node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(63);
      Node node2 = new Node(43, (-636), (-2243));
      Node node3 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 32, 4107);
      Node node4 = new Node(55, 903, 42);
      node1.getQualifiedName();
      node0.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("incrdecr");
      node0.removeFirstChild();
      node0.setVarArgs(false);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(36);
      node0.isEquivalentTo(node1, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      InputId inputId0 = new InputId("Object#Key");
      InputId inputId1 = new InputId("Object#Key");
      inputId1.toString();
      InputId inputId2 = new InputId("+S~%N.\"5Ic");
      node1.setInputId(inputId2);
      node1.getInputId();
      node1.getProp(50);
      node0.putProp(105, jSTypeRegistry1);
      node0.isContinue();
      node1.isGetterDef();
      node1.addChildToFront(node0);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = new Node(1632);
      node0.getLength();
      node0.getIntProp((-2139));
      node0.isQualifiedName();
      node0.isParamList();
      Node node1 = new Node((-2020));
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newString("directives", 148, 0);
      Node node1 = new Node(148, node0, node0, 2222, 0);
      Node node2 = Node.newNumber(0.0);
      node1.getAncestor(12);
      node1.wasEmptyNode();
      node2.mayMutateGlobalStateOrThrow();
      node1.setIsSyntheticBlock(true);
      node1.isBreak();
      Node node3 = node1.srcref(node0);
      node3.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node1.isScript();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node1.getProp(30);
      node0.putProp(38, (Object) null);
      node1.isContinue();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isFor();
      node0.isUnscopedQualifiedName();
      node1.isIn();
      Node node2 = new Node(51);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "M");
      ImmutableList.of();
      Node node0 = Node.newString("CA}Mx6&");
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isIf();
      node0.isQualifiedName();
      node0.isParamList();
      node0.getSourceOffset();
      node0.getSourcePosition();
      node0.isDec();
      node0.getAncestors();
      node0.detachChildren();
      node0.getLastChild();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(1632);
      Node node1 = Node.newString("C");
      node1.hasOneChild();
      node0.isNoSideEffectsCall();
      Node node2 = Node.newString(3598, "The existing child node of the parent should not be null.", (-1784), 64);
      node2.isComma();
      node0.isNew();
      node1.isSetterDef();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1632
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      node0.isFalse();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList.of();
      node0.getAncestors();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getInputId();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node1.toString(true, true, false);
      Node.extractLineno((-2675));
      Node.newString(5047, "f[6le/O", 1321, 40);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node(1303);
      node0.getQualifiedName();
      node0.setVarArgs(false);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAssignAdd();
      node0.isThis();
      node0.isNew();
      Node node1 = Node.newString(47, "X53");
      node1.isAdd();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      node0.setVarArgs(false);
      node0.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node0.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1309
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesArguments();
      node0.isIf();
      node_SideEffectFlags6.setReturnsTainted();
      node0.setString("");
      node0.getInputId();
      Node node1 = new Node((-2580), node0);
      node1.setInputId((InputId) null);
      node1.getIndexOfChild(node0);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      node0.getString();
      Object object0 = new Object();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("directives");
      node0.isVarArgs();
      node0.isTrue();
      Node node1 = node0.cloneNode();
      node1.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(750);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.getStaticSourceFile();
      Node node2 = new Node(117, node1);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node1.isAssign();
      Node.newString((-95), "E~W VOAGv=", 3000, 31);
      node1.getIndexOfChild(node2);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("Zrz?Zu3eiI*");
      Node node1 = new Node(46, node0);
      node1.getDirectives();
      node0.addChildrenToBack(node1);
      Node node2 = Node.newNumber(0.5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.getInputId();
      node0.type = 31;
      node0.addChildrenToBack(node2);
      node0.getDirectives();
      Node.extractCharno(1);
      node2.isInc();
      node0.setSourceFileForTesting("");
      node2.isQuotedString();
      node0.getParent();
      node0.isNoSideEffectsCall();
      node2.isNew();
      node1.isNull();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString(15, "?^LcD");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?^LcD");
      Node node1 = new Node(15, node0, (-2159), 1);
      Node node2 = Node.newNumber((double) 29);
      node1.isEquivalentToShallow(node2);
      node1.toString(false, false, true);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString(555, "dIFJ4%;|[GK*0p'X");
      node0.setSourceEncodedPositionForTree(11);
      Node node1 = Node.newString(132, "dIFJ4%;|[GK*0p'X");
      node0.setSourceFileForTesting("\n\nSubtree2: ");
      node0.getBooleanProp(0);
      node1.hasChild(node0);
      node1.isString();
      Node node2 = new Node(55, 1674, (-1833));
      node1.getQualifiedName();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$NumberNode", 51, 47);
      node0.isEquivalentTo(node1, true, true, true);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node0.isIf();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node1.getProp(30);
      node0.putProp(38, (Object) null);
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString(3601, "");
      node0.getInputId();
      node0.isName();
      Node node1 = Node.newString(15, "already specified useForNull");
      node0.addChildToBack(node1);
      node0.isCase();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3601
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = new Node(1632);
      node0.getLength();
      Node node1 = new Node(32, 125, 57);
      Node node2 = new Node(8, 1, 54);
      Node node3 = new Node(16, node2, node2, node1);
      node2.getSourceOffset();
      node1.isFor();
      node1.isUnscopedQualifiedName();
      node0.isIn();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 4536, 4536);
      Node node1 = new Node(44, node0, node0, 12, 1186);
      Node.newNumber(576.4463385402873);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node2.getAncestor((-3490));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(27591, 1706, 33);
      node1.hasChild(node0);
      node0.isIf();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      inputId0.toString();
      node1.setInputId(inputId0);
      Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node0.isFunction();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(42, 53, 48);
      node0.isCatch();
      node0.getInputId();
      Node node2 = Node.newString("Object#Key");
      node0.hasOneChild();
      node2.isNoSideEffectsCall();
      node0.isComma();
      Node node3 = new Node((-99), 4, 1);
      node3.getIntProp(0);
      node0.isEquivalentToShallow(node0);
      node1.isParamList();
      node3.isArrayLit();
      node0.isBlock();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node2.siblings();
      node0.getJSDocInfo();
      node1.toString(false, false, true);
      Node.extractLineno(114);
      node2.isAssignAdd();
      node2.isThis();
      node1.isNew();
      node1.isAdd();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newNumber(1471.93302777494, 36, 803);
      Node node1 = new Node((-1454), node0, (-2843), 301);
      node1.setLength(35);
      node1.isInstanceOf();
      node1.removeChild(node0);
      node0.setType(50);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      String string0 = "XS=>WaUo/'7kx=N6n";
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node node1 = Node.newString("r.auR(h@0u", 30, 1897);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(27591, 1706, 33);
      node1.hasChild(node0);
      node0.isIf();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node1.setInputId(inputId0);
      node0.isSetterDef();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 553);
      node0.cloneTree();
      node2.isScript();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, false);
      node0.removeProp(3735);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.putProp(3735, simpleSourceFile0);
      node0.isContinue();
      node0.isString();
      Node node1 = new Node(51, (-64), 52);
      node0.getQualifiedName();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = new Node(42, 3010, 4);
      Node node4 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 553);
      node2.setSourceEncodedPositionForTree(4095);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      Node node5 = new Node((-448), nodeArray0);
      node4.setLineno(57);
      node0.isFunction();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 116 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(57);
      ImmutableList.of();
      Node node1 = Node.newString(2, "");
      Node node2 = new Node(1, 30, (-683));
      Node node3 = new Node(30, node1, node2, node2);
      node2.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(46, node0, node0, node0);
      Node node2 = new Node(53, node1, node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("", 0, 0);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId("|SU-Jq6e%\"V'+y");
      node0.setInputId(inputId0);
      node0.isNot();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node(1632);
      node0.getLength();
      Node node1 = new Node(1, node0, node0);
      int int0 = 3552;
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = new Node(524278);
      Node node1 = new Node(38, node0, node0, 524278, 57);
      Node node2 = new Node(0, node1, 56, 48);
      node1.isAssign();
      node0.isDefaultCase();
      node1.mayMutateGlobalStateOrThrow();
      node1.detachFromParent();
      node1.isSetterDef();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(13, 583, 91);
      Node node1 = new Node(43, node0, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isFromExterns();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 553);
      Node node3 = new Node(57, (-1144), (-336));
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 116 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString(103, "pXIQ<F*?%H~c");
      node0.getInputId();
      node0.isName();
      String string0 = "#oTGb}\"noe Ts/U";
      Node node1 = Node.newString(47, "#oTGb}\"noe Ts/U");
      node0.addChildToBack(node1);
      node1.isCase();
      node1.toString();
      Node node2 = node1.getParent();
      Node node3 = node2.cloneTree();
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isIf();
      node0.isQualifiedName();
      node0.isParamList();
      node0.getSourceOffset();
      node0.getSourcePosition();
      node0.isDec();
      Node node1 = node0.cloneNode();
      node0.getIndexOfChild(node1);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(155, 12, 2);
      node1.hasChild(node0);
      node0.isWith();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CAST 12 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isNoSideEffectsCall();
      node0.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("XS=>WaUo/'7kx=N6n", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isParamList();
      node0.getSourceOffset();
      node0.getSourcePosition();
      node0.isDec();
      Node node1 = node0.cloneNode();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setLineno(382);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("directives", 64, (-291));
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isIf();
      node0.isQualifiedName();
      node0.isParamList();
      node0.getSourceOffset();
      node0.getSourcePosition();
      Node node1 = new Node(57, 125, 8);
      Node node2 = new Node(306654252, node1, 2, 1148);
      node2.isDec();
      Node node3 = node2.cloneNode();
      node0.isFromExterns();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("A4\"");
      node0.toString(true, true, true);
      node0.getInputId();
      node0.getSourceFileName();
      node0.getChangeTime();
      node0.getBooleanProp(132);
      Node node1 = Node.newNumber(40.0);
      node1.type = 8;
      Node node2 = Node.newNumber((double) 40, 132, 132);
      Node.extractCharno(1);
      Node node3 = node1.copyInformationFrom(node0);
      node1.detachChildren();
      node0.isName();
      node2.isTry();
      node1.hasChildren();
      node0.mayMutateArguments();
      node1.getBooleanProp(54);
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(309);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(46, node0, node0, node0);
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getAncestors();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isEquivalentTo(node1);
      Node node2 = node0.cloneTree();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 12, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(46, node1, node0);
      node2.hasChild(node0);
      node0.isIf();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      node1.getProp(30);
      node0.putProp(38, (Object) null);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      node0.removeProp(64);
      node0.getIntProp(1100);
      node0.isQualifiedName();
      node0.isParamList();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(36);
      node0.isEquivalentTo(node1, false, false, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      InputId inputId0 = new InputId("Object#Key");
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node(524278, 524278, 524278);
      node0.hasChildren();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-4096), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = new Node(39, 0, 49);
      Node node2 = new Node(751619276, node0, node0, 1146, 4);
      Node node3 = new Node(3357, node2, 46, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node4.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      Node node3 = Node.newString("E\"4GCc=");
      node1.hasOneChild();
      node2.isNoSideEffectsCall();
      node1.isComma();
      node2.isNew();
      node3.isSetterDef();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 116 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(46, node0, node0, node0);
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isEquivalentTo(node1);
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = new Node(54, node0, node0, 36, 524288);
      Node node2 = node1.copyInformationFrom(node0);
      node0.setOptionalArg(false);
      node1.mayMutateGlobalStateOrThrow();
      node0.removeProp(116);
      node2.getIntProp((-5024));
      node2.isQualifiedName();
      node0.isParamList();
      node0.isArrayLit();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node3 = Node.newNumber((double) 36);
      nodeArray0[4] = node3;
      nodeArray0[5] = node0;
      Node node4 = null;
      try {
        node4 = new Node(53, nodeArray0, (-772), 125);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFor();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(53, node0, node0, node0);
      node1.isRegExp();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node((-258));
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node1.toString(true, true, false);
      Node.extractLineno((-2675));
      node1.isAssignAdd();
      node0.isThis();
      node0.isNew();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      int int0 = 33;
      String string0 = "XS=>WaUo/'7kx=N6n";
      Node node0 = new Node(33);
      node0.type = 64;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("");
      node0.isDebugger();
      Node node1 = Node.newString((-1494), "");
      Node node2 = new Node((-2533), node1, node1, (-4890), (-178));
      node2.isEquivalentToShallow(node2);
      node2.addChildAfter(node0, node1);
      Node node3 = null;
      try {
        node3 = new Node(16, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1044);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(5498, node0, node0);
      Node node2 = Node.newNumber((double) 2);
      node2.wasEmptyNode();
      node1.isInc();
      node1.setVarArgs(false);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("DATE_FUNCTION_TYPE", 85, (-2123));
      Node node1 = Node.newString((-2627), "DATE_FUNCTION_TYPE", 4, 810);
      node0.isEquivalentToTyped(node1);
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node((-2123), node0, node0, node0, (-2599), 43);
      node0.isRegExp();
      node2.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node2.isUnscopedQualifiedName();
      node0.isCast();
      Node node3 = new Node(42);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node_AncestorIterable0.iterator();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node.extractLineno(1631);
      Node node0 = Node.newString("", 0, 0);
      node0.getStaticSourceFile();
      Node node1 = new Node((-317), node0);
      Node node2 = new Node(0, 1369, 48);
      node1.addSuppression("var_args_name");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node2.getChildCount();
      node_FileLevelJsDocBuilder0.append("second new child has existing sibling");
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 44, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(155, 12, 2);
      node2.hasChild(node0);
      node0.isIf();
      InputId inputId1 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node2.setInputId(inputId0);
      node2.getInputId();
      Object object0 = new Object();
      node0.putProp(38, object0);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      node0.setVarArgs(false);
      node0.isOnlyModifiesArgumentsCall();
      Node.newString(49, "s}Ow", 4, (-3704));
      node0.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = new Node(85);
      node0.hasChildren();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node[] nodeArray1 = new Node[5];
      Node node1 = null;
      try {
        node1 = new Node((-1050), nodeArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, false);
      int int0 = 3735;
      node0.removeProp(3735);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.putProp(3735, simpleSourceFile0);
      node0.isContinue();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 3735
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1044);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.setMutatesArguments();
      node0.isIf();
      node_SideEffectFlags3.setReturnsTainted();
      try { 
        node0.setString("s<]lnvjQV[%&60)*sh4");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      ImmutableList.of();
      Node node1 = Node.newString(2, "");
      Node node2 = new Node(1, 30, (-683));
      Node node3 = new Node(30, node1, node2, node2);
      node2.getSourceOffset();
      node3.isFor();
      node3.isUnscopedQualifiedName();
      node1.isIn();
      node3.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      Node node3 = Node.newNumber(227.442607864562);
      node3.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node node4 = new Node(32, 52, 40);
      Node node5 = new Node(102, node2, node3, node3, 37, (-2001));
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, false);
      node0.removeProp(3735);
      node0.getIntProp(3735);
      node0.isArrayLit();
      Node node1 = new Node((-3736), node0, 57, 8);
      node1.putIntProp(57, 44);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node(531, (-3332), 39);
      node0.setLength(531);
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 531
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 28, (-291));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(33);
      node0.type = 64;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, (Node) null);
      node0.getProp(96);
      node_NodeMismatch0.equals("XS=>WaUo/'7kx=N6n");
      node0.isWhile();
      node0.putProp(33, (Object) null);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(155, 12, 2);
      node1.hasChild(node0);
      node0.isWith();
      node0.isFromExterns();
      node0.isObjectLit();
      Node node2 = Node.newString("5OX)'t*W/wRN<%|");
      node0.isFunction();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(42, 53, 48);
      node0.isCatch();
      node0.getInputId();
      Node node2 = Node.newString("Object#Key");
      node0.hasOneChild();
      node2.isNoSideEffectsCall();
      node0.isComma();
      node0.isNew();
      node0.isSetterDef();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(1527);
      nodeArray0[0] = node0;
      Node node1 = new Node(0, node0, node0, node0, node0, 0, 36);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1527
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.getJSDocInfo();
      Node node1 = new Node(46, node0, node0, node0);
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node node2 = new Node(42, 2998, 4);
      node1.addSuppression("first new child has existing sibling");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getChildCount();
      node_FileLevelJsDocBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      node0.isDebugger();
      node0.isGetElem();
      node0.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      Node node0 = Node.newString("Object#Element", 524288, 26);
      node0.setLineno(103);
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node1.isIf();
      node1.isAssign();
      Node.newString((-95), "", 3000, 31);
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node.extractLineno(1631);
      Node node0 = Node.newString("", 0, 0);
      node0.getStaticSourceFile();
      Node node1 = new Node((-317), node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(1926);
      Node node1 = new Node(2116, node0, node0, 28, 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isWhile();
      node2.isDo();
      node0.getSideEffectFlags();
      Node node3 = null;
      try {
        node3 = new Node(524288, node0, node2, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(47, "pk9m)3[.iH{Lx");
      node1.setLength(2);
      Node node2 = new Node(50, node0, node1, node0, 38, 1119);
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(750);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node1 = new Node(2, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.getIntProp(110);
      node0.isAnd();
      node1.isGetElem();
      node2.isOnlyModifiesThisCall();
      node0.addChildrenToFront(node1);
      node0.setWasEmptyNode(false);
      node0.getSideEffectFlags();
      node2.getChangeTime();
      node2.isCase();
      node1.isStringKey();
      node0.isTrue();
      // Undeclared exception!
      try { 
        node0.setString("Recorded bad position information\nstart-char: ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 750
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node0.setVarArgs(false);
      node0.getNext();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isNoSideEffectsCall();
      node0.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("XS=>WaUo/'7kx=N6n", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(120, node0, node0, 46, (-810));
      node0.checkTreeEquals(node1);
      node1.isEquivalentToTyped(node0);
      node1.isLabel();
      node0.getSourceFileName();
      Node node2 = null;
      try {
        node2 = new Node(37, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node2.putBooleanProp((-290), true);
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(94);
      node0.siblings();
      node0.getJSDocInfo();
      node0.toString(true, false, true);
      Node.extractLineno(42);
      node0.setDouble(Double.POSITIVE_INFINITY);
      node0.isAssignAdd();
      node0.isThis();
      node0.isNew();
      node0.isAdd();
      node0.isQuotedString();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 3243, 3243);
      Node node1 = new Node(3243, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node1.getIntProp(310);
      node1.isAnd();
      node1.isGetElem();
      node1.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString("", 108, 37);
      node0.isLocalResultCall();
      node0.setCharno((-3764));
      node0.isComma();
      node0.isSyntheticBlock();
      Node node1 = node0.cloneTree();
      Node node2 = node1.clonePropsFrom(node0);
      node2.removeProp(4095);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      Node node3 = new Node(1417, node1, node1, node2, 4095, 50);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 116 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 33, 33);
      node0.type = 33;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesArguments();
      node0.isIf();
      node_SideEffectFlags6.setReturnsTainted();
      node0.getIntProp(47);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(794, 1318, 1238);
      node1.clonePropsFrom(node0);
      node1.removeProp(55);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("", 108, 50);
      node0.setCharno((-3764));
      node0.isQuotedString();
      node0.isSyntheticBlock();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(37);
      Node node3 = new Node(2493, node1, node1, node0, node2, 114, (-942));
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      boolean boolean0 = true;
      Node node1 = new Node((-1144), node0, node0, 4095, 54);
      node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1144
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node node2 = new Node(42, 2998, 4);
      Node node3 = new Node(1417, node1, node1, node2, 4095, 50);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isWhile();
      node2.isDo();
      node1.getSideEffectFlags();
      node0.getSourceFileName();
      Node node3 = new Node((-334));
      node3.setLineno((-3764));
      node1.isDebugger();
      // Undeclared exception!
      try { 
        Node.newString(4095, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      Node node1 = new Node(119, node0, 2, (-334));
      node0.hasChild(node1);
      node1.isNull();
      node1.setChangeTime(119);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      node1.getBooleanProp(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node1);
      node0.isNull();
      node0.setChangeTime(46);
      node0.isVoid();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString("", 108, 50);
      node0.setCharno((-3764));
      node0.isQuotedString();
      node0.isSyntheticBlock();
      Node node1 = node0.cloneTree();
      Node node2 = node1.clonePropsFrom(node0);
      node2.removeProp(4095);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("", 0, 0);
      node0.getString();
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId("|S-q6e%\".'+y");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(1, 46, 524288);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      Node.newString(40, "Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1948);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isIf();
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.setString("#`^!;yM43z3z6e");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      InputId inputId1 = new InputId("InputId: com.google.javascript.rhino.Node$NumberNode");
      inputId1.toString();
      inputId1.toString();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node1.isIf();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString(51, "q", 12, 16);
      node1.setLineno(32);
      node1.isString();
      node0.isCatch();
      int int0 = 812;
      Node node2 = new Node(54, node1, node0, 655, 125);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(1347, "", 1347, 111);
      node0.setLineno(1347);
      node0.siblings();
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node0.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1347
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node0);
      Node node1 = new Node(154, 44, 49);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(155, 12, 2);
      node2.hasChild(node0);
      node0.isIf();
      InputId inputId1 = new InputId("");
      node2.setInputId(inputId1);
      Node node3 = new Node(50, node2, node0, 31, 1610612736);
      node2.isEmpty();
      node3.isAssign();
      Node node4 = Node.newString(1, "s}Ow", 49, 57);
      node1.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.toStringTree();
      Node node1 = Node.newString(163, "CATCH 120\n");
      node0.useSourceInfoIfMissingFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.addSuppression("\u0001\u0000\u00A0\u0000\u0000\u0000\u0000\u0000\u0000\t\n\u000B\f\r\u0000\u0000\u2028\u2029\u0000\u0000\u0000\u0000\u0000\u202F\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u3000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0085\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u0000\u0000\u0000\u0000\u0000\u205F\u1680\u0000\u0000\u180E\u0000\u0000\u0000");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      int int0 = 124;
      Node.newNumber((double) 124, 796, 124);
      Node node0 = Node.newString("com.google.common.base.Joiner$MapJoiner", 57, 49);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-644));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      int int0 = 3582;
      // Undeclared exception!
      try { 
        Node.newString(3582, (String) null, 21, 77);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(39, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node2.siblings();
      node0.getJSDocInfo();
      node1.setSourceEncodedPositionForTree(48);
      node1.toString(false, false, true);
      Node.extractLineno(114);
      node2.isAssignAdd();
      node2.isThis();
      node1.isNew();
      node1.isAdd();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node1);
      node0.isNull();
      node0.setChangeTime(46);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(1926);
      Node node1 = new Node(2116, node0, node0, 28, 110);
      Node node2 = Node.newNumber((double) 49);
      node2.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node node3 = new Node(49, 53, 125);
      Node node4 = null;
      try {
        node4 = new Node(51, node3, node3, node0, 49, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = Node.newString(1826, "var_args_name", (-2055), (-416));
      node1.isEquivalentToTyped(node2);
      Node node3 = new Node(15, node2, node1, node1, 4095, 51);
      node3.isLocalResultCall();
      node0.isRegExp();
      node2.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node4.isUnscopedQualifiedName();
      Node node5 = new Node(38, 56, 12);
      node5.isCast();
      node2.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.setIsSyntheticBlock(true);
      node1.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("", 2287, 2216);
      Node node1 = new Node(83, node0, node0, node0, 56, 2216);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isUnscopedQualifiedName();
      node2.isEquivalentToTyped(node1);
      Node node3 = node2.removeChildren();
      node3.getProp(46);
      node3.cloneNode();
      node3.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getInputId();
      node0.setChangeTime(2680);
      node0.isArrayLit();
      node0.isGetElem();
      Node node1 = Node.newNumber(2504.311141409661, 4133, 308);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node((-719), (-719), 3034);
      Node node1 = new Node(3034, node0, node0, 51, 54);
      Node node2 = Node.newNumber(1793.49214114);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.getAncestors();
      node2.setLineno((-5147));
      node1.siblings();
      node0.getJSDocInfo();
      node2.toString(true, true, false);
      int int0 = Node.DIRECT_EVAL;
      node0.isAssignAdd();
      node0.isName();
      Node node3 = Node.newString("com.google.javascript.rhino.Node");
      node3.isNew();
      Node node4 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(26);
      ImmutableList.of();
      node0.getAncestors();
      Node node1 = Node.newString(51, "q", 12, 16);
      node1.setLineno(32);
      node1.siblings();
      node1.getJSDocInfo();
      node1.toString(false, false, false);
      int int0 = Node.DIRECT_EVAL;
      node1.isAssignAdd();
      node1.isName();
      node0.isNew();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("");
      inputId0.toString();
      Node node0 = new Node(486, 22, 39);
      Node node1 = new Node(1052, node0);
      node1.isHook();
      node0.putIntProp((-2126), (-2519));
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      Node node0 = Node.newString(33, "Object#Key");
      Node node1 = new Node((-1096), node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = null;
      try {
        node2 = new Node(50, node1, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("XS=>WaUo/'7kx=N6n");
      inputId0.toString();
      node0.hasChild(node0);
      node0.isNull();
      Node node1 = new Node((-2438), node0, node0, node0, 48, 43);
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.valueOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setChangeTime(2640);
      node0.isArrayLit();
      node0.isGetElem();
      Node node1 = Node.newNumber(576.4463385402873, 1, 95);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      Node.newNumber((double) 50, 57, 52);
      node0.removeChildren();
      node0.hasChild((Node) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newString("Object#Element", 1288, 38);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node2.siblings();
      node0.getJSDocInfo();
      node1.toString(false, false, true);
      int int0 = Node.DIRECT_EVAL;
      node1.isAssignAdd();
      node0.isName();
      node1.isNew();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      Node node1 = Node.newNumber((double) 8);
      Node node2 = new Node(38);
      node1.getQualifiedName();
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newNumber((double) 55);
      node0.toStringTree();
      node1.getJSDocInfo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getModifies();
      node1.setJSDocInfo((JSDocInfo) null);
      node0.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      InputId inputId0 = new InputId("8Qc09jLhOYId7(Cz");
      node2.getInputId();
      node0.setInputId(inputId0);
      node3.isEmpty();
      Node node4 = new Node(12);
      Node node5 = new Node(0);
      node5.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      node0.isVarArgs();
      node0.isTrue();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(29, 38, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = new Node(40, (-1298), 812);
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      Node node1 = Node.newNumber((double) 50, 57, 56);
      node0.removeChildren();
      node0.hasChild((Node) null);
      node0.isWith();
      node1.isFromExterns();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node2.getSourceFileName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node2.siblings();
      node0.getJSDocInfo();
      node1.toString(true, true, true);
      Node.extractLineno(114);
      node2.isAssignAdd();
      node2.isThis();
      node1.isNew();
      node1.isAdd();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      InputId inputId0 = new InputId("|SU-Jq6e%\"V'+y");
      Node node0 = Node.newString(0, "");
      node0.getLastSibling();
      // Undeclared exception!
      try { 
        node0.setDouble(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(1926);
      Node node1 = Node.newString("joeH\"");
      Node.newString(1, "I?Cr~59K7=Q5NQFfcSM");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("I?Cr~59K7=Q5NQFfcSM");
      inputId0.toString();
      node0.hasChild(node1);
      node1.isNull();
      node0.isLabel();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      inputId0.toString();
      Node node0 = Node.newString("InputId: com.google.javascript.rhino.Node$NumberNode");
      node0.isString();
      node0.isCatch();
      Node node1 = new Node(250, node0, node0, 38, 812);
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      Node.newNumber((double) 50, 57, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      int int0 = 89;
      // Undeclared exception!
      try { 
        Node.newString(89, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(524312, 524312, 524312);
      Node node1 = Node.newString("F\"SJFakNtA_O'3$$K<", 32, 29);
      Node node2 = Node.newString(31, "", 2, (-2147));
      node1.isEquivalentToTyped(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node0.isIf();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.setString("}]xJ*.|p&KSmv");
      node0.getInputId();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      node0.isDefaultCase();
      node0.isBreak();
      Node node1 = new Node(49, node0, node0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newNumber((-2790.106128102698), 626, 56);
      node0.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(3276);
      Node node1 = node0.cloneTree();
      node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      int int0 = 0;
      node1.mayMutateGlobalStateOrThrow();
      Node.newNumber((double) 16);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3276
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      String string0 = "S,'";
      Node node0 = Node.newString("S,'");
      node0.isDebugger();
      Node node1 = new Node(1585, node0, node0, 8, (-653));
      node1.isVar();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      inputId0.toString();
      Node node0 = Node.newString("InputId: com.google.javascript.rhino.Node$NumberNode");
      node0.setInputId(inputId0);
      node0.isInc();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString((-2174), "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.putProp((-1588), "com.google.javascript.rhino.Node$NumberNode");
      node1.isString();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      Node node0 = new Node(87855567, 87855567, 45);
      Node node1 = new Node((-610), node0);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, false);
      node0.removeProp(3735);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.putProp(3735, simpleSourceFile0);
      node0.isContinue();
      node0.isString();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(37, nodeArray0);
      node1.setLineno(4095);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(16, node0, 2, 37);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      Node node2 = Node.newString(40, "Object#Key");
      Node node3 = new Node((-2647), node2, node1, node1);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node2.getSourceOffset();
      node3.isEquivalentTo(node2);
      node1.isFor();
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 124
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node(1926);
      node0.hasChildren();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.putProp(79, jSDocInfo0);
      node0.isContinue();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent", (-291), 0);
      Node node1 = new Node(31, 53, 47);
      node0.putIntProp(1, 50);
      node1.mayMutateGlobalStateOrThrow();
      node0.addSuppression("no next sibling.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node node2 = Node.newString(16, "", 30, 40);
      node2.setSourceEncodedPosition(1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      node0.isNew();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(111);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isIf();
      Node node1 = Node.newNumber((double) 38, (-459), 56);
      node0.hasChild(node1);
      node0.isWith();
      node1.isFromExterns();
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node1);
      node0.isNull();
      node1.isLabel();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node1.isIf();
      node2.isBlock();
      node0.isWith();
      node1.isFromExterns();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      Node[] nodeArray0 = new Node[21];
      Node node1 = Node.newString(47, "K0A[3.r@A#)P\"I&u");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = Node.newNumber(Double.POSITIVE_INFINITY, 57, 3492);
      node2.hasChild(node0);
      node1.isWith();
      node1.isFromExterns();
      node0.isObjectLit();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      inputId0.toString();
      Node node0 = Node.newString("InputId: com.google.javascript.rhino.Node$NumberNode");
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node0.isWith();
      node0.isFromExterns();
      Locale locale0 = Locale.JAPAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      Node[] nodeArray0 = new Node[21];
      Node node1 = Node.newString(47, "K0A[3.r@A#)P\"I&u");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got REGEXP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString(30, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp(4);
      node_NodeMismatch0.equals((Object) null);
      node0.isVarArgs();
      node0.isWhile();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(53, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = Node.newString(39, "B.");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals("B.");
      node1.isVarArgs();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      Node node2 = new Node(49, node1, node1, node1, (-80), 1503);
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node3 = new Node(30, node0, node0, node2, node0);
      nodeArray0[5] = node3;
      Node node4 = null;
      try {
        node4 = new Node(56, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1017));
      Node node1 = new Node((-1017), node0);
      Node node2 = null;
      try {
        node2 = new Node((-1017), node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent", (-291), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.extractLineno(48);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.mayMutateGlobalStateOrThrow();
      node0.addSuppression(")jP; >=I");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node1.putBooleanProp(46, false);
      node1.isEquivalentTo(node0);
      Node node2 = Node.newNumber((-1449.911603));
      node0.checkTreeEqualsImpl(node2);
      node1.isDec();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node0.setVarArgs(false);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(115, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      ErrorReporter errorReporter0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-2199));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 524288
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node0.siblings();
      node0.getJSDocInfo();
      node0.toString(true, false, true);
      Node.extractLineno(34);
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node(64);
      node0.setCharno((-188));
      Node node1 = Node.newNumber(1874.5197319383, 50, 117);
      node0.checkTreeEquals(node1);
      node0.setCharno(32);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("XS=>WaUo/'7kx=N6n", 64, 33);
      node0.type = 64;
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId("is_constant_name");
      node0.setInputId(inputId0);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node2.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      Node.newNumber((double) 1, 15, 159);
      node2.hasChild(node1);
      node1.isWith();
      node2.isFromExterns();
      node2.isObjectLit();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node1.mayMutateArguments();
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      node_SideEffectFlags0.setReturnsTainted();
      try { 
        node2.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 46.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isGetElem();
      node0.removeChildren();
      Node node1 = null;
      try {
        node1 = new Node(37, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.hasChild(node1);
      node0.isNull();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent", (-291), 0);
      Node node1 = new Node(31, 53, 47);
      node0.putIntProp(1, 50);
      node1.mayMutateGlobalStateOrThrow();
      node0.addSuppression("no next sibling.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node1.isVar();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(148, node0, node0, 2222, 0);
      Node node2 = Node.newNumber(0.0);
      node1.getAncestor(12);
      node1.wasEmptyNode();
      node2.mayMutateGlobalStateOrThrow();
      node1.setIsSyntheticBlock(true);
      node1.isBreak();
      Node node3 = node1.srcref(node0);
      node3.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1083));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags6.setMutatesArguments();
      node0.isIf();
      node_SideEffectFlags0.setReturnsTainted();
      try { 
        node3.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SETTER_DEF [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(577, 577, 577);
      node0.isDec();
      Node node1 = Node.newNumber(1.0, 4, 33);
      node1.removeChildren();
      Node node2 = Node.newString(34, "W");
      node0.hasChild(node2);
      node1.isWith();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent", (-291), 0);
      node0.toString();
      Node node1 = new Node(31, 53, 47);
      node1.isLocalResultCall();
      node1.mayMutateGlobalStateOrThrow();
      node0.addSuppression("no next sibling.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node.newString("", 125, (-2123));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("DATE_FUNCTION_TYPE", 85, (-2123));
      Node node1 = Node.newString((-2627), "DATE_FUNCTION_TYPE", 4, 810);
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-2123), node0, node0, node0, (-2599), (-2391));
      node0.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber((double) 4095);
      node1.isEquivalentToTyped(node0);
      node1.isParamList();
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(16, node0, 2, 37);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList.of();
      Node node2 = Node.newString(40, "Object#Key");
      Node node3 = new Node((-2647), node2, node1, node1);
      node2.getSourceOffset();
      node1.isFor();
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 124
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = Node.newString("", 125, (-2123));
      Node node1 = Node.newString(4095, "", 50, 16);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.putBooleanProp(155, false);
      node1.isQualifiedName();
      node2.isParamList();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString("WAEdJ]FN[\"h");
      node0.isDebugger();
      Node node1 = new Node(0, node0, node0, 1437, 1788);
      node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newNumber(861.7, 47, 39);
      node2.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("", 0, 0);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId("|SU-Jq6e%\"V'+y");
      node0.setInputId(inputId0);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isIf();
      Node node3 = Node.newNumber((double) 1, 15, 159);
      node2.hasChild(node1);
      node1.isWith();
      node2.isFromExterns();
      node2.isObjectLit();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node.newString(4, "com.google.javascript.rhino.Node$NumberNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NumberNode");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.putProp(115, jSDocInfo0);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString("", 125, (-2123));
      Node node1 = Node.newString(4095, "", 50, 16);
      node0.copyInformationFromForTree(node1);
      node0.putBooleanProp(155, false);
      node0.setJSType((JSType) null);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node0.getAncestors();
      node0.setLineno(2116);
      node2.siblings();
      node0.getJSDocInfo();
      node1.toString(false, false, true);
      Node.extractLineno(114);
      node2.isAssignAdd();
      node2.isThis();
      node1.isNew();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      Node[] nodeArray0 = new Node[21];
      Node node1 = Node.newString(47, "K0A[3.r@A#)P\"I&u");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.isBlock();
      node1.isWith();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node(37, nodeArray0, 37, 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString("length", 0, 0);
      Node node1 = new Node(0, node0, 0, 49);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isExprResult();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      node_SideEffectFlags0.setReturnsTainted();
      try { 
        node2.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 46.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      Node.newNumber((double) 1, 15, 159);
      node2.hasChild(node1);
      node1.isWith();
      node2.isFromExterns();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      Node node1 = Node.newNumber((double) 50, 57, 52);
      node0.removeChildren();
      node0.hasChild((Node) null);
      node0.isWith();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      Node[] nodeArray0 = new Node[5];
      Node node1 = Node.newString(47, "K0A[3.r@A#)P\"I&u");
      nodeArray0[0] = node1;
      node0.isEquivalentTo(node1, true, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      int int0 = (-718);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[0] = jSType0;
      JSType.toMaybeFunctionType(jSTypeArray0[0]);
      jSTypeArray0[1] = (JSType) null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = new Node((-4305));
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(29);
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4305
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node node2 = Node.newNumber((double) 46);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isIf();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId("hp&/]:c42X{>QG");
      Node node3 = new Node(19, node2);
      node3.setInputId(inputId0);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString("length", 0, 0);
      Node node1 = new Node(0, node0, 0, 49);
      node0.isThis();
      Node.newNumber((double) 32, 697, 15);
      node0.hasChild(node1);
      node0.isWith();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length", 0, 0);
      Node node1 = new Node(0, node0, 0, 49);
      node1.isOptionalArg();
      Node node2 = null;
      try {
        node2 = new Node(0, node0, 62, 153);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      String string0 = "S,'";
      Node node0 = Node.newString("S,'");
      node0.isDebugger();
      int int0 = (-1891);
      Node node1 = new Node(1585, node0, node0, 8, (-653));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isVar();
      // Undeclared exception!
      try { 
        node2.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString(33, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node0.isVarArgs();
      node0.isTrue();
      node0.getLength();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(223, 32, 0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString("length", 0, 0);
      Node node1 = new Node(0, node0, node0, node0, 54, 3023);
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString(33, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      Node node1 = null;
      try {
        node1 = new Node(304, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = new Node((-4305));
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseTemplateType((TemplateType) null);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, false, jSTypeArray0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) functionType0, (JSType) functionType0, (List<JSType>) arrayList0);
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString("S,'");
      node0.isDebugger();
      Node node1 = new Node(1585, node0, node0, 8, (-653));
      node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent", (-291), 0);
      Node node1 = Node.newNumber(0.0);
      node1.mayMutateGlobalStateOrThrow();
      node0.addSuppression("no next sibling.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = new Node((-4305));
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4305
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newString(555, "dIFJ4%;|[GK*0p'X");
      node0.setSourceEncodedPositionForTree(11);
      Node node1 = Node.newString(132, "dIFJ4%;|[GK*0p'X");
      node0.getBooleanProp(0);
      node0.setIsSyntheticBlock(false);
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SCRIPT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentToTyped(node1);
      node0.isParamList();
      node0.isNE();
      node0.children();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      Node node1 = new Node(38, node0, node0, 116, 57);
      Node.newNumber((double) 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node3 = new Node((-2647), node2, node1, node1);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 124
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.is('");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(false);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, true);
      InputId inputId0 = new InputId("STRING CharMatcher.is('");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.removeProp(3735);
      node0.getIntProp((-4784));
      node0.isQualifiedName();
      node0.isParamList();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = new Node(1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(0);
      Node node2 = new Node(657, node0, node0, node0);
      Node node3 = null;
      try {
        node3 = new Node(2362, node0, node1, node0, node2, 46, 1009);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      int int0 = 1309;
      Node node0 = new Node(1309);
      node0.getQualifiedName();
      Node node1 = new Node(37, node0, node0, node0, node0, 8, 39);
      node1.removeProp(50);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = Node.newNumber(0.0);
      node1.wasEmptyNode();
      node0.isParamList();
      node2.isNE();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      String string0 = "dIFJ4%;|[GK*0p'X";
      Node node0 = Node.newString(555, "dIFJ4%;|[GK*0p'X");
      node0.setSourceEncodedPositionForTree(46);
      Node.newString(132, "dIFJ4%;|[GK*0p'X");
      node0.getBooleanProp(0);
      node0.setIsSyntheticBlock(false);
      Node.newString("dIFJ4%;|[GK*0p'X", 8, 3116);
      Node node1 = new Node((-60));
      node1.setVarArgs(false);
      Node node2 = new Node(4095, node0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newString("r", 2270, 1259);
      node0.isAssign();
      node0.isScript();
      node0.getAncestor(2270);
      node0.isOptionalArg();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("");
      node0.isDebugger();
      Node node1 = Node.newString((-1494), "");
      Node node2 = new Node((-2533), node1, node1, (-4890), (-178));
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isEquivalentToShallow(node2);
      node2.addChildAfter(node0, node1);
      Node node4 = null;
      try {
        node4 = new Node(16, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      int int0 = 0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = null;
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", (Node) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.hasOneChild();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = Node.newString("length", 0, 0);
      Node node1 = new Node(0, node0, 0, 49);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node1, 54, 3023);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = new Node((-4305));
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-7052));
      Node node1 = new Node((-7052), node0, node0, node0, node0, 42, (-504));
      Node node2 = null;
      try {
        node2 = new Node((-7052), node1, node0, node0, 48, 1576);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "j,iQxz=w4*W,G,`";
      int int0 = 125;
      Node[] nodeArray0 = new Node[9];
      int int1 = 306654252;
      Node node0 = Node.newString(57, "Object#Element", 306654252, 1048576);
      Node node1 = new Node(125, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = null;
      try {
        node2 = new Node(4, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 8, 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = null;
      try {
        node3 = new Node(0, node1, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = new Node((-2076), (-2076), 3260);
      Node node1 = node0.cloneTree();
      node1.copyInformationFrom(node0);
      node0.getQualifiedName();
      int int0 = 0;
      node1.mayMutateGlobalStateOrThrow();
      Node.newNumber((double) 16);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2076
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isParamList();
      node0.isFor();
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.mayMutateGlobalStateOrThrow();
      node0.toString(false, true, false);
      node0.removeProp(3735);
      node0.getIntProp(3735);
      node0.isQualifiedName();
      node0.isParamList();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(155, (Node) null, (Node) null, 155, (-763));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = Node.newString(33, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node0.isVarArgs();
      node0.isTrue();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(223, 32, 0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(36);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("Object#Key");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Key
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSwitch();
      Node node1 = new Node(36);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("Object#Key");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Key
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = Node.newString("directives", (-291), 0);
      Node node1 = new Node(148, node0, node0, 2222, 0);
      Node node2 = Node.newNumber(0.0);
      node1.getAncestor(12);
      node1.wasEmptyNode();
      node2.mayMutateGlobalStateOrThrow();
      node1.setIsSyntheticBlock(true);
      node1.isBreak();
      Node node3 = node1.srcref(node0);
      node3.isNoSideEffectsCall();
      node1.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node4 = null;
      try {
        node4 = new Node(56, node0, node1, (-1174), 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(12, (Node) null, (Node) null, (Node) null, (Node) null, 16, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newNumber(2329.0054504889);
      node0.isDec();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = new Node(39);
      node0.setSourceFileForTesting("U09~");
      // Undeclared exception!
      try { 
        node0.setDouble(39);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newString(1062, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.isCatch();
      node0.getInputId();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = Node.newString(555, "dIFJ4%;|[GK*0p'X");
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = Node.newString(132, "dIFJ4%;|[GK*0p'X");
      node0.getBooleanProp(0);
      node0.setIsSyntheticBlock(false);
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SCRIPT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 3243, 3243);
      node0.isDelProp();
      Node node1 = Node.newString("OHUj", 31, 4095);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node0.isIf();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(56);
      node1.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "";
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a constructor");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 3243, 3243);
      node0.isDelProp();
      Node node1 = new Node((-44), node0, (-820), 12);
      Node node2 = new Node(46, node1, node1, 46, 52);
      try { 
        node2.setDouble(40.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE 46 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = new Node(750);
      node0.getStaticSourceFile();
      node0.getInputId();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.setDouble(88.68838693);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 750
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString(2110, "K0A[3.r@A#)P\"I&u", 2110, 26);
      Node[] nodeArray0 = new Node[5];
      Node node1 = Node.newString(47, "K0A[3.r@A#)P\"I&u");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node2 = null;
      try {
        node2 = new Node(0, nodeArray0, 1, 1248);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      int int0 = (-1515);
      Node node0 = new Node((-1515), (-3850), (-3850));
      Node node1 = null;
      try {
        node1 = new Node((-3850), node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      String string0 = "S,'";
      Node node0 = Node.newString("S,'");
      node0.isDebugger();
      int int0 = (-1891);
      Node node1 = new Node(1585, node0, node0, 8, (-653));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1983));
      int int0 = 1180;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(56, nodeArray0, 40, 49);
      Node node2 = null;
      try {
        node2 = new Node(29, node0, node1, node0, 37, 21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType.toMaybeFunctionType((JSType) null);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      JSType.toMaybeTemplatizedType((JSType) null);
      functionType0.makesStructs();
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) functionType0, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0);
      int int1 = 2487;
      int int2 = 0;
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      int int0 = 1309;
      Node node0 = new Node(1309);
      Node node1 = Node.newString(57, "N+,");
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-789));
      nodeArray0[0] = node0;
      Node node1 = new Node((-789), nodeArray0);
      Node node2 = null;
      try {
        node2 = new Node((-789), node1, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(105, (Node) null, 124, 2461);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      int int0 = 3616;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      int int1 = 43;
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
      Node node1 = new Node(5);
      node1.setCharno(461845907);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 5
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      int int0 = (-2903);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "com.google.javascript.rhino.jstype.NullType";
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-2903), (Node[]) null, (-2903), (-1884));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }
}
