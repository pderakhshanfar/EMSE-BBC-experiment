/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 11:21:05 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.ByteArrayOutputStream;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(42, node0, node0, 4095, 4095);
      Node node2 = Node.newString("Object#Key");
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node3.getSideEffectFlags();
      node1.addChildrenToFront(node2);
      node3.isVar();
      Node node4 = Node.newString(105, "com.google.javascript.rhino.Node$StringNode");
      node1.isNull();
      node3.getCharno();
      node1.getQualifiedName();
      node4.getJSType();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "empty_block");
      node0.isFalse();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(2, node0, node0, 29, 49);
      node1.getSourceFileName();
      node1.isBlock();
      node0.hasOneChild();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString((-366), "BX~J+kj%IEpU_5l");
      Node node1 = new Node(30, node0, node0, node0, node0);
      Node node2 = node1.srcref(node0);
      Node node3 = new Node(40, 4, (-148));
      node2.isThis();
      node2.isUnscopedQualifiedName();
      node0.getInputId();
      node1.isHook();
      node0.isSwitch();
      node1.isExprResult();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(2802, "ORDINARY");
      Node node1 = new Node(118, node0);
      node1.hasOneChild();
      Node node2 = Node.newString(29, "ORDINARY", 147, 46);
      Node node3 = new Node(33, node2, node2, 0, 2);
      node3.isIf();
      node1.isFalse();
      node0.isWith();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(13);
      node0.getLength();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getInputId();
      node0.isInstanceOf();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isFromExterns();
      String string0 = "Spfp26Yj5Y";
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node3 = new Node(43, node1, node0, node2, node2);
      // Undeclared exception!
      try { 
        node0.replaceChild(node3, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(65);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newString("synthetic", 57, 1874);
      Node node1 = new Node(43, node0, node0, 1732, 0);
      Node node2 = node1.srcref(node0);
      node0.checkTreeEquals(node2);
      node2.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node1.isIn();
      node2.isFalse();
      Node node3 = Node.newNumber((double) 47);
      node0.getInputId();
      node0.isHook();
      node3.isInstanceOf();
      node2.isExprResult();
      node2.isHook();
      node3.isAnd();
      node3.isCase();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(43);
      node0.isDebugger();
      node0.isHook();
      Node node1 = new Node(57, node0, node0, 38, 1);
      Object object0 = new Object();
      node1.isFromExterns();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(124, "..q;]lt`");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.putIntProp(49, 38);
      Node node2 = Node.newString("#iwl", Integer.MAX_VALUE, 38);
      node2.setWasEmptyNode(true);
      node0.getString();
      node0.isEmpty();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("YTME+,<");
      node0.setQuotedString();
      node0.toString(true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YTME+,<");
      Node node1 = Node.newString(53, "PuHqhMt@5}{N=w");
      Node node2 = new Node(118, node0, node0, 39, 763);
      Node.newNumber((double) 8, 114, 922);
      node2.copyInformationFrom(node1);
      node1.isFromExterns();
      try { 
        node2.setString("second new child has existing parent");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.getSourceFileName();
      Node node1 = new Node(42, node0, 49, 52);
      Node node2 = node0.getAncestor(1);
      node2.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 40, 4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "");
      node0.isDo();
      Node node1 = Node.newString((-778), "c`8ZowLs%s$DGF(Z");
      node0.isUnscopedQualifiedName();
      node0.addChildToBack(node1);
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isEquivalentTo(node0);
      node0.setWasEmptyNode(false);
      node0.isCall();
      Node node2 = new Node(37, 51, 32);
      node2.isCase();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(102, node0, node0, 37, (-1312));
      node2.isInc();
      node1.children();
      node0.isEquivalentTo(node1, true, true, true);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber(680.0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(124, node0, node0, node0, node0);
      node1.srcref(node0);
      Node node2 = new Node((-2732), 1, 42);
      node1.isReturn();
      node0.getSourceFileName();
      node0.isAdd();
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(42, node0, node0, 4095, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.newString(86, "YTME+,<");
      Node node2 = node1.cloneNode();
      node2.isFalse();
      node0.setWasEmptyNode(true);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS 4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node((-1251), (-1251), (-1251));
      String string0 = "L'g~+mh?R";
      node0.getBooleanProp((-1251));
      Node node1 = Node.newString("L'g~+mh?R", 32, 57);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = new Node((-1251), node0, node0, node0, node1, 57, 57);
      node2.removeProp(40);
      node1.isQualifiedName();
      node1.isFalse();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(29, 29, 29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "empty_block");
      node0.isFalse();
      Node node1 = new Node(2, node0, node0, 29, 49);
      node1.getSourceFileName();
      node0.isExprResult();
      node0.isHook();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(266);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = Node.newString(116, "PuHqhMt@5}{N=w");
      node1.cloneNode();
      Node node2 = Node.newString("PuHqhMt@5}{N=w");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isFromExterns();
      node3.useSourceInfoIfMissingFromForTree(node0);
      node2.isBlock();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(42, node0, node0, 4095, 4095);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.cloneTree();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node2.setSourceFileForTesting("LnqksgCi");
      node0.isDo();
      Node.newString(37, "Object#Key");
      node1.isThrow();
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node((-625));
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "");
      node0.isDo();
      Node node1 = Node.newString((-778), "c`8ZowLs%s$DGF(Z");
      Node node2 = new Node(38, node0, node0, node1, node0);
      node1.srcref(node2);
      Node node3 = new Node(51, 624, 149);
      node2.isThis();
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node(57, 31, 42);
      node1.isReturn();
      node2.isParamList();
      node0.getSourceFileName();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(42, node0, node0, 4095, 4095);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.addChildBefore(node2, node0);
      node1.setSourceFileForTesting("Object#Key");
      node1.srcrefTree(node2);
      Object object0 = new Object();
      node2.isFromExterns();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isContinue();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-41));
      Node node1 = new Node(57, node0, 8, 4095);
      node0.isInstanceOf();
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(53);
      node2.isIn();
      node1.removeChild(node0);
      node2.isInstanceOf();
      node0.isFunction();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(36, node1, node0, node1);
      Node node3 = Node.newString(4, "[");
      Node node4 = node0.cloneNode();
      node1.isFromExterns();
      node1.toString(true, true, true);
      node2.isUnscopedQualifiedName();
      node3.isLabel();
      node0.setWasEmptyNode(false);
      node2.getProp(1262);
      node2.putProp(57, (Object) null);
      node4.isCall();
      Node.newString("com.google.common.base.CharMatcher$8");
      node4.isCase();
      node3.getIntProp(4194304);
      node4.isCatch();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(2232, ") must not be negative");
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 4);
      Node node3 = new Node(154, node1, node2, node2);
      Node node4 = Node.newString(32, "PuHqhMt@5}{N=F");
      Node node5 = node3.cloneNode();
      node3.isFromExterns();
      node4.isUnscopedQualifiedName();
      node1.isLabel();
      node2.isStringKey();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node5;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 8, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node0.setChangeTime(1062);
      node1.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node1.setJSType(objectType0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.addSuppression((String) null);
      node0.setString("pWph(hV");
      Node.newNumber((double) 4);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCatch();
      Node node2 = node1.srcref(node0);
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = node0.cloneNode();
      node0.setChangeTime(1062);
      node1.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node1.setJSType(objectType0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isFromExterns();
      node1.setString(".");
      Node node2 = new Node(38, node1, node1, node1, 4095, 584);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node0.getJSType();
      node0.isInc();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(2352);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got CONST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(149, 149, 149);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(36, node1, node0, node1);
      node1.getSourceFileName();
      Node.newString(32, "[", 40, 29);
      node0.setLength(37);
      node0.isUnscopedQualifiedName();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(3074, "!R.A(eJ9D<?L4z3fX54");
      node0.isDo();
      Node node1 = Node.newString(31, "");
      node1.isUnscopedQualifiedName();
      node0.addChildToBack(node1);
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isGetterDef();
      node0.getLength();
      node1.setWasEmptyNode(true);
      node0.isCall();
      Node node2 = new Node(1198);
      node1.isCase();
      node0.getIntProp(16);
      node2.isAnd();
      node0.replaceChild(node1, node2);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node.extractCharno(30);
      Node node0 = new Node(147);
      Node node1 = new Node((-2895), node0, node0, node0, node0);
      node1.isUnscopedQualifiedName();
      node0.isUnscopedQualifiedName();
      node0.srcrefTree(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isOnlyModifiesThisCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.putIntProp(31, 54);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PuHqhMt@5}{N=w");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node0 = new Node(31);
      Node node1 = new Node(2868, node0, node0, node0, 42, 49);
      node1.getJsDocBuilderForNode();
      Node node2 = node0.srcref(node1);
      node1.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = node1.removeChildren();
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      LinkedList<JSType> linkedList1 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList1);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.setSourceFileForTesting("J,j%;P{Q\"!!}k>w");
      node1.isExprResult();
      node1.isGetterDef();
      node1.isInc();
      node1.isFalse();
      Node node2 = Node.newString(2311, "LE");
      node0.cloneNode();
      node2.isFalse();
      node1.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.putIntProp(55, 119);
      Node node3 = Node.newNumber(2035.5708759138888);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = new Node(52);
      node4.isCatch();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(86);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(39, node0, node0, node0);
      node1.getSourceFileName();
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        Node.newString(2, (String) null, 1497, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = Node.newString(37, "com.google.common.base.CharMatcher$6");
      node0.cloneNode();
      node0.isFalse();
      node0.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(2, node0, node1, node1);
      node2.isLabel();
      node0.isStringKey();
      Node.newNumber((-949.9018243));
      node1.toStringTree();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.setSourceFileForTesting("J,j%;P{Q\"!!}k>w");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.putIntProp(47, (-3386));
      Node node1 = Node.newString("PuHqhMt@5}{N=F", (-74), 15);
      node0.isParamList();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(46, node1);
      node2.isLabel();
      Node node3 = new Node(42, node0, node2);
      node3.isStringKey();
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType");
      Node node1 = new Node(30, node0);
      Node node2 = Node.newString("PuHqhMt@5}{N=F", 12, 149);
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags8.setMutatesArguments();
      node0.isBreak();
      node2.getSideEffectFlags();
      node1.isFalse();
      node0.isWith();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "", 149, 149);
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node(40, 126, 49);
      Node node2 = node1.srcrefTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isDo();
      Node node3 = Node.newString(57, "YTME+,<");
      node1.addChildToBack(node3);
      node2.isGetterDef();
      int int0 = 40;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node4 = Node.newString(31, "YTME+,<", 126, 38);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1429), node0, node0, node0, node0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.addChildBefore(node2, node0);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      node2.isFromExterns();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isContinue();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      node3.useSourceInfoIfMissingFrom(node0);
      node0.getInputId();
      node3.getBooleanProp(31);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 125;
      Node.extractLineno(125);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString(105, ",M");
      Node node1 = new Node(105, node0, node0, 763, 4095);
      Node node2 = Node.newNumber((double) 16, 54, 49);
      node2.copyInformationFrom(node0);
      node1.useSourceInfoFromForTree(node0);
      int int1 = 40;
      node2.isFromExterns();
      Node.newString(29, "", 36, 51);
      try { 
        node1.setString("^{%YBM5Esa");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node node0 = Node.newString(148, "Object#Key");
      Node node1 = node0.cloneNode();
      node0.isFalse();
      node1.isComma();
      node0.isScript();
      Node node2 = new Node(148, node1, 83, (-463));
      node0.isUnscopedQualifiedName();
      node2.isCast();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      Node node1 = new Node((-4457), node0, node0);
      Node node2 = new Node((-2124), node1);
      node2.isThrow();
      node1.children();
      node1.getStaticSourceFile();
      node2.getSourceFileName();
      Node node3 = node2.removeChildren();
      node3.isCall();
      node1.isCase();
      node1.getIntProp(39);
      try { 
        node0.setString("ka");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.7 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(29);
      Node node1 = new Node(0, 1012, 0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(4095, (-38), 36);
      node3.isOptionalArg();
      node1.isTry();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.clearTemplateTypeNames();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.type = 1;
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = Node.newString("Object#Element");
      node1.isCall();
      node2.addChildrenToFront(node1);
      node1.isVar();
      node2.isRegExp();
      node2.isNumber();
      node0.setCharno((-99));
      node2.isTrue();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "", 149, 149);
      node0.setChangeTime(102);
      node0.isVoid();
      int int0 = 126;
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(86);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(2);
      node0.isDefaultCase();
      node0.isDebugger();
      node0.isHook();
      node0.isFalse();
      node0.putIntProp(86, 0);
      Node node1 = Node.newString("WXk|kxT<KVjzL*i#", 21, (-2938));
      node1.isParamList();
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.isStringKey();
      Node node2 = Node.newString("WXk|kxT<KVjzL*i#");
      Node node3 = new Node(1343, node2, node0, node0);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1343
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      Node node2 = new Node(102, node0, node0, 37, (-1312));
      node0.getSourceFileName();
      node0.isAdd();
      node2.isFunction();
      node2.isOnlyModifiesArgumentsCall();
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("YTME+,<");
      node0.setQuotedString();
      node0.toString(true, true, true);
      node0.isQualifiedName();
      Node node1 = Node.newNumber((double) 47, 2, 43);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.addChildToFront(node1);
      node1.removeProp(130);
      Node node3 = Node.newNumber(5012.2781502277, 314, (-59));
      node2.isEquivalentToShallow(node3);
      node0.copyInformationFromForTree(node1);
      node0.isInstanceOf();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[12];
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.setSourceFileForTesting("");
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node1.srcrefTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isDo();
      Node node3 = new Node(306, node0, node1);
      node3.addSuppression("<qX/)*I");
      node1.cloneTree();
      node2.isUnscopedQualifiedName();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node0.isThrow();
      node1.children();
      Node node2 = new Node(40, node1, node1, 57, 49);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.isFromExterns();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node3.isContinue();
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      Node node0 = Node.newNumber(4670.1965075249);
      Node node1 = new Node(132, node0, node0, node0, node0, 56, 53);
      node0.getProp(42);
      node1.putProp(41, (Object) null);
      Node node2 = node1.srcref(node0);
      Node node3 = new Node(110, 56, 92);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("[#BSxF7-$");
      node2.isReturn();
      Node node4 = Node.newString("[#BSxF7-$", 55, 23);
      node2.isParamList();
      Node node5 = Node.newString(46, "length");
      node5.isUnscopedQualifiedName();
      node2.isLabel();
      node4.isStringKey();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newNumber(942.46404269);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((-1250.69));
      Node node2 = new Node(37, node0, node1);
      node2.useSourceInfoFrom(node0);
      node2.isGetElem();
      node0.children();
      Node node3 = null;
      try {
        node3 = new Node(465, node2, node1, 31, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(85);
      node0.isCase();
      node0.getJSDocInfo();
      node0.isSetterDef();
      node0.isEquivalentTo(node0, true, false, false);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(57, node0, 8, 4095);
      node0.isInstanceOf();
      node1.children();
      node0.isVarArgs();
      node0.isVarArgs();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node2.children();
      node0.checkTreeEquals(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node3 = new Node(520, 52, 696);
      node3.addSuppression("l");
      node3.cloneTree();
      node1.isUnscopedQualifiedName();
      node0.isThis();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(0, 38, 57);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      Node node2 = Node.newString(16, "Object#Element");
      node1.cloneNode();
      node2.isFalse();
      Node node3 = new Node(32, 47, 43);
      node3.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node3.putIntProp(43, 148);
      Node.newNumber((double) 42);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(86);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(2);
      node0.isDefaultCase();
      node0.isDebugger();
      node0.isHook();
      Node node1 = Node.newString(90, "5]%ujhb(_Lg//4hN!");
      node0.hasOneChild();
      node0.useSourceInfoFromForTree(node1);
      Node node2 = new Node(57, 459, 50);
      node1.isAssign();
      Node node3 = Node.newNumber((double) 0, 51, 4095);
      node0.isLocalResultCall();
      node1.isHook();
      node1.addChildrenToBack(node3);
      node0.isAnd();
      node0.setLineno(57);
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      node0.getDirectives();
      node0.getSourceFileName();
      Node node1 = new Node(42, node0, 49, 52);
      node0.getAncestor(1);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 56, 4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node1.mayMutateGlobalStateOrThrow();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node1.getBooleanProp(53);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = node0.cloneNode();
      node0.getJSDocInfo();
      node1.isSetterDef();
      Node node2 = null;
      Node node3 = null;
      try {
        node3 = new Node(32, (Node) null, (Node) null, 29, 4095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isDo();
      node0.children();
      Node.newString(53, "gcN/=z\"V@C2T/");
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node0.isIf();
      node1.getSideEffectFlags();
      node0.isFalse();
      node1.isWith();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      node0.getDirectives();
      node0.getSourceFileName();
      Node node1 = new Node(53, node0);
      node0.getAncestor(1);
      // Undeclared exception!
      try { 
        Node.newString(4095, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags((-889));
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString(3660, "gcN/=z\"V@CT/");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.isComma();
      node1.isScript();
      Node node2 = new Node(891, node1, 567, 893);
      node2.isUnscopedQualifiedName();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "", 149, 149);
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node(40, 126, 49);
      Node node2 = node1.srcrefTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.isDo();
      Node node3 = Node.newString(43, "YTME+,<");
      node1.addChildToBack(node3);
      node2.isGetterDef();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node4 = null;
      try {
        node4 = new Node(40, nodeArray0, 36, 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      node0.getDirectives();
      node0.getSourceFileName();
      Node node1 = new Node(31, node0);
      Node node2 = new Node(49, 4095, 38);
      Node node3 = node1.copyInformationFrom(node2);
      node2.isUnscopedQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(168);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node4 = Node.newString(47, "PuHqhMt@5}{N=F");
      Node node5 = node2.cloneNode();
      node3.isFalse();
      node5.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.isUnscopedQualifiedName();
      node4.isLabel();
      node3.isStringKey();
      node5.isOr();
      node2.isEquivalentToTyped(node5);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = new Node(51, node0, 16, 29);
      node0.isThrow();
      node1.children();
      node1.isOptionalArg();
      EvoSuiteFile evoSuiteFile0 = null;
      node0.isExprResult();
      node0.isWhile();
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(86);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(2);
      node0.isDefaultCase();
      node0.isDebugger();
      node0.isHook();
      Node node1 = Node.newString(90, "5]%ujhb(_Lg//4hN!");
      node0.hasOneChild();
      Node node2 = new Node(0, node0, node1, node0, node0);
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37);
      node0.setType(39);
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.setDouble(8.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(57, node0, 8, 4095);
      node0.isInstanceOf();
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(53);
      node2.isIn();
      node1.removeChild(node0);
      node2.isInstanceOf();
      node0.isFunction();
      node2.addChildrenToFront(node1);
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.newString(94, " is not a string node");
      Node node2 = node1.cloneNode();
      node0.isFalse();
      node2.setWasEmptyNode(true);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      node0.getDirectives();
      node0.getSourceFileName();
      Node node1 = new Node(31, node0);
      Node node2 = new Node(49, 4095, 38);
      node1.copyInformationFrom(node2);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node((-1730), 56, 47);
      node3.isEquivalentTo(node0);
      node2.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.addChildrenToFront(node4);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      // Undeclared exception!
      try { 
        node4.getExistingIntProp(132);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 132
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "";
      Node node0 = Node.newString(720, "", 4, 720);
      Node node1 = Node.newString(4095, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = new Node(4, node0, node0, 2048, 12);
      node0.addChildToFront(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node2.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 720
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("+uJlEH[");
      Node node0 = Node.newString("PuHqhMt@5}{N=F");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.addSuppression("com.google.common.collect.EmptyImmutableSet");
      node0.setLength(46);
      node0.getJSDocInfo();
      node0.isContinue();
      Node node1 = Node.newString("KA!Qo)T]lyB:&K9KeO");
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Charset.defaultCharset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(153, "is_constant_name");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      Node node2 = Node.newString(4, "is_constant_name");
      node1.isComma();
      node0.isInc();
      node0.isInstanceOf();
      node1.isLabelName();
      node1.isNull();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<TemplateType> linkedList0 = new LinkedList<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedList0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isDo();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(38);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isQualifiedName();
      try { 
        node0.setDouble(8.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(9);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node0.isThrow();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.isLabelName();
      node0.isIn();
      node0.isFalse();
      node0.setChangeTime(38);
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(36, node1, node0, node1);
      node1.getSourceFileName();
      Node.newString(32, "[", 40, 29);
      node0.setLength(37);
      node1.getSourcePosition();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node0.isThrow();
      node0.isBlock();
      Node node2 = Node.newString((-1734), "PuHqhMt@5}{N=F");
      node1.isArrayLit();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node0.isDo();
      Node node3 = Node.newString(36, "PuHqhMt@5}{N=F");
      Node node4 = new Node(60, node3, node3, node2, node1);
      node3.addChildToBack(node4);
      node3.isQualifiedName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isExprResult();
      node1.isHook();
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      LinkedList<JSType> linkedList1 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList1);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.setSourceFileForTesting("J,j%;P{Q\"!!}k>w");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
      node1.isExprResult();
      node1.isGetterDef();
      node1.isInc();
      node1.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.children();
      Node node2 = Node.newString((-1730), "Object#Element");
      node2.addChildToBack(node1);
      node1.isNE();
      node2.hasChild(node1);
      Node.newString("4bshO%\"7qN=K~8w");
      node0.isInc();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node3);
      node_NodeMismatch0.equals("");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2|CT");
      Node node0 = new Node(14);
      Node node1 = new Node(4095, 31, 42);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isCase();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString(132, "");
      Node node1 = node0.cloneNode();
      node0.isFalse();
      node1.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.putIntProp((-506), 46);
      Node node2 = Node.newNumber((double) 52);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(149, "");
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isDo();
      Node.newString((-778), "c`8ZowLs%s$DGF(Z");
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(57, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1644);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      HashMap<TemplateType, JSType> hashMap1 = new HashMap<TemplateType, JSType>();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(52, node0, 49, 57);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isOptionalArg();
      Charset.defaultCharset();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node node2 = Node.newString(56, "Y.G{/;\u0005=-J/U <");
      node0.addChildToBack(node1);
      node2.srcrefTree(node1);
      node2.isThis();
      node0.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(false);
      node0.isDebugger();
      node1.removeProp(32);
      node2.isBlock();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(50, node0, node0, node0, node0, 47, 12);
      node0.isStringKey();
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node0.isScript();
      Node node2 = Node.newString(30, "<invalid>");
      node1.isArrayLit();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.getAncestors();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.getAncestor(4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node2.setSideEffectFlags(node_SideEffectFlags4);
      Node.newString(2, "Object#Element");
      Node node4 = Node.newString(31, "PuHqhMt@5}{N=F");
      node4.isObjectLit();
      Node node5 = null;
      try {
        node5 = new Node(37, node1, node0, node2, (Node) null, 4095, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(10, "ew5z];65;P", 10, 10);
      Node node1 = new Node(10, node0, node0, node0, 34, 57);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "ew5z];65;P");
      charset0.encode(charBuffer0);
      ByteBuffer.allocateDirect(37);
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("com.google.common.colect.Maps$1");
      node2.isReturn();
      try { 
        node1.setDouble(0.5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITXOR 34 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(29);
      node0.isThrow();
      node0.isGetterDef();
      node0.isInc();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.wasEmptyNode();
      Node node1 = Node.newString(54, "Object#Element");
      node0.hasOneChild();
      Node node2 = new Node(112, 1, 54);
      node2.isAssign();
      Node node3 = Node.newNumber(0.7, 2, 42);
      node1.isLocalResultCall();
      node1.isHook();
      node3.isAnd();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = Node.newString("[", 40, 56);
      node0.getSourceFileName();
      Node node2 = new Node((-239), node1, node1, node1, node0);
      Node node3 = node2.srcref(node0);
      Node node4 = new Node((-4466), 38, 147);
      node1.isReturn();
      node2.isParamList();
      Node node5 = null;
      try {
        node5 = new Node(4095, node3, node0, 52, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0));
      node0.getSourceOffset();
      node0.isTypeOf();
      Node node1 = Node.newNumber((double) 51, (-1), 1);
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setSourceEncodedPosition(1960);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = new Node((-3505), node1, node0, node1, node0);
      node2.isFromExterns();
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = new Node(1182);
      Node node1 = new Node(102, node0, 2079, 15);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.addModifies("");
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.addChildBefore(node2, node0);
      node1.isFalse();
      node2.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.isUnscopedQualifiedName();
      node0.isLabel();
      Node node3 = new Node(4095, node1, 43, 556);
      node3.isStringKey();
      node0.isOr();
      node3.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber((-2290.999642405699));
      Node node1 = new Node(8, node0, 31, 105);
      node0.isInstanceOf();
      Node node2 = new Node((-715));
      Stack<JSType> stack0 = new Stack<JSType>();
      node2.getDirectives();
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.isEquivalentToShallow(node4);
      node3.addChildrenToBack(node2);
      Node node5 = node0.removeChildren();
      node5.hasChildren();
      node1.isLocalResultCall();
      node5.isCall();
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isDo();
      Node node2 = node1.srcrefTree(node0);
      node2.setVarArgs(false);
      Node node3 = null;
      try {
        node3 = new Node(30, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(4095);
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.addModifies("YTME+,<");
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1644);
      Node node1 = Node.newString("N");
      Node node2 = new Node(29, node0, node1, node0, node0);
      node2.removeFirstChild();
      node0.isEquivalentTo(node2, true, true, true);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node0.getBooleanProp(39);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.addChildBefore(node2, node0);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      Node node3 = new Node(31, 29, 15);
      Node node4 = Node.newString("Object#Element");
      node0.isReturn();
      node4.cloneTree();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(1, node0);
      Node node2 = Node.newString("quoted", (-2458), 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node2.isBreak();
      node1.setChangeTime(15);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString(149, "[");
      Node node1 = node0.cloneNode();
      node0.getSourceFileName();
      Node node2 = Node.newString(56, "L[\fS-Z/Pl8~s");
      node2.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(118, nodeArray0, 47, 49);
      Node node4 = new Node(44, node2, 1, 32);
      node4.mayMutateArguments();
      node4.useSourceInfoIfMissingFromForTree(node1);
      try { 
        node4.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TRUE is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 125;
      Node.extractLineno(125);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString(105, ",M");
      Node node1 = new Node(105, node0, node0, 763, 4095);
      Node node2 = Node.newNumber((-1407.3843204), 54, 49);
      node2.copyInformationFrom(node0);
      int int1 = 40;
      node2.isFromExterns();
      try { 
        node1.setString("^{%YBM5Esa");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 763 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags8.clearSideEffectFlags();
      Node node0 = Node.newString(148, "%YL3");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.isComma();
      node1.isScript();
      Node.extractCharno((-1341));
      node1.addChildToBack(node0);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString(132, "");
      Node node1 = node0.cloneNode();
      node0.isFalse();
      node1.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.isUnscopedQualifiedName();
      node0.isLabel();
      node0.isStringKey();
      node0.isOr();
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      node0.getDirectives();
      node0.getSourceFileName();
      Node node1 = new Node(31, node0);
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(35);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isDelProp();
      node0.getLastChild();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber(3259.655, 859, 859);
      Node node1 = new Node((-769), node0, node0, node0);
      node0.srcref(node1);
      Node.extractLineno((-769));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isGetterDef();
      node1.isFalse();
      node1.putIntProp((-2098), 55);
      Node.mergeLineCharNo(31, 2270);
      Node node2 = new Node((-2835), 1, 54);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -2098
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber(942.46404269);
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      nodeArray0[0] = node0;
      Node node1 = Node.newString(37, "gcN/=z\"V@C2T/");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.cloneNode();
      node0.isFalse();
      node0.putIntProp(11, 31);
      Node.mergeLineCharNo(57, 2);
      Node node3 = new Node(411, 337, 39);
      node1.toStringTree();
      Node node4 = new Node(8, nodeArray0);
      node4.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 87);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.isAssign();
      node1.isScript();
      Node node2 = new Node(1, node0);
      node2.isHook();
      node2.isAdd();
      Node node3 = Node.newString(54, "rSq(<PNo59.._O<");
      Node.extractCharno(87);
      node2.addChildToBack(node1);
      Node node4 = node3.cloneNode();
      node2.checkTreeEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(86);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(2);
      node0.isDefaultCase();
      node0.isAssign();
      node0.isScript();
      Node node1 = new Node(47, node0);
      node1.isHook();
      node0.isAdd();
      Node.newString(128, "qrz78AfS?IjIs|h]exm");
      Node.extractCharno(103);
      node0.addChildToBack(node1);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(4095);
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node2.addChildToBack(node1);
      node1.isThis();
      node2.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      node2.setLineno(2);
      node2.setIsSyntheticBlock(false);
      node2.isDebugger();
      node0.removeProp(39);
      node0.isBlock();
      node0.isUnscopedQualifiedName();
      node2.getLastSibling();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      Node node2 = new Node(102, node0, node0, (-2916), (-1312));
      node2.cloneTree();
      node0.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node((-1831), node0, node0, node0, node0, 47, 110);
      Node node2 = null;
      try {
        node2 = new Node((-1831), node1, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(5777, node0, node0, node0, node0);
      node0.setLineno(147);
      Node node2 = Node.newString("Object#Key", 301, 51);
      node1.putIntProp((-828), 4);
      int int0 = Node.DECR_FLAG;
      Node node3 = new Node(46, 55, 31);
      node3.setSourceFileForTesting(":mFG-qw%H`");
      node2.toStringTree();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(148, "Node tree inequality:\nTree1:\n");
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node((-615));
      Node node1 = new Node((-3917));
      node1.isVar();
      node0.isSetterDef();
      node1.children();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node1);
      node0.isSyntheticBlock();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(149, "");
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node((-1394), 36, 2842);
      node1.getIndexOfChild(node0);
      node1.getCharno();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node1 = new Node(2107, node0, 56, 4);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Not declared as a type name");
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = (JSType) objectType0;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType(" : ");
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.srcrefTree(node1);
      node1.setVarArgs(true);
      Node node3 = new Node(50, node2);
      Node node4 = Node.newString("Not declared as a type name", (-1347), 48);
      node3.isWith();
      node4.toStringTree();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(85);
      node0.isCase();
      node0.getJSDocInfo();
      node0.isSetterDef();
      Node node1 = new Node(37, node0, node0, 29, 33);
      node1.setSourceEncodedPosition(47);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isFromExterns();
      node1.isInstanceOf();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(149);
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.isComma();
      node0.isScript();
      node1.isHook();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(12, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isDelProp();
      Node node2 = node1.getLastChild();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newNumber((-816.1198), 44, 8);
      Node node1 = new Node(103, 29, 0);
      node0.getIndexOfChild(node1);
      node1.getCharno();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node1 = new Node(55, node0, node0, node0, node0, (-1815), 55);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("PuHqhMt@5}{N=F");
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      jSTypeArray0[4] = (JSType) objectType0;
      Node node2 = jSTypeRegistry1.createParameters(jSTypeArray0);
      Node node3 = node2.srcrefTree(node1);
      Node node4 = new Node(1399, node3);
      Node.newString("", 38, 81);
      node0.addChildrenToBack(node1);
      node4.isHook();
      Node node5 = Node.newString(50, "Object#Element");
      node5.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node1.srcrefTree(node0);
      node1.setVarArgs(true);
      Node node3 = new Node(1, node2);
      Node.newString("quoted", (-2458), 1);
      node1.isWith();
      node2.toStringTree();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node1.putIntProp((-4466), 1);
      Node.mergeLineCharNo(9, (-4096));
      Node node2 = new Node(12, 21, 32);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -4466
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(32, node0, node0, node0, node0, 49, 4095);
      Node node2 = node1.removeChildren();
      node1.setSourceEncodedPositionForTree(4);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node1);
      node3.addChildrenToFront(node1);
      Node node4 = Node.newNumber(2039.160855617, 1487, 1541);
      node2.wasEmptyNode();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node0.isThrow();
      node1.children();
      node1.isOptionalArg();
      Node node2 = new Node(40, node1, node1, 57, 49);
      node1.getSourceFileName();
      Node node3 = Node.newString("PuHqhMt@5}{N=F");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.addSuppression("jJI}ZBo");
      node2.cloneTree();
      node3.getIntProp(54);
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.clearTemplateTypeNames();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.type = 1;
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = new Node(31, 29, 15);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node3.isTrue();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(40, node1, node1, 0, 29);
      node1.getSourceFileName();
      node1.removeFirstChild();
      node0.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      node2.setIsSyntheticBlock(false);
      node1.isDebugger();
      Node node3 = null;
      try {
        node3 = new Node(56, (Node) null, 2, 2147483645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("Object#Key");
      Node node1 = new Node(31, 29, 15);
      Node node2 = Node.newString("Object#Element");
      node2.addChildrenToFront(node0);
      Node node3 = Node.newString("PuHqhMt@5}{N=F");
      node2.isEquivalentTo(node3, true, false, false);
      node0.isVar();
      Node.newString(1, "Object#Key");
      node2.isNull();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "z/z.^'![{");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.isComma();
      node0.isScript();
      node1.isHook();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node1.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node2.getQualifiedName();
      node0.getSourcePosition();
      node2.isIn();
      node2.isFalse();
      Node node3 = Node.newNumber((double) 15);
      node3.getInputId();
      node3.isHook();
      node0.isInstanceOf();
      node1.isExprResult();
      node1.isHook();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      node0.isThis();
      node1.isUnscopedQualifiedName();
      node1.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(false);
      node1.isDebugger();
      node1.removeProp(8);
      node1.isBlock();
      node0.isUnscopedQualifiedName();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(59);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      Node node2 = Node.newNumber(1.0, 50, 4095);
      node2.getSourceOffset();
      Node node3 = Node.newString(43, "VdVP2i~zUi?");
      node2.isSyntheticBlock();
      node3.isName();
      node1.setLineno(1278);
      node0.clonePropsFrom(node2);
      node1.isUnscopedQualifiedName();
      int int0 = Node.JSDOC_INFO_PROP;
      node2.mayMutateGlobalStateOrThrow();
      node3.isOptionalArg();
      node1.isBreak();
      // Undeclared exception!
      try { 
        node0.setDouble(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 59
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      node1.putProp(1754, (Object) null);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node((-2813), 31, 55);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("PuHqhMt@5}{N=F");
      node_FileLevelJsDocBuilder0.append("[#BSxF7-$");
      node3.isReturn();
      Node node4 = Node.newString("", 36, 12);
      node0.isParamList();
      node4.putIntProp((-2469), 8388616);
      Node node5 = Node.newNumber((double) 46);
      node5.checkTreeTypeAwareEqualsImpl(node1);
      node2.isFor();
      node0.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node1.isGetterDef();
      node0.isInc();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.children();
      Node node2 = Node.newString(53, "gcN/=z\"V@C2T/");
      node0.addChildToBack(node1);
      node2.isNE();
      node1.hasChild(node2);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1104, nodeArray0);
      node0.setVarArgs(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      JSType jSType0 = modificationVisitor0.caseUnionType(unionType0);
      FunctionType functionType0 = jSTypeRegistry1.createFunctionType(jSType0, jSTypeArray0);
      ObjectType objectType0 = jSTypeRegistry1.createObjectType("t1,`pQgl1l1<*E+Os_", node0, (ObjectType) functionType0);
      jSTypeArray0[0] = (JSType) objectType0;
      JSType jSType1 = modificationVisitor0.caseAllType();
      jSTypeArray0[1] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      Node.newNumber(0.0, 30, (-4466));
      node1.getSourceOffset();
      Node node2 = Node.newString(105, "VdVP2i~zUi?");
      node2.isSyntheticBlock();
      node2.isName();
      node2.setLineno(2560);
      Node node3 = node1.clonePropsFrom(node0);
      node3.isUnscopedQualifiedName();
      node3.getChangeTime();
      node0.mayMutateGlobalStateOrThrow();
      node1.isCatch();
      node3.isBreak();
      // Undeclared exception!
      try { 
        node1.setDouble(2.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(1437.0);
      Node node1 = new Node(33);
      Node node2 = new Node(43);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node2);
      node2.setChangeTime(29);
      node1.isDefaultCase();
      node0.isNoSideEffectsCall();
      node1.isSyntheticBlock();
      node1.isGetProp();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      node1.putProp(1754, (Object) null);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node((-2813), 31, 55);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("[#BSxF7-$");
      Node node4 = new Node(4095, node1, node1, node1, node1, 16, 1073741824);
      node4.isContinue();
      Node.newString("no next sibling.");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1644);
      node0.setSourceEncodedPositionForTree(159);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      Node.newString(118, "tF7TT");
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(5777, node0, node0, node0, node0);
      Node node2 = Node.newString("Object#Key", 301, 51);
      node1.putIntProp((-828), 4);
      Node.mergeLineCharNo(124, 4095);
      Node node3 = new Node(46, 55, 31);
      node2.toStringTree();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.isFromExterns();
      node1.srcrefTree(node0);
      Node node2 = node1.getFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-506), nodeArray0, 100, (-506));
      JSType.toMaybeTemplatizedType((JSType) null);
      Node node1 = Node.newString("Unknown class name");
      Node node2 = new Node(56, node1, node0, 15, 57);
      node0.useSourceInfoFrom(node2);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.Node$StringNode", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
      node0.isDelProp();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-693), 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node1 = new Node(51, node0, node0, node0, node0, (-25), (-25));
      node1.srcref(node0);
      Node node2 = null;
      try {
        node2 = new Node(2603, node0, node0, node0, 46, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber(942.46404269);
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(16, node0);
      node0.addChildAfter(node1, (Node) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte)21;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)112;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      nodeArray0[0] = node0;
      node0.getAncestors();
      Node node2 = null;
      try {
        node2 = new Node(57, nodeArray0, 3574, (-1651));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 922);
      Node node2 = Node.newString(4, "", 31, 118);
      node0.isNoSideEffectsCall();
      node0.addChildrenToFront(node1);
      node1.isQuotedString();
      node1.isScript();
      node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node2.isEquivalentTo(node0);
      node_SideEffectFlags2.clearAllFlags();
      node1.putIntProp(50, 1117);
      Node.mergeLineCharNo((-401), 1);
      node1.removeChildren();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      node0.isComma();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isOptionalArg();
      Node.newNumber((-2709.2), 653, 47);
      Node node2 = Node.newString(">U+2FcTCV=0cASW", 57, 12);
      node1.isWith();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node1.srcrefTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.getSourceFileName();
      node0.isDo();
      Node node3 = Node.newString(50, "2?L[|K<rLR)k");
      node1.addChildToBack(node3);
      node0.isQualifiedName();
      JSType.toMaybeTemplatizedType(jSTypeArray0[0]);
      node2.isGetterDef();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.newString(" is not a number node");
      node0.isQuotedString();
      node0.getCharno();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = new Node(4, 1172, 43);
      Node node2 = node1.cloneNode();
      node0.isFalse();
      Node node3 = new Node(130, node2, node2, 49, (-1208));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node2.isFunction();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("+uJlEH[");
      Node node0 = new Node(985);
      Node node1 = new Node(40);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node1);
      node0.setChangeTime(50);
      // Undeclared exception!
      try { 
        node1.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newString("gcN/=z\"V@C2T/", 1717986918, 29);
      Node node1 = new Node((-1598), node0, node0, 4, 8388608);
      Node node2 = node1.srcref(node0);
      Node node3 = Node.newString("PuHqhMt@5}{N=F", 8, 8);
      node0.checkTreeEquals(node3);
      node0.mayMutateGlobalStateOrThrow();
      node0.getAncestors();
      node3.getSourcePosition();
      Node node4 = Node.newString("com.google.common.collect.AbstractIndexedListIterator", 103, 1451);
      node4.isIn();
      node1.isFalse();
      Node.newNumber(2152.045609);
      node3.getInputId();
      node2.isHook();
      node4.isInstanceOf();
      node4.isExprResult();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325);
      node0.setSourceEncodedPositionForTree(3563);
      node0.getProp(5760);
      node0.children();
      node0.wasEmptyNode();
      node0.toStringTree();
      node0.isInc();
      node0.isVar();
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1644);
      node0.getQualifiedName();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Node node1 = Node.newString(47, "FP8+XP-: ", 37, 46);
      node1.isNoSideEffectsCall();
      node0.addChildrenToFront(node1);
      node0.isQuotedString();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node0.isEquivalentTo(node1);
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node1.isEmpty();
      node1.isSyntheticBlock();
      node0.toString(false, true, true);
      node_SideEffectFlags4.setMutatesArguments();
      node0.isBreak();
      node1.removeProp((-600));
      node1.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 37);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isDo();
      Node node2 = Node.newString(32, "");
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      Node node0 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceFileForTesting("");
      node0.isAssignAdd();
      node0.setWasEmptyNode(false);
      node0.getString();
      node0.isEmpty();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(12, node0, node0, node0, node0);
      Node.newString("Object#Key", 4095, 4095);
      node1.putIntProp((-1159), 13);
      Node.mergeLineCharNo(4095, (-401));
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      node0.isDo();
      node0.getChangeTime();
      Node node1 = Node.newString("", 447, 43);
      node1.isLabelName();
      Node node2 = new Node(36, 2, 57);
      node1.isEquivalentTo(node2);
      node0.isTry();
      node2.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 30
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(4095);
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.getAncestors();
      Node node3 = new Node(4095, node1, node1, node1, node1);
      node1.isFromExterns();
      node3.getFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node3.useSourceInfoIfMissingFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      Node node2 = Node.newString(114, "");
      node1.isObjectLit();
      Node node3 = new Node(149, node0, node1, node2, node0, 50, 149);
      node3.getLength();
      node3.isOr();
      node3.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      Node.newString("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      node0.setSourceEncodedPosition(31);
      node1.wasEmptyNode();
      node0.getSourceFileName();
      Node node2 = Node.newNumber((double) 40);
      node1.isFor();
      node2.getIntProp(1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 922);
      Node node2 = Node.newString(4, "", 31, 118);
      node0.isNoSideEffectsCall();
      node0.addChildrenToFront(node1);
      node1.isQuotedString();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags8.setMutatesGlobalState();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags5.setMutatesArguments();
      node1.isDelProp();
      node1.getLastChild();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node0.isGetterDef();
      node0.isInc();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isDo();
      Node node1 = Node.newString(164, "");
      node1.isUnscopedQualifiedName();
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.isGetterDef();
      node1.setWasEmptyNode(false);
      node0.getString();
      node1.isEmpty();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 148;
      Node[] nodeArray0 = new Node[0];
      int int1 = 1450;
      Node node0 = new Node(159, nodeArray0, 1450, 1637);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-579));
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 149, (-579));
      Node node1 = new Node(50, node0, node0, node0, 4095, (-881));
      Node node2 = new Node(54, node1);
      Node node3 = null;
      try {
        node3 = new Node(30, node2, node1, (-1954), 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2146576733), nodeArray0, 1450, 127);
      node0.addSuppression("-\"^!lRQ]`;R/;CF");
      Node node1 = Node.newString(50, "");
      Node node2 = node0.cloneNode();
      node2.isFalse();
      Node node3 = new Node(118, node0, node1, 54, 4095);
      node1.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      Node node4 = new Node(12);
      node4.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(57, node0, 8, 4095);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(53);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(53);
      node2.isIn();
      node1.removeChild(node0);
      node2.isInstanceOf();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      node1.isFalse();
      node0.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      node0.isComma();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.useSourceInfoFromForTree(node0);
      node1.isOptionalArg();
      Charset.defaultCharset();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node node2 = Node.newString(56, "Y.G{/;\u0005=-J/U <");
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.isGetterDef();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-110);
      byteArray0[5] = (byte) (-47);
      byteArray0[6] = (byte)37;
      byteArray0[7] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(1105, nodeArray0, 4, 604);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node0.isUnscopedQualifiedName();
      node1.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType jSType1 = jSTypeRegistry1.createOptionalNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType(jSType1, true, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      Node node2 = new Node(31, 29, 15);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node3.isTrue();
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("=EI8=pYQcA AxmN{3", (-341), (-341));
      Node node1 = new Node((-723), node0, node0, 4095, 32);
      node0.isOptionalArg();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      Node node2 = node0.detachFromParent();
      node2.isEquivalentTo(node0, true, true, false);
      byteArray0[1] = (byte) (-11);
      node1.children();
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)98;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.addChildToBack(node1);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      Node node2 = new Node(31, 29, 15);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node1.isGetProp();
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(1437);
      node0.getDirectives();
      node0.isDebugger();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getSourceFileName();
      node0.isDo();
      node0.getAncestors();
      node0.isWhile();
      Node node1 = node0.cloneTree();
      node0.removeProp(1543);
      node0.addChildToBack(node0);
      node1.isAnd();
      node0.isFalse();
      Node node2 = Node.newNumber((double) 1437);
      node2.setSourceFileForTesting((String) null);
      Node node3 = Node.newNumber((double) 54, 2, 0);
      // Undeclared exception!
      try { 
        node3.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(4095);
      Node node2 = new Node(53);
      node2.isOptionalArg();
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(53);
      node2.isDefaultCase();
      node1.isNoSideEffectsCall();
      node1.isSyntheticBlock();
      node0.isGetProp();
      node0.getChildCount();
      node0.setDouble(16);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 922);
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node0.isOptionalArg();
      Node.newString(37, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node2 = node0.srcref(node0);
      node0.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node0.isString();
      node2.getSourcePosition();
      node2.isFalse();
      Node node3 = Node.newNumber(0.0);
      node3.setSourceFileForTesting("v0h");
      Node node4 = Node.newNumber((double) 12, 46, 63);
      Node node5 = new Node(50, node1, node4, node1, 30, 1810);
      Node node6 = new Node(2, node5);
      node6.setChangeTime(42);
      // Undeclared exception!
      try { 
        node1.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      node1.putProp(1754, (Object) null);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node((-2813), 31, 55);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("71X");
      node3.isReturn();
      Node node4 = Node.newString("", 36, 12);
      node0.isParamList();
      node4.putIntProp((-2493), 8388608);
      Node.newNumber((double) 46);
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("CN(Am/");
      Node node1 = new Node(15);
      node1.isDefaultCase();
      node1.isSyntheticBlock();
      node1.getChildCount();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(29);
      Node node1 = Node.newNumber((double) 52, 1666, 1666);
      node1.isDo();
      node0.getChangeTime();
      Node node2 = Node.newString("WBN0&N&", 15, (-1907));
      node2.isLabelName();
      Node node3 = new Node(8192, (-1846), (-2439));
      node2.isEquivalentTo(node1);
      node1.isDec();
      Node node4 = new Node((-1907), node3, node0, node0, node0);
      node4.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node2.setSourceFileForTesting("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesThis();
      node2.isThrow();
      node2.isGetterDef();
      node1.isInc();
      node1.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isDo();
      node2.hasOneChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node1.siblings();
      node_FileLevelJsDocBuilder0.append("#6|(mi[S};20gPg=`0");
      node0.isReturn();
      Node node3 = new Node(2248, node0, 64, 1280);
      node3.isParamList();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(50, node0, node0, node0, node0, 47, 12);
      node0.isStringKey();
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node0.isScript();
      Node node2 = Node.newString(30, "<invalid>");
      node1.isArrayLit();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.getAncestors();
      node2.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isDelProp();
      node1.getLastChild();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getProp(1);
      Node node2 = new Node(31, 29, 15);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node2.toString(false, true, false);
      node0.setSourceEncodedPosition((-1634));
      node3.wasEmptyNode();
      node2.getSourceFileName();
      Node node4 = Node.newNumber((double) 4095);
      node4.isEmpty();
      node0.setString("cs3l");
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-973.5379378006688));
      String string0 = "";
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      String string1 = "directives";
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      node0.isThrow();
      Node node2 = Node.newNumber((-1.0), 29, (-950));
      node2.isNE();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1637);
      node0.putBooleanProp(159, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(148, node0, node0, node0, (-579), 351);
      node1.isComma();
      node0.isScript();
      node1.isHook();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.putBooleanProp(52, true);
      Node node1 = new Node(40, node0, node0, node0, 304, (-280));
      node0.isComma();
      node0.isScript();
      node0.isEquivalentTo(node0);
      node0.getAncestor(36);
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 922);
      Node node2 = Node.newString(4, "", 31, 118);
      node0.isNoSideEffectsCall();
      node0.addChildrenToFront(node1);
      node1.isQuotedString();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node2.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node1.isEmpty();
      node2.isSyntheticBlock();
      node0.toString(false, false, false);
      node_SideEffectFlags4.setMutatesArguments();
      node0.isBreak();
      node2.setChangeTime(36);
      node1.getChildAtIndex((-385));
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.getType();
      Node node1 = Node.newNumber((double) 0, 36, 37);
      node0.isDebugger();
      node0.mayMutateGlobalStateOrThrow();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.useSourceInfoFromForTree(node0);
      node2.getAncestors();
      node1.setWasEmptyNode(false);
      node0.isNot();
      Node node3 = Node.newString("V%v3]5js@%c");
      Node node4 = new Node(64, node3, node0, 1361, 1);
      node0.removeFirstChild();
      node2.setLength(57);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node5 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node5.isLabel();
      node4.isCall();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0));
      node0.getSourceOffset();
      node0.isTypeOf();
      Node node1 = Node.newNumber((double) 51, (-1), 1);
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.getAncestors();
      node1.getDouble();
      node1.checkTreeEqualsImpl(node0);
      node0.mayMutateArguments();
      Node node2 = Node.newNumber(0.0, 34, 49);
      Node node3 = new Node(112, node0, node0, 2117, 1);
      node2.isVar();
      node0.isRegExp();
      node2.isNumber();
      Node node4 = new Node(969);
      node2.getDouble();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      node1.putProp(1754, (Object) null);
      node1.isCatch();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(51, node0, node2, 112, 32);
      node3.cloneNode();
      double double0 = (-1.0);
      int int0 = 3568;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2146576733), nodeArray0, 1450, 127);
      node0.addSuppression("-\"^!lRQ]`;R/;CF");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.addSuppression("");
      Node node1 = Node.newString("-\"^!lRQ]`;R/;CF");
      node1.setString("-\"^!lRQ]`;R/;CF");
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2146576733
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(115, node0, node0, (-2916), (-1312));
      node0.removeFirstChild();
      Node node2 = Node.newString(1, "com.google.common.collect.SingletonImmutableBiMap", (-555), (-805));
      node2.setLength(36);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(48, node1);
      Node node4 = Node.newString("M6%W", 846, (-177));
      node4.addChildrenToBack(node3);
      node4.isHook();
      Node node5 = Node.newNumber(1.2, 116, 259);
      node5.getChangeTime();
      node2.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(8, 40, 50);
      Node node3 = Node.newString("");
      node2.isCall();
      node3.addChildrenToFront(node2);
      node1.isVar();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node1.isReturn();
      Node node4 = Node.newString("", 155, 8);
      node0.isParamList();
      node0.putIntProp((-187), (-280));
      node2.isInstanceOf();
      node4.isStringKey();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getProp(1);
      Node node2 = new Node(54, node1, node1, 50, 47);
      node1.getSourceFileName();
      node2.removeFirstChild();
      Node node3 = Node.newString((-420), "Object#Key", (-1634), 53);
      node3.setLength(2);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1410
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HM~u.N J rF8");
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node2.setSourceFileForTesting("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesThis();
      node2.isThrow();
      node2.isGetterDef();
      node1.isInc();
      node2.isFalse();
      Node.newString("HM~u.N J rF8", 52, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isDo();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node2.setSourceFileForTesting("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node node3 = node1.copyInformationFromForTree(node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node3);
      node3.setChangeTime(55);
      node2.setString("Node tree inequality:\nTree1:\n");
      Node.newString(37, ";.1");
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node.newNumber((double) 0);
      Node node0 = new Node(491520);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node0.isThrow();
      node0.isGetterDef();
      node0.isInc();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newString("NUMBER_VALUE_OR_OBJECT_TYPE", 13, 41);
      node1.isDo();
      // Undeclared exception!
      try { 
        Node.newString(491520, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node2.setSourceFileForTesting("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesThis();
      node2.isThrow();
      node2.isGetterDef();
      node1.isInc();
      node2.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isDo();
      node2.hasOneChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node1.siblings();
      node_FileLevelJsDocBuilder0.append("#6|(mi[S};20gPg=`0");
      node0.isReturn();
      Node node3 = new Node(2248, node0, 64, 1280);
      node3.isParamList();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      Node node0 = new Node(3568);
      node0.isDo();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-585), node0, node0, node0, node0);
      node0.getProp(105);
      node1.putProp(102, (Object) null);
      node1.isCatch();
      node1.copyInformationFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(46, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node1.isGetterDef();
      node0.isInc();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isDo();
      Node node2 = Node.newString(53, "Y.G{/;\u0005=-J/U <");
      node2.isUnscopedQualifiedName();
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.isGetterDef();
      node0.hasOneChild();
      node0.isAssign();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      String string0 = "PuHqhMt@5}{N=F";
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(1, node2);
      Node node4 = Node.newString("quoted", (-2458), 1);
      node2.addChildrenToBack(node3);
      node2.isHook();
      node2.getChangeTime();
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(41);
      node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node1 = new Node(2248, node0, node0, 1, 4095);
      Node node2 = null;
      try {
        node2 = new Node((-1464), node0, (-1168), (-164));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(149, "");
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node(40, 126, 49);
      node1.isUnscopedQualifiedName();
      node1.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(55);
      Node node1 = Node.newNumber((double) 42);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setIsSyntheticBlock(false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("[#BSxF7-$", true);
      node1.putProp(1754, (Object) null);
      node1.isCatch();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(51, node0, node2, 112, 32);
      Node.newNumber((-1.0), 55, 3568);
      node1.isRegExp();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-1.0), 37, 37);
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node1 = Node.newString(";x8+NQ!nk^GD@Zi");
      Node node2 = node0.srcref(node1);
      Node node3 = new Node(39, node1, node1);
      node3.useSourceInfoIfMissingFrom(node2);
      node2.isEquivalentToShallow(node3);
      node1.removeChildren();
      node0.hasChildren();
      node3.isLocalResultCall();
      node2.isCall();
      // Undeclared exception!
      try { 
        node3.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      int int0 = 126;
      int int1 = 148;
      Node node0 = new Node(126, 126, 148);
      node0.isOnlyModifiesArgumentsCall();
      node0.isFunction();
      node0.mayMutateArguments();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.detachChildren();
      int int2 = 48;
      simpleSourceFile0.getLineOffset(29);
      int int3 = 4016;
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("");
      node1.getBooleanProp(2429);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.setWasEmptyNode(false);
      node0.setSourceEncodedPositionForTree(15);
      node1.isThis();
      node1.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(true);
      node1.isDebugger();
      node1.removeProp(3167);
      node1.isBlock();
      node1.isDebugger();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node1.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = new Node(4095, 4095, 40);
      node0.getAncestor(37);
      Node.newString(3321, "");
      node1.isObjectLit();
      Node node2 = null;
      try {
        node2 = new Node(2573, node1, node0, (Node) null, (Node) null, 51, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(31, 31, 31);
      node0.isLocalResultCall();
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node(4, 31, 36);
      node0.addChildrenToFront(node1);
      node1.isNew();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(37, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2944);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
      node_FileLevelJsDocBuilder0.append("I:pkIN");
      node1.isThrow();
      Node node2 = Node.newNumber((double) 4095, 16, 1810);
      node2.isUnscopedQualifiedName();
      node0.hasOneChild();
      node_FileLevelJsDocBuilder0.append("e9xH");
      node0.isReturn();
      node1.isParamList();
      node0.putIntProp(2, 36);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newNumber((-2592.922608964297));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node((-285), node0, node1);
      node2.isGetElem();
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node1.isOptionalArg();
      Node node3 = Node.newString("var_args_name");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, false);
      node3.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry1.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node4 = node3.srcref(node2);
      node4.useSourceInfoIfMissingFrom(node2);
      node2.isEquivalentToShallow(node3);
      node3.removeChildren();
      node3.hasChildren();
      node2.isLocalResultCall();
      node4.isCall();
      Node node5 = Node.newString(55, "com.google.javascript.rhino.Node$ObjectPropListItem");
      Node node6 = new Node(4, node5, node5, node4);
      // Undeclared exception!
      try { 
        node6.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2772, 46);
      Node node1 = new Node(991, node0, node0, 37, 132);
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 991
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(25);
      node0.copyInformationFromForTree(node1);
      Stack<JSType> stack0 = new Stack<JSType>();
      node1.cloneNode();
      node0.isEquivalentToShallow(node0);
      node0.setChangeTime(53);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node2 = new Node(102, node0, node0, (-2916), (-1312));
      node0.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node2.isFunction();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(1417, 1417, 1417);
      Node node1 = Node.newNumber((-949.9018243));
      Set<String> set0 = new HashSet<String>();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = new Node(31, node1);
      Node node3 = new Node(1, (-285), 2);
      node0.getAncestor(26);
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(1105, nodeArray0, 4, 604);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Key");
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(101, node0, (Node) null, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)79;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = node0.srcref(node0);
      node0.checkTreeEquals(node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.getAncestors();
      node0.getSourcePosition();
      node1.isAnd();
      node1.isFalse();
      Node node2 = Node.newNumber((double) 15);
      node0.setSourceFileForTesting("PuHqhMt@5}{N=F");
      Node node3 = Node.newNumber((-775.475614), 0, 42);
      node1.copyInformationFromForTree(node3);
      Node node4 = new Node(256, node3, node2, node0, 44, 112);
      node1.isRegExp();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isVarArgs();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 1417);
      Node node1 = Node.newNumber((-949.9018243));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newString(28, "OR");
      node2.isDo();
      node2.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.checkTreeEqualsImpl(node0);
      node1.isAssignAdd();
      node1.isStringKey();
      Node node3 = Node.newString("OR");
      node0.removeProp(12);
      node3.addChildToBack(node1);
      Node node4 = Node.newString("com.google.javascript.rhino.jstype.JSType$2", 29, 1992);
      node4.isEquivalentTo(node0, false, false, false);
      // Undeclared exception!
      try { 
        node4.replaceChild(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      node1.isGetElem();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isOptionalArg();
      Charset.defaultCharset();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node node2 = Node.newString(56, "Y.G{/;\u0005=-J/U <");
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.isGetterDef();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node0.putBooleanProp(52, true);
      Node node1 = new Node(40, node0, node0, node0, 304, (-280));
      node0.isComma();
      node0.isScript();
      node0.isEquivalentTo(node0);
      node0.isNE();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!29");
      Node.mergeLineCharNo(40, 40);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(37, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2944);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
      node1.isThrow();
      Node node2 = Node.newNumber((double) 4095, 16, 1810);
      node2.isUnscopedQualifiedName();
      node0.hasOneChild();
      node_FileLevelJsDocBuilder0.append("e9xH");
      node0.isReturn();
      node1.isParamList();
      node0.putIntProp(2, 36);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(491520);
      node0.copyInformationFromForTree(node1);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      String string0 = "LC";
      node0.setChangeTime(53);
      try { 
        node0.setString("LC");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 1417);
      Node node1 = Node.newNumber((-949.9018243));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newString(28, "OR");
      node2.isDo();
      node2.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.checkTreeEqualsImpl(node0);
      node1.isAssignAdd();
      node1.isStringKey();
      Node node3 = Node.newString("OR");
      node0.removeProp(12);
      node3.addChildToBack(node1);
      Node node4 = Node.newString("com.google.javascript.rhino.jstype.JSType$2", 29, 1992);
      // Undeclared exception!
      try { 
        node4.replaceChild(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(820.0989486, 125, 2078);
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString(0, "H\"RmCwe@-D*BK_OtN");
      node0.getQualifiedName();
      node0.setIsSyntheticBlock(true);
      node0.isEmpty();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node1 = Node.newNumber((double) 36, 120, 0);
      node1.setLineno((-2611));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.addSuppression("~=Ry(2e(f*-RZY[");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node1.isDefaultCase();
      node2.isNoSideEffectsCall();
      node2.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node1.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node0.getSourcePosition();
      node2.isIn();
      node2.isFalse();
      Node node3 = Node.newNumber((double) 15);
      node3.getInputId();
      node3.isHook();
      node0.isInstanceOf();
      node1.isExprResult();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      node1.isGetElem();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isOptionalArg();
      Charset.defaultCharset();
      node1.getSideEffectFlags();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node node2 = Node.newString(56, "Y.G{/;\u0005=-J/U <");
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.isGetterDef();
      node1.isDec();
      // Undeclared exception!
      try { 
        node1.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node1.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node1.isString();
      node0.getSourcePosition();
      node2.isIn();
      node2.isFalse();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node2.toString(false, false, false);
      Node.newString("L^dF3jI!9CS=n6");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.defineInferredProperty("ce<VKFx'E.Y'&@", (JSType) null, node2);
      node0.setJSType(objectType0);
      node0.getAncestors();
      node0.isString();
      node2.getSourcePosition();
      node1.isIn();
      node0.isFalse();
      Node node3 = Node.newNumber((double) 54);
      node2.getInputId();
      node2.isHook();
      node3.isInstanceOf();
      node0.isExprResult();
      Node node4 = node1.cloneTree();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Object#Element");
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(41);
      node0.isLocalResultCall();
      node0.setChangeTime(102);
      node0.isVoid();
      Node node1 = new Node(4, 41, 36);
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-5365.0));
      Node node1 = new Node(16, node0, node0);
      node1.isGetElem();
      node0.children();
      node0.isOptionalArg();
      Node node2 = Node.newString(".");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node3 = Node.newNumber((double) 16);
      Node node4 = node1.srcref(node3);
      JSType jSType0 = jSTypeRegistry0.createOptionalNullableType(objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, jSType0, (JSType) objectType0);
      Node node5 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node5.getDirectives();
      node5.useSourceInfoIfMissingFrom(node3);
      Node node6 = Node.newNumber((double) 51);
      node4.isEquivalentToShallow(node6);
      Node node7 = Node.newString("`8");
      node7.removeChildren();
      node4.hasChildren();
      Node node8 = Node.newString("We:^8/C=B!Aoxr:", 37, 39);
      node8.isLocalResultCall();
      node5.isCall();
      node7.toStringTree();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(12, node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isDelProp();
      node0.isStringKey();
      Node node2 = node1.cloneTree();
      node2.setJSDocInfo((JSDocInfo) null);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Locale locale0 = Locale.FRENCH;
      mockPrintWriter0.format(locale0, "4:4dOgE\" qX{B;Dn", (Object[]) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(pipedWriter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newString((-1209), "z]|S-8U1#b[I,#md^", (-211), 43);
      Node node2 = new Node(43, node0, node0, node1, node1);
      node0.useSourceInfoIfMissingFrom(node2);
      Node node3 = Node.newString("Object#Element");
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.setSourceFileForTesting("Object#Key");
      Node node4 = new Node(50, node3);
      Node.newString("Object#Element");
      node4.getChildBefore(node3);
      node4.setLength(12);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      int int0 = 712;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-1346.560968818526), 2339, 712);
      Node node1 = new Node(2339, node0, (-1112), 51);
      Node node2 = null;
      try {
        node2 = new Node(2339, node1, node0, node1, 16, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(12, node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isDelProp();
      node0.isStringKey();
      node1.cloneTree();
      node1.removeProp((-809));
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-590), node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = node0.srcrefTree(node1);
      node0.isNoSideEffectsCall();
      node2.isVar();
      node1.isRegExp();
      node1.setCharno(12);
      node2.isIn();
      node2.getSourcePosition();
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("r,6.@ahJRqY", 305, 305);
      Node node1 = new Node((-3332));
      node0.isEquivalentTo(node1);
      node1.isNE();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node2 = new Node(40, node1, node1, 0, 975);
      node1.getSourceFileName();
      node1.removeFirstChild();
      Node node3 = Node.newString(858, "", 40, 29);
      node3.getLength();
      node0.setLength(8);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CONST  [length: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber(1417.0);
      Node node1 = new Node(48, node0, node0);
      node0.isGetElem();
      node0.children();
      node0.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer.allocateDirect(32);
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("com.google.common.colect.Maps$1");
      node2.isReturn();
      try { 
        node2.setDouble(0.5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.common.colect.Maps$1 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("+uJlEH[");
      Node node0 = Node.newString("+uJlEH[");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.addSuppression("+uJlEH[");
      node0.setLength(0);
      node0.isContinue();
      node0.toString(false, false, false);
      Node.newString("L^dF3jI!9CS=n6");
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.srcrefTree(node0);
      Node.newString("Named type with empty name component");
      Node node2 = Node.newString("?@'", 16, (-460));
      node0.hasChildren();
      JSType[] jSTypeArray1 = new JSType[1];
      jSTypeArray1[0] = (JSType) objectType0;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray1);
      node3.isLocalResultCall();
      Node node4 = Node.newString(37, "Not declared as a type name");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      Node node5 = Node.newString("com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo");
      nodeArray0[2] = node5;
      Node node6 = new Node((-2475), nodeArray0);
      Node node7 = null;
      try {
        node7 = new Node(37, node4, node2, (Node) null, node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node3 = node0.srcref(node2);
      node3.getDirectives();
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node4.isEquivalentToShallow(node1);
      node0.removeChildren();
      node3.hasChildren();
      node4.isLocalResultCall();
      node0.isCall();
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(33);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(57, "");
      Node node1 = Node.newNumber((double) 53);
      node1.addChildToBack(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      JSType.toMaybeTemplatizedType((JSType) objectType0);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node((-1913));
      Node node1 = new Node(15, (-1913), 2427);
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      Node node2 = node0.removeFirstChild();
      node2.toStringTree();
      node0.setLength(0);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      Node node1 = Node.newString("ALWAY_TRUE");
      node0.addSuppression("c@>-33<PKHo=8zZY");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node2.isDefaultCase();
      node2.isNoSideEffectsCall();
      node1.isSyntheticBlock();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      Node.newString(2277, "", 3687, 31);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("+uJlEH[");
      Node node0 = Node.newString("+uJlEH[");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.addSuppression("+uJlEH[");
      node0.setString("+uJlEH[");
      node0.cloneTree();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = node0.cloneNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node2 = new Node(40, node1, node1, 0, 975);
      node1.getSourceFileName();
      node1.removeFirstChild();
      Node.newString(858, "", 40, 29);
      node0.setLength(8);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CONST  [length: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.areAllFlagsSet();
      node1.isThrow();
      node1.isUnscopedQualifiedName();
      node1.hasOneChild();
      node_FileLevelJsDocBuilder0.append("Object#Element");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(0, "H\"RmCwe@-D*BK_OtN");
      node0.getQualifiedName();
      node0.isEmpty();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)82;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node.newNumber((-155.7));
      node0.isCatch();
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(1406);
      node0.isNot();
      Node node1 = Node.newString(2591, "com.google.javascript.rhino.Node$SiblingNodeIterable", (-3263), 132);
      Node node2 = new Node((-1), node1, node1);
      node0.useSourceInfoFrom(node2);
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = Node.newString("W[?g>V\"k)L_Ze@", 771, 0);
      Node node4 = new Node(1406, node0, node0, node0, 46, 51);
      node4.addChildToFront(node3);
      node4.isThis();
      // Undeclared exception!
      try { 
        node4.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1406
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      Node node1 = Node.newNumber((-949.9018243));
      node1.getAncestor(470);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.isOptionalArg();
      Charset.defaultCharset();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node.newString(4095, "PQ@.;IC0");
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.clonePropsFrom(node1);
      node0.isGetterDef();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-4096));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.setOptionalArg(false);
      node1.addChildrenToBack(node0);
      node1.wasEmptyNode();
      node1.isEquivalentToTyped(node0);
      node1.getLineno();
      node1.isCase();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.getJsDocBuilderForNode();
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      node1.isGetterDef();
      node0.isInc();
      node0.isFalse();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isDo();
      Node node2 = Node.newString(53, "Y.G{/;\u0005=-J/U <");
      node2.isUnscopedQualifiedName();
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node1.isGetterDef();
      node0.hasOneChild();
      Node.extractCharno(1959);
      node2.getChangeTime();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)119;
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(1);
      Node node1 = Node.newNumber(1437.0);
      node0.isCatch();
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Predicate<JSType> predicate0 = (Predicate<JSType>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).apply(any(com.google.javascript.rhino.jstype.JSType.class));
      objectType0.setValidator(predicate0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node1.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node1.setWasEmptyNode(false);
      node3.isNot();
      node3.getNext();
      Node node4 = null;
      try {
        node4 = new Node(4095, node0, node3, 48, 14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("empty_block", 6, 2048);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      Node node1 = new Node(4095, node0, node0);
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node2 = null;
      try {
        node2 = new Node(29, node1, node1, node0, node0, 1, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newNumber(942.46404269);
      Node node1 = new Node(42, 15, 8);
      Node node2 = new Node(30, node0, node1);
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = null;
      try {
        node3 = new Node(57, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.getType();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-973.5379378006688));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString(30, "directives");
      node1.isDo();
      node1.getAncestors();
      node0.getChangeTime();
      node0.isLabelName();
      node0.isEquivalentTo(node1);
      node0.isDec();
      node2.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0));
      node0.getSourceOffset();
      node0.isTypeOf();
      node0.isName();
      node0.setLineno((-1));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1417);
      Node node1 = Node.newNumber((-949.9018243));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = new Node(31, node1);
      Node node3 = new Node(1, (-285), 2);
      node0.getAncestor(26);
      Node node4 = Node.newString(56, "5lzr>G?]T[vBHGXZ");
      node4.isObjectLit();
      Node.newString(144, "com.google.javascript.rhino.Node$SiblingNodeIterable");
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1361);
      Node node1 = new Node(1361, node0, node0);
      node1.isGetElem();
      Iterable<Node> iterable0 = new HashSet<Node>();
      node1.isOptionalArg();
      Charset.defaultCharset();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.isDo();
      Node node2 = Node.newString(56, "Y.G{/;\u0005=-J/U <");
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.isGetterDef();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node0 = Node.newNumber((double) 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isEquivalentToShallow(node0);
      Node node1 = Node.newString(1541, "");
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node1.hasOneChild();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(159, nodeArray0, 1450, 1644);
      node0.putBooleanProp(159, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(148, node0, node0, node0, (-579), 351);
      node1.isComma();
      node0.isScript();
      node0.isEquivalentTo(node1);
      node0.isNE();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      node_NodeMismatch0.equals(jSDocInfo_Visibility0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node((-176));
      node0.isVar();
      node0.isSetterDef();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      Iterable<Node> iterable0 = node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) byteArrayOutputStream0;
      node1.setJSDocInfo((JSDocInfo) null);
      objectArray0[4] = (Object) byteArrayOutputStream0;
      objectArray0[5] = (Object) iterable0;
      objectArray0[6] = (Object) "*k3.#";
      objectArray0[7] = (Object) node1;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "*k3.#", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber(1417.0);
      Node node1 = new Node(48, node0, node0);
      node0.isGetElem();
      node0.children();
      node0.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("com.google.common.colect.Maps$1");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("com.google.common.colect.Maps$1");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node2.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node2.setJSType(objectType0);
      node1.getType();
      Node node3 = node1.srcref(node2);
      node3.mayMutateGlobalStateOrThrow();
      node1.getAncestors();
      node2.setWasEmptyNode(false);
      node3.isNot();
      Node node4 = null;
      try {
        node4 = new Node(48, node0, node0, 2004, 12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node((-4096));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.getSourceFileName();
      Node node2 = node1.removeFirstChild();
      node2.setLength(54);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(1105, nodeArray0, 4, 604);
      Node node2 = new Node(32);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(820.0989486, 125, 2078);
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      node0.getDouble();
      node0.checkTreeEqualsImpl(node0);
      node0.mayMutateArguments();
      Node node1 = Node.newNumber(0.7, 52, 53);
      node0.setLineno(55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      int int0 = 47;
      Node node0 = Node.newString(47, "node is not a child", 303, 47);
      node0.isUnscopedQualifiedName();
      int int1 = 2231;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ELLIPSIS");
      Node node1 = Node.newString("node is not a child", (-3211), 303);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setInputId((InputId) null);
      Node node2 = new Node(4, node0, node0, 39, (-633));
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = new Node(12, node0, 36, 57);
      String string0 = "uO";
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString(30, "directives");
      node1.isDo();
      node1.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isWhile();
      node2.isStringKey();
      node0.cloneTree();
      node0.removeProp(1543);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node2.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node2.isString();
      node3.getSourcePosition();
      node0.isIn();
      node3.isFalse();
      Node node4 = Node.newNumber(0.0);
      node4.setSourceFileForTesting("v0h");
      Node node5 = Node.newNumber((double) 12, 46, 63);
      Node node6 = new Node(1193, node2, node5, node1, 30, 1810);
      node6.isRegExp();
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(102, node0, node0, (-2916), (-1331));
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      Node node2 = node0.removeFirstChild();
      Node node3 = Node.newString(1, "com.google.common.collect.SingletonImmutableBiMap", (-555), (-785));
      node3.setLength(36);
      Node node4 = new Node(49, node2, node1);
      node4.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      Node node0 = Node.newString("ALWAYS_TRUE");
      Node node1 = new Node(44);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      node1.setSourceFileForTesting("Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isThrow();
      Node node2 = new Node(57, node1);
      node2.isQuotedString();
      node0.isInc();
      node0.isFalse();
      node_SideEffectFlags1.setReturnsTainted();
      JSType[] jSTypeArray0 = new JSType[4];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = jSTypeRegistry1.createFunctionTypeWithVarArgs((ObjectType) null, (JSType) null, (List<JSType>) linkedList0);
      jSTypeArray0[0] = jSType0;
      node2.getJSType();
      jSTypeArray0[1] = null;
      JSType.toMaybeTemplateType((JSType) null);
      jSTypeArray0[2] = (JSType) null;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createTemplatizedType((ObjectType) null, (Map<TemplateType, JSType>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      Node node2 = node1.srcrefTree(node0);
      node2.setWasEmptyNode(false);
      Node node3 = Node.newNumber((double) 32);
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 32.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node1.mayMutateGlobalStateOrThrow();
      node2.getAncestors();
      node1.isString();
      node0.getSourcePosition();
      node2.isIn();
      node2.isFalse();
      Node node3 = Node.newNumber((double) 15);
      node3.getInputId();
      node3.isHook();
      node0.isInstanceOf();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(820.0989486, 125, 2066);
      node0.isArrayLit();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[0];
      node0.getDouble();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.mayMutateArguments();
      Node node1 = Node.newNumber(0.7, 52, 53);
      node0.setLineno(55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node((-4096));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.setOptionalArg(false);
      node1.wasEmptyNode();
      node1.isEquivalentToTyped(node0);
      node1.getLineno();
      node1.isCase();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-590), node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node3;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      Node node4 = Node.newString("", 2, 554);
      nodeArray0[5] = node4;
      nodeArray0[6] = node2;
      nodeArray0[7] = node2;
      nodeArray0[8] = node2;
      Node node5 = null;
      try {
        node5 = new Node(31, nodeArray0, 46, (-1308));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      int int0 = 1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(1, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = node0.srcrefTree(node1);
      node1.setWasEmptyNode(false);
      node0.getSideEffectFlags();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000342] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.cloneTree();
      int int0 = 113;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("3Zi_7+;|e+chM1", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(33, (Node) null, (Node) null, 33, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-973.5379378006688));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString(30, "directives");
      node1.isDo();
      node1.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isWhile();
      node2.isStringKey();
      node0.cloneTree();
      node0.removeProp(1543);
      node1.addChildToBack(node0);
      Node node3 = Node.newString("", 29, 57);
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node(3265);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(48, 2931, 2931);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(2931, node0, node0, node0, node0, 30, 57);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      node0.isArrayLit();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(3058, nodeArray0, 39, 4267);
      node0.getDouble();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.mayMutateArguments();
      Node.newNumber(1.0, 51, 50);
      node1.setLineno(32);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-845), node0, node0, node0, node0, 119, 4095);
      node1.isFunction();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getChangeTime();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.hasChildren();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(1105, nodeArray0, 4, 604);
      Node node2 = null;
      try {
        node2 = new Node(2177, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber(942.46404269);
      Node.newString(4, "collection is empty; use the other version of this method");
      try { 
        node0.setString("collection is empty; use the other version of this method");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 942.46404269 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      node0.isThis();
      node1.isUnscopedQualifiedName();
      node1.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(false);
      node1.isDebugger();
      node1.removeProp(8);
      node1.isBlock();
      node1.isDebugger();
      node0.toStringTree();
      node1.setLength((-3147));
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN 51 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-845), node0, node0, node0, node0, 119, 4095);
      node1.isFunction();
      Node node2 = node1.cloneTree();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2248);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("PuHqhMt@5}{N=F", 2248, 2248);
      Node node1 = new Node(132, node0, node0, 4095, 2369);
      Node node2 = node0.srcref(node1);
      node0.checkTreeEquals(node2);
      node0.getDirectives();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isEquivalentToShallow(node0);
      node3.removeChildren();
      node0.hasChildren();
      node1.isLocalResultCall();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("r,6.@ahJRqY", 305, 305);
      node0.getBooleanProp(39);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-973.5379378006688));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString(30, "directives");
      node1.isDo();
      node1.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isAssignAdd();
      node2.isStringKey();
      Node.newString("directives");
      node0.removeProp(1543);
      node1.addChildToBack(node0);
      Node node3 = Node.newString("", 29, 57);
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node1.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node2.isString();
      node3.getSourcePosition();
      node0.isIn();
      node3.isFalse();
      Node.newNumber(0.0);
      node1.getInputId();
      node1.isHook();
      node2.isInstanceOf();
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      Node node1 = new Node((-1), node0, node0, node0, node0, (-25), (-25));
      node1.srcref(node0);
      Node node2 = null;
      try {
        node2 = new Node(2603, node0, node0, node0, 46, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset.defaultCharset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not declared as a constructor");
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType1;
      Node node2 = jSTypeRegistry1.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = new Node(93, node0, node0);
      node1.isGetElem();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer.allocateDirect(15);
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      node2.setQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      Node node3 = new Node(56, node1, node1, node1, node1);
      node3.isUnscopedQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node3.cloneTree();
      // Undeclared exception!
      try { 
        node1.replaceChild(node3, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      Node node2 = new Node(31, 29, 15);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node0.isIn();
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-590), node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = node0.srcrefTree(node1);
      node0.isNoSideEffectsCall();
      node0.isVar();
      node2.isRegExp();
      node2.setCharno(49);
      node2.isIn();
      node_NodeMismatch0.equals("lK");
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node1.getProp(1);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node3.addChildrenToFront(node1);
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node0.isIn();
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 101, 0);
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("com.google.common.collect.Lists$AbstractListWrapper");
      node1.getSourceFileName();
      node1.isEquivalentToShallow(node0);
      node1.toString();
      node1.getString();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node((-1461), node0, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = node1.getFirstChild();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      node0.isThis();
      node1.isUnscopedQualifiedName();
      node1.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(false);
      node1.isDebugger();
      node1.removeProp(8);
      node1.isBlock();
      node1.isDebugger();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isDo();
      Node node1 = Node.newString(1541, "");
      node0.addChildToBack(node1);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      JSType.toMaybeTemplatizedType((JSType) null);
      node0.isUnscopedQualifiedName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      boolean boolean0 = false;
      node0.cloneNode();
      boolean boolean1 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(102, node0, node0, (-2916), (-1331));
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      node0.removeFirstChild();
      Node node2 = Node.newString(1, "com.google.common.collect.SingletonImmutableBiMap", (-555), (-785));
      node2.setLength(36);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INC is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(102, node0, node0, (-2916), (-1331));
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      Node node2 = node0.removeFirstChild();
      Node node3 = Node.newString(1, "com.google.common.collect.SingletonImmutableBiMap", (-555), (-785));
      node3.setLength(36);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(46);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 46
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      Node node3 = new Node(56, node1, node1, node1, node1);
      node3.isUnscopedQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node4 = node3.cloneTree();
      Node node5 = null;
      try {
        node5 = new Node((-3779), node2, node0, node4, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(48, 2931, 2931);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(2931, node0, node0, node0, node0, 30, 57);
      node0.removeChildren();
      node1.setSourceEncodedPositionForTree(5760);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(0, "H\"RmCwe@-D*BK_OtN");
      node0.getQualifiedName();
      node0.setIsSyntheticBlock(true);
      node0.isOnlyModifiesThisCall();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node1 = null;
      try {
        node1 = new Node(56, nodeArray0, 39, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("sSu1zIz?m", 36, 36);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isFromExterns();
      node0.getFirstChild();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node1.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node1.setWasEmptyNode(false);
      node3.isNot();
      Node node4 = null;
      try {
        node4 = new Node(4095, node0, node3, 48, 14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(149, "");
      Node node1 = new Node(102, node0, node0, (-2916), (-1331));
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      node0.removeFirstChild();
      Node node2 = Node.newString(1, "com.google.common.collect.SingletonImmutableBiMap", (-555), (-785));
      node2.setLength(36);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node((-1913));
      Node node1 = new Node(15, (-1913), 2427);
      Node.newString(1, "");
      try { 
        node1.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(10, "");
      node0.setString("originalname");
      Node node1 = new Node((-2086), node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isNumber();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.isThrow();
      Node node3 = Node.newString("", 46, 2603);
      node3.isQuotedString();
      node0.isInc();
      node0.isFalse();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      Node node4 = null;
      try {
        node4 = new Node(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newString("Object#Element");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = new Node(50, node1);
      Node node3 = Node.newString("Object#Element");
      Node node4 = Node.newString("", 0, 4);
      node3.addChildrenToBack(node0);
      node2.isHook();
      node4.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newString("Object#Element", 86, (-1410));
      node0.putProp(50, (Object) null);
      node0.isOptionalArg();
      node1.setSourceEncodedPosition((-3069));
      Node node2 = new Node((-496));
      node2.wasEmptyNode();
      node2.getSourceFileName();
      Node.newNumber((double) 4095);
      Node node3 = new Node(56, node0, node0, node0, node1);
      Node node4 = null;
      try {
        node4 = new Node(1, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newNumber(4225.75114163325, (-889), 7);
      Node node1 = new Node(38, node0, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node4 = node0.srcrefTree(node3);
      Node node5 = Node.newString("Object#Element");
      Node.newString(":D sOyAN1JJ4kT+/rD", 42, 36);
      node4.addChildrenToBack(node5);
      node3.isHook();
      node5.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber((-138.73278369873967));
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      nodeArray0[0] = node0;
      node0.getAncestors();
      Node node1 = new Node(57, nodeArray0, 3552, (-1651));
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "0t(uMX'^_j1mu'm";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0t(uMX'^_j1mu'm");
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(113, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0), 0, 0);
      node0.getSourceOffset();
      node0.isSyntheticBlock();
      node0.isName();
      node0.setLineno((-1));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(64, nodeArray0, 7, 31);
      node0.addChildToFront(node1);
      Node node2 = null;
      try {
        node2 = new Node(4194304, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-949.9018243));
      node1.getJSDocInfo();
      String string0 = "";
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString((-35), "directives");
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      String string0 = "_'VapFR9%M`r<";
      Node node0 = Node.newString("_'VapFR9%M`r<", 4194304, 4194304);
      nodeArray0[0] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(4194304, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-973.5379378006688));
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString(30, "directives");
      node1.isDo();
      node1.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node2.isStringKey();
      node0.cloneTree();
      node0.removeProp(1543);
      node1.addChildToBack(node0);
      Node node3 = Node.newString("", 29, 57);
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString("Object#Element");
      node2.isCall();
      node1.isVar();
      node3.isRegExp();
      node3.isNumber();
      node0.setCharno((-99));
      node0.isIn();
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(8, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node((-1913));
      Node node1 = new Node(15, (-1913), 2427);
      node0.addChildToBack(node1);
      node0.getSourceFileName();
      node0.removeFirstChild();
      node0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(51, "");
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = node0.srcrefTree(node1);
      node1.setWasEmptyNode(false);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000342] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0), 0, 0);
      node0.getSourceOffset();
      node0.getChangeTime();
      Node node1 = Node.newNumber((-144.09807));
      node0.removeProp(1068);
      Node node2 = Node.newString(" : ");
      Node node3 = new Node(32, node1, node2, node1, node2);
      node3.addChildToBack(node0);
      Node node4 = Node.newString(" : ", 4095, 4095);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newNumber((-144.09807));
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      nodeArray0[0] = node0;
      Node node1 = new Node(57, nodeArray0, 3552, (-1651));
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(12, node0, node0, node0, node0, 54, 29);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      Node node2 = Node.newString("Object#Element");
      Node node3 = new Node(57);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node0.setWasEmptyNode(true);
      node1.setSourceEncodedPositionForTree(4);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node3.addChildrenToFront(node1);
      Node node4 = Node.newNumber(2039.160855617, 1487, 1541);
      node2.wasEmptyNode();
      Node node5 = new Node(49);
      node2.putBooleanProp(0, false);
      node2.setWasEmptyNode(true);
      node4.isNoSideEffectsCall();
      node1.getJsDocBuilderForNode();
      node0.setOptionalArg(true);
      node1.wasEmptyNode();
      node5.isEquivalentToTyped(node0);
      node1.getLineno();
      node0.isCase();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node((-1913), (-1913), (-1913));
      node0.getSourceFileName();
      node0.isGetElem();
      Node.newNumber((double) 57, (-206), 36);
      // Undeclared exception!
      try { 
        Node.newString(53, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      node0.isThis();
      node1.detachChildren();
      node1.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      node0.setIsSyntheticBlock(true);
      node1.isDebugger();
      node1.removeProp(8);
      node1.isBlock();
      node1.isDebugger();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      Node node2 = Node.newString("Object#Element");
      node1.isNoSideEffectsCall();
      node1.isVar();
      node2.isRegExp();
      node2.isNumber();
      node0.setCharno((-99));
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      Node node2 = Node.newString("Object#Element");
      Node.newString("", 0, 4);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      Node.newString(42, "N5:<rK", 37, 2996);
      Node node2 = new Node(50, 1, 1347);
      Node node3 = null;
      try {
        node3 = new Node(43, node0, node2, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("inferred", 0, 38);
      node0.putProp(0, "inferred");
      node0.isOptionalArg();
      node0.setSourceEncodedPosition(0);
      node0.wasEmptyNode();
      node0.getSourceFileName();
      Node node1 = Node.newNumber((double) 4095);
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = Node.newNumber((-949.9018243));
      String string0 = "";
      node0.getDirectives();
      node0.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getSourceFileName();
      Node node2 = Node.newString((-35), "directives");
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      // Undeclared exception!
      try { 
        Node.newString(50, (String) null, 52, 55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      node0.setWasEmptyNode(true);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1.0 37 [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node1.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node2.isString();
      node3.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(3265);
      Node node1 = Node.newString((-399), "7;YXmr)0CCZx&Hy/X8A", (-460), 36);
      Node node2 = new Node(42, node0, node0, node1, 0, 29);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(1739, (Node) null, (Node) null, (Node) null, 1739, 8287);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 37, 0);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1.0 37 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node((-1913));
      node0.getSourceFileName();
      node0.removeFirstChild();
      node0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString("", 132, 3456);
      Node node1 = new Node(132, node0, 43, 47);
      Node node2 = node1.removeChildren();
      node0.setWasEmptyNode(true);
      node1.setSourceEncodedPositionForTree(4);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node3.addChildrenToFront(node1);
      Node node4 = Node.newNumber(2039.160855617, 1487, 1541);
      node2.wasEmptyNode();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString((-2405), "`\"/8&mfx$", 856, 3424);
      Node node1 = new Node(30, 101, 0);
      Node node2 = new Node(46, node1, node1, node0, node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("\u0005y4J'1+}nC");
      node0.getString();
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(93);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.isFromExterns();
      Node node2 = node1.getFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E;fPZb^(VGvZ:Dy");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      node0.isFromExterns();
      Node node2 = Node.newString("Object#Element");
      Node.newString("", 0, 4);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node((-1461), node0, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = node1.getFirstChild();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createDefaultObjectUnion((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString(0, ">");
      node0.putBooleanProp(0, true);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newNumber((double) 55);
      Node node1 = new Node(55, node0, node0);
      node1.isGetElem();
      node1.children();
      node1.isOptionalArg();
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("directives");
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node2 = Node.newString(36, "directives");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getSourceFileName();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node1.getType();
      Node node3 = node0.srcref(node2);
      node1.mayMutateGlobalStateOrThrow();
      node3.getAncestors();
      node2.isString();
      node3.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node((-2255), (Node) null, (Node) null, (Node) null, (Node) null, (-2255), (-4982));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[0];
      int int1 = 0;
      Node node0 = new Node(0, nodeArray0, 0, 0);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node((-113));
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -113
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      int int0 = (-1409);
      Node node0 = new Node(48, 0, (-1409));
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(2931, node0, node0, node0, node0, (-3724), (-2189));
      // Undeclared exception!
      try { 
        node0.setDouble(37);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      String string0 = "_'VapFR9%M`r<";
      Node node0 = Node.newString("_'VapFR9%M`r<", 4194304, (-1863));
      nodeArray0[0] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[1] = null;
      Node node1 = null;
      try {
        node1 = new Node(4194304, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newNumber((-2604.0), 0, 0);
      node0.getSourceOffset();
      node0.getChangeTime();
      boolean boolean0 = false;
      Node node1 = Node.newNumber((-144.09807));
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("inferred", 0, 38);
      node0.putProp(0, "inferred");
      node0.isOptionalArg();
      node0.setSourceEncodedPosition(0);
      node0.wasEmptyNode();
      node0.getSourceFileName();
      Node node1 = Node.newNumber((double) 4095);
      node1.setChangeTime(38);
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      int int0 = (-283);
      Node node0 = null;
      try {
        node0 = new Node((-283), (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node((-4096));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSType0);
      jSTypeArray0[1] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(10, "");
      node0.setString("originalname");
      Node node1 = new Node((-2086), node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isNumber();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.isThrow();
      Node node3 = Node.newString("", 46, 2603);
      node3.isQuotedString();
      node0.isInc();
      node0.isFalse();
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node3.replaceChild(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = null;
      try {
        node0 = new Node((-1640), (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString(0, "1_XZn)U/X");
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createConstructorType((JSType) null, true, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      jSDocInfo0.setJaggerProvide(true);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      Node node0 = null;
      try {
        node0 = new Node(154, nodeArray0, 36, 2532);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(862, 2025, 0);
      // Undeclared exception!
      try { 
        node1.getAncestor((-2010));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1734), node0, node0, 29, 922);
      Node node2 = Node.newString(4, "", 31, 118);
      node0.isNoSideEffectsCall();
      node0.addChildrenToFront(node1);
      node1.isQuotedString();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node2.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.valueOf();
      node1.isEmpty();
      node2.isSyntheticBlock();
      node0.toString(false, true, false);
      node_SideEffectFlags4.setMutatesArguments();
      node0.isBreak();
      node2.setChangeTime(0);
      // Undeclared exception!
      try { 
        node1.setString("STRING  [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002]");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1734
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("", 116, 116);
      Node node1 = new Node(239, node0, node0, (-1046), 0);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-1410), node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSourceFileForTesting("Object#Key");
      node0.srcrefTree(node1);
      Node.newString("Object#Element");
      Node.newString("", 0, 4);
      Node node2 = Node.newNumber((double) 16);
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber(984.23);
      Node node1 = new Node(0, node0, node0, 0, 50);
      node1.type = 2;
      Locale locale0 = Locale.UK;
      // Undeclared exception!
      try { 
        locale0.getDisplayCountry((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("%63#>,6CS", 10, 0);
      Node node1 = Node.newString("%63#>,6CS", 50, 0);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      String string0 = "V{,KBpg}58O& sS-36";
      Node node0 = Node.newString(0, "V{,KBpg}58O& sS-36", 0, 0);
      Node node1 = new Node(38, node0, node0, node0, node0);
      node0.isQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node0.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(51, 51, 1544);
      Node node1 = new Node(51, node0, node0, node0);
      Iterable<Node> iterable0 = node0.siblings();
      node1.setType(51);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) byteArrayOutputStream0;
      objectArray0[2] = (Object) byteArrayOutputStream0;
      objectArray0[3] = (Object) byteArrayOutputStream0;
      objectArray0[4] = (Object) byteArrayOutputStream0;
      objectArray0[5] = (Object) iterable0;
      objectArray0[6] = (Object) "*k3.#";
      objectArray0[7] = (Object) node1;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "*k3.#", objectArray0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      PrintWriter printWriter1 = mockPrintWriter1.append('B');
      node1.appendStringTree(printWriter1);
      node1.addSuppression((String) null);
      node1.isDefaultCase();
      node1.isNoSideEffectsCall();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      List<JSType> list0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null, (-459), (-778));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1437);
      Node node1 = new Node(1437, node0, 53, 48);
      Node node2 = Node.newNumber((-949.9018243));
      String string0 = "";
      node1.getDirectives();
      node1.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getSourceFileName();
      Node node3 = Node.newString((-35), "directives");
      // Undeclared exception!
      try { 
        node3.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(2786, "is_namespace", 2786, 2786);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage1("is_namespace", node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property is_namespace
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newNumber((-1219.9517));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(116);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(0, "H\"RmCwe@-D*BK_OtN");
      node0.getQualifiedName();
      node0.setIsSyntheticBlock(true);
      node0.isOnlyModifiesThisCall();
      node0.isArrayLit();
      Node node1 = new Node((-66), node0, 48, 0);
      node1.setSourceEncodedPosition(0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getSourceFileName();
      node2.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node.newString(0, "", 0, 0);
      Node.newString(48, "Idz;Z]f-2c");
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }
}
