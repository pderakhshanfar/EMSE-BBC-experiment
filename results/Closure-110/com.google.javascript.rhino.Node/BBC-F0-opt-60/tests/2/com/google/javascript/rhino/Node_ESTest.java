/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 07:32:33 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newNumber(502.1570684817365, 34, 34);
      node0.toStringTree();
      node0.isThis();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      String string0 = "";
      // Undeclared exception!
      try { 
        enumElementType1.getPropertyNode(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getExistingIntProp((-565));
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node((-176), (Node) null, (-176), (-934));
      node1.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      PrintStream printStream0 = mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.appendStringTree(printStream0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1167));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.hasOneChild();
      node0.isNumber();
      String string0 = "";
      // Undeclared exception!
      try { 
        node0.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 101;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "";
      Node node0 = new Node(101, 46, 46);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a constructor");
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node0, objectType0);
      // Undeclared exception!
      try { 
        enumType0.toMaybeEnumType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = jSDocInfo0.getAssociatedNode();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSType jSType0 = jSTypeRegistry0.createDefaultObjectUnion(templateType0);
      templateType0.getDisplayName();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(templateType0);
      jSTypeArray0[1] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(77, (Node) null, (Node) null, node1);
      node1.isVarArgs();
      node2.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node2.isGetProp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newNumber(1619.105051);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      node0.getBooleanProp(0);
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.isOnlyModifiesArgumentsCall();
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node(0, nodeArray0, 36, 92);
      node1.removeChild(nodeArray0[3]);
      node1.addChildrenToBack(nodeArray0[0]);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(nodeArray0[1]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getChangeTime();
      node0.setChangeTime(965);
      node0.isOnlyModifiesArgumentsCall();
      node0.getStaticSourceFile();
      node0.isDec();
      node0.isThrow();
      node0.setVarArgs(false);
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString((-486), "5(j$vn]Oo=c}}W", (-486), 1013);
      Node node1 = new Node((-486), node0, node0, node0, node0, 1, 52);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.newString("", (-502), 30);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node1.getInputId();
      node0.children();
      // Undeclared exception!
      try { 
        node1.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("", 64, 2354);
      int int0 = 0;
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      node0.children();
      nodeArray0[7] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      jSDocInfo0.setConsistentIdGenerator(true);
      nodeArray0[8] = null;
      Node node1 = new Node(2, nodeArray0);
      node0.replaceChild(node1, nodeArray0[7]);
      boolean boolean0 = true;
      nodeArray0[4].toString();
      // Undeclared exception!
      try { 
        node0.putBooleanProp(int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node((-2379));
      int int0 = 120;
      int int1 = (-521);
      node0.setString("");
      Node.newNumber((double) node0.EMPTY_BLOCK, int0, int1);
      int int2 = 716;
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      int int0 = 2891;
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(2318, 2318, 5760);
      Node node1 = Node.newString((String) null);
      node1.getJsDocBuilderForNode();
      node1.children();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString("5:O3^>QGY}PiBN", 0, (-27));
      node0.isObjectLit();
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      node0.removeFirstChild();
      Node node1 = Node.newString(53, "is_dispatcher", 0, (-2274));
      node1.isEquivalentToShallow(node0);
      node1.setSourceEncodedPosition((-27));
      node1.setCharno((-2345));
      node1.getChildCount();
      Node node2 = node0.copyInformationFromForTree((Node) null);
      node2.isSyntheticBlock();
      int int0 = (-3235);
      node0.isOnlyModifiesThisCall();
      node2.isQualifiedName();
      node0.getExistingIntProp(int0);
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = (-5761);
      Node node0 = Node.newString(46, " is not a string node");
      int int1 = 0;
      Node node1 = Node.newString(" is not a string node", 29, (-1215));
      Node node2 = new Node(12, node0, node1, node1, node1, 47, 0);
      node0.removeChildAfter(node2);
      int int2 = 0;
      node0.getStaticSourceFile();
      Node node3 = new Node(int0, node0, node0, int1, int2);
      // Undeclared exception!
      try { 
        node3.isHook();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(690);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(0, (-122), 0);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(1283, (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.cloneNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(28);
      node0.toStringTree();
      node0.getLineno();
      node0.isRegExp();
      Node node1 = new Node(36, 47, (-2204));
      node1.clonePropsFrom(node0);
      Node node2 = new Node(4095, node1, node1, node1);
      node0.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getJSDocInfo();
      Node node1 = new Node(56, nodeArray0);
      int int0 = 0;
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      node3.setSourceFileForTesting("    ");
      node2.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("!ww,?mg", false);
      node2.setVarArgs(false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node2.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.valueOf();
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString("D,UV;;G");
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node.mergeLineCharNo(15, 15);
      Node node0 = new Node((-1886), (Node) null, (Node) null, (Node) null, (Node) null);
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setMutatesArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = (-1999);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-1999), (Node) null, (Node) null, (Node) null, (Node) null, (-1999), (-1999));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      enumType0.isNullable();
      Node node1 = node0.detachFromParent();
      node1.getDouble();
      TemplateTypeMap templateTypeMap0 = null;
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(1630);
      String string0 = "";
      Node node1 = Node.newString(40, "", 2, 49);
      node0.isOnlyModifiesArgumentsCall();
      node0.getDirectives();
      node1.addChildAfter(node0, node0);
      node0.getSourcePosition();
      String string1 = "}8>@&++E=g";
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isLabel();
      int int0 = 1818;
      node0.addChildAfter((Node) null, (Node) null);
      node0.getProp(int0);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(57, "Y|");
      node0.addChildToFront(node1);
      node0.siblings();
      Node node2 = new Node(0, node0, 461845907, 0);
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(",>6RvmRyjU%&E6k", 130, (-587));
      Node node1 = new Node(130, node0, node0, node0);
      node0.setSideEffectFlags((-920));
      int int1 = (-2231);
      Node node2 = new Node(int0, node1, node0, node0, int1, node0.SIDE_EFFECTS_FLAGS_MASK);
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      node0.toString(false, false, false);
      Node node1 = Node.newString(4095, "", 1, 8);
      Node node2 = Node.newNumber(0.0);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(35, node0, node0, node0, 1981, 2);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node4.toStringTree();
      node4.putBooleanProp(0, false);
      Node node5 = new Node(54, node3, 0, 2);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node5.addChildrenToBack(node0);
      boolean boolean1 = true;
      node5.children();
      int int0 = 936;
      node5.getIntProp(int0);
      node5.isEquivalentTo(node0, boolean0, boolean1, boolean1);
      int int1 = (-670);
      node5.setSourceEncodedPositionForTree(int1);
      node3.checkTreeEqualsImpl(node5);
      node5.setSourceEncodedPosition(node0.ORIGINALNAME_PROP);
      // Undeclared exception!
      try { 
        node5.isLabel();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(298);
      Node node1 = new Node(0, node0, 2404, 36);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = (-2252);
      Node[] nodeArray0 = new Node[6];
      int int1 = 2163;
      Node node0 = Node.newNumber(0.0, 2163, (-4674));
      Node node1 = new Node(2163, node0, node0);
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "null");
      JSType jSType0 = null;
      Vector<JSType> vector0 = new Vector<JSType>();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs(objectType0, jSType0, (List<JSType>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toStringTree();
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.setDouble(0.0);
      node0.isTypeOf();
      node0.getDirectives();
      int int0 = 903;
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0);
      Node node2 = new Node(0, node1);
      Node node3 = new Node(0, node2, (-3716), 30);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node2);
      node0.getSourceOffset();
      Node node4 = Node.newString("FiNivU}T");
      node2.getIntProp(1796);
      node1.isFromExterns();
      Node.newNumber(1.0, 12, 1997);
      node3.checkTreeTypeAwareEqualsImpl(node4);
      Node node5 = node1.getFirstChild();
      node5.removeChildAfter(node4);
      Node node6 = node3.getLastChild();
      node6.siblings();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node_SideEffectFlags2.setMutatesGlobalState();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Object#Element");
      node0.appendStringTree(charBuffer0);
      // Undeclared exception!
      try { 
        nodeArray0[1].getJSDocInfo();
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString("5:O3^>QGY}PiBN", 0, (-27));
      node0.isObjectLit();
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      node0.removeFirstChild();
      Node node1 = Node.newString(53, "is_dispatcher", 0, (-2274));
      node1.isEquivalentToShallow(node0);
      node1.setSourceEncodedPosition((-27));
      node1.setCharno((-2345));
      node1.getChildCount();
      Node node2 = node0.copyInformationFromForTree(node0);
      node2.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      node2.isQualifiedName();
      node0.getExistingIntProp((-3235));
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags3);
      node0.isDo();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(26, (String) null);
      node0.addChildToFront(node1);
      node1.siblings();
      int int0 = 1048575;
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(690);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node node1 = Node.newString(112, "~`?_92Kf(KqpKe#y~!2");
      node0.addChildToBack(node1);
      node0.getChangeTime();
      node1.isEmpty();
      node0.setSourceEncodedPositionForTree((-4545));
      node0.setString("~`?_92Kf(KqpKe#y~!2");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getChangeTime();
      node0.setChangeTime(965);
      node0.isOnlyModifiesArgumentsCall();
      node0.getStaticSourceFile();
      node0.isDec();
      node0.getAncestor(1676);
      node0.isThrow();
      node0.setVarArgs(false);
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.setDouble((-1.0));
      node0.isTypeOf();
      node0.getDirectives();
      node0.getLength();
      node0.setType(903);
      Node node1 = new Node(801, (-27), 303);
      node1.siblings();
      node1.isReturn();
      Node node2 = new Node(3437, node1, 49, 0);
      Node node3 = new Node(57, node2, node0, node1, node0, (-27), 32);
      node3.isDec();
      node1.isLabelName();
      node3.isSyntheticBlock();
      String string0 = null;
      Node node4 = Node.newString(string0, node0.IS_NAMESPACE, node0.DECR_FLAG);
      int int0 = 148;
      int int1 = (-1176);
      Node node5 = new Node(int0, node4, node0.MAX_COLUMN_NUMBER, int1);
      Node node6 = new Node(node4.DIRECTIVES, node4, node5, node0, node2);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesArgumentsCall();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node((-235), (Node) null, (Node) null, (Node) null, (-235), (-1134));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0(jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "vS";
      Node node0 = Node.newString("vS");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isOnlyModifiesArgumentsCall();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING vS is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = new Node(39, node0, node1, node0, 2, (-670));
      int int0 = 22;
      node3.setSourceEncodedPosition(int0);
      double double0 = 78.5695609055;
      Node node4 = Node.newNumber(double0);
      node4.isLabel();
      boolean boolean0 = node4.isCast();
      // Undeclared exception!
      try { 
        node4.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString(1048575, "");
      Node node1 = new Node(16, (Node[]) null, 11, 4095);
      node0.addChildToFront(node1);
      node1.siblings();
      int int0 = 451;
      int int1 = 49;
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(764, 1048575, 101);
      Node node1 = Node.newString("#&(5$Lo9JE,-g5-'o");
      node0.getJsDocBuilderForNode();
      node0.children();
      node1.addChildrenToFront(node0);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node2.setSideEffectFlags(node_SideEffectFlags1);
      node2.isDo();
      node1.isDebugger();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(690, 690, 690);
      Node node1 = new Node(38, node0, node0, 4095, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter.getMessage1("is_constant_name", (Object) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString("D,UV;;G");
      node0.isContinue();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0);
      Node node2 = new Node(0, node1);
      Node node3 = new Node(0, node2, (-3716), 30);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node2);
      node0.getSourceOffset();
      Node node4 = Node.newString("FiNivU}T");
      node2.getIntProp(1796);
      Node.newNumber(1.0, 12, 1997);
      node3.checkTreeTypeAwareEqualsImpl(node4);
      node1.getFirstChild();
      Node.newNumber((double) 15);
      Node node5 = node3.getLastChild();
      node5.siblings();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.setDouble((-1.0));
      node0.getDirectives();
      node0.getLength();
      node0.setType(903);
      Node node1 = new Node(801, (-27), 303);
      node1.siblings();
      Node node2 = Node.newString("quoted");
      node2.getIntProp(54);
      node0.isFromExterns();
      Node node3 = Node.newNumber(1.0, 54, 47);
      Node node4 = null;
      node3.checkTreeTypeAwareEqualsImpl((Node) null);
      node1.getFirstChild();
      node1.removeChildAfter(node4);
      int int0 = 2876;
      int int1 = 310;
      Node node5 = new Node(int0, node1.FLAG_GLOBAL_STATE_UNMODIFIED, int1);
      node5.getLastChild();
      node3.siblings();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node0.getJSDocInfo();
      node0.setType(0);
      node0.useSourceInfoFrom(node0);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node0.setQuotedString();
      nodeArray0[3].isDebugger();
      // Undeclared exception!
      try { 
        nodeArray0[3].setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.siblings();
      node0.isReturn();
      Node node1 = new Node((-571), node0, 38, 50);
      Node node2 = new Node((-537), node0, node0, node0, node0, 30, (-2856));
      node1.isDec();
      nodeArray0[1].isLabelName();
      nodeArray0[2].isSyntheticBlock();
      String string0 = "M;g#},['=O|`Wo";
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node3 = node0.srcref(node1);
      node0.isDo();
      node1.isDebugger();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.isLocalResultCall();
      node0.removeProp(48);
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = new Node(39);
      node1.setString("EMPTY");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.JSTypeRegistry";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node node1 = null;
      node0.checkTreeEqualsImpl((Node) null);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node((-27));
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      node0.removeFirstChild();
      Node node1 = Node.newString(53, "is_dispatcher", 0, (-2274));
      node1.setSourceEncodedPosition((-27));
      node1.setCharno((-2345));
      node1.getChildCount();
      node1.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      node1.isArrayLit();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.valueOf();
      Node.mergeLineCharNo((-1303), 43);
      Node node0 = Node.newString("Number node not created with Node.newNumber");
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(28, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      node0.isDo();
      Node node3 = new Node(36, node0, node2, node1);
      node1.addChildrenAfter(node3, node0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newNumber(78.5695609055);
      node0.isLabel();
      node0.isCast();
      node0.setWasEmptyNode(false);
      Node node1 = Node.newString("", 4, 4);
      Node node2 = node1.srcrefTree(node0);
      node2.toString();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags3.valueOf();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      String string0 = "jsdoc_info";
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(39, node0, node1, node0, 2, (-670));
      int int0 = 22;
      node3.setSourceEncodedPosition(int0);
      int int1 = 481;
      Node.newString(string0);
      Node node4 = Node.newNumber((double) int1);
      // Undeclared exception!
      try { 
        node4.isContinue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = new Node(39);
      Node node1 = new Node(306654252, node0, node0, node0);
      Node node2 = new Node(1190, node1);
      Node node3 = new Node((-340), node1, 51, 1048576);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node1);
      node2.getSourceOffset();
      String string0 = "FiNivU}T";
      Node node4 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node4.getIntProp(node2.FLAG_GLOBAL_STATE_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("xT`@qhQ.Y_uS", 2163, 2163);
      node0.isRegExp();
      node0.isFromExterns();
      Node node1 = Node.newNumber((double) 40, 1999, 16);
      Node node2 = Node.newString("c8f{h'/Z4?s!X'.M<C");
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.getFirstChild();
      Node node3 = node1.removeChildAfter(node0);
      int int0 = 1005;
      int int1 = (-230);
      Node node4 = new Node(int0, node1.NO_SIDE_EFFECTS, int1);
      // Undeclared exception!
      try { 
        node3.getLastChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      node3.getAncestors();
      node3.setSourceFileForTesting("    ");
      node2.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("!ww,?mg", false);
      node2.setVarArgs(false);
      node0.getExistingIntProp(571);
      node1.getAncestors();
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      enumType0.isNullable();
      Node node1 = node0.detachFromParent();
      node1.getDouble();
      TemplateTypeMap templateTypeMap0 = null;
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = (-1549);
      Node.extractLineno((-1549));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      String string0 = null;
      Object[] objectArray0 = new Object[0];
      SimpleErrorReporter.getMessage("", objectArray0);
      int int1 = 145;
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("'K{yr8Uc");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.setChangeTime(949);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDec();
      Node node1 = new Node(57, node0, node0, node0);
      node0.isThrow();
      node0.setVarArgs(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1599));
      node_SideEffectFlags0.areAllFlagsSet();
      node1.replaceChild(node0, node0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      node0.setVarArgs(false);
      Node node3 = Node.newString("jEy%'>]");
      node1.setSourceEncodedPositionForTree((-1808));
      node3.checkTreeEqualsImpl(node2);
      node2.setSourceEncodedPosition(47);
      node1.isLabel();
      Node node4 = new Node(102, node0, 30, 130);
      node4.isCast();
      node4.setWasEmptyNode(false);
      Node node5 = node2.srcrefTree(node3);
      node5.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.valueOf();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.valueOf();
      Node.mergeLineCharNo(3523, 57);
      node_SideEffectFlags2.valueOf();
      node0.isArrayLit();
      node0.toStringTree();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      node0.toString(false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3609));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 56);
      node1.isLabel();
      node0.isCast();
      node1.setWasEmptyNode(true);
      String string0 = null;
      Node node2 = Node.newString((String) null, 43, 1126);
      int int0 = 2902;
      Node node3 = Node.newString(string0, node2.REFLECTED_OBJECT, int0);
      node3.srcrefTree(node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setReturnsTainted();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = new Node(39, node0, node1, node0, 2, (-670));
      node1.getAncestor(node2.DECR_FLAG);
      int int0 = 22;
      node3.setSourceEncodedPosition(int0);
      double double0 = 78.5695609055;
      Node node4 = Node.newNumber(double0);
      node4.isLabel();
      // Undeclared exception!
      try { 
        node4.isCast();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isCase();
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      enumType0.isNullable();
      Node node1 = node0.detachFromParent();
      node1.getDouble();
      TemplateTypeMap templateTypeMap0 = null;
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((double) 30, 57, 33);
      node0.useSourceInfoFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("'K{yr8Uc");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString(0, "D,UV;;G");
      node0.isContinue();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      Node node4 = new Node(117, nodeArray0);
      node0.setType((-2196));
      Node node5 = new Node(42, node3, 1210, 192);
      Node node6 = node2.useSourceInfoFrom(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node3.setQuotedString();
      node4.isDebugger();
      node6.setSideEffectFlags(node_SideEffectFlags1);
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber(1.2);
      node0.isLabel();
      node0.isCast();
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("", 51, 50);
      node1.srcrefTree(node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node node2 = Node.newString("rIe;>@g}ItVfn'u", 8, 74);
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(8, (Node[]) null);
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString(0, "D,UV;;G");
      node0.removeChildren();
      int int0 = node0.getLineno();
      node0.setSideEffectFlags((-2246));
      node0.getExistingIntProp(int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.getProp((-1));
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1167));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.hasOneChild();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isNumber();
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      node0.isEquivalentTo(node0, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1167));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.hasOneChild();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isNumber();
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString("msg.jsdoc.function.varargs");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.setChangeTime(39);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDec();
      Node node2 = new Node(1, node0, node1, node0);
      node2.isThrow();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 50);
      node0.isLabel();
      node1.isCast();
      node0.setWasEmptyNode(false);
      Node node2 = Node.newString("+:P", 3315, 1758);
      node2.toString();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      Node.newString((String) null, (-987), 55);
      node0.isArrayLit();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber(1.2);
      node0.isLabel();
      node0.isCast();
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("", 51, 50);
      Node node2 = node1.srcrefTree(node0);
      node2.isVarArgs();
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      Node node3 = Node.newString("rIe;>@g}ItVfn'u", 8, 74);
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.setWasEmptyNode(false);
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      node0.setVarArgs(false);
      Node node3 = Node.newString("jEy%'>]");
      node1.setSourceEncodedPositionForTree((-1808));
      node3.checkTreeEqualsImpl(node2);
      node2.setSourceEncodedPosition(47);
      node1.isLabel();
      Node node4 = new Node(102, node0, 30, 130);
      node4.isCast();
      node4.setWasEmptyNode(false);
      Node node5 = node2.srcrefTree(node3);
      node5.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node6 = new Node(4095, node3, node0, node0, node3);
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.isDec();
      node1.isLabelName();
      node0.isSyntheticBlock();
      node2.setVarArgs(false);
      node2.detachChildren();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(300, 300, 300);
      Node.newNumber((double) 52);
      node0.wasEmptyNode();
      node0.getType();
      node0.isWith();
      node0.hasChildren();
      Node node1 = Node.newNumber(2108.2429702952663, 37, 43);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.toString();
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      node0.isNew();
      node1.isOnlyModifiesThisCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.getExistingIntProp((-1312));
      node0.getDouble();
      node0.siblings();
      node0.isTrue();
      // Undeclared exception!
      try { 
        node2.isFunction();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1312
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 50);
      node0.isLabel();
      node1.isCast();
      node0.setWasEmptyNode(false);
      Node node2 = Node.newString("+:P", 3315, 1758);
      node2.toString();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      node0.isArrayLit();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.isDec();
      Node node1 = Node.newString("Unknown class name", 2608, 1210);
      Node node2 = new Node(306651136, node1, 12, 1048);
      Node node3 = new Node(547, node2);
      node0.addChildrenAfter(node2, node1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString("c8f{h'/Z4?s!X'.M<C");
      node1.putProp(2, node_SideEffectFlags0);
      node0.getDirectives();
      Node[] nodeArray0 = new Node[6];
      Node node2 = Node.newNumber(1601.369, 55, (-559));
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      nodeArray0[4] = node1;
      Node node3 = new Node(572, nodeArray0, 2540, 31);
      int int0 = 43;
      int int1 = (-2126);
      Node node4 = new Node(int0, nodeArray0[1], nodeArray0[2], nodeArray0[5], node1, int1, node2.SIDE_EFFECT_FLAGS);
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      Node node5 = jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        nodeArray0[0].addChildrenAfter(node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node.newString("jEy%'>]");
      Node node0 = new Node((-3716), nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isDebugger();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node0.setSourceEncodedPosition(16);
      node0.isLabel();
      Node node1 = Node.newString("Object#Element", 4, (-195));
      node1.removeChildren();
      Node node2 = new Node(113, node1, (-1223), 39);
      node2.getSideEffectFlags();
      node2.isCast();
      Node node3 = Node.newNumber((double) 36);
      node3.setWasEmptyNode(false);
      node0.srcrefTree(node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags3.valueOf();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      Node node1 = new Node(50);
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(57, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.setIsSyntheticBlock(false);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node0.isCase();
      node0.addSuppression((String) null);
      node0.isReturn();
      node0.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.addChildBefore(node3, node3);
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      node4.isCatch();
      node3.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.getProp((-1));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node1 = Node.newString("c8f{h'/Z4?s!X'.M<C");
      node0.putProp(152, (Object) null);
      node1.getDirectives();
      Node node2 = Node.newNumber((double) 2, 42, 2048);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(57, nodeArray0, (-1689), 53);
      Node node4 = new Node(57, node2, node0, node2, node1, 492, 3701);
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      jSDocInfo0.getAssociatedNode();
      node4.addChildrenAfter(node1, node2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node((-35), (-35), 83);
      Node node1 = new Node(39);
      node1.isDelProp();
      node1.isFalse();
      String string0 = node0.getString();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node_NodeMismatch0.equals(string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      Node node1 = new Node(57, node0, node0, node0);
      node0.isThrow();
      node0.setVarArgs(false);
      Node node2 = new Node(2560, node0, node0, (-2809), 53);
      int int0 = 55;
      Node node3 = new Node(node1.SIDE_EFFECT_FLAGS, node2, int0, node2.DIRECTIVES);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isOptionalArg();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1259));
      node_SideEffectFlags0.areAllFlagsSet();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(11, 11, 903);
      node0.isReturn();
      Node node1 = Node.newString("", 55, 48);
      node1.srcrefTree((Node) null);
      node1.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setReturnsTainted();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(1552, 126, 1552);
      Node node1 = Node.newString("");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = new Node(93);
      node3.children();
      node0.addChildrenToFront(node2);
      Node node4 = new Node(8);
      node1.srcref(node4);
      node2.isDo();
      node4.isDebugger();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      JSType jSType0 = null;
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[2];
      node0.getProp(35);
      objectArray0[0] = null;
      objectArray0[1] = object0;
      mockPrintStream0.printf("", objectArray0);
      node0.setLength(48);
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.hasOneChild();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isNumber();
      String string0 = "new:";
      node0.setSourceFileForTesting(string0);
      // Undeclared exception!
      try { 
        node0.getFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETELEM
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = Node.newString("jEy%'>]");
      Node node1 = new Node((-61), nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isDebugger();
      node1.isComma();
      node1.isEmpty();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(472);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(53);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(498);
      node0.isParamList();
      Node.newString((-659), "");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node0.setSourceEncodedPosition(16);
      node0.isLabel();
      Node node1 = Node.newString("Object#Element", 4, (-195));
      node0.isEquivalentTo(node1);
      node1.removeChildren();
      Node node2 = new Node(113, node1, (-1223), 39);
      node2.getSideEffectFlags();
      node2.isCast();
      Node node3 = Node.newNumber((double) 36);
      node3.setWasEmptyNode(false);
      Node node4 = new Node(47, node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags3.valueOf();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.getProp((-1));
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1167));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.areAllFlagsSet();
      Node node1 = new Node((-1), node0, node0);
      Node node2 = Node.newString(38, "En&!jtSY+We?/'ddd");
      node0.replaceChild(node1, node2);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      Node node4 = new Node(117, nodeArray0);
      node3.removeProp(15);
      node0.setType((-2196));
      Node node5 = new Node(42, node3, 1210, 192);
      Node node6 = node2.useSourceInfoFrom(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node3.setQuotedString();
      node4.isDebugger();
      node6.setSideEffectFlags(node_SideEffectFlags1);
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toStringTree();
      node0.setIsSyntheticBlock(false);
      node0.isAdd();
      node0.setDouble(0.0);
      node0.isTypeOf();
      node0.getDirectives();
      int int0 = 903;
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(0, 0, 83);
      Node node1 = Node.newString("jsdoc_info");
      node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      Iterable<Node> iterable0 = new TreeSet<Node>();
      node0.addChildrenToFront(node1);
      node0.srcref(node1);
      node0.isDo();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "incrdecr";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("incrdecr");
      Node node1 = new Node((-2377), node0, node0, (-1110), 40);
      node0.removeChild(node1);
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.isSyntheticBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(11, 8233, 903);
      node0.isReturn();
      node0.isDec();
      Node node1 = Node.newString("l0=26ub", 2797, 4095);
      node0.srcrefTree(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node1.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.valueOf();
      Node.newString("LZe9", 4095, 49);
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber(1.2);
      node0.isLabel();
      node0.isStringKey();
      node0.setWasEmptyNode(true);
      String string0 = "";
      Node node1 = Node.newString("", 44, 15);
      Node node2 = new Node(44, node0, 57, 48);
      Node node3 = new Node(57, node2, node1, node1, node0);
      node3.setString(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(690);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.setChangeTime(1570);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDec();
      Node node1 = node0.getAncestor(1676);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = null;
      Node node2 = new Node((-433), nodeArray0, 53, 111);
      int int0 = 4;
      Node node3 = new Node(node1.COLUMN_BITS, node2, node0, node2, node0, int0, node0.IS_NAMESPACE);
      node3.isThrow();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node2.setVarArgs(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4137);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      Node node1 = Node.newString(112, "<invalid>");
      Node node2 = new Node(15, 53, 54);
      node2.addChildToBack(node0);
      node2.getChangeTime();
      node1.isEmpty();
      node0.setSourceEncodedPositionForTree(4095);
      node1.setString("~`?_92Kf(KqpKe#y~!2");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(0, "c8f{h'/Z4?s!X'.M<C", 1733, 1532);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isDec();
      Node node1 = new Node(2, node0, 15, 50);
      Node node2 = new Node((-1), node1, 126, 56);
      Node node3 = new Node(101, node0);
      String string0 = "c8f{h'/Z4?s!X'.M<C";
      nodeArray0[0].setString(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node((-35), (-35), 83);
      Node node1 = new Node((-4654), node0, node0, 15, 57);
      node0.isEquivalentTo(node1, true, true, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.hasOneChild();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)14;
      byteArray0[0] = byte0;
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      node0.getDirectives();
      node0.getDouble();
      int int0 = (-256);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.jstype.JSTypeRegistry 470060 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.valueOf();
      Node.mergeLineCharNo(3523, 57);
      Node node1 = Node.newString("Unknown class name");
      node0.isContinue();
      node0.isLabel();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 50);
      node1.isLabel();
      node1.isCast();
      node0.setWasEmptyNode(false);
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = Node.newString("+:P", 3315, 1758);
      node2.toString();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.valueOf();
      node0.isArrayLit();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      node0.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[2];
      node0.getProp(35);
      objectArray0[0] = null;
      objectArray0[1] = object0;
      mockPrintStream0.printf("", objectArray0);
      node0.setLength(48);
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      node0.removeProp(48);
      node0.setType(5308);
      Node node1 = new Node((-762), node0, 192, (-643));
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setQuotedString();
      node2.isDebugger();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      Node node4 = new Node(117, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2455);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node0.hasOneChild();
      node2.setSideEffectFlags(node_SideEffectFlags3);
      node4.isNumber();
      String string0 = "new:";
      node3.setSourceFileForTesting(string0);
      node2.getFirstChild();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node3.isNE();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber((double) (-1));
      node0.isLabel();
      node0.isCast();
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("", 51, 50);
      Node node2 = node1.srcrefTree(node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      Node node3 = new Node(4095);
      node2.isParamList();
      Node.newString(9, "");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("incrdecr");
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(39);
      node0.isParamList();
      Node.newString(4095, "incrdecr");
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = new Node(39);
      Node.newNumber((double) 4);
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.getProp((-1));
      Node node1 = new Node(256, 36, (-27));
      Node node2 = new Node(16);
      node2.isDelProp();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("#+V{lNCm(");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node(118, 44, (-124));
      node1.isCase();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node1, (JSType) null);
      enumType0.isNullable();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(node1.ORIGINALNAME_PROP);
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.valueOf();
      int int0 = 98;
      int int1 = (-963);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(512, 46, 512);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.valueOf();
      Node.newString("Unknown class name");
      node0.isContinue();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(57, node0);
      node1.copyInformationFrom(node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.setIsSyntheticBlock(false);
      node2.isContinue();
      node0.addSuppression((String) null);
      node0.isReturn();
      node0.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isVar();
      node2.addChildBefore(node0, node0);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.isCatch();
      // Undeclared exception!
      try { 
        node2.getSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.valueOf();
      Node node1 = new Node(2056, node0);
      node1.putBooleanProp(43, false);
      Node node2 = new Node(1690, node1, 39, 57);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node3, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node4 = enumElementType0.getPropertyNode(templateType0.UNKNOWN_NAME);
      node2.addChildrenToBack(node4);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.getProp((-1));
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      objectArray0[0] = object0;
      mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      Node node1 = new Node((-762), node0, 53, (-1751));
      Node node2 = new Node(55, node1);
      node0.setString("jSjO_am1:$C=SR");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags0.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("LB>ATt9GE", "not a StringNode");
      node1.appendStringTree(mockPrintStream0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(29, node0, node0, node0, node0, 48, 42);
      node0.useSourceInfoFromForTree(node1);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.isLabelName();
      Node node2 = Node.newString("xT`@qhQ.Y_uS", 111, 14);
      node2.isSyntheticBlock();
      node2.setVarArgs(false);
      Node node3 = new Node(1827, 512, 8);
      node3.detachChildren();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4137);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      Node node1 = Node.newString(259, "<invalid>");
      Node node2 = new Node(15, 53, 54);
      node2.addChildToBack(node0);
      node2.getChangeTime();
      node1.isEmpty();
      node0.setSourceEncodedPositionForTree(4095);
      node1.setString("~`?_92Kf(KqpKe#y~!2");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("incrdecr");
      node0.isSyntheticBlock();
      Node node1 = new Node(39);
      node0.isSyntheticBlock();
      node0.isParamList();
      Node node2 = Node.newString(4095, "incrdecr");
      node1.isVar();
      node2.getQualifiedName();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.setChangeTime(965);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(965, node0, node0);
      node1.getLength();
      Node node2 = Node.newNumber((-33.83634971964926));
      node2.setType((-1191));
      node2.siblings();
      node2.isReturn();
      node0.isDec();
      node1.isLabelName();
      Node node3 = new Node(38, node1);
      Node node4 = new Node(100, node3, node3, node3, node0);
      node4.isSyntheticBlock();
      boolean boolean0 = true;
      node3.setVarArgs(boolean0);
      node4.detachChildren();
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2129);
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      node0.setDouble((-1.0));
      node0.isTypeOf();
      Node node1 = new Node(50, node0);
      node1.getDirectives();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node(42, node1);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node node4 = new Node(57, nodeArray0, 4095, 2);
      node1.useSourceInfoFrom(node4);
      String string0 = "";
      String string1 = null;
      MockPrintStream mockPrintStream0 = new MockPrintStream(string1, string0);
      // Undeclared exception!
      try { 
        nodeArray0[1].appendStringTree(mockPrintStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      Node node4 = new Node(117, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2455);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node0.hasOneChild();
      node2.getSourceFileName();
      node2.setSideEffectFlags(node_SideEffectFlags3);
      node4.isNumber();
      String string0 = "new:";
      node3.setSourceFileForTesting(string0);
      node2.getFirstChild();
      node2.removeProp(node1.IS_NAMESPACE);
      // Undeclared exception!
      try { 
        node3.isSetterDef();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      Node node2 = new Node(52, 1, 36);
      Node node3 = new Node(40);
      Node node4 = new Node((-487), node0, node0, 122, 2914);
      node4.isDelProp();
      node2.isFalse();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = Node.newNumber((double) 37, 57, (-988));
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node0.setQuotedString();
      int int0 = 155;
      Node node3 = null;
      try {
        node3 = new Node(int0, node1, node0, node0, node0, node0.EMPTY_BLOCK, node2.COLUMN_BITS);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      Node node4 = new Node(117, nodeArray0);
      node3.removeProp(15);
      node0.setType((-2196));
      Node node5 = new Node(46);
      node1.isStringKey();
      node2.removeFirstChild();
      node1.checkTreeTypeAwareEqualsImpl(node4);
      node2.addChildrenToBack((Node) null);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2129);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[3] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node((-1992), 1024, 56);
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[6] = node0;
      nodeArray0[5] = node0;
      Node[] nodeArray1 = new Node[0];
      Node node2 = new Node(2, nodeArray1, 31, 160);
      Node node3 = new Node(39, node0, node1);
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 50);
      node1.isLabel();
      node1.isCast();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node((-5467), node1, node2, node2, 53, 77);
      Node node4 = new Node(46, node3);
      Node node5 = node0.useSourceInfoFrom(node4);
      MockPrintStream mockPrintStream0 = new MockPrintStream("", "com.google.javascript.rhino.Node$AncestorIterable");
      node4.appendStringTree(mockPrintStream0);
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node5.detachChildren();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = new Node((-487), (-487), (-2182));
      Node node1 = new Node((-487), node0, 39, 15);
      node1.getLength();
      node0.setType((-988));
      node1.siblings();
      node1.isReturn();
      node1.isDec();
      node0.isLabelName();
      node0.isSyntheticBlock();
      node1.setVarArgs(false);
      node1.detachChildren();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(690);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(8, nodeArray0, 1496, 47);
      Node node2 = new Node(1, node0, node0);
      nodeArray0[0].addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.putBooleanProp(27591, false);
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("jEy%'>]");
      node3.setSourceFileForTesting("    ");
      node2.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("!ww,?mg", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node4 = node2.copyInformationFrom(node3);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node_SideEffectFlags0.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = Node.newString(55, "xT`@qhQ.Y_uS", (-1851), 148);
      node1.setSourceEncodedPosition(131072);
      node0.setCharno(30);
      node1.getChildCount();
      node1.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-1259));
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      node0.getIndexOfChild(node1);
      node1.isArrayLit();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node(30, node0, node0, 40, 51);
      node1.setSourceEncodedPosition(131072);
      node0.setCharno(30);
      node1.getChildCount();
      node1.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-1259));
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.valueOf();
      node1.isArrayLit();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(300, 300, 300);
      Node node1 = Node.newNumber(1.0);
      Node node2 = new Node(1, node1, node1, node1, node1, 2400, 153);
      Node node3 = new Node(112, node0, (-569), 37);
      node2.addChildToFront(node3);
      node1.siblings();
      Node node4 = new Node(2, node3, 2, 1311);
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node((-2245), 55, 55);
      node0.isExprResult();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.valueOf();
      Node.mergeLineCharNo(38, 51);
      Node node1 = Node.newString("Named type with empty name component");
      node1.isContinue();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node((-35), (-35), 83);
      Node node1 = new Node(39);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte) (-14);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isDelProp();
      node1.isStringKey();
      node0.checkTreeEqualsImpl(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int int0 = 30;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = Node.newString(55, "xT`@qhQ.Y_uS", (-1851), 148);
      node1.setSourceEncodedPosition(131072);
      node1.setDouble((-814.209875));
      node0.setCharno(int0);
      node1.getChildCount();
      node1.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      int int1 = (-1259);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(int1);
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setReturnsTainted();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(30, 497, 2266);
      node0.addChildrenToFront(node1);
      Node node2 = node1.srcref(node0);
      node2.isDo();
      node0.isDebugger();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isLocalResultCall();
      node1.removeProp(102);
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.setChangeTime(965);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDec();
      node0.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("^5S`~^j", false);
      node0.setStaticSourceFile((StaticSourceFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node1 = node0.copyInformationFrom((Node) null);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString(151595, "wQsTH78xU6'J|^_", (-1446), 4096);
      Node node1 = null;
      node0.useSourceInfoFrom((Node) null);
      node0.removeChildAfter(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      node1.getAncestor(1);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      Node node3 = Node.newNumber(78.5695609055);
      node3.isLabel();
      node3.isCast();
      node3.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node4 = Node.newString("", 53, 43);
      node4.srcrefTree(node0);
      node1.setSideEffectFlags(48);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node4.isQualifiedName();
      node1.getExistingIntProp(node1.VAR_ARGS_NAME);
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestor(1153);
      node0.isThrow();
      node0.setVarArgs(false);
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString((-878), "input_id", (-878), 826);
      node0.isIf();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(11);
      node0.getChangeTime();
      node0.setChangeTime((-878));
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestor(849);
      node0.isThrow();
      node0.setVarArgs(false);
      node0.clonePropsFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(11, 8233, 903);
      node0.isReturn();
      node0.isDec();
      Node node1 = new Node(128, node0, 19, 49);
      node1.checkTreeEquals(node0);
      String string0 = "jSjO_am1:$C=SR";
      node0.setString(string0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      Node node1 = Node.newString("Not declared as a constructor");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node2.children();
      node2.addChildrenToFront(node0);
      Node node3 = node0.srcref(node2);
      node3.isDo();
      node1.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = (JSType) null;
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node4);
      node2.isLocalResultCall();
      node4.removeProp(148);
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = 58;
      Node node0 = Node.newString(58, "", (-4086), (-4086));
      int int1 = 2008;
      node0.toString(false, false, false);
      int int2 = 2;
      String string0 = "";
      // Undeclared exception!
      try { 
        Node.newString(node0.MAX_COLUMN_NUMBER, string0, node0.DECR_FLAG, node0.FLAG_NO_THROWS);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 58
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      node0.toString(false, false, false);
      Node node1 = Node.newString(4095, "~?}y:J @Qt(Q`+}c%>q", 1, 8);
      Node node2 = new Node(40);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(35, node0, node0, node0, 1981, 2);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node4.toStringTree();
      node4.putBooleanProp(0, false);
      Node node5 = new Node(54, node3, 4, 2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node5.addChildrenToBack(node0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node node0 = new Node(286, 286, 4095);
      node0.isExprResult();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags6.valueOf();
      Node.mergeLineCharNo(4449, 101);
      Node.newString(";mL<S$o1Ckk7\"f");
      node0.isContinue();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(22, 8233, 903);
      node0.isReturn();
      node0.isScript();
      Node node1 = new Node(128, node0, 19, 49);
      node0.setString("jSjO_am1:$C=SR");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("y/a", (-1582), (-1582));
      Node node1 = new Node((-3183), node0, node0, (-1582), 12288);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.siblings();
      InputId inputId0 = new InputId("y/a");
      node1.setInputId(inputId0);
      boolean boolean1 = node0.isOnlyModifiesThisCall();
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node(40, node0, 54, 32);
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean1);
      node0.setJSDocInfo(jSDocInfo0);
      node2.setSideEffectFlags(node1.DIRECTIVES);
      jSDocInfo0.setNoCompile(boolean1);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node3.setVarArgs(boolean0);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2345), (-2345));
      Node node1 = new Node((-2345), node0, 54, 1851);
      node1.isStringKey();
      node0.mayMutateGlobalStateOrThrow();
      node0.isHook();
      node1.isTrue();
      Node node2 = Node.newString(30, "", 51, 1961);
      node2.getChildAtIndex((-1088));
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(472);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-1));
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(536);
      node0.isParamList();
      Node node1 = Node.newString((-659), "");
      node1.getQualifiedName();
      node1.isSetterDef();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4137);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      String string0 = node0.checkTreeEquals((Node) null);
      node0.setString(string0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      String string0 = node0.toStringTree();
      node0.setIsSyntheticBlock(true);
      node0.isQuotedString();
      Node node1 = new Node(16, Integer.MIN_VALUE, 1);
      node1.setDouble(1);
      node0.isTypeOf();
      Node node2 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node2.getDirectives();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.JSTypeRegistry";
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(15, node0, node0, node0, node0, 2417, 105);
      node1.addChildToFront(node0);
      Node.newString(string0);
      node0.siblings();
      int int0 = (-124);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      Node node1 = Node.newString("Not declared as a constructor");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node2.children();
      node2.addChildrenToFront(node0);
      Node node3 = node0.srcref(node2);
      node3.isDo();
      node1.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[1] = (JSType) null;
      node2.isLocalResultCall();
      node0.isSetterDef();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(11, 8233, 903);
      node0.isReturn();
      node0.isDec();
      node0.checkTreeEquals(node0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString((-878), "input_id", (-878), 826);
      node0.isIf();
      node0.setString("input_id");
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newNumber((-0.6283544837237837), (-2345), (-2345));
      Node node1 = new Node(46, node0);
      node1.isStringKey();
      node0.mayMutateGlobalStateOrThrow();
      node0.isHook();
      node1.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = new Node(4, node1, node0);
      int int0 = 16412;
      String string0 = "change_time";
      // Undeclared exception!
      try { 
        Node.newString(int0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      Node node1 = new Node(88, node0);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node2.setIsSyntheticBlock(true);
      node0.isContinue();
      node0.addSuppression((String) null);
      node0.isReturn();
      node3.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = new Node(8);
      node4.isVar();
      node1.addChildBefore(node3, node4);
      node0.setJSDocInfo(jSDocInfo0);
      node2.isCatch();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getFirstChild();
      Node node2 = new Node(117, nodeArray0);
      node0.setType((-2196));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node2.isDebugger();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node.newString("jEy%'>]");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-61), nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node0.getDouble();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setReturnsTainted();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -61
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      JSType jSType0 = null;
      Node node1 = null;
      Node node2 = new Node((-7090), (Node) null, (Node) null, 2558, 15);
      node0.addChildrenAfter(node2, node1);
      node0.mayMutateArguments();
      TemplateType templateType0 = JSType.toMaybeTemplateType(jSType0);
      ObjectType.cast(templateType0);
      int int0 = 41;
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(11);
      node0.setChangeTime((-878));
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "c8f{h'/Z4?s!X'.M<C");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isVar();
      node0.addChildBefore((Node) null, (Node) null);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isCatch();
      node1.getSideEffectFlags();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = new Node((-35));
      Node node2 = new Node(2, node0, node0, node1);
      node2.isStringKey();
      Node node3 = node2.removeFirstChild();
      node2.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      node0.toString(false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3609));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node node1 = Node.newNumber((double) 56);
      node1.isLabel();
      node0.isWith();
      node1.setWasEmptyNode(true);
      String string0 = null;
      Node node2 = Node.newString((String) null, 43, 1126);
      int int0 = 2902;
      Node node3 = Node.newString(string0, node2.REFLECTED_OBJECT, int0);
      node3.srcrefTree(node0);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setReturnsTainted();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node((-35), (-35), 83);
      Node node1 = new Node((-4654), node0, node0, 15, 57);
      Node node2 = new Node(2, (-298), 50);
      Node node3 = Node.newString("jsdoc_info");
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node4.getJsDocBuilderForNode();
      Node node5 = Node.newString(54, "y+Q~v[jUS", 318, 4787);
      node5.children();
      node5.addChildrenToFront(node1);
      Node node6 = node4.srcref(node5);
      node3.isDo();
      node4.isDebugger();
      node6.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(48, 0, 83);
      Node node1 = new Node(12, 31, 0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      node0.isDo();
      node1.isDebugger();
      node0.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = new Node(36, 8, 52);
      Node node2 = Node.newString("");
      node1.useSourceInfoFromForTree(node2);
      node1.getJsDocBuilderForNode();
      Node node3 = new Node(40);
      node3.children();
      node0.addChildrenToFront(node1);
      Node node4 = node3.srcref(node2);
      Node node5 = new Node(617, node3, node4);
      node5.isDo();
      node5.isDebugger();
      node1.checkTreeTypeAwareEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      int int0 = 48;
      Node node0 = Node.newNumber((double) 0, 48, 48);
      node0.getJSType();
      JSType.toMaybeTemplateType((JSType) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      // Undeclared exception!
      try { 
        enumType1.getElementsType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("xT`@qhQ.Y_uS");
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[1] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      jSTypeArray0[2] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isDebugger();
      node0.isComma();
      node0.isEmpty();
      Node node1 = Node.newString("V$NN%{{Z9", 50, 29);
      node0.srcref(node1);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString(119, "input_id", 119, 826);
      node0.isIf();
      node0.setString("input_id");
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isLabel();
      Node node1 = Node.newString("Object#Element", 4, (-195));
      node1.removeChildren();
      Node node2 = new Node(113, node1, (-1223), 39);
      node2.getSideEffectFlags();
      node0.isInstanceOf();
      Node node3 = Node.newString(1, "Object#Element");
      node3.setWasEmptyNode(false);
      Node node4 = node0.srcrefTree(node0);
      node0.isCatch();
      Node node5 = new Node(105, node4, 12, (-859));
      node5.getSideEffectFlags();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(11, 8233, 903);
      node0.isReturn();
      node0.isDec();
      node0.isGetProp();
      node0.isSetterDef();
      Node node1 = new Node(2, node0, 63, 0);
      Node node2 = new Node(38, (Node) null);
      String string0 = "C,Hua8@$S~*Eg;JUNZD";
      node2.setString(string0);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = Node.newString("", 719, (-124));
      Node node2 = new Node(111, node0, node1, node0, node0);
      node0.addChildrenToFront(node2);
      node2.srcref(node0);
      node2.isDo();
      node2.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isLocalResultCall();
      node0.isSetterDef();
      node1.isGetterDef();
      node0.getProp(132);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      Node node1 = Node.newString("Not declared as a constructor");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node2.children();
      node2.addChildrenToFront(node0);
      node1.isFunction();
      node0.setString("Named type with empty name component");
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      node1.getAncestor(1);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node0.isLabel();
      node2.isCast();
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString("", 53, 43);
      Node node4 = node3.srcrefTree(node0);
      node1.setSideEffectFlags(48);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node4.isDefaultCase();
      node_SideEffectFlags0.setThrows();
      node3.isQualifiedName();
      node1.getExistingIntProp(node1.VAR_ARGS_NAME);
      // Undeclared exception!
      try { 
        node0.getAncestors();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node node0 = Node.newString(826, "input_id", 37, 52);
      node0.isIf();
      node0.setString("input_id");
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(22, 8233, 903);
      node0.isReturn();
      node0.isScript();
      node0.setLineno(19);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node_SideEffectFlags0.setMutatesArguments();
      node2.checkTreeEqualsImpl(node0);
      node2.setOptionalArg(true);
      Node node3 = new Node(39, node0, node1, node0, 2, (-670));
      node1.getAncestor(node2.DECR_FLAG);
      int int0 = 22;
      node3.setSourceEncodedPosition(int0);
      double double0 = 78.5695609055;
      Node node4 = Node.newNumber(double0);
      node4.isLabel();
      // Undeclared exception!
      try { 
        node4.isCast();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString(35, "", (-4086), (-4086));
      node0.toString(false, false, false);
      Node node1 = Node.newString(4095, "~?}y:J @Qt(Q`+}c%>q", 1, 8);
      Node node2 = new Node(40);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(30, node2, node0, node2, node0);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node4.toStringTree();
      node4.putBooleanProp(0, false);
      Node node5 = new Node(54, node3, 4, 2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node5.addChildrenToBack(node0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 30);
      Node node1 = new Node(51, node0);
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node0.setIsSyntheticBlock(false);
      node3.isContinue();
      node0.addSuppression("Mg<Ok5d");
      node0.isReturn();
      node0.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fs%f%ZRs");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node3.isVar();
      node2.addChildBefore(node0, node1);
      node2.setJSDocInfo(jSDocInfo0);
      node3.isCatch();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = Node.newString("", 719, (-124));
      Node node2 = new Node(111, node0, node1, node0, node0);
      node0.addChildrenToFront(node2);
      Node node3 = node2.srcref(node0);
      node2.isDo();
      node2.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isLocalResultCall();
      node3.addChildBefore(node0, node1);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      node2.setJSDocInfo(jSDocInfo0);
      node1.isCatch();
      // Undeclared exception!
      try { 
        node1.getSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = new Node(117, nodeArray0);
      node0.setType((-2196));
      node3.isDebugger();
      node3.isComma();
      node1.isAssignAdd();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = new Node((-3578), 92, 1897);
      node0.toString();
      Node node1 = null;
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      node1.getAncestor(1);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node0.isLabel();
      node2.isCast();
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node.mergeLineCharNo(77, 31);
      Node node3 = new Node(4095, node2, (-1587), 24);
      node3.isArrayLit();
      Node node4 = new Node(120);
      node4.isNoSideEffectsCall();
      node2.isStringKey();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString("");
      node1.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      Node node2 = Node.newString(13, "", (-3449), 155);
      node0.setSourceEncodedPosition((-80));
      node2.setCharno(64);
      node1.getChildCount();
      node1.isSyntheticBlock();
      node2.isOnlyModifiesThisCall();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags7.setMutatesThis();
      node0.getIndexOfChild(node1);
      node2.isArrayLit();
      node1.toStringTree();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = new Node(1048576);
      node1.setLineno(55);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString("5:O3>QY}PiBN", 0, (-27));
      node0.isObjectLit();
      node0.isFalse();
      node0.isAnd();
      Node node1 = node0.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.useSourceInfoIfMissingFromForTree((Node) null);
      node0.isReturn();
      node0.isScript();
      Node node2 = new Node(node1.REFLECTED_OBJECT, node1, node1.MAX_COLUMN_NUMBER, node1.DIRECTIVES);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString("Unknown class name", 2608, 1210);
      node0.setOptionalArg(false);
      Node node1 = new Node(31, node0, 12, 1048);
      Node node2 = new Node(547, node1);
      node1.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = new Node(267, 267, 4095);
      JSType jSType0 = null;
      node0.isExprResult();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      node0.isThis();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) null, jSTypeArray0);
      JSType jSType1 = modificationVisitor0.caseTemplatizedType(templatizedType0);
      jSTypeArray0[1] = jSType1;
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString(841, (String) null, 903, 77);
      boolean boolean0 = false;
      node0.setIsSyntheticBlock(boolean0);
      node0.isQuotedString();
      double double0 = 0.0;
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toStringTree();
      Node node1 = new Node(12, 11, (-1574));
      node0.isThis();
      node0.isDec();
      node0.checkTreeEquals(node1);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("");
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(51);
      node2.isScript();
      Node node3 = new Node(29, node0, (-910), 57);
      node3.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(903, 1558, 1558);
      Node node1 = Node.newString(")D21#'|CNkW");
      node0.isNull();
      node0.putIntProp(1111, 903);
      node1.setString("EQUALS");
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString((-1606), "Named type with empty name component", (-1606), (-1606));
      node0.getDirectives();
      node0.wasEmptyNode();
      Node node1 = new Node(12, node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString("Named type with empty name component");
      node2.setSourceFileForTesting("change_time");
      node0.useSourceInfoIfMissingFrom(node2);
      node0.isQuotedString();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isEquivalentTo(node0, true, true, true);
      Locale locale0 = Locale.FRENCH;
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("_N%\"ivxk])TJ%'=Ixw", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getRootNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.addChildrenToFront(node0);
      node0.isFunction();
      node0.isSetterDef();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isCall();
      node0.getFirstChild();
      Node node1 = Node.newString("jEy%'>]");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(64, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node0.hasOneChild();
      node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.mergeLineCharNo(2421, 4095);
      Node node3 = Node.newString("jEy%'>]");
      node3.getIntProp(2003);
      Node node4 = new Node(47);
      node4.isContinue();
      node1.isLabel();
      Node node5 = Node.newString(1, "jEy%'>]");
      node5.getNext();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = new Node(267, 267, 4095);
      node0.isExprResult();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.valueOf();
      Node.mergeLineCharNo(413797, 32);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = Node.newString("Not declared as a type name", 1, 29);
      node1.addChildrenToBack(node0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = node1.getAncestor(1);
      node3.putIntProp(29, 53);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node0.isLabel();
      node0.getDirectives();
      node2.isCast();
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node_FileLevelJsDocBuilder0.append((String) null);
      node2.setJSDocInfo(jSDocInfo0);
      int int0 = 77;
      Node.mergeLineCharNo(int0, node0.SIDE_EFFECTS_FLAGS_MASK);
      int int1 = (-404);
      Node node4 = null;
      try {
        node4 = new Node(int1, node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isHook();
      node0.isTrue();
      Node node1 = new Node(33);
      node1.isDelProp();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getDouble();
      node0.setIsSyntheticBlock(false);
      node0.wasEmptyNode();
      node0.addChildrenToFront(node0);
      node0.isCall();
      Node node1 = node0.getFirstChild();
      node0.setType((-2196));
      node0.removeChildren();
      node0.isAssignAdd();
      Node node2 = Node.newString("c8f{h'/Z4?s!X'.M<C");
      Node node3 = new Node(2345, node0, node1, node2, 43, 48);
      node0.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString("");
      node1.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      Node node2 = Node.newString(13, "", (-3449), 155);
      node0.setSourceEncodedPosition((-80));
      node2.setCharno(64);
      node1.getChildCount();
      node1.isSyntheticBlock();
      node2.isOnlyModifiesThisCall();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags7.setMutatesThis();
      node0.getIndexOfChild(node1);
      node2.isArrayLit();
      node1.toStringTree();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber((-0.6283544837237837), (-2345), (-2345));
      Node node1 = new Node(46, node0);
      node1.isStringKey();
      node1.isVoid();
      node0.useSourceInfoIfMissingFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(4095, (-224), 16);
      jSTypeRegistry0.getTypesWithProperty("}p!7*&VcKd'6je^");
      jSTypeRegistry0.forwardDeclareType("xT`@qhQ.Y_uS");
      node2.isCase();
      node0.isComma();
      node0.isStringKey();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node.newString("w2jd");
      node0.isFunction();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString("Unknown class name", 2608, 1210);
      node0.setOptionalArg(true);
      Node node1 = new Node(29, node0, node0, node0, node0, 15, 50);
      node1.clonePropsFrom(node0);
      Node node2 = new Node(547, node1);
      node1.removeChild(node2);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber((-0.6283544837237837), (-2345), (-2345));
      Node node1 = new Node(46, node0);
      node1.isArrayLit();
      node1.cloneTree();
      node1.mayMutateGlobalStateOrThrow();
      node0.isHook();
      node1.isTrue();
      node0.isDebugger();
      node1.isSetterDef();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), 113, 113);
      Node node1 = new Node(304, node0);
      node0.isArrayLit();
      node1.mayMutateGlobalStateOrThrow();
      node0.isHook();
      node1.isTrue();
      node0.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isLocalResultCall();
      node1.isSetterDef();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("");
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(51);
      node0.isInstanceOf();
      Node node3 = Node.newString("");
      node3.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = Node.newNumber((double) 4095);
      node0.useSourceInfoIfMissingFrom(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(0, 47, 12);
      jSTypeRegistry1.getTypesWithProperty("xT`@qhQ.Y_uS");
      jSTypeRegistry1.forwardDeclareType("`WV<vJR(Wsg.}nGnr,u");
      node0.isCase();
      node2.isComma();
      Node node3 = new Node((-1202), 132, 46);
      node3.isStringKey();
      node3.isDefaultCase();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.isReturn();
      node0.getFirstChild();
      Node node1 = Node.newString("c8f{h'/Z4?s!X'.M<C");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(85, nodeArray0);
      node2.removeProp(29);
      Node node3 = Node.newString("OBJECT_PROTOTYPE", (-170), (-1912));
      node3.setType((-4686));
      node0.setType(2533);
      Node node4 = new Node(52, node0, (-1912), 2896);
      node2.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo((-771), 1244);
      Node node5 = Node.newString("OBJECT_PROTOTYPE");
      node2.getIntProp(37);
      node0.isLabel();
      node5.getNext();
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("");
      node1.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getBooleanProp((-3179));
      Node node2 = new Node(180, 57, 56);
      node2.isName();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = (JSType) null;
      jSTypeArray0[3] = (JSType) null;
      jSTypeArray0[4] = null;
      jSTypeArray0[5] = null;
      jSTypeArray0[6] = (JSType) null;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(1, node0, 2, (-4075));
      node1.isFalse();
      node0.isNull();
      Node node2 = node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(51);
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.isReturn();
      node0.isScript();
      Node node3 = new Node(37, node1, 29, (-1));
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString(54, "", 32, 39);
      Node node1 = Node.newString(155, "BOOLEAN_TYPE", 5760, 49);
      node1.getChildAtIndex(31);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2345), (-2345));
      Node node1 = new Node((-2345), node0, 54, 1851);
      node1.isStringKey();
      node0.mayMutateGlobalStateOrThrow();
      node0.isHook();
      node1.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node2 = new Node(32, node1, 15, (-2345));
      node1.isFalse();
      node0.getString();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("xT`@qhQ.Y_uS");
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[1] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      jSTypeArray0[2] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isDebugger();
      node0.isComma();
      node0.isEmpty();
      TemplateType templateType1 = jSTypeRegistry0.createTemplateType("com.google.common.base.Predicates$InstanceOfPredicate");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("6C", node0, templateType1);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      enumType1.isNullable();
      node0.isComma();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node4 = node1.getAncestor(1);
      node4.putIntProp((-1568), 53);
      String string0 = node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node0.isLabel();
      node2.isCast();
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node.mergeLineCharNo(77, 31);
      node3.isNot();
      Node node5 = new Node((-404), node1);
      node2.removeChild(node1);
      node_FileLevelJsDocBuilder0.append(string0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node((-1));
      node0.isQuotedString();
      node0.isTypeOf();
      node0.getDirectives();
      Node node1 = new Node(43, 32, 32);
      Node node2 = new Node(51);
      node0.srcrefTree(node2);
      node0.isFalse();
      node1.getInputId();
      node0.getSourceOffset();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.valueOf();
      Node.mergeLineCharNo(0, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(0, "D,UV;;G");
      node0.isContinue();
      node0.hasChildren();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.addChildrenToFront(node0);
      Node.newString(47, "NU1e^gh=jc#/6t", 1849, 50);
      Node node2 = node0.getChildAtIndex(2);
      node2.removeChildren();
      node0.isLabel();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isCast();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(52, node1, 130, (-1981));
      node1.isArrayLit();
      Node node3 = new Node(43);
      node0.isNoSideEffectsCall();
      node0.isStringKey();
      node3.isOr();
      node3.replaceChild(node2, node0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2345), (-2345), (-2345));
      Node node1 = new Node(46, node0);
      node1.cloneTree();
      node1.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node0.isCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node(40, node1, node0, node0, 32, 56);
      node2.cloneTree();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(2, nodeArray0);
      node3.getBooleanProp((-914));
      node0.isEquivalentTo(node3, false, false, true);
      node0.setSourceEncodedPositionForTree(37);
      Node node4 = Node.newNumber((double) 32);
      node4.getChildAtIndex(8);
      node3.isLabel();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isHook();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(8287, node0, 262144, 4095);
      node1.isFalse();
      node0.getString();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node(40, node1, node0, node0, 32, 56);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(2, nodeArray0);
      node3.getBooleanProp((-914));
      node0.isEquivalentTo(node3, false, false, false);
      node0.setSourceEncodedPositionForTree(37);
      Node node4 = node2.getChildAtIndex((-721));
      node0.removeChildren();
      node4.isLabel();
      node3.isThis();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Node node1 = Node.newString("jsdoc_info", 37, 52);
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(48, "jsdoc_info");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      node0.isObjectLit();
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node4 = node1.getAncestor(1);
      node4.putIntProp((-1568), 53);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition((-432));
      node0.isLabel();
      node3.getBooleanProp(2665);
      node1.isName();
      node1.isStringKey();
      node4.isEquivalentTo(node3);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString((-489), "com.google.javascript.rhino.jstype.RecordType");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.putIntProp((-489), (-489));
      node0.getSourcePosition();
      Node.newString(46, "DEBUGGER", 4095, 1261);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2360), (-2360));
      Node node1 = new Node((-2360), node0, 54, 1851);
      node1.isStringKey();
      node0.mayMutateGlobalStateOrThrow();
      node0.isExprResult();
      node1.isTrue();
      node0.hasOneChild();
      node1.getSourceFileName();
      node0.isNumber();
      node0.setSourceFileForTesting((String) null);
      Node node2 = node1.getFirstChild();
      node0.removeProp(55);
      node2.isQuotedString();
      node1.getSourceFileName();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getFirstChild();
      Node node2 = Node.newString("jEy%'>]");
      Node node3 = new Node(117, nodeArray0);
      node2.removeProp(15);
      node1.isQualifiedName();
      node0.setType((-2196));
      Node node4 = new Node(9);
      Node node5 = new Node(16384, node4, 39, 54);
      Node node6 = node3.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo(3755, (-2345));
      Node node7 = Node.newString("second new child has existing sibling");
      node2.getIntProp(125);
      node2.isContinue();
      node0.isLabel();
      node3.getNext();
      node6.useSourceInfoIfMissingFromForTree(node4);
      node7.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("xT`@qhQ.Y_uS");
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[1] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      jSTypeArray0[2] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isDebugger();
      Node node1 = new Node(38, node0, node0);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString("5:O3^>QGY}PiBN", 0, (-27));
      node0.getJsDocBuilderForNode();
      node0.isObjectLit();
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      Node node1 = Node.newString(53, "is_dispatcher", 0, (-2274));
      node1.isEquivalentToShallow(node0);
      node1.setCharno((-2345));
      node1.getChildCount();
      Node node2 = node0.copyInformationFromForTree(node0);
      node2.isSyntheticBlock();
      node2.isFalse();
      node1.getString();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, false, false);
      node2.setSourceEncodedPositionForTree(57);
      node2.checkTreeEqualsImpl(node0);
      Node node4 = node1.getAncestor(1);
      node4.putIntProp((-1568), 53);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node4.getChildCount();
      node4.isSyntheticBlock();
      node2.isOnlyModifiesThisCall();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node1.mayMutateArguments();
      node_SideEffectFlags2.setMutatesThis();
      node3.getIndexOfChild(node0);
      node4.isArrayLit();
      node4.toStringTree();
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(1630, "Q", 1630, 1630);
      node0.isGetElem();
      node0.isThrow();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node0.setSourceEncodedPositionForTree(1);
      Node node1 = new Node(30, node0, node0, node0, 48, 31);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceEncodedPosition(37);
      Node.newString("Unknown class name");
      Node node2 = Node.newNumber((-1676.35308767689));
      node1.isContinue();
      node1.isNE();
      node2.isStringKey();
      node1.isUnscopedQualifiedName();
      node0.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{Ny]4wrIeb1qv");
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = Node.newString(0, "Named type with empty name component");
      node0.isLabel();
      Node node1 = Node.newString("opt_arg", 12, (-195));
      node0.removeChildren();
      Node node2 = new Node(32, node1, 713, 2013);
      node1.getSideEffectFlags();
      node2.isInstanceOf();
      Node node3 = Node.newString(50, "Gm;@By#>l':G1|");
      node1.setWasEmptyNode(true);
      Node node4 = new Node(2013);
      node3.srcrefTree(node4);
      node1.isCatch();
      Node node5 = new Node(63, node2, 2, 1475);
      node0.getSideEffectFlags();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      node0.setSourceEncodedPositionForTree(1);
      node0.isVoid();
      Node node1 = new Node(130, node0);
      node0.addChildrenToFront(node1);
      boolean boolean0 = node1.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = Node.newString("Not declared as a constructor");
      Node node4 = new Node(737, node3, node1, node2, 4, 1192);
      String string0 = "unexpected prop id ";
      node4.setSourceFileForTesting(string0);
      node4.getJsDocBuilderForNode();
      String string1 = "c8f{h'/Z4?s!X'.M<C";
      SimpleSourceFile simpleSourceFile0 = null;
      try {
        simpleSourceFile0 = new SimpleSourceFile(string1, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.getBooleanProp((-1763));
      Node node3 = new Node((-1653), 55, 102);
      node3.isName();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      String string0 = "";
      Node node1 = Node.newNumber((double) 54);
      node1.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isFalse();
      node0.setWasEmptyNode(true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      Node.mergeLineCharNo(38, 38);
      node0.isWhile();
      Node node3 = new Node(46, node0);
      node1.removeChild(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node_FileLevelJsDocBuilder0.append(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      int int0 = (-104);
      Node node0 = new Node((-104), 30, (-2799));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0, 43, 130);
      Node node2 = node0.getChildBefore(node1);
      node2.checkTreeEquals(nodeArray0[0]);
      node0.getProp(int0);
      // Undeclared exception!
      try { 
        node0.isReturn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = new Node(117, nodeArray0);
      node1.removeProp(15);
      node1.isQualifiedName();
      node0.setType((-2196));
      Node node4 = new Node(9);
      Node node5 = new Node(16384, node4, 39, 54);
      Node node6 = node3.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo(3755, (-2345));
      Node node7 = Node.newString("second new child has existing sibling");
      node2.getIntProp(125);
      node0.isContinue();
      node0.isLabel();
      node3.getNext();
      node7.putIntProp(52, 48);
      node6.useSourceInfoIfMissingFromForTree(node4);
      node7.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isEquivalentTo(node0, true, true, true);
      node0.getLength();
      node0.setType(116);
      Node node1 = new Node(657, node0, 38, 51);
      node0.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.mergeLineCharNo(56, 659);
      Node.newString((String) null);
      nodeArray0[1].getIntProp(node0.SIDE_EFFECT_FLAGS);
      nodeArray0[2].isContinue();
      nodeArray0[1].isLabel();
      nodeArray0[0].getNext();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toStringTree();
      node0.isAdd();
      node0.isTypeOf();
      node0.isHook();
      node0.isTrue();
      node0.setChangeTime(111);
      node0.isOnlyModifiesArgumentsCall();
      node0.getStaticSourceFile();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(311, nodeArray0);
      node1.isDec();
      int int0 = 1808;
      int int1 = 126;
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = Node.newNumber(0.0);
      node0.getInputId();
      node0.setWasEmptyNode(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(1288, node0, (-18), 8);
      InputId inputId0 = new InputId((String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      inputId0.toString();
      node1.putProp((-1745), inputId0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "})j>[D0npY~\u0007k");
      node1.isNull();
      node0.getType();
      node1.isNumber();
      node1.isHook();
      node0.isNE();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      Node node2 = Node.newString("xT`@qhQ.Y_uS", 1885, 51);
      Node node3 = new Node(29, node2, node1, node1, node2);
      node3.addChildrenToFront(node0);
      Node node4 = node0.srcref(node2);
      node4.isDo();
      node3.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node4.isLocalResultCall();
      node2.addChildBefore(node0, node3);
      int int0 = 119;
      Node node5 = new Node(int0);
      node1.isDelProp();
      node4.isFalse();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node0.isLabel();
      node0.isWith();
      node0.setWasEmptyNode(false);
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.mergeLineCharNo(965, 111);
      node0.isNot();
      Node node1 = new Node(4, node0);
      node1.removeChild(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Not declared as a type name");
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getFirstChild();
      Node node2 = new Node(117, nodeArray0);
      node2.isUnscopedQualifiedName();
      node0.setType((-2196));
      node2.isDebugger();
      node2.isComma();
      node1.isAssignAdd();
      node1.detachChildren();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node1 = new Node(563, node0, node0, node0, node0, 12, 36);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getJsDocBuilderForNode();
      Node node3 = Node.newString(1387, "", 569, 45);
      node3.srcrefTree(node1);
      node2.isFalse();
      node2.getSourceOffset();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString("p#kG(P&iSC^du6", 1081, 57);
      node0.isString();
      node0.isTypeOf();
      Node node1 = Node.newString(46, "n_");
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((-1676.35308767689), (-1), (-1));
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesArgumentsCall();
      node0.getDouble();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(36);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      Object[] objectArray0 = new Object[1];
      mockPrintStream0.printf("En&!jtSY+We?/'ddd", objectArray0);
      node0.setLength((-1));
      node0.isGetProp();
      node0.isGetProp();
      Node node1 = new Node(764, node0, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
      int int0 = (-3444);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.UNKNOWN_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, jSTypeArray0);
      JSType jSType0 = jSTypeRegistry0.createNullableType(templatizedType0);
      jSTypeArray0[0] = jSType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createUnionType(jSTypeArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.UnknownType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString(119, "input_id", 119, 826);
      node0.isArrayLit();
      node0.setString("input_id");
      node0.isEmpty();
      Node node1 = new Node(2484, 56, 12);
      node0.isEquivalentTo((Node) null, false, false, false);
      int int0 = 4;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      node1.getSourceOffset();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setThrows();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTypeOf();
      node0.isContinue();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = node0.getChildAtIndex(1386);
      node0.removeChildren();
      node1.isLabel();
      // Undeclared exception!
      try { 
        node1.isThis();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isHook();
      node0.isDebugger();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = new Node(51, node0, node0, node0);
      node0.isCatch();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(1630, "Q", 1630, 1630);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isBreak();
      node0.isBreak();
      Node node1 = Node.newNumber((double) 16, 30, 2299);
      node0.isThis();
      node1.getParent();
      node1.isInstanceOf();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node_SideEffectFlags3.setAllFlags();
      node0.isScript();
      Node node1 = new Node(4095, node0, 39, 30);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isFunction();
      node0.setString((String) null);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      node0.setSourceEncodedPositionForTree(1);
      node0.isVoid();
      node0.isReturn();
      Node node1 = new Node(43);
      Node node2 = Node.newString((-1529), "com.google.common.collect.AbstractSetMultimap", (-1957), 32);
      node1.setCharno((-364));
      node0.getChildCount();
      Node node3 = Node.newString("mf(Yi%4QE[8# *Ra=%");
      node3.isSyntheticBlock();
      node3.isOnlyModifiesThisCall();
      node3.srcref(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node4 = Node.newString(83, "#+V{lNCm(", 48, 57);
      node4.getIndexOfChild(node3);
      node1.isArrayLit();
      node1.toStringTree();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.isStringKey();
      Node node1 = Node.newString(3104, "com.google.common.collect.Iterators$3", 40, 30);
      node1.isOr();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node3 = new Node((-502), node0, node1, node2, 2445, 29);
      node1.replaceChild(node2, node0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node0.setSourceEncodedPositionForTree(1);
      Node node1 = new Node(30, node0, node0, node0, 48, 31);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.useSourceInfoFrom(node1);
      node0.setSourceEncodedPosition(37);
      Node.newString("Unknown class name");
      node1.setSideEffectFlags(node_SideEffectFlags1);
      Node.newNumber(1.0);
      node1.isContinue();
      node1.isNE();
      node1.isUnscopedQualifiedName();
      node0.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = new Node(117, nodeArray0);
      node1.removeProp(15);
      node3.addChildrenToFront(node0);
      Node node4 = node1.srcref(node3);
      Node node5 = new Node(48, node1, node3, node1, node2, 8, 10);
      node5.isDo();
      node4.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isLocalResultCall();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node5, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      Node node1 = Node.newString("7_$+=^Kp/eyC.#}");
      node1.isVoid();
      node1.isVarArgs();
      Node node2 = new Node(30);
      node2.isInstanceOf();
      Node node3 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.isEquivalentToTyped(node3);
      node0.getStaticSourceFile();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      Node node1 = new Node(47, node0, node0, 51, 31);
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(148);
      node0.isInstanceOf();
      Node node3 = Node.newString("D9!bU\"8b ");
      node3.isEquivalentToTyped(node0);
      node2.copyInformationFrom(node3);
      node3.setSideEffectFlags((Node.SideEffectFlags) null);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node1.isExprResult();
      node0.isTrue();
      int int0 = (-4525);
      node0.replaceChildAfter(node1, node1);
      int int1 = (-960);
      EvoSuiteFile evoSuiteFile0 = null;
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(147);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      Node node3 = Node.newString(8, ";i*:tb_", 4095, (-1686));
      node2.getIndexOfChild(node0);
      node0.isArrayLit();
      node2.toStringTree();
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      int int0 = (-2900);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(42, (-2900), (-2900));
      node0.addChildToBack((Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        FileSystemHandling.createFolder(evoSuiteFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)89;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.Iterators$3");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(9, 594, 4);
      Node node1 = new Node(9, node0, node0, node0, node0);
      Node node2 = new Node(50, node1);
      Node node3 = Node.newString("com.google.common.collect.Iterators$3", 50, 46);
      Node node4 = node0.cloneTree();
      Node node5 = node2.copyInformationFrom(node0);
      node5.isUnscopedQualifiedName();
      node4.getLineno();
      node4.setLineno(2);
      Node node6 = node4.useSourceInfoIfMissingFromForTree(node2);
      node0.getSourceOffset();
      node1.isComma();
      node1.replaceChild(node6, node3);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(116, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node0.addChildrenToFront((Node) null);
      String string0 = "7#/5j";
      int int0 = 1849;
      int int1 = 50;
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = Node.newString("jEy%'>]");
      Node node3 = new Node(117, nodeArray0);
      node3.useSourceInfoFromForTree(node0);
      node2.removeProp(15);
      node0.setType((-2196));
      Node node4 = new Node(42, node2, 1210, 192);
      Node node5 = node1.useSourceInfoFrom(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo(32, 4);
      node5.isGetterDef();
      node1.isObjectLit();
      node1.getStaticSourceFile();
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      int int0 = Node.IS_CONSTANT_NAME;
      node0.siblings();
      node0.isTrue();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = new Node((-16), node0, node0, node0);
      Node node2 = Node.newString(1, "}B&>+3e.", 1, (-924));
      node1.getSideEffectFlags();
      node1.isIn();
      node2.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = Node.newString(32768, "");
      node0.isFalse();
      node0.isTrue();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      Node node1 = new Node((-789), node0, node0, node0);
      node1.isCatch();
      node1.getSideEffectFlags();
      Node node2 = new Node(1023, 46, 1193);
      node0.isCase();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getJsDocBuilderForNode();
      node0.isGetElem();
      node0.srcref(node1);
      node1.detachFromParent();
      node0.setLineno(15);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, true, true, true);
      node2.setSourceEncodedPositionForTree(57);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node3);
      Node node4 = node1.getAncestor(1);
      node4.putIntProp((-1568), 53);
      node1.getQualifiedName();
      node0.setSourceEncodedPosition(22);
      node0.isLabel();
      node2.isCast();
      node0.setWasEmptyNode(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node5 = new Node(1);
      node1.isDelProp();
      Node node6 = new Node(43, node4, 1, 4);
      node6.isFalse();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(1644, 852, 534);
      Node node1 = new Node(48, 47, 48);
      node1.getJsDocBuilderForNode();
      node1.children();
      node1.addChildrenToFront(node0);
      Node node2 = node1.srcref(node0);
      node2.isDo();
      node2.isDebugger();
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-126);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = Node.newString(1628, "&j2>y \"DW Mwc%");
      Node node1 = new Node(1628, node0, node0, node0, node0);
      node1.getCharno();
      node1.addChildBefore(node0, node0);
      node0.isReturn();
      node0.getJSType();
      node0.useSourceInfoIfMissingFromForTree(node1);
      int int0 = (-280);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("length");
      Node.newString(42, "length");
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      Node node1 = new Node((-1), node0, node0, 1, 36);
      node0.isVoid();
      node0.isReturn();
      Node node2 = new Node(55);
      Node node3 = Node.newNumber((double) 42);
      node3.isInstanceOf();
      Node node4 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node1.isEquivalentToTyped(node4);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(57, node0, 48, 37);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getFirstChild();
      Node node2 = new Node(117, nodeArray0);
      node2.isUnscopedQualifiedName();
      node0.setType((-2196));
      node2.isDebugger();
      Node node3 = Node.newString(2, "'l^P>", 309, (-35));
      node2.getIndexOfChild(node3);
      node0.isArrayLit();
      node1.toStringTree();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte)71;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte)102;
      byteArray0[5] = (byte) (-70);
      byteArray0[6] = (byte) (-26);
      byteArray0[7] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(147);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      Node node3 = Node.newString(8, ";i*:tb_", 4095, (-1686));
      node2.getIndexOfChild(node0);
      node0.isArrayLit();
      node2.toStringTree();
      node3.hasMoreThanOneChild();
      Node.newString("&VDLm");
      node3.getAncestor((-235));
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      double double0 = 0.0;
      Node node0 = Node.newNumber(0.0);
      int int0 = 27591;
      node0.replaceChildAfter((Node) null, (Node) null);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isInc();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(2, nodeArray0);
      node1.isFor();
      node0.setSourceEncodedPositionForTree(37);
      Node node2 = new Node(4095, node1, node1, node1, 46, 53);
      node2.setSourceEncodedPosition((-2413));
      Node node3 = Node.newString("7_$+=^Kp/eyC.#}");
      node3.setQuotedString();
      node0.isContinue();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.newString("");
      Node node0 = Node.newNumber((-3370.3532), 2110, 16);
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.isEquivalentToTyped(node1);
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2360), (-2360));
      Node node1 = new Node((-2360), node0, 54, 1851);
      node1.isCall();
      Node node2 = Node.newString("com.google.common.collect.ImmutableSortedAsList");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      Node node3 = Node.newString(40, "jEy%'>]", 4095, 1442);
      nodeArray0[2] = node3;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      Node node4 = new Node(48, nodeArray0);
      node3.removeProp(node1.EMPTY_BLOCK);
      nodeArray0[6].setType(node2.SIDE_EFFECT_FLAGS);
      int int0 = 2171;
      Node node5 = new Node(node0.ORIGINALNAME_PROP, nodeArray0[3], node4.ORIGINALNAME_PROP, int0);
      nodeArray0[1].useSourceInfoFrom(nodeArray0[2]);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      node0.setSourceEncodedPositionForTree(1);
      node0.setType(1);
      node0.siblings();
      node0.isReturn();
      Node node1 = new Node(57, node0, 131072, 1);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo((-838), 4);
      node2.isNot();
      Node node3 = new Node(1439, node0);
      Node node4 = new Node(node2.DIRECTIVES, node2, node3);
      Node node5 = new Node(node2.FLAG_ARGUMENTS_UNMODIFIED, node4);
      boolean boolean0 = false;
      node5.putBooleanProp(node1.COLUMN_MASK, boolean0);
      // Undeclared exception!
      try { 
        node5.removeChild(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString("Unknown class name", 2624, 1210);
      node0.setOptionalArg(true);
      Node node1 = new Node(31, node0, 12, 1048);
      Node node2 = new Node(547, node1);
      node1.hasMoreThanOneChild();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2360), (-2360));
      Node node1 = new Node((-2360), node0, 54, 1851);
      node1.isEquivalentToShallow(node0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isExprResult();
      node1.isTrue();
      node0.hasOneChild();
      node1.getSourceFileName();
      node0.isNumber();
      node0.setSourceFileForTesting((String) null);
      Node node2 = node1.getFirstChild();
      node0.removeProp(55);
      node2.isQuotedString();
      node1.getSourceFileName();
      node0.isDec();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getChangeTime();
      node0.isThis();
      node0.isDec();
      Node node1 = new Node(47, node0, node0, 51, 31);
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(148);
      node0.isInstanceOf();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node2.isUnscopedQualifiedName();
      node2.isSetterDef();
      node1.isVar();
      Node node3 = Node.newString("W!E0Q@");
      Node node4 = node3.cloneTree();
      node4.getProp(48);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = new Node(36, 8, 52);
      Node node2 = Node.newString("");
      node1.useSourceInfoFromForTree(node2);
      node1.getJsDocBuilderForNode();
      Node node3 = new Node(40);
      node3.children();
      node0.addChildrenToFront(node1);
      Node node4 = node3.srcref(node2);
      Node node5 = new Node(617, node3, node4);
      node5.isDo();
      node1.isSwitch();
      node1.checkTreeTypeAwareEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, node0, node0);
      JSDocInfo jSDocInfo0 = null;
      Node node2 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getLength();
      node2.setChangeTime(31);
      node1.getProp(8);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D9!bU\"8b ");
      node1.isVarArgs();
      node2.removeChild(node0);
      node0.srcrefTree(node2);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node1.getDirectives();
      Node node4 = node3.getNext();
      // Undeclared exception!
      try { 
        node4.useSourceInfoIfMissingFromForTree(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node(101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);
      Node node1 = new Node(30, 1872, 154);
      node1.copyInformationFrom(node0);
      jSTypeRegistry0.getTypesWithProperty("}p!7*&VcKd'6je^");
      jSTypeRegistry0.forwardDeclareType("xT`@qhQ.Y_uS");
      node1.isCase();
      node0.isComma();
      node0.isStringKey();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = node0.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0, false, true, false);
      node0.setSourceEncodedPositionForTree(5760);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node2 = new Node(4095, nodeArray0);
      int int0 = 110;
      Node node3 = new Node(int0);
      Node node4 = new Node(node2.SLASH_V, nodeArray0[4], node3, nodeArray0[1]);
      node2.checkTreeEqualsImpl(node4);
      node3.isFunction();
      nodeArray0[3].isBreak();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(903, 1558, 1558);
      Node node1 = new Node(4095, node0, node0, node0, node0, 2, 8);
      node0.isNull();
      node0.putIntProp(1111, 903);
      node1.addChildrenAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry", 306654252, 306654252);
      node0.isSyntheticBlock();
      node0.isInc();
      node0.addSuppression("com.google.javascript.rhino.jstype.JSTypeRegistry");
      Node node1 = Node.newNumber((double) 50);
      node1.isVoid();
      node1.isBreak();
      Node node2 = new Node(16);
      Node node3 = new Node(101, node1, 1529, 1);
      Node node4 = new Node(148, node2);
      node3.hasMoreThanOneChild();
      node4.isBlock();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(147);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      Node.newString(8, ";i*:tb_", 4095, (-1686));
      node2.getIndexOfChild(node0);
      node0.isArrayLit();
      node2.toStringTree();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("size must be non-negative");
      node0.isNew();
      node0.isVar();
      Node node1 = node0.removeChildAfter((Node) null);
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1));
      node0.isLocalResultCall();
      node0.isTypeOf();
      node0.getDirectives();
      node0.isScript();
      Node node1 = new Node(30, node0, 37, 34);
      Node node2 = new Node(39, node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(903, 1558, 1558);
      Node node1 = new Node(4095, node0, node0, node0, node0, 2, 8);
      node0.isNull();
      node1.removeChildAfter(node0);
      String string0 = " [";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(903, 1558, 1558);
      Node node1 = new Node(4095, node0, node0, node0, node0, 2, 8);
      node0.isNull();
      Node node2 = new Node(113, node1, 27, 46);
      node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = Node.IS_DISPATCHER;
      node0.isGetterDef();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("reflected_object");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node0 = Node.newNumber((double) 0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node1 = Node.newString(0, "'i83");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node1, functionType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSTypeArray0[0], (JSType) enumType0, (JSType) functionType0, (JSType) templateType0, (JSType) enumType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType1, jSTypeArray0[0]);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) templateType1, (List<JSType>) immutableList0);
      jSTypeArray0[1] = (JSType) functionType1;
      JSType jSType0 = jSTypeRegistry0.createNullableType(jSTypeArray0[1]);
      jSTypeArray0[2] = jSType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[3] = jSType1;
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("Named type with empty name component", node1, (ObjectType) templateType0);
      jSTypeArray0[4] = (JSType) objectType0;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      FunctionType functionType2 = jSTypeRegistry1.createFunctionTypeWithNewThisType(functionType0, templateType1);
      ObjectType objectType1 = jSTypeRegistry0.createObjectType("", node2, (ObjectType) functionType2);
      jSTypeArray0[5] = (JSType) objectType1;
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      JSType jSType2 = modificationVisitor0.caseUnionType(unionType0);
      jSTypeArray0[6] = jSType2;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node(112);
      node0.removeFirstChild();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node1 = new Node(2515, node0);
      Node node2 = new Node(112, node1, (-2301), 115);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.getStaticSourceFile();
      node0.getChangeTime();
      node0.isThis();
      node0.isNumber();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      node0.isReturn();
      node0.isScript();
      Node node1 = new Node(1700, 16, 16);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(2197, nodeArray0, 130, 33);
      Node node3 = Node.newNumber(197.642783, 524288, 2197);
      node2.srcrefTree(node3);
      node3.isFalse();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(22);
      node0.isReturn();
      node0.isScript();
      node0.isEquivalentToShallow(node0);
      node0.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isLocalResultCall();
      Node node1 = Node.newNumber(0.0, 51, (-3905));
      node1.addChildBefore(node0, node0);
      Node node2 = new Node(node1.FLAG_GLOBAL_STATE_UNMODIFIED);
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node0.isFalse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node0 = new Node(113, 1558, 1558);
      node0.cloneTree();
      Node node1 = new Node(4095, node0, node0, node0, node0, 2, 8);
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[3] = node0;
      node0.isLabel();
      Node node1 = Node.newString("Object#Element", 4, (-198));
      node1.removeChildren();
      node0.getSideEffectFlags();
      node0.isVoid();
      node0.setWasEmptyNode(true);
      Node node2 = node0.srcrefTree(node0);
      node0.isCatch();
      Node node3 = new Node(50, node2, 12, 32);
      int int0 = Node.REFLECTED_OBJECT;
      node0.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.isExprResult();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node1.getJsDocBuilderForNode();
      node1.getAncestors();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("!ww,?mg", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isBreak();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!ww,?mg");
      node0.isBreak();
      Node.newNumber((double) 29, 57, 15);
      node1.isThis();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(110, node0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 2148, 2148);
      Node node1 = new Node(2148, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-770));
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node.newString(15, "", 2148, 40);
      node1.getIndexOfChild(node0);
      node1.isArrayLit();
      Node node2 = Node.newString("", 56, 52);
      node0.setWasEmptyNode(false);
      node2.toStringTree();
      node2.isDefaultCase();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 1, 305, 103);
      Node node2 = new Node(100, node0, 38, (-757));
      node1.isStringKey();
      node1.mayMutateGlobalStateOrThrow();
      node0.isExprResult();
      node1.isLabelName();
      node2.cloneNode();
      Node node3 = new Node((-987), node2, 19, (-2370));
      node1.getString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      List<JSType> list0 = null;
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(list0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node4);
      int int0 = 4095;
      node0.setLineno(int0);
      String string0 = null;
      try { 
        node0.setString(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.0 305 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isReturn();
      Node node1 = Node.newString("#+V{lNCm(");
      Node node2 = new Node(50, node0, node0, node1, node0);
      node1.addChildrenToFront(node2);
      Node node3 = node0.srcref(node2);
      node3.isDo();
      node3.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isLocalResultCall();
      node3.addChildBefore(node1, node1);
      Node node4 = new Node(node1.STATIC_SOURCE_FILE);
      // Undeclared exception!
      try { 
        node4.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, node0, node0, node0, 36, 29);
      Node node2 = new Node(31, node1, node1, 16, 51);
      node2.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(53);
      node1.isGetElem();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putBooleanProp(1, false);
      Node node1 = new Node(49, node0, node0, node0, node0, (-2501), 2440);
      node0.addChildrenToFront(node1);
      node0.removeChildren();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(30, node0, node0, node0, 48, 31);
      node0.setSourceEncodedPosition(37);
      Node node2 = Node.newNumber(1.0);
      node1.isContinue();
      node1.hasChild(node1);
      node1.isDo();
      node2.isDebugger();
      Node node3 = node1.cloneNode();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[3] = node0;
      node0.isLabel();
      node0.isEquivalentTo(node0, false, false, false);
      node0.getLength();
      node0.setType(1043);
      node0.siblings();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.setString("");
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = object0;
      Node node0 = new Node((-4102));
      Node node1 = Node.newString(15, "#+V{lNCm(", 50, 35);
      node0.clonePropsFrom(node1);
      node0.removeProp(39);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[3] = node0;
      node0.isLabel();
      Node node1 = Node.newString("Object#Element", 4, (-198));
      node1.removeChildren();
      node0.getSideEffectFlags();
      node0.isVoid();
      Node node2 = Node.newString(1, "Object#Element");
      node2.setWasEmptyNode(true);
      Node node3 = new Node(50, node2, 12, 32);
      int int0 = Node.REFLECTED_OBJECT;
      node0.isTry();
      node3.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      node0.setSourceEncodedPositionForTree(42);
      node0.isVoid();
      node1.isReturn();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.RecordType");
      Node node3 = new Node(31, node0, node0);
      node3.getProp(31);
      node3.removeChildren();
      Node node4 = Node.newString("jsdoc_info");
      node4.isThis();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString("7_$+=^Kp/eyC.#}");
      node0.isThis();
      node0.isDec();
      node0.isVoid();
      node0.isReturn();
      Node node1 = new Node(148);
      node0.isInstanceOf();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(43);
      node1.addChildrenToFront(node0);
      Node node3 = node1.srcref(node2);
      node1.isDo();
      node3.isDebugger();
      node2.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node0.addChildrenToFront(node1);
      Node node2 = node0.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(147);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setReturnsTainted();
      Node node3 = new Node(4095);
      node1.addChildrenToFront(node3);
      Node node4 = node2.srcref(node0);
      node4.isSyntheticBlock();
      node2.isDo();
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node_SideEffectFlags3.setAllFlags();
      Node node1 = Node.newString(64, "Object#Key", 42, 38);
      node0.setCharno(46);
      node0.getChildCount();
      node1.isSyntheticBlock();
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(36, node1, 83, 2166);
      Node node3 = new Node((-27), node0);
      node0.setString(".GF:=yDJ0;O|'W38/,");
      Node.extractCharno((-622));
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      JSType.toMaybeTemplateType((JSType) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("Unknown class name", 2624, 1210);
      Node node1 = new Node(31, node0, 12, 1048);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not declared as a constructor");
      Node node2 = new Node(21, 4095, 1353);
      node1.getChangeTime();
      Node node3 = node2.srcrefTree(node0);
      node1.isFalse();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      node0.getDouble();
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = Node.newString("jEy%'>]");
      Node node3 = new Node(117, nodeArray0);
      node2.removeProp(15);
      node0.setType((-2196));
      node2.putIntProp(192, 15);
      node0.isStringKey();
      Node node4 = new Node(48, nodeArray0);
      node1.useSourceInfoFromForTree(node4);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("");
      Node node2 = new Node(180, 57, 56);
      node1.isStringKey();
      node2.isFalse();
      node1.getString();
      node0.getAncestors();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node0.setLineno(15);
      node1.getLength();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(116, (-1641), 1047);
      nodeArray0[0] = node0;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      JSType jSType1 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSType0, "Not declared as a constructor");
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createFunctionType(jSType1, jSTypeArray0);
      node0.isDebugger();
      node0.isComma();
      Node node1 = Node.newString("Not declared as a constructor", 56, 55);
      Node node2 = new Node(15, node0, node0, node0, 55, (-1494));
      node2.srcref(node1);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(1558);
      Node node1 = new Node(4095, node0, node0, node0, node0, 2, 8);
      node1.hasChild(node0);
      node1.addChildrenAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(21);
      node2.isInstanceOf();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(36);
      node0.addChildrenToFront(node1);
      node2.srcref(node1);
      node3.isDo();
      node3.isDebugger();
      node3.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString("zbk |/c.;,'t< ", 93, 95);
      Node node1 = new Node(31, node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.checkTreeEqualsImpl(node1);
      node0.getIntProp(40);
      node0.addChildrenToBack(node1);
      node0.getSourceFileName();
      node1.isDec();
      node0.checkTreeEquals(node1);
      node0.isTypeOf();
      node1.isDelProp();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newString("-]wZnE");
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-136), (-136), 227);
      node0.addChildrenToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node2, true, true, false);
      node1.setSourceEncodedPositionForTree(56);
      node2.checkTreeEqualsImpl(node1);
      Node node3 = node2.getAncestor(8);
      node2.putIntProp((-610), 40);
      Node node4 = Node.newNumber((double) 53);
      node4.addChildrenToFront(node1);
      Node node5 = node2.srcref(node3);
      node2.isDo();
      node5.isDebugger();
      node1.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString("zbk |/c.;,'t< ", 93, 95);
      Node node1 = new Node(31, node0);
      node0.checkTreeEqualsImpl(node1);
      node0.getIntProp(40);
      node0.addChildrenToBack(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.getProp(42);
      node1.isNull();
      node0.isWith();
      node0.mayMutateArguments();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("#+V{WlNCm(");
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setWasEmptyNode(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node(117, 44, (-104));
      jSTypeRegistry0.forwardDeclareType("");
      node1.isCase();
      node0.setSourceEncodedPositionForTree(50);
      Node node2 = Node.newString("Object#Key", 57, 4);
      node2.isFunction();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 1, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = Node.newString("jEy%'>]");
      Node node3 = new Node(117, nodeArray0);
      node1.addChildrenToFront(node3);
      node1.isSetterDef();
      node0.isGetterDef();
      node1.isVar();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(22);
      node0.isTypeOf();
      Set<String> set0 = node0.getDirectives();
      Node node1 = new Node(4, node0, node0, node0);
      node1.isScript();
      Node node2 = new Node(216, (-4123), 50);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      node1.cloneNode();
      Node node3 = new Node((-519), 37, 48);
      nodeArray0[5] = node3;
      nodeArray0[6] = node2;
      Node node4 = new Node(52, nodeArray0);
      int int0 = 122;
      node4.setSourceEncodedPositionForTree(int0);
      node4.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = new Node(120, node0, node0, node0, 51, 50);
      node1.setSourceEncodedPosition(50);
      Node node2 = Node.newNumber((double) 40);
      node1.isContinue();
      node0.isNE();
      node2.isUnscopedQualifiedName();
      node1.isSwitch();
      node2.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(120, "free_call");
      node0.setOptionalArg(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getDirectives();
      node0.getChangeTime();
      node0.mayMutateArguments();
      node0.setDouble((-1.0));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        JSType.toMaybeFunctionType(jSType0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CATCH free_call [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(116, (-1641), 1048);
      nodeArray0[0] = node0;
      Node node1 = new Node(113, nodeArray0, (-1110), 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.replaceChildAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 51, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = new Node(117, nodeArray0);
      node1.removeProp(15);
      node1.isQualifiedName();
      node0.setType((-2196));
      Node node4 = new Node(9);
      Node node5 = new Node(38, node4, 39, 54);
      node3.useSourceInfoFrom(node1);
      node2.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node5.setString("Q.[)/6y V*<bY69");
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(116);
      node0.isReturn();
      node0.isScript();
      Node node1 = new Node(15, node0, 36, 31);
      Node node2 = node1.srcrefTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node1.putBooleanProp(4095, true);
      node2.isFalse();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString("xT`@qhQ.Y_uS");
      node0.getChangeTime();
      node0.isWhile();
      node0.isDec();
      Node node1 = new Node(47, node0, node0, 51, 31);
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(148);
      node2.isSyntheticBlock();
      node0.setVarArgs(false);
      node1.isAnd();
      node0.isExprResult();
      node0.getFirstChild();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(51, node0, node0);
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = Node.newString("jsdoc_info", 3415, 49);
      Node node3 = new Node(21, node0, node0, 3834, 50);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("zbk |/c.;,'t< ", 93, 95);
      Node node1 = new Node(31, node0);
      node0.checkTreeEqualsImpl(node1);
      node0.getIntProp(40);
      node0.addChildrenToBack(node1);
      node1.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      node0.getIndexOfChild(node1);
      node0.isArrayLit();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isVar();
      node0.isDec();
      Node node1 = new Node(53, node0, node0);
      node1.isThrow();
      node0.isOr();
      Node.newString(2, "-eW<");
      node0.hasChildren();
      Node node2 = new Node((-5986), node1, node0);
      node2.getJsDocBuilderForNode();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(48, (-35), 83);
      Node node1 = new Node(111, node0, node0, node0, node0);
      node0.addChildrenToFront(node1);
      Node node2 = node1.srcref(node0);
      node0.isStringKey();
      node1.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-6));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node0.setLineno(9);
      node0.isName();
      node0.isStringKey();
      node2.isThis();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getAncestor(103);
      Node node1 = Node.newString("jsdoc_info", 49, 56);
      Node node2 = new Node(12, node0, node0, 29, 32);
      node0.isLabelName();
      node2.addChildAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 1, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      Node node2 = Node.newString(2912, "CharMatcher.ASCII");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node1.isEquivalentTo(node0, false, false, false);
      node0.setSourceEncodedPositionForTree(32);
      node1.getAncestor(32);
      node2.putIntProp(57, 883);
      Node node4 = new Node(2, nodeArray0);
      node0.addChildrenToFront(node4);
      Node node5 = node3.srcref((Node) null);
      node5.isDo();
      node3.isDebugger();
      node2.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      node0.getChangeTime();
      node0.isWhile();
      node0.isDec();
      Node node1 = new Node(53, node0, node0, 130, (-661));
      node1.isVoid();
      node0.isReturn();
      Node node2 = new Node(1);
      node0.isInstanceOf();
      Node node3 = Node.newString("5FNq:H-");
      node3.getChangeTime();
      node3.isEquivalentToTyped(node1);
      Node node4 = new Node(30);
      node4.getNext();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "c8f{h'/Z4?s!X'.M<C");
      Node node0 = Node.newNumber((double) 113);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(54, nodeArray0, 306654252, 52);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node0.isExprResult();
      node0.addChildrenToFront(node1);
      node1.isCall();
      Node node2 = new Node(1, node0, node0, node0);
      node2.getJsDocBuilderForNode();
      Node.newString(46, "D9!bU\"8b ", (-786), 53);
      node0.removeProp(1463);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node2.isStringKey();
      node0.isNull();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 51, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.isCall();
      Node node2 = new Node(117, nodeArray0);
      node1.removeProp(15);
      Node node3 = Node.newString((-1902), "\n\nSubtree1: ", 56, 2);
      node0.removeProp(36);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node4 = node0.useSourceInfoFrom(node3);
      node1.isStringKey();
      node1.isNull();
      node4.getCharno();
      node1.removeChildAfter(node4);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(30, nodeArray0, 40, 4095);
      node0.getDouble();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      Node node2 = node0.getFirstChild();
      Node node3 = new Node(128, nodeArray0);
      node0.removeProp(node2.IS_DISPATCHER);
      node3.isQualifiedName();
      int int0 = (-3545);
      nodeArray0[0].setType(int0);
      Node node4 = null;
      try {
        node4 = new Node(node3.FREE_CALL);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(140);
      Node node1 = Node.newString("jsdec_infQo");
      node1.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      node0.setSourceEncodedPositionForTree(42);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jsdec_infQo");
      node0.isVoid();
      node1.isReturn();
      Node node2 = new Node(2);
      node1.isScript();
      node2.addChildToFront(node0);
      node2.isOnlyModifiesArgumentsCall();
      node0.addChildAfter(node2, node2);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = node0.getAncestor(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node2 = new Node(56, node1, node1, node1);
      node1.isCatch();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node_SideEffectFlags3.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter2, false);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node((-1499), node0, 1499, (-712));
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isDec();
      Node node1 = new Node(103, node0, node0);
      node0.isThrow();
      node0.isOr();
      Node node2 = Node.newString(56, "-eW<");
      node1.hasChildren();
      Node node3 = new Node(56, node0, node1);
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.addChildrenToFront(node0);
      node0.isFunction();
      node0.isSetterDef();
      node1.isGetterDef();
      node1.putIntProp((-3838), 4095);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getJsDocBuilderForNode();
      node0.children();
      Node node1 = new Node(29, 101, 79);
      node0.addChildrenToFront(node1);
      node0.isFunction();
      node0.isSetterDef();
      node1.isGetterDef();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(116, (-1641), 1047);
      nodeArray0[0] = node0;
      Node node1 = new Node(39);
      node0.isScript();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(27591);
      node0.addChildrenToFront(node0);
      Node node3 = node0.srcref(node1);
      node0.isDo();
      node0.isDebugger();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getJsDocBuilderForNode();
      node0.addChildrenToFront(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setMutatesThis();
      node0.isEquivalentTo(node0, true, false, false);
      Node node2 = node0.getAncestor(1);
      node2.putIntProp((-1568), 53);
      node1.addChildrenToFront(node2);
      node0.srcref(node2);
      node2.isDebugger();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.removeProp(node0.FLAG_THIS_UNMODIFIED);
      // Undeclared exception!
      try { 
        node2.getSourceOffset();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = Node.newNumber((double) (-1));
      node0.isCast();
      node0.setWasEmptyNode(true);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isQuotedString();
      node0.getSourceFileName();
      node0.isDec();
      Node node1 = Node.newNumber((double) 4, 119, 3411);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(30, node0, node0, node0, 48, 31);
      node0.setSourceEncodedPosition(37);
      Node node2 = Node.newNumber(1.0);
      node1.isNew();
      node0.getString();
      int int0 = 1303;
      Node node3 = new Node(node2.COLUMN_BITS, node0, node1, node0, node0, int0, node1.DECR_FLAG);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // AND 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D9!bU\"8b ");
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 35, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.isExprResult();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node1.getJsDocBuilderForNode();
      Node node2 = node0.getChildAtIndex((-137));
      Node node3 = new Node(54);
      node0.isLabel();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newString("jsdoc_info");
      node1.getJsDocBuilderForNode();
      node0.addChildrenToFront(node1);
      node0.setSourceEncodedPositionForTree(42);
      node0.isVoid();
      node1.isReturn();
      node1.isScript();
      node0.isCatch();
      node0.isInc();
      node1.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(22);
      node0.isBreak();
      node0.isScript();
      Node node1 = Node.newNumber((double) 48);
      node0.getJsDocBuilderForNode();
      node1.isLabelName();
      node1.isAssign();
      node0.putIntProp(1, 51);
      node1.addChildrenToFront(node0);
      Node node2 = node1.srcref(node0);
      node2.isDo();
      node1.hasChild(node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(116, (-1641), 1046);
      nodeArray0[0] = node0;
      Node node1 = new Node(39);
      node0.isScript();
      node1.isContinue();
      node0.isNE();
      node0.isUnscopedQualifiedName();
      node0.isBreak();
      node1.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 51, 0);
      node0.getDouble();
      node1.setIsSyntheticBlock(false);
      node1.wasEmptyNode();
      node0.addChildrenToFront(node1);
      node0.isCall();
      node0.getFirstChild();
      Node node2 = new Node(117, nodeArray0);
      node1.removeProp(15);
      node1.isQualifiedName();
      node0.setType((-2196));
      Node node3 = new Node(9);
      Node node4 = new Node(38, node3, 39, 54);
      node2.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.isNot();
      node3.isGetterDef();
      Node node5 = node2.cloneNode();
      node5.toStringTree();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString("5:O3>QY}PiBN", 0, (-27));
      node0.isObjectLit();
      node0.isFalse();
      node0.isVarArgs();
      node0.isGetProp();
      node0.isGetProp();
      node0.isSetterDef();
      Node node1 = new Node(1199, node0, 1522, 115);
      Node node2 = Node.newNumber((double) 2, 2, 4637);
      node2.copyInformationFrom(node0);
      Node node3 = new Node(1, node1);
      node0.setString("NX&v5Ks`");
      Node.extractLineno(4);
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = new Node(120, node0, node0, node0, 51, 50);
      node1.setSourceEncodedPosition(50);
      node1.isContinue();
      node0.isNE();
      node1.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = new Node(1712, node1, node1, node1);
      Node node3 = Node.newString(934, "Object#Element");
      node2.replaceChildAfter(node1, node3);
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isWhile();
      node0.isDec();
      Node node1 = new Node(0);
      node1.isHook();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node2 = new Node((-443), node1, node0, node1);
      node2.isCatch();
      node2.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = new Node(101);
      node0.getLength();
      node0.siblings();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isVar();
      node0.isDec();
      node0.isThrow();
      node0.isAssign();
      String string0 = "-eW<";
      Node node1 = Node.newString(node0.IS_CONSTANT_NAME, string0);
      node0.hasChildren();
      node0.getJsDocBuilderForNode();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.mayMutateArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node1.children();
      node1.addChildrenToFront(node0);
      node0.isFunction();
      node0.isSetterDef();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.createParameters((List<JSType>) vector0);
      node0.isLabel();
      Node node1 = Node.newString("mmsn`>3SLP{", 31, 53);
      Node node2 = new Node(93, node1);
      node2.toStringTree();
      node0.getSideEffectFlags();
      node0.isVoid();
      Node node3 = Node.newString((-340), "");
      node1.setWasEmptyNode(false);
      Node node4 = new Node(42, node3, 16, 734);
      int int0 = Node.REFLECTED_OBJECT;
      node1.isTry();
      node0.useSourceInfoIfMissingFrom(node4);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(101);
      node0.getLength();
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(12, node0);
      node0.isFor();
      node0.isOnlyModifiesArgumentsCall();
      node0.detachFromParent();
      Node node2 = new Node(52, node1, 0, 0);
      node2.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2360), (-2360));
      Node node1 = new Node((-2360), node0, 54, 1851);
      node1.isStringKey();
      node1.mayMutateGlobalStateOrThrow();
      node0.isExprResult();
      Node node2 = new Node(39, node1, 1, 55);
      node1.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.getString();
      node3.addChildrenAfter(node0, node2);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getLength();
      Stack<Node> stack0 = new Stack<Node>();
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isHook();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = new Node(51, node0, node0, node0);
      node0.setVarArgs(false);
      node0.isCatch();
      node1.getSideEffectFlags();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString((-3530), "Zz]veX:7Rpn");
      node0.putIntProp((-3530), 312);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      node1.isInstanceOf();
      node1.checkTreeEquals(node0);
      node0.getType();
      Node.extractLineno(1);
      node0.setQuotedString();
      node0.replaceChild(node1, node1);
      node0.srcref(node1);
      int int0 = (-637);
      int int1 = (-1357);
      Node.mergeLineCharNo(int0, int1);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.getLength();
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(12, node0);
      node0.isFor();
      node0.isAnd();
      node0.detachFromParent();
      Node node2 = new Node(52, node1, 0, 0);
      node2.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.checkTreeEqualsImpl(node1);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node[] nodeArray0 = new Node[0];
      node0.isEquivalentToTyped(node0);
      node0.isCall();
      node0.isStringKey();
      node0.setOptionalArg(false);
      node0.isAnd();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<(3/+v{Xre,7[;");
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(101);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(30, node0, node0, node0, 48, 31);
      node0.setSourceEncodedPosition(37);
      Node node2 = Node.newNumber(1.0);
      node1.isContinue();
      node1.isNE();
      node1.isUnscopedQualifiedName();
      node1.getSideEffectFlags();
      node1.getChildBefore(node2);
  }
}
