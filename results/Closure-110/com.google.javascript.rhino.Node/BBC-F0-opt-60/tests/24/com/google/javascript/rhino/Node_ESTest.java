/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 19:48:06 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoObjectType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import com.google.javascript.rhino.jstype.UnknownType;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.copyInformationFrom(node1);
      node0.setLineno(112);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(16, node0);
      node1.getStaticSourceFile();
      node1.setOptionalArg(false);
      node0.toString(false, true, true);
      node0.getSideEffectFlags();
      node1.isNE();
      Node node2 = node1.removeChildren();
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(42);
      node0.putIntProp(46, 42);
      node0.toString();
      node0.isIn();
      Node node1 = null;
      try {
        node1 = new Node(2, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString(987, "b;G!nGuHq%r6JHs@fj[");
      Node node1 = new Node(32, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber(2730.5626858188516);
      Node node1 = new Node(52, node0);
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(122, node0, node0);
      Node.newString(47, "kYSW+2ihw>,WD");
      node1.isUnscopedQualifiedName();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(37, node0, node0, node0, node0, 15, 2);
      Node node2 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newNumber(2730.5626858188516);
      Node node1 = new Node(15);
      Node node2 = new Node(48);
      Node node3 = new Node(98, node1, node0);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 117, 117);
      node0.putIntProp(42, 117);
      node0.setLength(117);
      node0.toString();
      node0.isIn();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString(2354, "c}y|(\"kp)kk-q", 2354, 866);
      node0.type = 43;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte) (-97);
      node0.setIsSyntheticBlock(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)61;
      byteArray0[5] = (byte) (-105);
      byteArray0[6] = (byte)33;
      node0.toString();
      node0.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isEquivalentTo(node1);
      node0.cloneNode();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        node0.replaceChild((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node((-419), node0);
      Node node2 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(40);
      node0.cloneTree();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(692, nodeArray0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(112);
      node0.mayMutateArguments();
      node0.isCase();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("{|/KE9kqfq}", 2674, 2674);
      node0.isComma();
      Node node1 = Node.newString("5xo'1]xl^");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.removeProp(118);
      Node node2 = new Node(52, node0, node1, node1, node1, 49, 38);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Node node3 = Node.newString(56, "5xo'1]xl^");
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isSyntheticBlock();
      Node node4 = node2.useSourceInfoFromForTree(node0);
      node2.copyInformationFrom(node1);
      node0.getJsDocBuilderForNode();
      Node node5 = new Node(51, node4, node4, node3, 37, 37);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(2005);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("eflctedject");
      Node node1 = new Node(4);
      Node node2 = Node.newString("eflctedject");
      Node node3 = new Node(30, node0, node1, node0, node2, 54, 122);
      node3.cloneTree();
      node0.isInc();
      node1.isFunction();
      node3.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(100);
      Node node1 = new Node(29, node0, node0, 1, 48);
      Node node2 = new Node(100, node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node3.isHook();
      node1.isScript();
      node3.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(147, node0);
      Node node2 = node1.cloneTree();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(103, node0, node0);
      node1.getBooleanProp(30);
      Node node2 = node1.cloneTree();
      node2.isDec();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(84, node0, node0, (-1351), 54);
      Node node2 = new Node(4095, node1);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.isHook();
      node1.isScript();
      Node.newString(" [");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = node0.cloneTree();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      node0.getIntProp(1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newNumber((double) 38);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(38, node0, node0, node0, 48, 124);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newNumber(786.0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node(414, node0, node0, node0, node1, 56, 0);
      node2.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(148);
      node0.getAncestor(148);
      Node node1 = node0.cloneTree();
      node1.isFalse();
      node0.isCatch();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = null;
      nodeArray0[2] = node1;
      Node node2 = new Node(2, 382, 55);
      nodeArray0[3] = node2;
      Node node3 = null;
      try {
        node3 = new Node(83, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(21, (-269), 21);
      node0.getProp(21);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      String string0 = "ju582*khpku%";
      Node.newString(46, "ju582*khpku%");
      node0.useSourceInfoIfMissingFrom(node0);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ADD is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 117, 117);
      node0.putIntProp(42, 117);
      node0.setLength(117);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      Node node1 = new Node(33, node0, node0, node0, 1, 42);
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString("~59? &r`");
      Node node1 = new Node(4, node0, 4095, 38);
      node1.clonePropsFrom(node0);
      Stack<Node> stack0 = new Stack<Node>();
      try { 
        node1.setDouble(51);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN 4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.cloneTree();
      Node node1 = Node.newString(46, "*0AE?1:]=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[1] = node1;
      nodeArray0[1] = node0;
      Node node2 = Node.newString("*0AE?1:]=");
      nodeArray0[2] = node2;
      Node node3 = new Node((-1196), node2, node2);
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node(2053, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(101, 101, 95);
      Node node1 = new Node(37);
      node1.isDefaultCase();
      node1.getJSDocInfo();
      node0.isDefaultCase();
      node1.isVar();
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString("h,l\u0003S");
      node2.addChildToBack(node3);
      node0.getLastSibling();
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.extractLineno(32);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 117, 117);
      node0.toString();
      node0.putIntProp(42, 117);
      node0.setLength(117);
      node0.toString();
      node0.isIn();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.detachChildren();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isWhile();
      node0.srcrefTree(node1);
      Node.newString(117, "StringNode: str is null");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isIf();
      node0.isCase();
      Node node1 = Node.newString(29, "QpAhU0W", (-260), (-893));
      Node node2 = new Node(57, node0, node0, node1, 1, 118);
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isNew();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(56);
      node2.cloneTree();
      Node node3 = new Node(47, 43, 51);
      node3.isNumber();
      node2.isDec();
      node1.isLabel();
      Node node4 = new Node(1, node3, node1);
      node4.srcref(node3);
      node4.checkTreeEqualsImpl(node3);
      node2.setLineno(83);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(109);
      Node node1 = new Node(39, 57, 37);
      node0.isIf();
      node0.isCase();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString(41, "4CtCw");
      Node node1 = new Node(35, node0, node0, node0, (-4762), 16);
      node1.isNoSideEffectsCall();
      node1.isOnlyModifiesArgumentsCall();
      node1.removeChild(node0);
      node0.isInc();
      Node node2 = node0.copyInformationFrom(node1);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("4CtCw");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        node2.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), (-547), (-547));
      node0.putIntProp(48, 29);
      node0.setLength(46);
      node0.putIntProp(108, 114);
      node0.setLength((-547));
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 108
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(124);
      node0.putBooleanProp(124, true);
      node0.getBooleanProp(124);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node((-2611));
      Node node1 = new Node(44);
      node1.getInputId();
      node1.isIn();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node((-962), (-962), (-962));
      Node node1 = new Node(116, 38, (-908));
      node1.isLabel();
      node0.putIntProp(91, 50);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isBreak();
      node2.copyInformationFromForTree(node0);
      try { 
        node1.setString("Bad type annotation. Unknown type ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BREAK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("Ddnd6(uStp0OpJZV");
      node0.isReturn();
      Node node1 = Node.newString(38, "");
      node1.isQualifiedName();
      int int0 = Node.INPUT_ID;
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(84, 84, 84);
      Node node1 = new Node(118, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.isVar();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(77);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 77
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 117, 117);
      node0.toString();
      node0.putIntProp(42, 117);
      node0.setLength(117);
      node0.toString();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(120, node0, node0, node0, 57, 4095);
      Node node2 = new Node(38, node1, node1);
      node2.cloneTree();
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString(" BK");
      Node node1 = new Node(43);
      Node node2 = new Node(46, node1, node0, node1, node0);
      node1.isFromExterns();
      Node node3 = Node.newNumber(129.0);
      node2.replaceChild(node1, node3);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(3100);
      Node node1 = Node.newNumber((double) 37);
      Node node2 = new Node(152, node1, node1);
      Node node3 = node2.cloneTree();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3100
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(126, node0, node0, 56, 925);
      node0.copyInformationFromForTree(node1);
      node1.getIntProp(37);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = Node.newString("~99? &r`");
      Node node2 = new Node(53, node0, node1);
      Stack<Node> stack0 = new Stack<Node>();
      node2.addChildrenAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 105, 105);
      node0.putIntProp(57, 105);
      node0.setLength(36);
      node0.toString();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node.newString("~99? &r`");
      Node node1 = new Node(0, node0, node0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(2);
      node1.getAncestor(57);
      node0.isVar();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isReturn();
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(39);
      node0.copyInformationFrom(node1);
      node0.isIf();
      node1.isAnd();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isQuotedString();
      Node node1 = Node.newString(54, "r");
      node1.isVoid();
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneTree();
      node1.setLength(38);
      Node node2 = new Node(120, node0, node0, node0, 57, 4095);
      node2.isEquivalentTo(node2, true, true, true);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      node0.isIf();
      node0.isQualifiedName();
      Node node1 = new Node(47);
      node1.getLength();
      node0.addChildToFront(node1);
      node0.getSourceOffset();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = new Node(4095, node0);
      Node node2 = node0.cloneTree();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber((-982.62278128));
      node0.putIntProp(31, 32);
      node0.setLength(31);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newNumber((double) 33);
      Node node1 = Node.newString(33, "C?9", 10, 57);
      node0.hasChild(node1);
      Node node2 = Node.newString(126, "quoted");
      node0.isQualifiedName();
      node2.isWith();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString("h,l\u0003S");
      node0.isVarArgs();
      Node node1 = new Node(38, node0, node0, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isTrue();
      // Undeclared exception!
      try { 
        node1.setString("b;G!nGuHq%r6JHs@fj[");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setCharno(124);
      node0.setOptionalArg(true);
      node0.setLineno(124);
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(115);
      node0.putIntProp(43, 37);
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node node2 = new Node(54, node1, node1, node1);
      node2.isQualifiedName();
      Node node3 = node1.copyInformationFromForTree(node2);
      Node node4 = new Node(57, 36, 31);
      node1.isLocalResultCall();
      node1.isDec();
      node3.getProp(39);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(93);
      Node node1 = new Node(46, node0, 154, 154);
      node1.isLabelName();
      Node node2 = Node.newString("4*9)8HAfV|i.i?GQaO]", 0, 16384);
      node0.useSourceInfoIfMissingFrom(node2);
      node2.getIntProp(52);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(57, node0, 3080, 40);
      Node node2 = new Node(31, 1642, 16);
      node1.putIntProp(105, 43);
      node2.isEquivalentTo(node0);
      node2.clonePropsFrom(node1);
      node0.isReturn();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 105
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber(2430.4767026277295);
      node0.putIntProp(54, 351);
      node0.isArrayLit();
      Node node1 = new Node((-1494), node0, 4096, 29);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1494
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(117);
      node0.isTrue();
      node0.putProp(117, "\\PoQ");
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(117);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = new Node(4095, node0);
      Node node2 = node0.cloneTree();
      node1.addChildBefore(node2, node0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isNew();
      node0.isVar();
      node0.isSwitch();
      node0.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-72));
      Node node1 = new Node(29, node0, node0, 1, 48);
      Node node2 = new Node(100, node1);
      Node node3 = node2.removeFirstChild();
      node3.copyInformationFromForTree(node2);
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node3);
      node4.isHook();
      node4.getQualifiedName();
      Node node5 = node4.copyInformationFromForTree(node1);
      node1.addChildToBack(node5);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isUnscopedQualifiedName();
      node1.copyInformationFrom(node0);
      node1.addChildToFront(node0);
      node1.isLabelName();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(84, 84, 84);
      Node node1 = new Node(118, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(51, node1, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(103, node0, node0);
      Node node2 = node1.cloneTree();
      node2.checkTreeEquals(node1);
      node0.getQualifiedName();
      node2.removeFirstChild();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(23);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getIntProp(1);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node1 = Node.newString(37, "", 42, 33);
      node1.isVarArgs();
      node1.isQualifiedName();
      node1.isDo();
      node1.getInputId();
      node1.isThis();
      node0.getBooleanProp(12);
      Node.newString((-2682), "", 38, 1603);
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.setChangeTime(54);
      Node node1 = new Node(32, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isQualifiedName();
      node0.isWith();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString(",Q|lP`J5?+Cp$|D3");
      Node node1 = new Node(38, node0, node0, node0, node0);
      node0.hasChild(node1);
      Node.newString((-2998), "6M46!|?P#@wI<_D");
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = new Node(31, node2, 57, 31);
      node1.setOptionalArg(false);
      node1.detachFromParent();
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node4.isTypeOf();
      node1.isArrayLit();
      node1.putIntProp(55, 32);
      node4.isNE();
      node1.checkTreeEquals(node4);
      node0.isLocalResultCall();
      node3.isDelProp();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      int int0 = (-829);
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString(271, "Object#Key", (-829), 46);
      Node node1 = new Node(3469, node0, node0);
      Node node2 = new Node(49, (-2607), 8);
      Node node3 = new Node((-5163), node1, node1, node2);
      nodeArray0[0] = node3;
      Node node4 = Node.newString(118, "Object#Key", 38, 53);
      nodeArray0[1] = node4;
      node2.cloneNode();
      Node node5 = new Node(57, node4, node3, 118, 2);
      nodeArray0[2] = node5;
      Node node6 = null;
      try {
        node6 = new Node(38, node1, node2, 1, 17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isGetterDef();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node0.toString(false, false, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node1.getProp((-664));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.CanCastToVisitor");
      node0.isDefaultCase();
      node0.setSourceFileForTesting("com.google.javascript.rhino.jstype.CanCastToVisitor");
      node0.getSourceOffset();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.CanCastToVisitor");
      node1.toString();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(115);
      node0.putIntProp(43, 37);
      Node node1 = new Node(42);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isQualifiedName();
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.useSourceInfoIfMissingFrom(node0);
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("*caxu9@Wwy");
      node0.children();
      node0.isDefaultCase();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(3784, nodeArray0);
      node1.setSourceFileForTesting("*caxu9@Wwy");
      node1.isWith();
      // Undeclared exception!
      try { 
        node1.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-72));
      Node node1 = new Node(29, node0, node0, 1, 48);
      Node node2 = new Node(115, node1);
      Node node3 = node2.removeFirstChild();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node3);
      node4.isHook();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isUnscopedQualifiedName();
      node1.addChildToFront(node0);
      node1.isLabelName();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = new Node(0, node0, node0);
      Stack<Node> stack0 = new Stack<Node>();
      node1.addChildrenAfter(node1, node0);
      node1.isBlock();
      node1.isFor();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(84, 84, 84);
      Node node1 = new Node(118, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node_NodeMismatch0);
      node0.isComma();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(1317);
      Node node1 = new Node(42, node0);
      Node node2 = node1.cloneTree();
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(115, 115, (-492));
      node0.isLabel();
      node0.putIntProp((-492), 155);
      Node node1 = new Node(39, 147, 12);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isQualifiedName();
      node1.copyInformationFromForTree(node2);
      // Undeclared exception!
      try { 
        node1.setString(">A61L");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(129);
      node0.setSourceFileForTesting("s1 HafG-6B(.D~j");
      node0.isWith();
      node0.isThrow();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s1 HafG-6B(.D~j");
      node0.getSourceOffset();
      Node node1 = new Node((-3345), node0, node0, node0, node0, (-3345), 38);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.toString();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(43, nodeArray0);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      node3.children();
      Node.extractCharno(29);
      node1.children();
      node1.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node3.isCast();
      node1.isName();
      node2.getChildBefore(node1);
      Set<String> set0 = jSDocInfo0.getModifies();
      node3.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node((-2611), (-2611), (-2611));
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(113, node0);
      Node node3 = node2.cloneTree();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2611
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      Node node1 = new Node(105, node0);
      node1.cloneTree();
      node1.isSyntheticBlock();
      node0.checkTreeEquals(node1);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^_p<^iUP");
      Node node0 = new Node(155, 155, 155);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.useSourceInfoFrom(node1);
      Node node2 = node0.copyInformationFromForTree(node0);
      node0.isUnscopedQualifiedName();
      node2.addChildToFront(node0);
      node0.isLabelName();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(35, 35, 35);
      Node node1 = new Node(35, node0, node0, node0, 2484, 15);
      Node node2 = node1.copyInformationFrom(node0);
      node2.checkTreeEquals(node0);
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node((-1694));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(148, 263, (-308));
      node0.isLabel();
      node1.putIntProp(9, 6);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node4 = new Node((-2961), node3, node2);
      node4.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.setString("no next sibling.");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 9
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      Node node1 = new Node(105, node0);
      node1.isSyntheticBlock();
      node0.checkTreeEquals(node1);
      node1.putProp(50, node0);
      try { 
        node1.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> [free_call: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-179));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedList0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) objectType0, (List<JSType>) immutableList0);
      node0.setJSType(functionType0);
      Node node1 = new Node(116, node0, node0, 8, 39);
      Node node2 = new Node(31, node1);
      Node node3 = node2.removeFirstChild();
      node2.useSourceInfoIfMissingFromForTree(node3);
      Node node4 = Node.newString("PUuX^~-1", 36, 54);
      node4.isHook();
      node0.isDelProp();
      node3.addSuppression("PUuX^~-1");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.hasMoreThanOneChild();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getIntProp((-1412));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = new Node(52);
      node1.getInputId();
      Node node2 = Node.newNumber((double) 48);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = new Node((-74), node1, node2, node1, 16, 155);
      node3.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(148, node0, node0, 31, 4);
      node0.srcref(node1);
      node0.isBreak();
      Node node2 = Node.newNumber((double) 16);
      Node node3 = node0.getParent();
      node3.getLength();
      // Undeclared exception!
      try { 
        node2.replaceChild(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = new Node(77, node0);
      node0.siblings();
      Node.newNumber((double) 55);
      node1.isAnd();
      node1.setOptionalArg(false);
      Node node2 = node1.cloneNode();
      node2.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(112, 112, 112);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(48, nodeArray0, (-1871), 29);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getIntProp(16);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(49, node0, node0, node0);
      node0.clonePropsFrom(node1);
      Node node2 = null;
      try {
        node2 = new Node(16, node0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(125, 125, 125);
      node0.isBlock();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(55, node0);
      Node node2 = new Node(158, node1, node1);
      Node node3 = Node.newString(33, "]9");
      node0.isGetElem();
      // Undeclared exception!
      try { 
        node3.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(84);
      Node node1 = new Node(63, node0, node0, node0, 1436, 63);
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = null;
      try {
        node3 = new Node((-2506), node0, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber((double) 36);
      node0.putIntProp(51, 36);
      node0.isArrayLit();
      node0.addSuppression("'40&Mu");
      Node.newString(39, "'40&Mu", 40, 30);
      node0.isArrayLit();
      node0.getChildCount();
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.getChangeTime();
      node1.isAssign();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node.newString("~99? &r`");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node(54);
      Node node1 = new Node(33, node0, node0, 2, 8);
      Node node2 = new Node(2707, node1);
      Node node3 = node1.removeFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node0.isHook();
      node3.isDelProp();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      node0.setChangeTime(122);
      Node node1 = new Node(105, node0);
      node1.isSyntheticBlock();
      Node node2 = node1.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(103);
      Node node1 = new Node(4095, node0);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(2352, node2);
      node3.removeFirstChild();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isHook();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = new Node(50);
      Node node2 = new Node(1437, node0, node0, 32, 43);
      Node node3 = new Node(4, node1);
      node2.removeFirstChild();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isHook();
      node4.isFor();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newNumber((double) 36);
      node0.putIntProp(51, 36);
      node0.isArrayLit();
      Node node1 = new Node(12, 148, 51);
      // Undeclared exception!
      try { 
        node1.copyInformationFrom(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(109);
      node0.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isVar();
      node0.isSwitch();
      node0.isOr();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      node0.setChangeTime(122);
      Node node1 = new Node(105, node0);
      node1.isSyntheticBlock();
      node0.detachFromParent();
      node0.checkTreeEquals(node1);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(117);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(1836);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(103);
      Node node1 = new Node(4095, node0);
      Node node2 = node0.cloneTree();
      node2.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(126);
      Node node1 = new Node(31, node0, 42, 37);
      Node node2 = new Node(37, node1);
      Node node3 = node2.removeFirstChild();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isHook();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(84, 84, 84);
      Node node1 = new Node(118, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.isWith();
      node1.isUnscopedQualifiedName();
      node1.isWhile();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(77, node0);
      node0.siblings();
      node1.isAnd();
      node1.getSourceOffset();
      Node node2 = node1.cloneNode();
      node2.isTry();
      try { 
        node2.setString("l4eMZ8~#l+xqaY\"Dud");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TRY is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node((-962), (-962), (-962));
      Node node1 = new Node(116, 38, (-908));
      node0.isLabel();
      node0.putIntProp(91, 50);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isQualifiedName();
      node2.copyInformationFromForTree(node0);
      try { 
        node1.setString("Bad type annotation. Unknown type ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BREAK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newNumber((double) (-547), (-547), (-547));
      Node node1 = new Node(49);
      Node node2 = new Node(308, node1);
      node1.isThrow();
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isAnd();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.cloneNode();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-55), (-55), (-55));
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.setWasEmptyNode(false);
      node1.useSourceInfoFromForTree(node0);
      node0.hasOneChild();
      node1.replaceChild(node0, node1);
      node0.addSuppression("Y}1ir");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber(2730.5626858188516);
      node0.putIntProp(53, 46);
      node0.isArrayLit();
      Node node1 = new Node(42, 88, 31);
      node1.checkTreeEquals(node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      node0.setChangeTime(122);
      Node node1 = new Node(105, node0);
      node1.isSyntheticBlock();
      node0.checkTreeEquals(node1);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(47, node0, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.getBooleanProp(32);
      Node node2 = node1.cloneTree();
      node2.isEquivalentToShallow(node0);
      node2.isInc();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(64);
      node0.isObjectLit();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node((-1099));
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.cloneTree();
      try { 
        node1.setDouble(39);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node((-1519), node0, 37, (-162));
      node0.copyInformationFrom(node1);
      node0.putProp(43, (Object) null);
      node0.setLineno(152);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-72));
      Node node1 = new Node((-72), node0, 37, 39);
      Node node2 = new Node(100, node1);
      node2.removeFirstChild();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(77, node0);
      node0.siblings();
      node1.isAnd();
      node1.getSourceOffset();
      node0.isNumber();
      node1.isIn();
      node1.getProp(118);
      node1.getParent();
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(77, node0);
      node0.siblings();
      node1.isAnd();
      node1.getSourceOffset();
      node1.isAnd();
      Node node2 = node1.srcref(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(100);
      Node node1 = new Node(100, node0, 37, 39);
      Node node2 = new Node(100, node1);
      Node node3 = node2.removeFirstChild();
      node2.useSourceInfoIfMissingFromForTree(node3);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = Node.newNumber((double) 51);
      Node node2 = node0.srcrefTree(node1);
      node2.isAssign();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(103);
      Node node1 = new Node((-2333));
      node1.setType(16);
      node0.isVarArgs();
      Node node2 = node0.getLastSibling();
      node2.useSourceInfoFromForTree(node0);
      node2.isVar();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(103, node0, node0);
      node0.getStaticSourceFile();
      node1.srcrefTree(node0);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.getBooleanProp(30);
      node1.checkTreeEquals(node0);
      Node node2 = null;
      try {
        node2 = new Node(38, node0, node0, node0, node0, 50, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isLabel();
      node1.srcref(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        ImmutableList.copyOf((Iterable<? extends JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(233474, "XCiB2_jWy~$=)d6IB:", 133, 152);
      node0.mayMutateArguments();
      Node node1 = Node.newString(4, "XCiB2_jWy~$=)d6IB:");
      node0.isWhile();
      node1.isDefaultCase();
      node0.setSourceFileForTesting("r");
      node0.isWith();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node((-3054), 31, (-3054));
      Node node1 = new Node(47, node0, node0, node0, 2493, 2493);
      node1.copyInformationFrom(node0);
      node1.isNull();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(38);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3054
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.setChangeTime(54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = new Node(54);
      Node node2 = new Node((-496), node0, (-3300), 52);
      Node node3 = new Node(1138, node2);
      node0.removeFirstChild();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      node0.isHook();
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node4.getLastChild();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = new Node(0, node0, node0);
      node0.isCase();
      node1.srcrefTree(node0);
      Node node2 = Node.newString(48, "~99? &r`", 32, 4);
      node2.isAssign();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EXPR_RESULT");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-72));
      Node node1 = new Node((-72), node0, 37, 39);
      Node node2 = new Node(100, node1);
      Node node3 = new Node(30, node2, 4, 12);
      node0.isEmpty();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(149, 149, 149);
      node0.isDefaultCase();
      Node node1 = Node.newString(51, "%s (%s) must be less than size (%s)");
      node1.isFor();
      Node node2 = new Node(233472, node0, node1, node1, 57, (-1619));
      node2.setType(49);
      node2.isVarArgs();
      node2.getLastSibling();
      node1.isVar();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.mayMutateArguments();
      Node node1 = Node.newString(38, "r");
      node0.isWhile();
      node0.isDefaultCase();
      node0.setSourceFileForTesting((String) null);
      node1.isWith();
      node1.isUnscopedQualifiedName();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isDebugger();
      Node node1 = new Node(54, 37, 8232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isComma();
      node1.isIn();
      Node node2 = node0.clonePropsFrom(node1);
      node2.getProp(52);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(103);
      Node node1 = new Node(4095, node0);
      Node node2 = node0.cloneTree();
      node0.checkTreeEquals(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.isAdd();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = null;
      try {
        node3 = new Node(1, node0, node1, 102, 2165);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isDebugger();
      Node node1 = new Node(54, (-311), 8232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.isIn();
      Node node2 = node0.clonePropsFrom(node1);
      node2.isNE();
      node2.isInc();
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(153);
      Node node1 = new Node(37, node0, 15, 37);
      Node node2 = new Node((-2158), node1);
      Node node3 = node2.removeFirstChild();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      node1.isHook();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node4.getLastChild();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2158
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isDebugger();
      Node node1 = new Node(275, 16, 8232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      int int0 = Node.DECR_FLAG;
      node1.isComma();
      node1.isIn();
      node1.clonePropsFrom(node0);
      node0.getProp(0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber(2730.5626858188516);
      node0.putIntProp(53, 46);
      node0.isArrayLit();
      Node node1 = new Node(42, 85, 31);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.getType("EXPR_RESULT");
      jSTypeArray0[0] = null;
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry1.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[1] = (JSType) objectType0;
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) objectType0, "EXPR_RESULT", "Bp8u ~", 44, 114);
      jSTypeArray0[2] = jSType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(44, node0);
      node1.isOnlyModifiesThisCall();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(1526);
      node0.isFor();
      node0.setType(111);
      node0.isVarArgs();
      Node node1 = node0.getLastSibling();
      node1.mayMutateArguments();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(149);
      Node node1 = new Node(46, node0, node0, node0);
      Node node2 = new Node((-1362));
      Node node3 = new Node(1189, node2, 32, 37);
      node3.isEquivalentTo(node2, false, true, true);
      Node node4 = new Node(40, node3);
      node1.removeFirstChild();
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node1);
      node5.isHook();
      node1.checkTreeTypeAwareEqualsImpl(node4);
      Node node6 = Node.newString("~[G>Y*Mj?-b>i");
      node6.getAncestors();
      node6.getLastChild();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString((-696), "reflected_object");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(154, node0, node1, 0, 12);
      Node node3 = new Node(154, node2);
      node3.getAncestor(47);
      Node node4 = node2.cloneTree();
      Node node5 = Node.newNumber((double) 4095, 949, 579);
      node5.isFalse();
      node1.isCatch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node5;
      nodeArray0[1] = node1;
      nodeArray0[2] = node5;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      nodeArray0[5] = node4;
      nodeArray0[6] = node1;
      Node node6 = new Node((-696), node5);
      nodeArray0[7] = node6;
      nodeArray0[8] = node2;
      Node node7 = Node.newString(51, "Object#Element");
      node4.isNumber();
      Node.newString(16, "fm=O5!");
      node7.isUnscopedQualifiedName();
      node5.isOr();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(84, 3078, 3078);
      Node node1 = new Node(118, node0);
      Node node2 = new Node(40, node1);
      node2.removeFirstChild();
      node1.isAssign();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(115);
      node0.cloneTree();
      Node node1 = Node.newString(46, "*0AE?1:]=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[1] = node1;
      nodeArray0[1] = node0;
      Node node2 = Node.newString("*0AE?1:]=");
      nodeArray0[2] = node2;
      Node node3 = new Node((-1196), node2, node2);
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node(2053, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-55));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-55), (-55), (-55));
      Node node1 = new Node(31, node0, node0, node0, node0);
      node0.isSwitch();
      node0.isBlock();
      Node node2 = Node.newString((-2), "F^a=4#\"{f\"}F7", (-5974), 53);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      Node node4 = Node.newString(38, "Ql$'@zpk", 2035, 12);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node0, node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = new Node(15, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("apply", true);
      Node node2 = Node.newString(",Q|lP`J5?+Cp$|D3");
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = Node.newString("b;G!nGuHq%r6JHs@fj[", (-1653), 1);
      Node.NodeMismatch node_NodeMismatch1 = node3.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(95);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 95
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isDebugger();
      Node node1 = new Node(48, 76, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      int int0 = Node.DECR_FLAG;
      node0.isComma();
      node0.isIn();
      node0.clonePropsFrom(node1);
      Node node2 = new Node(8232);
      node2.getProp(29);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType(objectType0, immutableList0);
      JSType jSType0 = modificationVisitor0.caseTemplatizedType(templatizedType0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = Node.newString(47, "Named type with empty name component");
      node0.checkTreeEquals(node1);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = new Node(15, node0, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("apply", true);
      simpleSourceFile0.getLineOffset(55);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.checkTreeEquals(node1);
      node0.isLocalResultCall();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isDebugger();
      Node node1 = new Node(42, 31, (-4229));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      int int0 = Node.DECR_FLAG;
      node0.isComma();
      node1.isIn();
      Node node2 = node1.clonePropsFrom(node0);
      node2.getProp(50);
      node0.isIf();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(53, node0, 8232, 46);
      node0.isEmpty();
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node1, node0, (-2846), 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(95, 95, 96);
      Node node1 = new Node(40);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(95, node0, node0, node0, 47, 16);
      node0.checkTreeEquals(node2);
      node2.isCase();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(111);
      node0.putIntProp(369, 369);
      Node node1 = Node.newNumber((-1675.7));
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isQualifiedName();
      node2.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.setString("\n\nTree2:\n");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 369
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(0, (-1), 8232);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      int int0 = Node.DECR_FLAG;
      Node node1 = new Node(1, node0, node0);
      node1.isComma();
      node0.isIn();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isInc();
      node2.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.mayMutateArguments();
      Node node1 = Node.newString(38, "cI");
      node1.isQualifiedName();
      node0.isDefaultCase();
      node1.isAdd();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node((-1099), (-1099), 71);
      Node node1 = new Node(41, node0, node0);
      node0.addChildrenToFront(node1);
      Node node2 = node0.getAncestor(0);
      // Undeclared exception!
      try { 
        node2.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-55));
      Node node1 = new Node(39, node0);
      node1.cloneTree();
      String string0 = "*0AE?1:]=";
      Node node2 = Node.newString(108, "*0AE?1:]=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newString("*0AE?1:]=");
      // Undeclared exception!
      try { 
        node3.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isNoSideEffectsCall();
      node0.type = 124;
      node0.isVarArgs();
      node0.isExprResult();
      Node node1 = new Node(52);
      node1.getLength();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString((-941), "~'<QalmF1&A'8i4#j%", (-941), 53);
      node0.isOnlyModifiesArgumentsCall();
      node0.removeFirstChild();
      node0.setQuotedString();
      node0.children();
      node0.isWhile();
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(55, node0);
      Node node2 = new Node(103, node1, node1);
      node2.getBooleanProp(30);
      node2.cloneTree();
      node2.isInc();
      node2.isFunction();
      Node.newString("KQPKP8N}3??sgfg/l@t");
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-55));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-55), (-55), (-55));
      Node node1 = new Node(31, node0, node0, node0, node0);
      node0.isSwitch();
      node1.getQualifiedName();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(43, 53, 108);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      int int0 = Node.DECR_FLAG;
      node0.isComma();
      node1.copyInformationFrom(node0);
      node0.isIn();
      Node node2 = new Node(2, 15, 56);
      node0.isInc();
      Node node3 = Node.newString("BREAK", 43, 42);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.mayMutateArguments();
      Node node1 = Node.newString(38, "cI");
      node0.isQualifiedName();
      node0.isDefaultCase();
      node1.isAdd();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(84, 3078, 3078);
      Node node1 = new Node(118, node0);
      node1.putIntProp(52, 1765);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      node0.copyInformationFromForTree(node1);
      try { 
        node1.setString("DEFAULT_CASE");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR 3078 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EXPR_RESULT");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(100, 77, (-69));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      int int0 = Node.DECR_FLAG;
      node0.hasChildren();
      Node node1 = Node.newString("vtw|zQ-N]dd[_");
      node1.isIn();
      node0.clonePropsFrom(node1);
      Node node2 = new Node(3195);
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(149);
      Node node1 = new Node(38, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.putIntProp(171, 584);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node2);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setSourceEncodedPosition(124);
      Node node1 = new Node(55, node0);
      node1.children();
      node0.isCase();
      Node node2 = node1.srcrefTree(node0);
      node1.setSourceEncodedPosition(2214);
      node2.mayMutateArguments();
      node0.isVoid();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(124);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node((-417), 2550, 49);
      node1.isLabel();
      node0.putIntProp(48, 57);
      node1.copyInformationFromForTree(node0);
      node1.isQualifiedName();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.getLength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v*wjz");
      // Undeclared exception!
      try { 
        node1.setString("=p7Ben");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -417
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(126, 4, 4);
      node0.getAncestor(126);
      Node node1 = node0.cloneTree();
      node1.isFalse();
      node0.isCatch();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node2 = new Node(2, 382, 55);
      nodeArray0[3] = node2;
      Node node3 = null;
      try {
        node3 = new Node(83, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      Node node1 = new Node(4095, node0);
      node0.cloneTree();
      Node node2 = Node.newString(1016, "*0AE?1:]=");
      node0.useSourceInfoIfMissingFrom(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.addChildBefore(node2, node0);
      node0.isLocalResultCall();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("eflctedject");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(38, node1, 51, 55);
      node2.isEquivalentTo(node1, true, false, true);
      Node node3 = new Node(8, node2);
      node3.removeFirstChild();
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node1);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isNoSideEffectsCall();
      node0.copyInformationFrom(node0);
      node0.getJSDocInfo();
      node0.isVar();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-2061), (-2061), (-2061));
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      Node node2 = new Node(49, 32, 1);
      node1.isSwitch();
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isDebugger();
      Node node1 = new Node(54, (-311), 8232);
      node1.getJSDocInfo();
      int int0 = Node.DECR_FLAG;
      node0.isComma();
      node1.isIn();
      node0.clonePropsFrom(node1);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-55));
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-55), (-55), (-55));
      Node node1 = new Node((-55), (-55), (-55));
      Node node2 = new Node(31, node0, node0, node1, node0);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = null;
      try {
        node4 = new Node(2048, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(32, node0, 55, 4095);
      node1.children();
      node0.isCase();
      node1.srcrefTree(node0);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      Node node2 = new Node(233474, 55, 57);
      node1.children();
      node1.putIntProp(35, 3078);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("The existing child node of the parent should not be null.", false);
      simpleSourceFile0.getLineOffset(42);
      node2.isWith();
      node2.isOr();
      Node node3 = node1.useSourceInfoFrom(node2);
      node3.siblings();
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(36);
      node0.removeProp(55);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(53, nodeArray0);
      node1.putBooleanProp(50, false);
      node1.isFromExterns();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber(2985.41509983603);
      Node node1 = new Node(115, node0, 49, 46);
      node0.getAncestor(57);
      node1.isEmpty();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(37, 37, 1305);
      node0.setSideEffectFlags(41);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node((-2166), node0, node0, node0);
      node1.setType(43);
      node0.isVarArgs();
      node0.getLastSibling();
      node0.mayMutateArguments();
      node1.isTypeOf();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(85, node0, node0, node0);
      node0.isUnscopedQualifiedName();
      node0.useSourceInfoFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.removeProp(39);
      Node node2 = new Node((-1336), 47, (-1459));
      node2.isSyntheticBlock();
      node0.isVarArgs();
      node1.isGetterDef();
      node2.detachChildren();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node((-1634));
      node0.getQualifiedName();
      node0.setChangeTime((-1634));
      node0.getChangeTime();
      node0.isAssignAdd();
      node0.getJSType();
      node0.addSuppression("Not declared as a constructor");
      node0.mayMutateArguments();
      node0.isArrayLit();
      node0.isTrue();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(3078);
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = Node.newString((-3985), "source_file", 85, 85);
      node2.srcrefTree(node1);
      node2.isVoid();
      node0.isDefaultCase();
      node1.getInputId();
      node1.isStringKey();
      node0.setCharno(1);
      node2.isSetterDef();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(119, node0, 55, 4095);
      node1.getBooleanProp(4);
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(40, 9, 2);
      Node node2 = new Node(193, node1, (-2057), 32);
      node0.children();
      node2.isCase();
      Node node3 = node1.srcrefTree(node2);
      node1.isAssign();
      node1.isScript();
      Node.newString(37, "*caxu9@Wwy");
      node3.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateArguments();
      Node node1 = Node.newString(4095, "!`,k,HU|k&h f@");
      Node node2 = Node.newNumber((double) 47);
      Node node3 = new Node(50, node2, node1, node1, 8, 38);
      node3.isQualifiedName();
      node3.wasEmptyNode();
      node0.isAdd();
      node1.getQualifiedName();
      node3.hasMoreThanOneChild();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("{|/KE9kqfq}");
      node0.mayMutateArguments();
      Node node1 = Node.newString(449, "{|/KE9kqfq}");
      node0.isQualifiedName();
      node0.wasEmptyNode();
      node1.isAdd();
      Node node2 = new Node(49, node1, node1);
      node2.useSourceInfoIfMissingFrom(node0);
      node2.getQualifiedName();
      Node.mergeLineCharNo(905, 1400);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node((-1099), (-1099), 71);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.cloneTree();
      node0.isFalse();
      node1.isCatch();
      Node[] nodeArray0 = new Node[1];
      int int0 = 2571;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node2 = null;
      try {
        node2 = new Node(2, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(117, (-1846), 117);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("Q", 4, 36);
      node0.hasChildren();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isSetterDef();
      node0.getChildAtIndex(0);
      node0.setSourceFileForTesting("Q");
      node2.getString();
      node2.getChildCount();
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(55, node0);
      Node node2 = new Node(103, node1, node1);
      node2.getBooleanProp(30);
      node2.cloneTree();
      Node.newString("{|/K9kqf}");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-1534.7063542));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node(40, node0, node0, node1, node0, 40, (-166));
      Node node3 = new Node(818, node2);
      node3.removeProp(56);
      node1.isContinue();
      node_SideEffectFlags0.setAllFlags();
      node0.isEquivalentTo(node1, true, true, true);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newString("M<may:(a$~s~q ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SETTER_DEF");
      Node node1 = new Node(111, node0, node0, node0, 126, 50);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
      try { 
        node2.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.setWasEmptyNode(true);
      node0.setVarArgs(true);
      node0.wasEmptyNode();
      node0.isAdd();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(95, 95, 96);
      Node node1 = new Node(40);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(95, node0, node0, node0, 47, 16);
      node0.removeProp(2);
      node0.checkTreeEquals(node2);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node2 = node0.cloneNode();
      node2.isLocalResultCall();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node4 = node1.copyInformationFrom(node0);
      node4.mayMutateGlobalStateOrThrow();
      node3.getInputId();
      node4.isInstanceOf();
      Node node5 = new Node(56, node4, node3, 2669, 1585);
      node5.isGetElem();
      node1.isInc();
      node5.getInputId();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      LinkedList<JSType> linkedList1 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList1);
      Node node1 = new Node(4, node0, 42, 1918);
      node1.isEquivalentTo(node0, true, false, false);
      Node node2 = new Node(24, node1);
      Node node3 = node2.removeFirstChild();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      Node node1 = new Node(51, node0, 49, 2773);
      node0.children();
      node0.isCase();
      Node node2 = node1.srcrefTree(node0);
      node1.isAssign();
      node2.isScript();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(84, 3078, 3078);
      Node node1 = new Node(118, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.isWith();
      node0.isUnscopedQualifiedName();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(36);
      node0.removeProp(36);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isArrayLit();
      Node node1 = Node.newString(36, "x;1.;]b", 12, 57);
      node1.getInputId();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(126, node1);
      node2.getProp(57);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(49, node0, 55, 4095);
      node1.children();
      node0.isCase();
      Node node2 = node1.srcrefTree(node0);
      node1.isAssign();
      node1.isScript();
      node1.isFor();
      node2.isUnscopedQualifiedName();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(149, 149, 149);
      Node node1 = new Node(46, node0, node0, node0);
      node1.isUnscopedQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.removeProp(53);
      node0.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isVarArgs();
      node0.isGetterDef();
      Node node2 = node1.getLastSibling();
      node1.isTrue();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      node1.children();
      node0.isCase();
      Node node2 = node1.srcrefTree(node0);
      node1.isAssign();
      node1.isScript();
      node1.isFor();
      node2.isUnscopedQualifiedName();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(0, node0, 133, 48);
      node0.isEquivalentTo(node1, false, true, true);
      Node node2 = new Node(49, node1);
      Node node3 = node2.removeFirstChild();
      node3.useSourceInfoIfMissingFromForTree(node0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      Node node1 = new Node(42, 64, 29);
      node1.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isDefaultCase();
      node0.isVar();
      node1.cloneNode();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node4.isTypeOf();
      node1.isArrayLit();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("l4eMZ8~#l+xqaY\"Dud", false);
      simpleSourceFile0.getLineOffset(15);
      Node node5 = new Node(4095, node3, node3);
      node5.isQuotedString();
      node3.isReturn();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-2061), (-2061), (-2061));
      node0.setLineno(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      Node node2 = new Node(4073, node1, node0, node1, 1353, 1);
      node2.useSourceInfoFromForTree(node0);
      node1.isSwitch();
      node1.isSetterDef();
      node0.getLastSibling();
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(84, 3078, 3078);
      Node node1 = new Node(118, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.getLastSibling();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-55));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-55), (-55), (-55));
      Node node1 = new Node(31, node0, node0, node0, node0);
      node0.detachFromParent();
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString(124, "{|/K9kqf@}");
      Node node1 = new Node(124, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newNumber((double) 47, 29, (-1455));
      node0.isTypeOf();
      node1.isArrayLit();
      Node.newString(55, "}XzP`4n|CEJm|XT", 40, 12);
      node2.getInputId();
      node1.isEquivalentTo(node3, true, false, false);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(1479, node0, 52, 56);
      Node node2 = node1.getFirstChild();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("h,l\u0003S");
      Node node1 = new Node(8, 29, (-1638));
      node0.isLabel();
      Node node2 = new Node(29, node0, node1, node1, 1331, 34);
      node1.isSwitch();
      node2.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      Node node1 = new Node(43, node0, node0, node0, node0, 1, 31);
      Node node2 = new Node(50);
      node2.isLocalResultCall();
      node1.getJSDocInfo();
      node0.isDefaultCase();
      node2.isVar();
      node1.cloneNode();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = new Node(15, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      simpleSourceFile0.getLineOffset(51);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isQuotedString();
      node0.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node4 = new Node(32, 31, 16);
      Node node5 = node4.getLastSibling();
      node5.useSourceInfoFromForTree(node4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      List<JSType> list0 = null;
      // Undeclared exception!
      try { 
        node5.replaceChildAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), 4, (-547));
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isEquivalentTo(node1, true, true, true);
      node0.isHook();
      Node.extractLineno((-2577));
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(112, "`Mf_<^_B:8dS*G", 112, 112);
      node0.removeProp(112);
      node0.isCase();
      Node node1 = Node.newString("`Mf_<^_B:8dS*G");
      Node node2 = new Node(37, node1);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      Node node1 = new Node(43, node0, node0, node0, node0, 1, 31);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.removeProp(4);
      node1.hasMoreThanOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isGetterDef();
      node1.cloneTree();
      Node.newString("{|/K9kqf}");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = new Node((-1157), node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        Node.newString(1, (String) null, (-1970), 129);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isFromExterns();
      node0.mayMutateGlobalStateOrThrow();
      node0.isFunction();
      Node node1 = Node.newString("zl)IeBZlo_e,)!k", 50, 4);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      jSType0.findPropertyType("Named type with empty name component");
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      jSType1.getLeastSupertype(jSTypeArray0[1]);
      jSTypeArray0[2] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      node1.isArrayLit();
      Node node2 = Node.newString(1, "LB", 1, 154);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.getInputId();
      node2.isEquivalentTo(node0, true, true, false);
      // Undeclared exception!
      try { 
        node0.removeChild(node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(94);
      Node node1 = new Node(4095, node0, node0, node0);
      node1.isAnd();
      node1.isLabelName();
      node0.isBlock();
      node0.getParent();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isDefaultCase();
      node0.isCast();
      node0.isWith();
      Node node1 = new Node(49, node0, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node0.isVarArgs();
      node0.isFalse();
      node0.isCatch();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      Node node3 = Node.newString(51, "h,l\u0003S");
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSType.toMaybeTemplatizedType(jSType0);
      jSTypeArray0[0] = (JSType) null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("com.google.javascript.rhino.jstype.JSType$TypePair", node2, jSType0);
      jSTypeArray0[1] = (JSType) enumType0;
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[6] = node4;
      Node node5 = null;
      try {
        node5 = new Node(16, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putIntProp(43, (-2638));
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isLocalResultCall();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString("|ez4RI`");
      node0.setChangeTime(645);
      node0.isVoid();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isVoid();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      Node node1 = Node.newString("4*9)8HAfV|i.i?GQaO]");
      node0.useSourceInfoFromForTree(node1);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChildren();
      Node node1 = new Node(31, node0, node0, 1, 4095);
      node0.isIn();
      Node node2 = new Node(13);
      node0.checkTreeEquals(node1);
      node2.isLocalResultCall();
      node1.getLastSibling();
      node1.isLabelName();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("|ez41RI`");
      node0.setChangeTime(645);
      node0.isNew();
      node0.getString();
      Node node1 = new Node(32, node0);
      node0.isSyntheticBlock();
      node0.getBooleanProp(1);
      node1.checkTreeEquals(node0);
      node0.isLocalResultCall();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = Node.newNumber((double) 39, 16, 32);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(113, node0, node0, node1, 1, (-214));
      node2.removeChild(node0);
      Node.mergeLineCharNo(46, 19);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isVoid();
      node0.isEquivalentToShallow(node0);
      node0.isWith();
      Node node1 = new Node(0, node0);
      Node node2 = node1.removeFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TYPE_ERROR_FUNCTION_TYPE");
      Node node2 = new Node(233474, 55, 57);
      node1.children();
      node1.putIntProp(35, 3078);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("The existing child node of the parent should not be null.", false);
      simpleSourceFile0.getLineOffset(42);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isQuotedString();
      node2.isReturn();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 35
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EXPR_RESULT");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node((-69), node0, 37, 39);
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = new Node(100, node1);
      Node node3 = node2.cloneNode();
      Node node4 = node2.removeFirstChild();
      Node node5 = node2.useSourceInfoIfMissingFromForTree(node4);
      node5.isHook();
      node5.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(30, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = new Node(100, node1);
      Node node3 = node2.removeFirstChild();
      node3.cloneNode();
      Node node4 = node1.copyInformationFrom(node3);
      node4.srcref(node1);
      node1.setSideEffectFlags(43);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      node3.isSyntheticBlock();
      Node node4 = new Node(8, 42, 37);
      node4.isCase();
      node1.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node5 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.useSourceInfoIfMissingFrom(node5);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-1099), 248, 71);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(1);
      node2.cloneTree();
      node1.isVarArgs();
      node1.isFalse();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isCatch();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(12, nodeArray0);
      node1.isNumber();
      Node node4 = Node.newString(38, "SETTER_DEF");
      node4.isUnscopedQualifiedName();
      node3.getSideEffectFlags();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("{|/KE9kqfq}", 2674, 2674);
      node0.isComma();
      Node node1 = Node.newString("5xo'1]xl^");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.removeProp(118);
      Node node2 = new Node(42, node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Node node3 = Node.newString(56, "5xo'1]xl^");
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isSyntheticBlock();
      node2.useSourceInfoFromForTree(node0);
      Node node4 = node2.copyInformationFrom(node1);
      node0.getJsDocBuilderForNode();
      node4.srcref(node3);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(2005);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-2061), (-2061), (-2061));
      node0.setLineno(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      Node node2 = new Node(29, node1, node0, node1, 1353, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isIf();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node((-2425));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node((-2797), 2, 1069);
      node2.isLabel();
      node1.putIntProp(176, 1585);
      Node node3 = node0.copyInformationFromForTree(node1);
      node2.isQualifiedName();
      Node node4 = new Node(37, node3, 1564, 52);
      node4.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.setString("4*9)8HAfV|i.i?GQaO]");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2797
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node0.cloneNode();
      node2.isLocalResultCall();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node4 = node1.copyInformationFrom(node0);
      node4.mayMutateGlobalStateOrThrow();
      node3.getInputId();
      node4.isInstanceOf();
      Node node5 = new Node(56, node4, node3, 2669, 1585);
      node5.isGetElem();
      node1.isInc();
      node5.getInputId();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(47, node0, 55, (-69));
      node0.getStaticSourceFile();
      node1.putIntProp(48, 153);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString((-416), "1;{*Z", 50, 48);
      Node node3 = Node.newString(3391, "i.", 117, 8);
      node2.setString("1;{*Z");
      node1.removeProp(48);
      node3.isUnscopedQualifiedName();
      node3.cloneTree();
      node0.isNumber();
      node3.isDelProp();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(30, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = new Node(100, node1);
      Node node3 = node2.removeFirstChild();
      node3.cloneNode();
      node1.isCase();
      node1.hasMoreThanOneChild();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString(110, "=qL,^@P\" e<E&:Zf! e");
      Node node1 = Node.newString((-2054), "n<EC<[@~$Nob'", 2656, 16);
      Node node2 = new Node((-4831), node0, node0, node1, node1);
      node2.srcrefTree(node0);
      node0.toString(true, false, true);
      node2.getLength();
      node2.putBooleanProp((-1059), false);
      node0.isTrue();
      node0.isNoSideEffectsCall();
      node1.isThrow();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4831
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474, 233474, 233474);
      node0.getAncestors();
      Node node1 = Node.newString("Ct_C0f'bn+J>", (-148), 1);
      Node node2 = new Node(52, node0, node1, node1);
      node0.isComma();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.removeProp((-2347));
      node0.isSyntheticBlock();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isGetterDef();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(94, 94, 94);
      Node node1 = new Node(94, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      Node node1 = new Node(4095, node0);
      Node node2 = Node.newString(1001, "*0AE?1:]=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.addChildBefore(node2, node0);
      node1.isVarArgs();
      Node node3 = new Node(12, node1, 1218, 52);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newString("^z3Y!", 3411, (-34));
      Node node3 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(98, "");
      node0.removeFirstChild();
      Node node1 = new Node(21, node0, node0, node0, node0, 116, 114);
      node0.siblings();
      node0.isNumber();
      node0.isDec();
      node0.isLabel();
      Node node2 = node0.srcref(node1);
      node0.checkTreeEqualsImpl(node2);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      NoObjectType noObjectType0 = (NoObjectType)modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = (JSType) noObjectType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      noObjectType0.findPropertyType("Named type with empty name component");
      UnionType unionType0 = (UnionType)jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      unionType0.getLeastSupertype(jSTypeArray0[1]);
      jSTypeArray0[2] = (JSType) unionType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      functionType0.extendTemplateTypeMapBasedOn(noObjectType0);
      node1.isIn();
      node1.isFalse();
      modificationVisitor0.caseUnknownType();
      Node node3 = new Node(112, 29, 57);
      node3.checkTreeEquals(node2);
      node1.getQualifiedName();
      node0.isLocalResultCall();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(">A61L", 36, 36);
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node0.setSourceEncodedPosition(43);
      node1.isLabel();
      node1.putIntProp(1672, (-2638));
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node(57);
      node0.setString("4*9)8HAfV|i.i?GQaO]");
      node1.isFor();
      node2.isSwitch();
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isVoid();
      node0.isEquivalentToShallow(node0);
      node0.isInstanceOf();
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(36, "~99? &r`", 36, 36);
      Node node1 = new Node(40, 1821, 1610612736);
      node1.isLabel();
      node0.putIntProp(29, 51);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isQualifiedName();
      Node node3 = node1.copyInformationFromForTree(node2);
      // Undeclared exception!
      try { 
        node3.setString("~99? &r`");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node((-738), node0, node0, node0, 56, 42);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node4.copyInformationFrom(node0);
      node4.getJsDocBuilderForNode();
      node3.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(94);
      Node node1 = new Node(40, 4126, 47);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = new Node(31, node2, 57, 31);
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node4.isTypeOf();
      node1.isArrayLit();
      Node node5 = Node.newString(37, "l4eMZ8~#l+xqaY\"Dud", 1, 30);
      node1.putIntProp(55, 32);
      node4.isNE();
      node1.checkTreeEquals(node5);
      node0.isLocalResultCall();
      node3.isDelProp();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("X-1&", 36, (-2061));
      Node node1 = new Node(83, node0, node0, node0);
      node1.isComma();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.removeProp(2296);
      node1.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isGetterDef();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("|ez41RI`");
      node0.setChangeTime(645);
      node0.isNew();
      node0.getString();
      Node node1 = new Node(32, node0);
      node0.isSyntheticBlock();
      node0.getBooleanProp(1);
      Node node2 = new Node(210);
      node0.setString("my\"g3d)|ax");
      node0.isFor();
      node0.isSwitch();
      node1.getIndexOfChild(node0);
      Node node3 = Node.newString(43, "_vE/GA+0");
      // Undeclared exception!
      try { 
        node0.replaceChild(node3, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      jSTypeArray0[4].findPropertyType("Named type with empty name component");
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType(jSTypeArray0[2], jSTypeArray0);
      jSTypeRegistry0.createDefaultObjectUnion(functionType1);
      functionType0.getLeastSupertype(jSTypeArray0[1]);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      node1.getQualifiedName();
      functionType1.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      functionType0.extendTemplateTypeMapBasedOn(functionType1);
      node2.isIn();
      node1.isFalse();
      modificationVisitor0.caseUnknownType();
      Node node3 = new Node(15, 47, 32);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node2, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      // Undeclared exception!
      try { 
        node3.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(33, 479349, 233474);
      Node node1 = new Node(2345, node0, 40, 1214);
      Node.newString(117, "The existing child node of the parent should not be null.");
      node0.children();
      Node.newString(1024, "The existing child node of the parent should not be null.", 761, 16);
      Node node2 = node0.copyInformationFromForTree(node1);
      try { 
        node2.setString("hehGaT");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GETPROP 40 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(30);
      Node node2 = new Node(43, node1, node1);
      node2.setSourceEncodedPosition(46);
      node0.isDelProp();
      node1.isNew();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newString("Object#Element");
      node0.isComma();
      Node node1 = Node.newString("Object#Key");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(1, node0);
      node2.isLabel();
      node0.putIntProp(39, 112);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = new Node(30);
      node0.setString("");
      node2.isFor();
      node4.isSwitch();
      node3.getIndexOfChild(node4);
      // Undeclared exception!
      try { 
        node3.replaceChild(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.cloneTree();
      node1.setOptionalArg(false);
      Node node3 = Node.newNumber((double) 0, 16, 47);
      node3.isTypeOf();
      node1.isArrayLit();
      Node.newString(37, "l4eMZ8~#l+xqaY\"Dud", 1, 30);
      node0.getInputId();
      node2.isEquivalentTo(node1, false, true, false);
      // Undeclared exception!
      try { 
        node2.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EXPR_RESULT");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = Node.newNumber(0.7, 39, 102);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("l4eMZ8~#l+xqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node4.isTypeOf();
      node1.isArrayLit();
      Node.newString(37, "l4eMZ8~#l+xqaY\"Dud", 1, 30);
      node1.putIntProp(55, 32);
      InputId inputId0 = new InputId("l4eMZ8~#l+xqaY\"Dud");
      node4.setLength(47);
      node1.toString();
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.type = (-2674);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = null;
      try {
        node3 = new Node(0, node0, node2, 29, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      Node node1 = new Node(30);
      node1.isNE();
      node0.isAdd();
      Node node2 = new Node(2, node0, node0, node0);
      node2.copyInformationFrom(node0);
      Node node3 = Node.newNumber(2877.1289184875, 48, 40);
      node3.isFunction();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isSyntheticBlock();
      node1.useSourceInfoFromForTree(node2);
      node2.copyInformationFrom(node0);
      node1.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(31, 31, 98);
      Node node1 = new Node(0, node0, node0, (-2891), 4);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getIntProp((-2507));
      Node node3 = node2.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      Node[] nodeArray0 = new Node[5];
      Node node4 = Node.newNumber((-547.0), 16, 3795);
      nodeArray0[1] = node4;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      Node node5 = null;
      try {
        node5 = new Node((-2749), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(124);
      node0.cloneNode();
      Node node1 = new Node(49, node0, node0, node0, node0);
      node0.isDebugger();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-1099), 248, 83);
      node0.isBreak();
      Node node1 = new Node(0, node0);
      node0.setType(72);
      node0.isVarArgs();
      node0.isFalse();
      node1.isCatch();
      node1.getLastSibling();
      node1.isComma();
      node0.isTypeOf();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      Node node1 = new Node(77, node0);
      node1.isAnd();
      node1.isAnd();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      Node node5 = node3.getLastSibling();
      node4.isComma();
      node5.isTypeOf();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(4383, 4383, 223);
      Node node1 = new Node(154, node0);
      node1.isAnd();
      node0.isAnd();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp((-410));
      Node node3 = node2.copyInformationFrom(node1);
      node2.mayMutateGlobalStateOrThrow();
      node3.isFromExterns();
      node1.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node3);
      Node node5 = node1.copyInformationFrom(node4);
      node1.getJsDocBuilderForNode();
      node1.srcref(node2);
      // Undeclared exception!
      try { 
        node5.setSideEffectFlags(24);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      node1.children();
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<UnknownType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.createParameters((List<JSType>) immutableList1);
      node1.isAssignAdd();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      node1.children();
      Node node2 = Node.newString(56, "pFXMx&XA,y", 38, 4);
      node2.isDo();
      node0.setSourceEncodedPosition(56);
      node1.isEmpty();
      node1.isLocalResultCall();
      node1.getLastSibling();
      Node node3 = new Node(56, node1, node2, node1, 56, 53);
      node1.isEquivalentTo(node3, false, false, false);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(153, node0, node0);
      node1.isWith();
      node0.getChildCount();
      Node node2 = node0.clonePropsFrom(node1);
      node0.useSourceInfoFromForTree(node2);
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("|ez41RI`");
      node0.setChangeTime(645);
      node0.isNew();
      node0.getString();
      Node node1 = new Node(32, node0);
      node0.isSyntheticBlock();
      node0.getBooleanProp(1);
      Node node2 = new Node(51);
      node0.isVarArgs();
      Node node3 = Node.newNumber(1281.77756539);
      node0.checkTreeEquals(node3);
      node1.isAssignAdd();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Vector<JSType> vector0 = new Vector<JSType>(57, 16);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = new Node(43, node0, 53, 56);
      Node node3 = Node.newString("~99? &r`", 2, 1);
      node0.isEquivalentTo(node3, false, true, true);
      Node node4 = new Node(54, node3);
      Node node5 = node4.removeFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node5);
      node4.isHook();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.getFirstChild();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putProp(43, simpleErrorReporter0);
      node1.putIntProp(43, (-2638));
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isQualifiedName();
      node2.copyInformationFromForTree(node0);
      node1.cloneTree();
      Node.newString("=p7Ben");
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("xm]&1J|3PF", (-1355), 1361);
      node0.removeChildren();
      Node.newString("xm]&1J|3PF", 2727, 835);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      node1.children();
      Node node2 = Node.newString(56, "pFXMx&XA,y", 38, 4);
      node2.isDo();
      node2.isEquivalentTo(node0, false, false, true);
      Node node3 = new Node(51, node1);
      node3.removeFirstChild();
      Node node4 = node3.cloneNode();
      node3.isCase();
      node4.isAssign();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString("OBJECT_NUMBER_STRING");
      Node node1 = new Node(4095);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-92);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node(544, 52, (-1130));
      node2.isLabelName();
      Node node3 = new Node(4893, node0, node0, 52, 112);
      node2.isDebugger();
      node2.isFalse();
      node2.getChildCount();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(125, 1, 1);
      node1.isLabel();
      node0.getBooleanProp(1672);
      node1.putIntProp(1672, (-2638));
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(57);
      node0.isNumber();
      Node.newString(0, "0rLflected_object");
      node2.isUnscopedQualifiedName();
      node1.isFunction();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(39, 248, 83);
      node0.isBreak();
      Node node1 = node0.getAncestor(0);
      node0.setType(72);
      node0.isVarArgs();
      node0.isFalse();
      node1.isCatch();
      node1.getLastSibling();
      node1.isComma();
      node0.isTypeOf();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isLabelName();
      Node node1 = new Node(4095, node0, node0, 55, 12);
      node0.isDebugger();
      node1.isFalse();
      node1.children();
      node0.addChildrenToFront(node1);
      node1.getChildCount();
      node1.getAncestor(13);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node.mergeLineCharNo((-2714), 40);
      Node.extractCharno((-1));
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("0rLflected_object");
      Node node1 = new Node(39, node0, node0, node0, node0, 15, 380);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(132, (-5457), 132);
      Node node1 = new Node(1522, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildCount();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(93, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.cloneNode();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node3.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474, 233474, 233474);
      Node node1 = new Node(126, node0, 55, 4095);
      Node node2 = Node.newString(50, "The existing child node of the parent should not be null.");
      node1.children();
      Node node3 = new Node(36, (-1643), 47);
      node0.isLabel();
      node0.putIntProp(4095, 2614);
      node1.copyInformationFromForTree(node2);
      Node node4 = new Node(4095, node1, node2, node1, node1, 29, 4);
      node1.isNumber();
      Node node5 = Node.newNumber((double) 54, 39, 442);
      node5.isDo();
      node0.isWhile();
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "not a StringNode");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(")kDU<1aw:/=");
      Node node1 = new Node(147, node0, 56, 147);
      node1.setLength((-1123));
      node1.toString();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node((-1099), (-1099), 83);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(56);
      node2.cloneTree();
      Node node3 = new Node(1);
      node3.isNumber();
      node2.isDec();
      node1.isLabel();
      Node node4 = new Node(1, node3, node1);
      node4.srcref(node3);
      node4.checkTreeEqualsImpl(node3);
      node2.setLineno(83);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(30);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isThrow();
      node0.isAdd();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-1099), 248, 83);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(72);
      node2.cloneTree();
      node1.isVarArgs();
      node1.isFalse();
      node2.isCatch();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(12, nodeArray0);
      node1.isNumber();
      Node node4 = Node.newString(38, "f:B@m&LHiV^e(]");
      node4.isUnscopedQualifiedName();
      node4.isFunction();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isLabelName();
      Node node1 = new Node(4095, node0, node0, 55, 12);
      node0.isDebugger();
      node1.isFalse();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      node0.isVoid();
      Node.newNumber(38.0);
      node0.isEquivalentTo(node0, true, true, true);
      node0.checkTreeEqualsImpl(node0);
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((-121.3));
      node1.getInputId();
      node0.isThis();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putIntProp(43, (-2638));
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node(52);
      node1.isWith();
      node2.isInstanceOf();
      node2.addChildToFront(node1);
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = new Node(0, node0, node0);
      node1.children();
      node1.addSuppression("~99? &r`");
      node1.addChildrenAfter(node1, node0);
      node0.isObjectLit();
      node0.isVarArgs();
      node1.isExprResult();
      node1.getAncestor(2);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(112, "`Mf_<^_B:8dS*G", 112, 112);
      node0.removeProp(112);
      node0.isCase();
      node0.isDefaultCase();
      node0.isSyntheticBlock();
      Node node1 = Node.newNumber((double) 15, 148, 115);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("X-1&", 36, (-2061));
      Node node1 = new Node(83, node0, node0, node0);
      node1.isComma();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(3835, 57, 42);
      node1.isLabel();
      node0.putIntProp(39, 0);
      node2.copyInformationFromForTree(node1);
      Node node3 = new Node(55);
      Node node4 = new Node(304, node1, node3);
      try { 
        node4.setString("4*9)8HAfV|i.i?GQaO]");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // QMARK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "not a StringNode");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString(")kDU<1aw:/=");
      Node node1 = new Node(147, node0, 56, 147);
      node1.setLength((-1141));
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("h,l\u0003S");
      node0.setType(26);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(4);
      node0.checkTreeEquals(node1);
      node1.srcrefTree(node0);
      node0.copyInformationFrom(node1);
      node0.isLocalResultCall();
      node0.getBooleanProp(30);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      Node node1 = new Node(57, node0, node0, node0, node0, 4, 40);
      Node node2 = Node.newString(50, "The existing child node of the parent should not be null.");
      node1.children();
      Node node3 = new Node((-1983));
      node2.isWith();
      node2.isInstanceOf();
      node2.addChildToFront(node1);
      node0.isVarArgs();
      node3.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      jSType0.findPropertyType("Named type with empty name component");
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType1.getLeastSupertype(jSTypeArray0[1]);
      jSTypeArray0[2] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.isNumber();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      Node node1 = new Node(30);
      node1.isNE();
      node0.isAdd();
      Node node2 = new Node(2, node0);
      node2.copyInformationFrom(node0);
      Node node3 = Node.newNumber(2877.1289184875, 48, 40);
      node2.addChildToBack(node3);
      Node node4 = Node.newString(37, "\"O");
      node0.isQualifiedName();
      node0.isDo();
      node4.isEmpty();
      node2.isGetElem();
      node1.isDelProp();
      node1.cloneNode();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putIntProp(43, (-2638));
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isQualifiedName();
      Node node3 = node2.copyInformationFromForTree(node0);
      try { 
        node3.setString("X-1&");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DO [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(">A61L", 36, 36);
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.getStaticSourceFile();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isFor();
      node1.isNoSideEffectsCall();
      node0.isComma();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isHook();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString(";6Z/^ti@f");
      Node node1 = new Node(31);
      node1.getStaticSourceFile();
      Node node2 = new Node(43, node0, 122, 47);
      node0.setLineno(51);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node1.putIntProp((-445), (-472));
      node1.copyInformationFromForTree(node2);
      node2.isQualifiedName();
      Node node3 = Node.newString(4095, ";6Z/^ti@f", 0, 122);
      node3.isDo();
      node0.isEmpty();
      Node node4 = new Node(51);
      node4.isGetElem();
      node3.isDefaultCase();
      node0.isVar();
      Node node5 = new Node(3460, node1, node3, 4, (-1));
      node5.getJSType();
      Node.newNumber((double) 39, 11, 36);
      node5.removeChildren();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.setSourceEncodedPosition(117);
      node0.isComma();
      node0.setLineno((-1856));
      Node node1 = Node.newNumber((double) 55);
      Node node2 = new Node(52, node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = new Node(29, 42, 29);
      node3.isLabel();
      node1.putIntProp(8, 50);
      Node node4 = node2.copyInformationFromForTree(node1);
      Node node5 = new Node((-1235), node3, node3, node0, node2, 57, 57);
      node5.isNumber();
      Node node6 = Node.newString(50, "{|/KE9kqfq}", 39, 48);
      node6.isDo();
      node5.isWhile();
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1239, 1239, (-491));
      Node node1 = new Node(3064, node0, node0, node0, 53, 125);
      Node node2 = new Node(42, node1, 362, 132);
      boolean boolean0 = true;
      node2.isEquivalentTo(node1, true, true, true);
      node1.getStaticSourceFile();
      node2.putIntProp(56, 105);
      node0.isOnlyModifiesArgumentsCall();
      Node.newString(32, " and ", (-724), 31);
      Node node3 = new Node(43, 2416, 4);
      Node node4 = node3.copyInformationFromForTree(node0);
      try { 
        node4.setString("gY3D7v7w=L");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(">A61L", 36, 36);
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      Node node2 = Node.newNumber((double) 1);
      Node node3 = new Node(48, 36, 2);
      node1.checkTreeEqualsImpl(node0);
      Node node4 = new Node((-1214), node0, node2);
      node4.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.getInputId();
      Node node6 = node2.getLastSibling();
      Node node7 = Node.newNumber((double) 2);
      node7.isEquivalentToTyped(node0);
      node6.isThis();
      node5.isParamList();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), 4, (-547));
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isEquivalentTo(node1, true, true, true);
      node1.getStaticSourceFile();
      node0.putIntProp(48, 29);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString(4095, " and ", 39, 2824);
      node3.type = 3318;
      node3.copyInformationFromForTree(node2);
      try { 
        node0.setString("STRUCT");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -547.0 [directives: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isDefaultCase();
      node0.isAssign();
      node0.isHook();
      node0.isFor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.getString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(103, node0, node0, node0, 0, 49);
      node0.setQuotedString();
      node0.isFunction();
      node1.checkTreeEqualsImpl(node0);
      node0.isNE();
      node0.checkTreeEquals(node1);
      node0.isGetElem();
      node1.isIf();
      node0.isDelProp();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(36, "", 36, 36);
      Node node1 = Node.newString("*v7I:Ojl");
      node1.getAncestor(43);
      node1.setSourceEncodedPosition(667);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node1.setSourceFileForTesting("1h");
      node1.getStaticSourceFile();
      Node node2 = Node.newNumber((double) 38);
      node0.isThis();
      node2.getQualifiedName();
      Node.newNumber((double) 43, 2, 506);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!:Tz");
      Node node0 = new Node((-362), 0, 0);
      Node node1 = new Node((-362), node0, node0);
      Node node2 = node1.cloneTree();
      node2.useSourceInfoIfMissingFrom(node0);
      node0.isLabelName();
      node1.addSuppression("!:Tz");
      node1.isEquivalentTo(node2);
      node2.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -362
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascvipt.rhino.jstyde.JSType$TypePair");
      node0.removeProp(0);
      node0.isBreak();
      node0.isLabelName();
      node0.isHook();
      node0.setChangeTime((-1464));
      node0.isNew();
      node0.getString();
      Node node1 = new Node(47, node0);
      node0.isFunction();
      node1.isLabelName();
      Node node2 = Node.newString("");
      node1.setSourceEncodedPosition((-421));
      node2.isFromExterns();
      node1.checkTreeEquals(node2);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node((-482), 431, (-1270));
      Node node1 = new Node(122, node0, node0, 256, 24);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-26));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node((-26), (-26), (-26));
      node0.getBooleanProp(98);
      node0.isQualifiedName();
      node0.isDo();
      Node node1 = new Node(51, node0, node0, node0);
      node1.isEmpty();
      node0.isGetElem();
      node1.isDelProp();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(4, 4, 4);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4*9)8HAfV|i.i?GQaO]");
      Node node1 = new Node(4, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node4.copyInformationFrom(node0);
      node4.getJsDocBuilderForNode();
      node2.srcref(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("X-1&", 36, (-2061));
      node0.isComma();
      node0.setLineno(36);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.isEquivalentTo(node0, false, true, true);
      node1.checkTreeEqualsImpl(node0);
      node0.isNE();
      Node node2 = Node.newString((-2623), "is_constant_name");
      node0.getIntProp(152);
      node0.getCharno();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node4.copyInformationFrom(node0);
      node4.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node5.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node1.removeChild(node5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("+.");
      Node node1 = new Node(42, node0, node0, node0, node0, 4095, (-1217));
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.getLength();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0);
      Node node1 = new Node(122, node0, node0);
      node0.isQualifiedName();
      node1.mayMutateGlobalStateOrThrow();
      node1.isDelProp();
      node0.isQualifiedName();
      String string0 = "tb";
      Node.newString(53, "tb");
      node0.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a type name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      Node node1 = new Node(30);
      Node node2 = new Node(29);
      node1.isNE();
      node2.isAdd();
      Node node3 = new Node(2, node0);
      Node node4 = Node.newNumber(2877.1289184875, 48, 40);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node5 = Node.newString((-269), "\"O");
      Node node6 = node5.copyInformationFromForTree(node2);
      node6.getBooleanProp(98);
      node0.isQualifiedName();
      node6.isDo();
      node5.isEmpty();
      node3.isGetElem();
      node1.isDelProp();
      Node node7 = node2.cloneNode();
      node7.hasMoreThanOneChild();
      node0.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(">A61L", 36, 36);
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      Node node2 = node1.copyInformationFrom(node0);
      node2.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node0.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isSyntheticBlock();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      Node node4 = node1.copyInformationFrom(node3);
      node0.getJsDocBuilderForNode();
      Node node5 = Node.newNumber((-3434.3716868272));
      node5.srcref(node4);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      int int0 = Node.REFLECTED_OBJECT;
      node0.getStaticSourceFile();
      node2.putIntProp(49, (-53));
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = node2.copyInformationFromForTree(node1);
      try { 
        node3.setString("4*9)8HAfV|i.i?GQaO]");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NOT 26 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString(36, "~99? &r,", 36, 36);
      node0.removeProp(36);
      node0.isCase();
      Node node1 = new Node(38, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(36, nodeArray0);
      Node node3 = Node.newNumber((double) 36);
      Node node4 = new Node(53, node3, node3);
      node4.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      node0.isWith();
      node1.isObjectLit();
      node1.isVarArgs();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSType0.findPropertyType("Named type with empty name component");
      JSType jSType2 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      JSType.TypePair jSType_TypePair0 = jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType2.getLeastSupertype(jSTypeArray0[1]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      JSType.isEquivalent(jSType_TypePair0.typeB, jSType1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      // Undeclared exception!
      try { 
        node1.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      Node node2 = new Node(29);
      node1.isNE();
      node2.isAdd();
      Node node3 = new Node(2, node0);
      Node.newNumber(2877.1289184875, 48, 40);
      Node node4 = Node.newString((-269), "\"O");
      node4.copyInformationFromForTree(node2);
      node0.isQuotedString();
      node4.isReturn();
      node1.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString((-10), "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      node1.setVarArgs(true);
      Node node2 = Node.newNumber(1212.359516488768, 124, 4);
      node2.isEquivalentTo(node0, true, true, true);
      Node node3 = Node.newNumber((double) 39);
      int int0 = Node.INCRDECR_PROP;
      node1.getCharno();
      node3.isGetProp();
      node1.hasMoreThanOneChild();
      node1.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      node0.putProp(2, "");
      node0.isTry();
      node0.siblings();
      Node node2 = Node.newString(46, "");
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node2);
      node0.isVarArgs();
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(39);
      node2.isThis();
      Node node5 = node4.copyInformationFromForTree(node0);
      node3.getBooleanProp(1);
      node2.isQualifiedName();
      node3.isDo();
      node5.isEmpty();
      node0.isGetElem();
      node4.removeChildren();
      // Undeclared exception!
      try { 
        node4.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString(36, "~99? &r`", 36, 36);
      node0.removeProp(36);
      node0.isCase();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(51, nodeArray0, (-2479), 38);
      node1.copyInformationFrom(node0);
      Node node2 = Node.newString("WUCp9");
      Node.newString("com.google.javascript.rhino.Node$AncestorIterable$1");
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), 4, (-547));
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isEquivalentTo(node1, true, true, true);
      Node node3 = Node.newNumber(93.0);
      Node node4 = node3.getLastSibling();
      node1.checkTreeEqualsImpl(node0);
      node3.getStaticSourceFile();
      node2.getInputId();
      node0.isContinue();
      node0.setVarArgs(true);
      node4.toString();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isBreak();
      Node node1 = Node.newString(4658, "Node tree inequality:\nTree1:\n");
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isThrow();
      Node.newString(49, "Node tree inequality:\nTree1:\n", 4095, 0);
      node1.isLabel();
      Node node3 = node0.srcref(node2);
      node3.setLineno(1);
      // Undeclared exception!
      try { 
        node0.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      functionType0.isInvariant(jSType0);
      jSTypeArray0[5].findPropertyType("");
      jSTypeRegistry0.createDefaultObjectUnion(functionType0);
      jSTypeArray0[2].getTypesUnderShallowInequality(functionType0);
      jSTypeArray0[2].getLeastSupertype(jSTypeArray0[4]);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      Node node2 = new Node(262144, node0, node1, node1, node0);
      node2.getQualifiedName();
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType(jSTypeArray0[2], jSTypeArray0);
      functionType1.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node2.getStaticSourceFile();
      node3.isIn();
      node2.isFalse();
      modificationVisitor0.caseUnknownType();
      Node node4 = new Node(4342, 8, 2);
      node0.checkTreeEquals(node1);
      node0.getQualifiedName();
      node1.isAssignAdd();
      node0.cloneNode();
      node3.getJSType();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(155, 21, 155);
      Node node1 = new Node(15, node0, node0, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber((double) 8);
      Node node4 = new Node(51, node1, (-3219), (-265));
      node2.getIntProp(98);
      node2.getStaticSourceFile();
      node3.getInputId();
      node3.isCatch();
      Node.newNumber((-1535.43));
      node0.isEquivalentToTyped(node4);
      node4.checkTreeTypeAwareEqualsImpl(node3);
      // Undeclared exception!
      try { 
        node4.addChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), 4, (-547));
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      node1.isEquivalentToShallow(node1);
      Node node2 = Node.newNumber((double) 55, 55, 51);
      node0.isIn();
      Node node3 = node2.copyInformationFrom(node0);
      node3.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.cloneNode();
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233478);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newString("Object#Key", 40, 52);
      Node node3 = new Node(126, node1, 55, 4095);
      node3.wasEmptyNode();
      node3.getIntProp(39);
      node1.getInputId();
      node0.isCatch();
      node0.isSyntheticBlock();
      node3.isSwitch();
      node2.isIn();
      node3.toString();
      node1.cloneNode();
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      Node node1 = new Node(42, 818, (-1180));
      Node node2 = new Node((-1846), node1, node0, (-519), 53);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(753);
      Node node4 = node0.copyInformationFrom(node2);
      Node node5 = Node.newNumber(0.0);
      node5.mayMutateGlobalStateOrThrow();
      node3.isFromExterns();
      node0.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node4.isSyntheticBlock();
      Node node6 = null;
      // Undeclared exception!
      try { 
        node2.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(93, node0);
      Node node2 = node1.cloneNode();
      node0.isTrue();
      node2.isOr();
      node2.checkTreeEquals(node1);
      node1.srcref(node2);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = new Node(108);
      Node node1 = node0.cloneNode();
      node1.isTrue();
      Node node2 = Node.newNumber(3275.03334817081);
      node2.isOr();
      node0.isExprResult();
      node2.isBreak();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = new Node(0, node0, node0);
      node1.children();
      node1.addSuppression("~99? &r`");
      Node node2 = Node.newString(4095, "$+;!1|6B", 42, 35);
      node1.isLabel();
      Node node3 = node1.srcref(node2);
      node3.setLineno(569);
      // Undeclared exception!
      try { 
        node2.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = new Node(50, node0, 32, 36);
      node2.isTypeOf();
      node2.isLabel();
      Node node3 = Node.newString(51, "", 87855567, 51);
      node0.setCharno(86);
      node3.removeProp(57);
      Node node4 = new Node(57, node1, node1, node3, node1, 793, 1073741824);
      node0.children();
      node3.isFromExterns();
      node0.setOptionalArg(true);
      node1.isLabelName();
      node2.isQualifiedName();
      Node node5 = new Node(37);
      node0.isDo();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, false, true, false);
      Node node2 = Node.newString(35, "msg.jsdoc.function.newnotobject");
      Node node3 = node0.copyInformationFromForTree(node2);
      node3.getBooleanProp(46);
      node3.isQualifiedName();
      node0.isDo();
      node2.isEmpty();
      Node.newString("msg.jsdoc.function.newnotobject", 39, 39);
      node0.isGetElem();
      node1.isDelProp();
      node2.cloneNode();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      NoObjectType noObjectType0 = (NoObjectType)modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = (JSType) noObjectType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      noObjectType0.makesStructs();
      noObjectType0.findPropertyType("Named type with empty name component");
      jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      noObjectType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      // Undeclared exception!
      try { 
        functionType0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(120, 117, 120);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      node0.setOptionalArg(false);
      node0.setCharno(153);
      Node node2 = Node.newString(56, "com.google.common.collect.Sets$1", 1169, 4095);
      node0.getProp(29);
      node1.isArrayLit();
      node1.isAnd();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0);
      Node node1 = new Node(4, nodeArray0);
      node0.setSourceEncodedPositionForTree(47);
      node0.clonePropsFrom(node1);
      node1.getAncestor(29);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(51, 1151, 54);
      Node node2 = new Node(57, node0, node0, node0);
      node1.isVoid();
      Node node3 = node1.copyInformationFromForTree(node2);
      node2.isDefaultCase();
      node3.getInputId();
      node1.isStringKey();
      node0.setCharno(16);
      node2.removeProp((-5110));
      node3.isStringKey();
      node2.isDefaultCase();
      node2.isSyntheticBlock();
      node1.isBreak();
      Node node4 = Node.newString(111, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, jSTypeArray0);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) functionType0);
      jSTypeArray0[0] = (JSType) objectType0;
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Unknown class name");
      jSTypeArray0[2] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getJSDocInfo();
      Node node1 = new Node(130, node0);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("X-1&", 36, (-2061));
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putIntProp(1672, (-2638));
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.getBooleanProp(315);
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2899));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      node2.isTry();
      node1.isBlock();
      node0.isSetterDef();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      Node node1 = new Node(111, node0, 55, 4095);
      Node node2 = Node.newString(50, "The existing child node of the parent should not be null.");
      node1.children();
      Node node3 = Node.newString(110, "Y7c7'^V]_T;QEHk");
      Node node4 = node2.copyInformationFromForTree(node3);
      node1.getBooleanProp(6);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node5 = new Node(57, node3);
      node5.isQualifiedName();
      node1.isDo();
      node2.isEmpty();
      node4.isGetElem();
      node2.isDelProp();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      Node node1 = new Node(155, (-80), 0);
      Node node2 = new Node(130, node0, node0, node0, node1);
      node1.isVoid();
      node2.isEquivalentTo(node1, false, false, false);
      Node node3 = node1.getLastSibling();
      node0.checkTreeEqualsImpl(node2);
      node2.getStaticSourceFile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = null;
      try {
        node4 = new Node(23, node3, node1, node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = new Node(15, (-1204), (-2675));
      node2.isLabel();
      node3.putIntProp(37, 39);
      Node node4 = node3.copyInformationFromForTree(node0);
      Node node5 = new Node(57, node3, node2, node3, node3, 103, 29);
      node4.isNumber();
      node2.isDo();
      node5.isWhile();
      node1.cloneTree();
      node4.isBreak();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      node0.getInputId();
      node1.isEquivalentToTyped(node0);
      Node node2 = Node.newNumber(284.11280425419767);
      Node node3 = new Node(42, node1);
      node3.isThis();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(154, nodeArray0);
      Node node1 = new Node(4, nodeArray0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isEquivalentTo(node0, true, false, true);
      Node node1 = new Node(100, node0);
      node1.setSourceEncodedPositionForTree(4095);
      Node node2 = node1.removeFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString((-1917), "capacity must be >= 0 but was %s");
      Node node1 = new Node(125, node0, 148, 38);
      node1.setLength(0);
      Node node2 = new Node(125, node1);
      Node node3 = node2.getLastChild();
      node2.getLastChild();
      try { 
        node3.setDouble((-1050.48959));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK 148 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      node0.isCase();
      node0.setVarArgs(true);
      Node node1 = Node.newNumber((double) 1556, 39, (-3072));
      node0.isEquivalentTo(node1, true, false, false);
      Node node2 = new Node(11, node1);
      node1.checkTreeEqualsImpl(node2);
      node0.isNE();
      Node node3 = Node.newString(47, "Z)k)");
      node2.getIntProp(51);
      node1.getCharno();
      node3.isGetProp();
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(48, node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.isVoid();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString(1678, "{|/K9kqf}");
      node3.isTrue();
      node2.isGetterDef();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(26, 26, 26);
      node0.setSourceEncodedPositionForTree(1955);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node4.copyInformationFrom(node0);
      node4.getJsDocBuilderForNode();
      Node node5 = node2.srcref(node0);
      node5.isNew();
      node5.setSourceFileForTesting("com.google.common.base.CharMatcher$11");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(4196, 84, 4196);
      Node node1 = new Node(48);
      node0.addChildToFront(node1);
      node1.getJSDocInfo();
      node1.detachFromParent();
      node0.isNE();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(93, node0);
      Node node2 = Node.newString(2, "");
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.getBooleanProp((-1998));
      node3.isQualifiedName();
      node3.isDo();
      node0.isEmpty();
      node1.isGetElem();
      node2.isDelProp();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isEquivalentTo(node0, true, false, true);
      JSDocInfo[] jSDocInfoArray0 = new JSDocInfo[2];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfoArray0[0] = jSDocInfo0;
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      jSDocInfoArray0[1] = jSDocInfo1;
      linkedList0.toArray(jSDocInfoArray0);
      Node node1 = new Node(100, node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString((-3054), "#\nTrXbee2:\n");
      Node node1 = new Node(57);
      node1.clonePropsFrom(node0);
      node1.isObjectLit();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.getIntProp(31);
      node2.getStaticSourceFile();
      node0.getInputId();
      node1.isCatch();
      Node node3 = new Node(36, node2);
      node3.putIntProp(30, 130);
      node1.isEquivalentToTyped(node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(86, 57, 54);
      Node node2 = node1.getLastSibling();
      node2.getAncestor(47);
      node0.setType(47);
      node2.isVarArgs();
      node1.isFalse();
      Node node3 = new Node(40, 47, 50);
      node3.isCatch();
      node2.getLastSibling();
      node3.isEquivalentToTyped(node1);
      node2.isThis();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      Node node2 = new Node(36, 8, 1);
      node1.isThrow();
      Node node3 = new Node(4095, node1, node2);
      node1.detachFromParent();
      node0.isLabel();
      Node node4 = node3.srcref(node2);
      node3.isBreak();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node4.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(40.0);
      Node node1 = new Node(4, node0, node0, node0, 1, 29);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isVarArgs();
      node2.getJsDocBuilderForNode();
      node1.getBooleanProp(12);
      node2.isThis();
      Node.newNumber((-1399.43542), 1287, 49);
      Node node3 = node1.copyInformationFromForTree(node0);
      node2.getBooleanProp(30);
      node0.isQualifiedName();
      node2.isDo();
      node3.isEmpty();
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("{|/K9kqf}", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isBreak();
      Node node1 = new Node(0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isThrow();
      Node node3 = Node.newString(12, "$+;!1|6B", 15, 12);
      node0.isLabel();
      node3.srcref(node2);
      node3.setLineno(38);
      // Undeclared exception!
      try { 
        node1.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = node0.getLastSibling();
      node0.setOptionalArg(false);
      Node node2 = Node.newString(2, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 52, 1);
      node2.getProp((-694));
      node2.isArrayLit();
      node2.isAnd();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-547), 4, (-547));
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.getFirstChild();
      node1.putBooleanProp((-986), true);
      node2.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -547
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isBreak();
      Node node1 = new Node(57, node0, node0, node0);
      node0.setOptionalArg(false);
      node0.setCharno(153);
      node1.isTrue();
      node1.isParamList();
      Node node2 = Node.newString("67wfL", (-88), 32);
      node2.hasChildren();
      node0.useSourceInfoFrom(node2);
      node0.isTrue();
      node0.isQuotedString();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newString("Object#Key", 40, 52);
      Node node3 = new Node(126, node1, 55, 4095);
      node2.getIntProp(42);
      node2.getStaticSourceFile();
      Node node4 = Node.newString(2, "Object#Key");
      node4.getInputId();
      node2.isCatch();
      Node node5 = new Node((-962), node3, node4);
      node5.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isOr();
      node2.isStringKey();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(117, node0, node0, node0, node0, (-2712), 4095);
      node1.siblings();
      Node node2 = Node.newString((-3198), "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      node0.isCast();
      node0.getJsDocBuilderForNode();
      node2.getBooleanProp(0);
      node4.isThis();
      Node node5 = Node.newNumber((double) 12, 2, 16);
      node3.copyInformationFromForTree(node5);
      node0.getBooleanProp((-770));
      node0.isRegExp();
      node1.isDo();
      node5.removeFirstChild();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getStaticSourceFile();
      node0.getInputId();
      node0.isEquivalentToTyped(node0);
      Node node1 = Node.newNumber((-794.812));
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("eom.google.javascript.rhino.Node$AncestorIterable$1");
      Node node1 = new Node(43, node0, node0, 57, 57);
      node0.addChildToBack(node1);
      node0.type = 55;
      node1.isRegExp();
      node1.isFalse();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>(895);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) linkedHashSet0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      node0.removeProp(16);
      node0.isContinue();
      node0.isBreak();
      Node node1 = new Node(51);
      Node node2 = new Node(130);
      node1.isNE();
      node0.isAdd();
      Node node3 = new Node(46, node0);
      node0.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isOr();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      jSType0.findPropertyType("Named type with empty name component");
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType1.getLeastSupertype(jSTypeArray0[1]);
      jSTypeArray0[2] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      modificationVisitor0.caseUnknownType();
      Node node3 = new Node(112, 29, 57);
      node3.checkTreeEquals(node2);
      node1.getQualifiedName();
      node0.isAssignAdd();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(36, "", 36, 36);
      node0.isFor();
      node0.setVarArgs(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(39, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = node1.getLastSibling();
      node0.checkTreeEqualsImpl(node2);
      node1.getStaticSourceFile();
      node0.getInputId();
      node0.isContinue();
      node2.setVarArgs(true);
      node0.toString();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString("eom.google.javascript.rhino.Node$AncestorIterable$1");
      Node node1 = new Node(43, node0, node0, 57, 57);
      node0.children();
      node0.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      node1.removeProp(35);
      node0.isContinue();
      node1.isNumber();
      node0.setWasEmptyNode(true);
      Node.newNumber((double) 4, 54, 51);
      node1.isUnscopedQualifiedName();
      Node.newString("eom.google.javascript.rhino.Node$AncestorIterable$1");
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChild(node0);
      Node node1 = Node.newString(32, "reflected_object");
      node1.addChildToBack(node0);
      node0.isDebugger();
      node0.isFalse();
      node1.isBreak();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(46, node0, node0, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      node2.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(38, nodeArray0, 47, (-1811));
      node2.setCharno(46);
      node0.removeProp(29);
      node0.isQualifiedName();
      node2.isCall();
      // Undeclared exception!
      try { 
        node3.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      Node node2 = new Node(29);
      node2.isAdd();
      node2.getBooleanProp(49);
      node1.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.isOr();
      node2.putIntProp(12, 42);
      node2.getLineno();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newString("Object#Key", 40, 52);
      node2.getIntProp(1312);
      node0.getStaticSourceFile();
      node1.getInputId();
      node0.isCatch();
      node2.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node2.isOr();
      node0.getCharno();
      node0.isGetProp();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l4eMj8E~#lBxqaY\"Dud");
      Node node5 = new Node(38, node3, 50, 42);
      node2.getIntProp(2194);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("l4eMj8E~#lBxqaY\"Dud", false);
      node0.getInputId();
      node2.isEquivalentTo(node1, true, false, false);
      node4.setSourceFileForTesting("l4eMj8E~#lBxqaY\"Dud");
      node2.checkTreeEqualsImpl(node3);
      node2.setOptionalArg(false);
      Node node6 = null;
      // Undeclared exception!
      try { 
        node2.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isLabelName();
      Node node1 = Node.newNumber((double) 2, (-3073), 30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = new Node(1842, node0, node0);
      node0.setLength(4);
      node3.getIntProp(2);
      node0.isVar();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      node2.isVarArgs();
      node0.getJsDocBuilderForNode();
      node1.getBooleanProp(0);
      node3.isThis();
      Node node4 = Node.newNumber((double) 12, 2, 16);
      node2.copyInformationFromForTree(node4);
      Node node5 = Node.newString(50, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node1.isEquivalentToTyped(node5);
      node0.getBooleanProp((-770));
      node1.isQualifiedName();
      node1.isDo();
      Node node6 = new Node(49, node1, 115, 42);
      node4.getSourceFileName();
      node6.getIntProp(55);
      node1.getCharno();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("X-1&", 36, (-2061));
      node0.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(114, 1, 1);
      node1.isLabel();
      node1.putIntProp(1672, (-2638));
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node(1477, node1, node1, node0, node1, 114, (-475));
      node0.setString("4*9)8HAfV|i.i?GQaO]");
      node1.isFor();
      node1.isNoSideEffectsCall();
      node2.isComma();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, 149, 149);
      Node node1 = new Node(46, node0, node0, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber(93.0);
      Node node4 = new Node((-960), node3, 4095, 1);
      node2.getIntProp(55);
      node3.getStaticSourceFile();
      node3.getInputId();
      node1.isCatch();
      node3.putIntProp(38, 56);
      node0.isEquivalentTo(node3, false, true, true);
      Node node5 = new Node(43, node1);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)31;
      byteArray0[5] = (byte)31;
      byteArray0[6] = (byte) (-10);
      byteArray0[7] = (byte) (-116);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.removeFirstChild();
      node5.useSourceInfoIfMissingFromForTree(node4);
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      node1.setVarArgs(true);
      Node node2 = Node.newNumber(1212.359516488768, 124, 4);
      node2.isEquivalentTo(node0, true, true, false);
      node1.isNE();
      Node node3 = Node.newNumber((double) 39);
      int int0 = Node.INCRDECR_PROP;
      node1.getCharno();
      node3.isGetProp();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = new Node(30, 30, 30);
      Node node1 = node0.getLastSibling();
      node0.removeChildren();
      Node node2 = Node.newNumber((double) 47);
      node1.isIn();
      // Undeclared exception!
      try { 
        node2.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u\"^PK(!S0fkg");
      Node.mergeLineCharNo((-321), (-321));
      Node node0 = Node.newString("u\"^PK(!S0fkg");
      node0.getAncestors();
      node0.toStringTree();
      Node node1 = new Node(108, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u\"^PK(!S0fkg");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        node1.setDouble((-2572.75613728429));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(124, node0, node0, node0, (-1817), 116);
      node0.isSwitch();
      node0.getAncestors();
      node0.getBooleanProp(43);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = new Node(40);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l4eMj8E~#lBxqaY\"Dud");
      Node node5 = new Node(38, node3, 50, 42);
      Node node6 = Node.newNumber((double) 57);
      node5.isIn();
      node1.copyInformationFrom(node6);
      Node.newString("]9");
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.detachChildren();
      Node node1 = new Node(0);
      Node node2 = new Node(15);
      node0.isNE();
      node1.isAdd();
      Node node3 = new Node(57, node2);
      node2.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node3.isOr();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("C?9");
      node0.getStaticSourceFile();
      Node node1 = new Node(103, 29, 8);
      node0.hasChild(node1);
      Node node2 = node1.copyInformationFrom(node0);
      int int0 = Node.DIRECT_EVAL;
      node2.mayMutateGlobalStateOrThrow();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isFromExterns();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = Node.newString("C?9", 2156, 110);
      node0.isFunction();
      node2.isNumber();
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString((-3054), "\n\nTrXbee2:\n");
      Node node1 = new Node(57);
      Node node2 = new Node(182, node1, node1);
      Node node3 = new Node(1, node2, node0);
      Node node4 = new Node((-1464));
      node4.setOptionalArg(true);
      node3.addChildToFront(node4);
      node4.isOr();
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.getLastSibling();
      node2.getStaticSourceFile();
      node0.getInputId();
      node0.isContinue();
      node2.setVarArgs(false);
      node2.toString();
      node0.isCase();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-1099), 248, 83);
      node0.isBreak();
      Node node1 = new Node(42, node0, node0, node0, node0, 57, 38);
      Node node2 = node1.getAncestor(0);
      node1.setType(92);
      node1.isVarArgs();
      node1.isFalse();
      node2.isCatch();
      Node node3 = node2.getLastSibling();
      Node node4 = node3.removeChildren();
      node2.isComma();
      node1.isTypeOf();
      node2.isReturn();
      node4.getBooleanProp(52);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newString("Object#Key", 40, 52);
      Node node3 = new Node(126, node1, 55, 4095);
      node3.getIntProp(119);
      node1.getStaticSourceFile();
      node2.getInputId();
      node0.isNoSideEffectsCall();
      node2.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node4 = new Node(32, node0);
      node4.setJSDocInfo(jSDocInfo0);
      node1.isOr();
      node0.isStringKey();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = Node.newString(154, "V][");
      Node node1 = new Node(119, node0, node0, node0, 8233, 1);
      node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getProp(23);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      boolean boolean0 = false;
      node0.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(12, node0, (-879), 55);
      node1.getIntProp(1);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node2 = Node.newString(37, "", 153, 33);
      node2.isVarArgs();
      node2.isQualifiedName();
      node0.useSourceInfoFrom(node2);
      node2.isDo();
      Node node3 = Node.newNumber((-189.8232646522481), 15, 37);
      Node node4 = null;
      try {
        node4 = new Node(4095, node1, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascipt.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      node0.setWasEmptyNode(false);
      node0.isThis();
      node0.isInstanceOf();
      Node node2 = new Node(12, 53, (-4910));
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      node1.isNE();
      node1.isAdd();
      Node node2 = new Node(2, node0);
      node2.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSType0.findPropertyType("Named type with empty name component");
      JSType jSType2 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      JSType.TypePair jSType_TypePair0 = jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType2.getLeastSupertype(jSTypeArray0[1]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      JSType.isEquivalent(jSType_TypePair0.typeB, jSType1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isSyntheticBlock();
      node0.clonePropsFrom(node2);
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      node2.isBreak();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isGetterDef();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("0rLflected_object");
      node0.getSourceFileName();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(47, node1, node1, node1);
      Node node3 = node2.getLastSibling();
      node3.getStaticSourceFile();
      node3.getInputId();
      try { 
        node3.setDouble((-2173.10284));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString(36, "", 36, 36);
      node0.removeProp(0);
      node0.isCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Key");
      node1.isVarArgs();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.getBooleanProp(12);
      node2.isThis();
      Node.newNumber((double) 4095, 29, 51);
      Node node4 = node2.copyInformationFromForTree(node1);
      node3.getBooleanProp(39);
      node3.isQualifiedName();
      node1.isDo();
      Node node5 = new Node(1657, 4, 12);
      node5.isEmpty();
      node4.isIf();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      node1.setVarArgs(true);
      Node node2 = Node.newNumber(1212.359516488768, 124, 4);
      node2.isEquivalentTo(node0, true, true, false);
      node1.isNE();
      Node node3 = Node.newNumber((double) 39);
      int int0 = Node.INCRDECR_PROP;
      node1.getCharno();
      node3.isGetProp();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(117, (-1846), 117);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      node0.removeChildren();
      Node.newNumber(1310.6758212667);
      node0.isIn();
      Node node2 = node1.copyInformationFrom(node0);
      Node.newString("]9");
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString((-4858), "node is not a child", (-3330), 117);
      Node node1 = new Node((-4858), node0, node0, node0);
      node1.getType();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString(1239, "\n\nTree2:\n");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(103, nodeArray0);
      node1.copyInformationFrom(node0);
      Node.newString("\n\nTree2:\n");
      node0.isBreak();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(29);
      node0.isNE();
      node1.isAdd();
      Node node2 = new Node(2, node0);
      node0.putIntProp(888, 4);
      Node.newNumber((double) 30);
      // Undeclared exception!
      try { 
        node2.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = Node.newString("Object#Key", 40, 52);
      Node node3 = new Node(126, node1, 55, 4095);
      node3.getIntProp(1312);
      node0.getStaticSourceFile();
      node1.getInputId();
      node0.isCatch();
      node2.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node4 = node3.setJSDocInfo(jSDocInfo0);
      node3.isOr();
      node4.isTrue();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString("~99? &r`");
      Node node1 = new Node(53, node0);
      Node.newString(31, "*0AE?1:]=");
      Node.newString((-1161), "U", 625, 42);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber((double) 0, 16, 47);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l4eMj8E~#lBxqaY\"Dud");
      Node node5 = new Node(38, node3, 50, 42);
      node2.getIntProp(2194);
      node5.putProp(31, (Object) null);
      node5.isName();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) (-530), 36, (-249));
      Node node1 = new Node(40, node0, node0);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(2097152, 2097152, 2097152);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.getLastSibling();
      node2.getStaticSourceFile();
      node1.getInputId();
      Node.newString(".<");
      node1.isQualifiedName();
      node1.isVoid();
      Node.newString(".<", 154, 1);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node((-3198));
      node0.getChildAtIndex((-2364));
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(117, (-1846), 117);
      Node node1 = new Node(48, node0);
      node0.isScript();
      node0.removeChildren();
      Node node2 = new Node(51);
      node0.isObjectLit();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "start index");
      Node node0 = Node.newNumber(826.002702707669, 5, 5);
      Node node1 = new Node((-547), node0, node0, node0, 57, 4095);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isEquivalentToShallow(node1);
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -547
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) 36);
      Node node1 = new Node(40, node0);
      Node node2 = node1.cloneNode();
      node2.copyInformationFrom(node0);
      Node.newString(55, "u\"^PK(!S0fkg");
      node2.putProp(54, node1);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      node0.removeProp(16);
      node0.isContinue();
      node0.isBreak();
      node0.isLabelName();
      node0.isHook();
      node0.isFor();
      node0.setVarArgs(true);
      node0.isEquivalentTo(node0, true, false, true);
      node0.checkTreeEqualsImpl(node0);
      node0.isFalse();
      node0.isBreak();
      Node node1 = new Node(2, node0, node0, (-59), 12);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isGetterDef();
      node1.isComma();
      node1.removeChild(node0);
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h|");
      Node node0 = Node.newString(42, "h|");
      Node node1 = Node.newString("h|", 54, 30);
      node1.isUnscopedQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.putIntProp(2, 1159);
      Node node2 = Node.newString("h|", 38, 15);
      Node node3 = new Node(12, node2, node0, node1, node0, 8, 16);
      node0.setString("{'#L1FCf?#+X}T");
      node3.isCall();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = new Node(77, (-1099), (-607));
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = new Node((-1099), node1, 50, 1073741823);
      // Undeclared exception!
      try { 
        node2.getAncestor((-3339));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(4);
      node0.isVoid();
      Node node1 = new Node(32);
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.getLastSibling();
      node1.getStaticSourceFile();
      node2.getInputId();
      Node node3 = Node.newString("first new child has existing sibling");
      node1.isQualifiedName();
      node2.isVoid();
      Node.newString(":#$Gv#2", 29, 3550);
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSType0.findPropertyType("Named type with empty name component");
      JSType jSType2 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      JSType.TypePair jSType_TypePair0 = jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType2.getLeastSupertype(jSTypeArray0[1]);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      JSType.isEquivalent(jSType_TypePair0.typeB, jSType1);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      Node node3 = new Node(112, 29, 57);
      node3.checkTreeEquals(node2);
      node0.isAssignAdd();
      node3.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(77, "hwq[{5\".l\"f[F] AK");
      Node node1 = new Node((-897), node0, node0, node0, node0, (-938), 4095);
      node1.siblings();
      node0.isNumber();
      node1.isDec();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = Node.newString("CharMatcher.BREAKING_WHITESPACE", (-4176), 100);
      node1.hasChildren();
      node1.useSourceInfoFrom(node2);
      node1.isSetterDef();
      Node node3 = Node.newNumber((-2332.62633803614), 55, 55);
      node3.getChildAtIndex((-2024));
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte) (-85);
      byteArray0[5] = (byte) (-53);
      byteArray0[6] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.newString("Object#Key", 40, 52);
      Node node2 = new Node(126, node1, 55, 4095);
      Node node3 = Node.newString("null", 39, 29);
      node3.isThrow();
      Node.newString(4095, "Object#Element", 1073741805, 29);
      node2.isLabel();
      node1.srcref(node3);
      node1.getChildCount();
      Node node4 = new Node(56, node3);
      // Undeclared exception!
      try { 
        node0.removeChild(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.getIntProp(31);
      node2.getStaticSourceFile();
      node0.getInputId();
      node1.isCatch();
      Node node3 = new Node(36, node2);
      node3.putIntProp(30, 130);
      Node node4 = Node.newNumber((double) 16);
      node1.isEquivalentToTyped(node4);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v", (-287), 56);
      node0.removeProp(56);
      node0.isCase();
      node0.setVarArgs(true);
      Node node1 = Node.newNumber(93.0, 30, 51);
      Node node2 = Node.newNumber((-2173.10284));
      node2.isEquivalentTo(node1, true, false, false);
      Node node3 = new Node(1556, node0, node0, 40, 32);
      node2.checkTreeEqualsImpl(node3);
      Node node4 = Node.newNumber((double) 46);
      node4.isNE();
      Node.newString(4, "Ntn`dz*ZS:v");
      node2.getIntProp(51);
      node1.getCharno();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleErrorReporter0.error("668'ZZ_", "668'ZZ_", 53, 53);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.error("", "", (-123), 29);
      simpleErrorReporter0.error("d!d}$_;]T:H|xwOs?", "unexpected prop id ", (-4185), 40);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber((double) 52, 12, (-253));
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.setSourceEncodedPositionForTree(4095);
      node2.addChildToFront(node1);
      node2.useSourceInfoFrom(node0);
      node1.toString(true, false, true);
      Node node3 = new Node(1836, node2, node0, node2, node0, 46, 2);
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(46, node0, node0, node0);
      node0.isVoid();
      Node node2 = new Node(40);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(42, 57, 48);
      node2.isLabel();
      node0.putIntProp(4095, 2);
      Node node4 = new Node(1929, node3, node2, node2, node3, 43, 37);
      // Undeclared exception!
      try { 
        node2.setString("|k4H'QA1");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h|");
      Node node0 = new Node((-1099), 248, 83);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(92);
      node1.isVarArgs();
      node2.getInputId();
      node0.setInputId((InputId) null);
      node1.isFalse();
      node2.isCatch();
      node2.isEquivalentTo(node1, false, false, false);
      Node node3 = node2.getLastSibling();
      node3.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      node1.isNumber();
      node1.isDec();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node.newString("com.google.javascript.rhino.jstype.JSType$TypePair", (-493), 50);
      node1.hasChildren();
      node1.useSourceInfoFrom(node0);
      node0.isSetterDef();
      Node.newNumber(1344.28062576036, 55, 29);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(154);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(117, (-1846), 117);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("Q", 4, 36);
      node0.hasChildren();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.isSetterDef();
      node0.getChildAtIndex(0);
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node((-4), node0, node0, node0, 0, 1367);
      node1.isBlock();
      node1.getAncestors();
      node1.getBooleanProp(17);
      node0.srcref(node1);
      node1.isEquivalentToShallow(node0);
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setCharno(1);
      Node node3 = Node.newString((-400), "reflected_object", 4, (-493));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isNull();
      node3.getBooleanProp(43);
      Node node4 = new Node(37);
      node1.useSourceInfoFrom(node0);
      node4.isRegExp();
      Node node5 = null;
      try {
        node5 = new Node(53, node1, node0, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = node0.getLastSibling();
      node2.getStaticSourceFile();
      node0.getInputId();
      Node.newString(".<");
      node1.isQualifiedName();
      node1.isVoid();
      Node.newString(".<", 154, 1);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-326), 39, 39);
      Node node1 = new Node(26, node0, node0, (-738), 32);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.getIntProp(42);
      Node node3 = node1.copyInformationFrom(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node3.isQuotedString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isSyntheticBlock();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      Node node5 = node4.copyInformationFrom(node0);
      node4.getJsDocBuilderForNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node5.addSuppression((String) null);
      node2.srcref(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseNoObjectType();
      Node node0 = new Node(103, 103, 410);
      Node node1 = new Node((-1928), node0);
      node0.copyInformationFromForTree(node1);
      node1.isDefaultCase();
      Node node2 = Node.newString(125, "Object#Key", 12, 52);
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("]9", 21, 1073741850);
      Node node1 = Node.newString(53, "]9");
      Node node2 = Node.newString("4*9)8HAfV|i.i?GQaO]", 93, 54);
      node0.isUnscopedQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isLabel();
      node2.putIntProp(16, 42);
      Node node3 = new Node(40, node1, node1, node0, node2);
      node2.getAncestors();
      node0.getBooleanProp((-1833));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node3.setChangeTime(52);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.common.collect.Sets$1");
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, (JSType) templateType0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node3.replaceChild(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString((-405), "r#", 1355, 54);
      node0.isReturn();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = Node.newString("is_dispatcher", 4095, (-405));
      node1.hasChildren();
      node0.useSourceInfoFrom(node1);
      node0.isSetterDef();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(52);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      node0.isIn();
      node0.isFalse();
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-412), node0, node0, node0, 54, 53);
      node0.isBlock();
      node1.getAncestors();
      node1.isWhile();
      Node.newNumber((double) 4095, 2, 2320);
      Node.newString(15, "", 16, 50);
      Node node2 = new Node(2669);
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(93, node0);
      Node node2 = node1.cloneNode();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getEnumParameterType();
      jSDocInfo0.setTypedefType((JSTypeExpression) null);
      node2.setJSDocInfo(jSDocInfo0);
      node2.cloneTree();
      Node.newString("Wq3V", 42, 50);
      node2.isScript();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newString(36, "", 36, 36);
      node0.removeProp(0);
      node0.isCase();
      Node.newString("");
      // Undeclared exception!
      try { 
        node0.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSType0.findPropertyType("Named type with empty name component");
      JSType jSType2 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      JSType.TypePair jSType_TypePair0 = jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSType2.getLeastSupertype(jSTypeArray0[1]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      JSType.isEquivalent(jSType_TypePair0.typeB, jSType1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isSyntheticBlock();
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      node2.isBreak();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isGetterDef();
      node0.isComma();
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = Node.newString(2, "slash_v");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isStringKey();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(130);
      Node node1 = new Node(48, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isThrow();
      Node node3 = Node.newString(43, "$+;!1|6B", 30, 31);
      node0.isLabel();
      Node node4 = node3.srcref(node2);
      node4.getChildCount();
      // Undeclared exception!
      try { 
        node1.removeChild(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(125, 87, 125);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newNumber((-106.855806711), (-2694), Integer.MAX_VALUE);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(46, node0, node0, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newString(47, "Named type with empty name component", (-1846), (-2593));
      node2.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(38, nodeArray0, 47, (-1800));
      node3.setCharno(46);
      node0.removeProp(29);
      node4.isStringKey();
      node2.isDefaultCase();
      node1.isSyntheticBlock();
      Node node5 = new Node(669, 4095, 31);
      node2.checkTreeEquals(node0);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(117, (-1846), 117);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      Node node2 = Node.newString(2, "]9");
      node1.useSourceInfoIfMissingFrom(node2);
      node0.useSourceInfoIfMissingFrom(node1);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(32);
      Node.newNumber((-1.0), 38, 62);
      Node[] nodeArray0 = new Node[19];
      nodeArray0[0] = node1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "msg.jsdoc.function.newnotobject");
      Node node3 = null;
      try {
        node3 = new Node(30, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(49, 49, 1342);
      Node node1 = new Node(5024, node0, node0, node0);
      node1.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newNumber((double) 56);
      Node node4 = new Node((-1999), node1, 29, 47);
      node3.getIntProp(51);
      node0.getStaticSourceFile();
      node4.isCatch();
      node2.putIntProp(42, 39);
      Node.newNumber((-1892.45771461137));
      node2.isEquivalentToTyped(node0);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      Node node5 = null;
      Node node6 = new Node((-2989));
      Node node7 = new Node(114, node6, node6, node3);
      node1.siblings();
      // Undeclared exception!
      try { 
        node6.addChildAfter(node7, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(0, node0, node0, node0, 0, 1367);
      node1.isBlock();
      node1.getAncestors();
      node1.getBooleanProp(17);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      node1.replaceChild(node0, node2);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString("-:|", 93, 7);
      Node node1 = Node.newString(4095, "-:|");
      Node node2 = Node.newString(3662, "-:|");
      node2.isVarArgs();
      node1.removeProp(55);
      node0.isGetElem();
      Node node3 = Node.newString("-:|");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(65535);
      node1.children();
      node3.isVarArgs();
      node1.isExprResult();
      node0.isEquivalentTo(node1);
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Sets$1", (-248), 33);
      node0.getStaticSourceFile();
      Node node1 = new Node(4, node0, (-644), 4);
      Node node2 = new Node(155);
      node1.hasChild(node2);
      Node node3 = node2.copyInformationFrom(node0);
      Node.extractCharno(8);
      node2.isVarArgs();
      node3.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node3.isCast();
      Node node4 = Node.newString("", 39, 32);
      node4.isName();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(16, (-2915), 5034);
      Node node1 = new Node(16, node0, 40, 491);
      Node node2 = new Node(16);
      String string0 = "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition";
      node0.isNot();
      node0.isTry();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isNew();
      Node node3 = new Node(51, node2);
      node1.isNumber();
      String string1 = "New Collection violated the Collection spec";
      Node.newString("New Collection violated the Collection spec");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString(51, "*+PstlTn9!");
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "*+PstlTn9!");
      charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(177);
      Node node1 = Node.newString((-2075), "Ntn`dz*ZS:v", 1354, 55);
      node0.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(38, nodeArray0, 90, 122);
      node1.setCharno(49);
      node1.removeProp(29);
      node0.setVarArgs(false);
      node2.isStringKey();
      node2.isDefaultCase();
      node2.isSyntheticBlock();
      node2.hasOneChild();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals("V:RW}iTq\")?y/-");
      node2.cloneNode();
      node1.isNull();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(49, node2, node0);
      node3.setLength(53);
      node3.hasOneChild();
      node3.getDirectives();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newString("N", (-248), (-248));
      node0.getStaticSourceFile();
      Node node1 = new Node(54, node0, 49, 4);
      Node node2 = new Node(1);
      node2.hasChild(node0);
      Node node3 = node1.copyInformationFrom(node2);
      Node.extractCharno((-314));
      node1.isVarArgs();
      Node node4 = Node.newString("N");
      node4.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node4.setJSDocInfo(jSDocInfo0);
      node0.isCast();
      node1.isName();
      node3.isOr();
      node4.getJSType();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(93, node0);
      Node node2 = node1.cloneNode();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node0.isCast();
      node0.isName();
      node2.isOr();
      Node node4 = new Node(1158, node3);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node0, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(46, node0, node0, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newNumber(93.0);
      Node node4 = new Node((-960), node3, 4095, 1);
      node2.getIntProp(55);
      node3.getStaticSourceFile();
      node3.getInputId();
      node1.isCatch();
      node3.putIntProp((-2514), 56);
      Node.newNumber((double) 30);
      node1.isEquivalentToTyped(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node1.addChildAfter((Node) null, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      int int0 = (-287);
      Node node0 = Node.newString(2980, "Ntn`dz*ZS:v", (-287), 2980);
      node0.putIntProp((-287), 2980);
      Node node1 = new Node(47, node0, node0, node0);
      Node node2 = new Node(2980, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      templateTypeMap0.getTemplateTypeKeyByName((String) null);
      templateTypeMap0.getTemplateTypeKeyByName("Named type with empty name component");
      templateTypeMapReplacer0.caseTemplateType((TemplateType) null);
      node1.setJSType((JSType) null);
      Node node4 = node3.removeChildren();
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node2);
      Node node6 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node3.isAnd();
      Node.newString("Ntn`dz*ZS:v", 31, 42);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTrue();
      node1.addChildAfter(node6, (Node) null);
      try { 
        node5.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString("@I1qRI2|", 52, 52);
      Node node1 = new Node(1554, node0, node0);
      node1.isLabelName();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(1208);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.newString(127, "Object#Element");
      Node node1 = Node.newString(":#$Gv#2");
      node0.isParamList();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(130, 1554, 130);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newString(43, "$+;!1|6B", 30, 64);
      node0.isLabel();
      Node node4 = node3.srcref(node2);
      node4.getChildCount();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`%R");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(93.0, 8, 8);
      Node node1 = node0.cloneNode();
      node1.srcref(node0);
      Node.newString("`%R");
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.getChangeTime();
      node0.isNE();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "POYm");
      node0.getProp(8);
      node0.isSyntheticBlock();
      node0.isSwitch();
      Node.extractCharno(147);
      Node.newString("com.google.common.collect.Sets$1", 458, (-1520));
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node((-2262), node0, node0, node0, 0, 1367);
      node1.isBlock();
      node1.getAncestors();
      node1.getBooleanProp(17);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) stack0);
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EXPR_RESULT");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node((-69), node0, 37, 39);
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = new Node(100, node1);
      Node node3 = node2.removeFirstChild();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(21, 0, (-288));
      Object object0 = new Object();
      node0.getStaticSourceFile();
      node0.isVoid();
      Node node1 = Node.newNumber(3871.2687807586753);
      Node node2 = node0.copyInformationFrom(node1);
      int int0 = Node.DIRECT_EVAL;
      Node node3 = Node.newString(26, "Fej#_(|XbQ", 32, 8);
      node1.getDirectives();
      node3.isWhile();
      Node.newNumber((-3506.390880198), 120, 48);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceEncodedPositionForTree(972);
      node0.setChangeTime(972);
      node0.setOptionalArg(false);
      Node node1 = new Node(40);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(4, node0, (-1736), 0);
      node1.getIntProp(50);
      node2.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(38, "PLf+I", 55, 8);
      node3.isVarArgs();
      node1.isString();
      node1.isNE();
      Node node5 = Node.newString(15, "PLf+I");
      node1.getIntProp(2234);
      node4.getCharno();
      node5.isGetProp();
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString("Ve0!R'\"#:CTP>|w.jI", 0, 47);
      Node node1 = Node.newString("?Ar8nNf^OE(7M", 4, 1);
      Node node2 = new Node(85, node0, node1);
      node2.hasChildren();
      Node.extractCharno(244);
      node2.children();
      node1.isHook();
      node0.type = 1686;
      node2.isLabelName();
      node2.getSourceFileName();
      node0.isThrow();
      node2.children();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(21, 0, (-288));
      Object object0 = new Object();
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 33);
      node3.getAncestor(0);
      node1.isFromExterns();
      node2.isQualifiedName();
      node4.isCall();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("", 1590, 1590);
      Node node1 = Node.newString("", 1590, 355);
      node0.hasChildren();
      Node.extractCharno(36);
      Node node2 = new Node(1239, node1, node1, node0, node0);
      node2.setSourceEncodedPosition(77);
      node1.addChildrenToBack(node2);
      node1.children();
      node0.isHook();
      node1.isLabelName();
      node0.setOptionalArg(false);
      node1.getStaticSourceFile();
      node0.isIn();
      node1.isFalse();
      node1.isFunction();
      node1.isNull();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1239
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      node0.isVoid();
      node0.copyInformationFrom(node0);
      int int0 = Node.DIRECT_EVAL;
      Node node1 = Node.newString(29, "", 53, (-436));
      node1.getDirectives();
      node0.isWhile();
      Node node2 = Node.newNumber((double) 56, 55, 51);
      node2.getDouble();
      node2.isUnscopedQualifiedName();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      node0.removeProp((-2331));
      node0.isContinue();
      node0.isBreak();
      node0.isLabelName();
      node0.isHook();
      node0.isFor();
      node0.isContinue();
      node0.setVarArgs(true);
      Node node1 = Node.newNumber(0.0, 47, 36);
      node0.isEquivalentTo(node1, true, false, true);
      node0.checkTreeEqualsImpl(node1);
      node0.setOptionalArg(true);
      node1.setCharno(30);
      node0.isNoSideEffectsCall();
      Node.newNumber((-533.0));
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "start index");
      Node node0 = Node.newNumber(826.002702707669, 4, 558);
      Node node1 = new Node((-547), node0, node0, node0, 57, 57);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isNE();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -547
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(193.91283655698, 116, 1);
      Node node1 = new Node(42, node0);
      Node node2 = node1.cloneNode();
      node2.getProp(120);
      node0.putProp(3433, (Object) null);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = Node.newString("com.google.javascript.rhino.Node$AncestorIterable$1");
      Node node1 = new Node(43, node0, node0, 57, 57);
      node0.addChildToBack(node1);
      node0.type = 49;
      node0.isDebugger();
      node1.isFalse();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node.mergeLineCharNo(1929, 1929);
      Node node0 = Node.newString("]9", (-1456), 554);
      Node node1 = new Node(2, node0);
      node1.setLength(54);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L,$");
      Node node2 = Node.newNumber((double) (-1456));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.checkTreeEqualsImpl(node1);
      node0.siblings();
      node0.getChangeTime();
      node0.getSourceFileName();
      node0.isArrayLit();
      node2.isIf();
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString("]9", 21, 1073741850);
      Node node1 = Node.newString(53, "]9");
      Node node2 = Node.newString("4*9)8HAfV|i.i?GQaO]", 93, 54);
      node0.isUnscopedQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isLabel();
      node2.putIntProp(16, 42);
      Node node3 = new Node(40, node1, node1, node0, node2);
      Node node4 = null;
      try {
        node4 = new Node(4095, node0, node0, node2, node3, 2, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(0, node0, node0, (-1), 2440);
      Node node2 = node1.cloneNode();
      node0.putProp(2162, node1);
      node0.isName();
      node1.getJsDocBuilderForNode();
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString(1239, "\n\nTree2:\n");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(111, nodeArray0);
      node1.copyInformationFrom(node0);
      Node.newString("\n\nTree2:\n");
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node.newString("Ntn`dz*ZS:v");
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isVoid();
      node2.isEquivalentTo(node1, false, true, true);
      node1.getLastSibling();
      node0.removeChildren();
      Node.newNumber(0.5);
      node0.isQualifiedName();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.isTry();
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node node2 = Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      node3.isVarArgs();
      node0.getJsDocBuilderForNode();
      node2.getBooleanProp(0);
      node4.isThis();
      Node node5 = Node.newNumber((double) 12, (-279), 16);
      Node node6 = node3.copyInformationFromForTree(node5);
      node2.isSyntheticBlock();
      node0.getBooleanProp((-770));
      node1.isQualifiedName();
      node1.isDo();
      node1.isEmpty();
      node6.isGetElem();
      node1.isIf();
      node0.getAncestors();
      node5.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSType0.findPropertyType("Named type with empty name component");
      JSType jSType2 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      JSType.TypePair jSType_TypePair0 = jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      jSType2.getLeastSupertype(jSTypeArray0[1]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      JSType.isEquivalent(jSType_TypePair0.typeB, jSType1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isSyntheticBlock();
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      Node node3 = new Node(112, 29, 57);
      node3.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(120, node0, 32, 4095);
      node1.setLineno(4095);
      Node.extractCharno(38);
      node0.children();
      node1.isFromExterns();
      node1.isLabelName();
      node1.isFromExterns();
      node0.setCharno(122);
      node1.isCatch();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString(41, "New Collection violated the Collection spec", 1805, (-3700));
      node0.mayMutateArguments();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "start index");
      Node node0 = new Node(4);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.newString(57, ":#$Gv#2");
      Node node1 = Node.newString(":#$Gv#2", 32, 36);
      node1.isUnscopedQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isLabel();
      node1.putIntProp(12, 31);
      Node node2 = new Node(51, node0, node0, node1, node1, 31, 148);
      try { 
        node2.setString("start index");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(56, node0, 52, 36);
      Node.newString(95, "", 29, 2);
      Node node2 = Node.newString("");
      node2.wasEmptyNode();
      Node.newString(31, "");
      node2.isFalse();
      Node.newString("&Ni!@IV!W'q`:8^{6", 36, 1032);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.isTry();
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node node2 = Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      node3.isVarArgs();
      node0.getJsDocBuilderForNode();
      node2.getBooleanProp(0);
      node4.isThis();
      Node node5 = Node.newNumber((double) 12, (-279), 16);
      Node node6 = node3.copyInformationFromForTree(node5);
      node0.getBooleanProp((-770));
      node1.isQualifiedName();
      node1.isDo();
      node1.isEmpty();
      node6.isGetElem();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      Node node2 = new Node(29);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isAdd();
      Node node3 = new Node(2, node0);
      node3.getSourceFileName();
      Node node4 = Node.newString(">t{8R_|N_]UB");
      Node node5 = node3.copyInformationFrom(node2);
      node5.getLength();
      Node node6 = node3.useSourceInfoFromForTree(node5);
      node2.setSourceEncodedPositionForTree(54);
      node0.cloneNode();
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node6.putIntProp(30, 2735);
      Node node7 = null;
      try {
        node7 = new Node(42, (Node) null, node2, node5, node4, 40, 3313);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString(51, "*+PstlTn9!");
      node0.isFor();
      Node node1 = new Node((-670));
      node1.isObjectLit();
      node0.srcref(node1);
      Node node2 = Node.newString("d*$X3u=]O?,,>qiE");
      node0.isTry();
      node2.isBlock();
      Node node3 = new Node(111, node2);
      node1.isOr();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString(36, "", 36, 36);
      node0.children();
      node0.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      node0.isString();
      node0.isVoid();
      Node node1 = Node.newString(870, "");
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber(4334.218828023198, (-288), (-425));
      node0.hasChild(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(40, nodeArray0);
      node0.copyInformationFrom(node2);
      int int0 = Node.DIRECT_EVAL;
      node1.mayMutateGlobalStateOrThrow();
      node1.isFromExterns();
      Node.newString("Object#Element", (-670), 55);
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setType(26);
      node0.isDelProp();
      Node node1 = Node.newString("", 43, 222);
      node1.getStaticSourceFile();
      Node node2 = Node.newString(47, "");
      node2.mayMutateGlobalStateOrThrow();
      node0.isNot();
      Node node3 = new Node(1739, node0);
      node3.isTry();
      node1.isBlock();
      Node node4 = new Node(86, node1);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"`");
      Node node1 = new Node(1, node0, node0, node0, node0, 53, 54);
      node1.addSuppression("~99? &r\"`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.addChildrenAfter(node1, node0);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString((-288), "", 1073741823, 21);
      node0.isFor();
      Node node1 = new Node(43);
      node0.isObjectLit();
      node1.srcref(node0);
      Node node2 = Node.newString("PRIVATE");
      node1.isNot();
      node2.isTry();
      node1.isBlock();
      Node node3 = new Node(3780, node1);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setType(26);
      node0.isDelProp();
      Node node1 = Node.newString("", 43, 222);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isQuotedString();
      node0.isReturn();
      node1.getBooleanProp(49);
      Node node2 = new Node((-1513), node0, node0, node0, node1, 53, 19);
      node2.isRegExp();
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("]9", 21, 1073741823);
      node0.removeProp(0);
      Node node1 = new Node(48, node0, 32, 954);
      node1.getIntProp(459);
      node1.getStaticSourceFile();
      node1.getInputId();
      node0.isEquivalentTo(node1, true, true, true);
      node1.setSourceFileForTesting("");
      node1.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(false);
      node0.setCharno(8);
      node1.isNoSideEffectsCall();
      node1.getSourceFileName();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(255, 1073741823, 255);
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(103, nodeArray0, 103, 1073741824);
      int int0 = 1479;
      node0.siblings();
      Node node1 = new Node(4, node0, 1479, 1);
      node0.useSourceInfoFromForTree(node1);
      String string0 = "reflected_object";
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        pipedWriter0.write(43);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(56, node0, 52, 36);
      Node node2 = new Node((-289));
      node1.isObjectLit();
      Node node3 = new Node((-638), node1);
      node3.srcref(node0);
      Node node4 = Node.newString("");
      node4.isNot();
      node4.isTry();
      node1.isNew();
      Node node5 = new Node(50, node3);
      Node node6 = Node.newString("");
      // Undeclared exception!
      try { 
        node6.replaceChildAfter(node1, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeRegistry0.clearTemplateTypeNames();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSTypeArray0[0], jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      jSType0.findPropertyType("Named type with empty name component");
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      jSType0.getTypesUnderShallowInequality(jSTypeArray0[0]);
      jSType1.getLeastSupertype(jSTypeArray0[1]);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      jSTypeArray0[2] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = node0.removeFirstChild();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.getQualifiedName();
      functionType0.isStringObjectType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isSyntheticBlock();
      node0.getStaticSourceFile();
      node1.isIn();
      node1.isFalse();
      node1.isFunction();
      node2.isNull();
      node0.toString(true, false, false);
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChild(node0);
      Node node1 = Node.newString(32, "reflected_object");
      Node.extractCharno(0);
      node0.children();
      node1.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      Node node2 = new Node(39, node1, 760, 4106);
      node2.isNull();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isSwitch();
      node2.isBlock();
      node0.isEmpty();
      node1.isGetElem();
      Node node3 = new Node(50);
      node3.isFalse();
      Node node4 = Node.newString("7CZ4vY.\"7LyY$;", 57, (-471));
      node2.srcrefTree(node4);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node((-3286), nodeArray0);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      node3.children();
      Node.extractCharno(29);
      node1.children();
      node0.putBooleanProp(2080, true);
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newString(47, "Named type with empty name component", (-1846), (-2593));
      node2.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(38, nodeArray0, 47, (-1800));
      node3.setCharno(46);
      node0.removeProp(29);
      node4.isStringKey();
      node2.isDefaultCase();
      node1.isSyntheticBlock();
      node1.isBreak();
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node4);
      node3.getLastChild();
      Node.newNumber(0.0, 130, 46);
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(56, node0, node0, node0, (-1423), 1680);
      node0.detachChildren();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getSourceOffset();
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CONST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node node2 = new Node((-289));
      node1.isObjectLit();
      Node node3 = new Node((-638), node1);
      node3.srcref(node0);
      Node node4 = Node.newString("");
      node4.isNot();
      node4.isTry();
      node1.isBlock();
      Node node5 = new Node(50, node3);
      Node node6 = Node.newString("");
      // Undeclared exception!
      try { 
        node6.replaceChildAfter(node1, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isContinue();
      node0.isNumber();
      node0.isDelProp();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("8IIW[7%>E=,PEz", 124, 137);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isReturn();
      node1.isSwitch();
      Node node2 = new Node(1, (-248), 40);
      Node node3 = new Node(40, node2, node0);
      node3.isIf();
      node0.getIntProp(49);
      Node.extractCharno(560);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h|");
      Node node0 = new Node((-1099), 248, 83);
      node0.isBreak();
      Node node1 = node0.getLastSibling();
      Node node2 = node1.getAncestor(0);
      node1.setType(92);
      node1.isVarArgs();
      node1.isFalse();
      node2.isCatch();
      Node node3 = node2.getLastSibling();
      node3.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber(2801.0, 110, 47);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l4eMj8E~#lBxqaY\"Dud");
      Node node5 = new Node(38, node3, 50, 42);
      node2.getInputId();
      node2.isNull();
      node1.useSourceInfoIfMissingFromForTree(node4);
      node0.isSwitch();
      Node node6 = Node.newString("gLDV$5}&@I>a`x46H$'");
      node6.setLength(1929);
      node3.hasOneChild();
      Node.newString("com.google.javascript.rhino.Node$NumberNode", 30, 3288);
      node4.isFunction();
      node2.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newString("]9", 21, 1073741823);
      node0.removeProp(0);
      node0.isGetterDef();
      Node node1 = Node.newString("]9");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node1.children();
      node0.isVarArgs();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newNumber((double) 93);
      Node node1 = new Node(47, node0, node0, node0, 4095, 15);
      Node node2 = node1.cloneNode();
      node2.getJsDocBuilderForNode();
      node1.putProp(2980, node0);
      node1.isTry();
      node1.mayMutateArguments();
      Node.newString("");
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node0.getInputId();
      node0.isNull();
      node2.isOr();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node3 = new Node(16, node0, node2, node0, 2, 4);
      node3.isRegExp();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node1.removeChild(node0);
      node0.isParamList();
      node0.isFor();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(39);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 39
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node1.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.error("reflected_object", "Object#Element", (-160), 4095);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString(23, "");
      node_SideEffectFlags1.setAllFlags();
      node0.isOptionalArg();
      node0.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags6.areAllFlagsSet();
      node0.isTry();
      node0.isBlock();
      Node node1 = new Node(32768, node0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      String string0 = null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, jSType0);
      jSTypeArray0[4] = (JSType) enumType0;
      jSTypeArray0[5] = jSType0;
      enumType0.getOwnPropertyNames();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs(jSType0, jSTypeArray0);
      // Undeclared exception!
      try { 
        immutableList0.add((JSType) functionType0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(55);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      Node.extractCharno(29);
      node1.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node1.putBooleanProp(33, true);
      node3.isCast();
      node1.isName();
      Node.extractLineno(2197);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = Node.newNumber(2801.0, 110, 47);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l4eMj8E~#lBxqaY\"Dud");
      Node node5 = new Node(38, node3, 50, 42);
      node2.getIntProp(2194);
      node3.getStaticSourceFile();
      node0.getInputId();
      node2.isEquivalentTo(node1, true, false, true);
      node4.setSourceFileForTesting("l4eMj8E~#lBxqaY\"Dud");
      node2.checkTreeEqualsImpl(node3);
      node2.setOptionalArg(false);
      node4.setCharno(50);
      node0.isNoSideEffectsCall();
      node0.getSourceFileName();
      node4.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node1.removeChildren();
      Node node4 = new Node(102, 4090, 2);
      node3.getBooleanProp(2014);
      // Undeclared exception!
      try { 
        node2.setString("com.google.javascript.rhino.jstype.JSType$TypePair");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node((-287));
      node0.putIntProp((-287), 2980);
      Node node1 = new Node(2980, node0, node0, node0, node0, 37, 47);
      node0.removeProp(12);
      node0.isContinue();
      node0.isNumber();
      node1.isDec();
      Node node2 = Node.newString("Ntn`dz*ZS:v", 57, 53);
      node2.isLabel();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node node3 = null;
      try {
        node3 = new Node(77, nodeArray0, 2, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      Node.extractCharno(0);
      node0.children();
      node1.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      Node node2 = new Node(39, node1, 760, 4096);
      node2.isNull();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isSwitch();
      node1.setLength(50);
      node0.hasOneChild();
      node3.getDirectives();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setOptionalArg(true);
      Node node1 = new Node(2);
      node1.getStaticSourceFile();
      Node node2 = new Node(92, node1, (-661), 16);
      node2.isSwitch();
      Node node3 = new Node(38, node2);
      Node.extractCharno(92);
      node1.children();
      node3.isFromExterns();
      node2.isLabelName();
      node0.isQualifiedName();
      node0.isDo();
      node3.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      Node.extractCharno(0);
      node0.children();
      node1.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      Node node2 = new Node(39, node1, 760, 4096);
      node2.copyInformationFrom(node1);
      node2.wasEmptyNode();
      Node.newString("reflected_object", 15, 68);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node.newString(1239, "\n\nTree2:\n");
      Node node0 = new Node(48, 32, 36);
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(4669);
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Element");
      node0.putProp(2980, jSTypeRegistry0);
      node0.isTry();
      node0.mayMutateArguments();
      Node node1 = new Node(8, node0, node0, node0, node0);
      node1.getQualifiedName();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.isParamList();
      node0.isFor();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(39);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 39
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node0.getInputId();
      node0.isNull();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isSwitch();
      Node node4 = Node.newString("");
      node4.setLength(0);
      node3.hasOneChild();
      Node.newString("jsdoc_info", 42, 1);
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isQualifiedName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getString();
      node0.setCharno(2344);
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      node0.removeFirstChild();
      node0.isUnscopedQualifiedName();
      node0.isCall();
      Node node1 = Node.newString(52, "String node not created with Node.newString", 0, 40);
      // Undeclared exception!
      try { 
        node1.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString(23, "");
      node0.isOptionalArg();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags4.areAllFlagsSet();
      node0.isTry();
      node0.isBlock();
      Node node1 = new Node(29, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setOptionalArg(true);
      Node node1 = new Node((-1467));
      node0.checkTreeEqualsImpl(node1);
      Node.newString("", 54, 1);
      Node node2 = new Node(0, node1, 15, 2);
      node0.useSourceInfoIfMissingFrom(node1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(357);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) byteArrayOutputStream0;
      mockPrintStream0.printf(".f\"^|GR,Nn NFmQdXi", objectArray0);
      // Undeclared exception!
      try { 
        node1.appendStringTree(mockPrintStream0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1467
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      String string0 = "4tKS(";
      Node node0 = Node.newString("4tKS(");
      Node node1 = new Node(54, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4, node0, node0, node0, 32, 1163);
      node0.isBlock();
      node0.isEquivalentTo(node1, true, false, false);
      node1.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(true);
      Node node2 = Node.newString(36, "EQUALS", 83, 102);
      node0.isWhile();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isFor();
      Node node3 = new Node(1554);
      node2.isObjectLit();
      Node node4 = node2.srcref(node3);
      node4.detachFromParent();
      node4.isEquivalentToTyped(node1);
      Node node5 = Node.newString("reflected_object");
      node5.setVarArgs(false);
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1554
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(21, 0, (-269));
      Object object0 = new Object();
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 33);
      node4.isVarArgs();
      node0.isString();
      node4.isNE();
      Node node5 = Node.newString((-650), "");
      node5.getIntProp(3471);
      node3.isVar();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      String string0 = "ju582*khpku%";
      Node.newString(46, "ju582*khpku%");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3930
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("", (-950), (-950));
      node0.getStaticSourceFile();
      Node node1 = new Node(2874);
      Node node2 = new Node(581, node0, node0, node0, 29, 63);
      node0.hasChild(node2);
      Node node3 = node2.copyInformationFrom(node0);
      Node.extractCharno(54);
      Node node4 = new Node(93);
      node4.isVarArgs();
      node0.isVoid();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.setJSDocInfo(jSDocInfo0);
      node1.isCast();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node0.getInputId();
      node2.getProp(8);
      node0.isArrayLit();
      node0.useSourceInfoFromForTree(node1);
      node1.isFromExterns();
      node1.getAncestor(1);
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node.extractCharno((-1006));
      node1.children();
      node0.isQualifiedName();
      node0.isWith();
      node1.isDelProp();
      node1.isString();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4, node0, node0, node0, 32, 1163);
      node0.isBlock();
      node0.putBooleanProp(2, false);
      node0.isEquivalentTo(node1, true, false, false);
      node1.checkTreeEqualsImpl(node0);
      Node node2 = new Node(56);
      node0.checkTreeEquals(node1);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(36, 1073741823, 36);
      node0.removeProp(0);
      node0.isCase();
      Node node1 = Node.newString("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node0.getInputId();
      node1.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      Node.extractCharno(0);
      node0.children();
      node1.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      node0.isString();
      node1.isVoid();
      Node.newString(56, "reflected_object");
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = new Node(87855567, 87855567, 87855567);
      Node node1 = new Node((-1427), node0, node0, node0, node0, 43, 43);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString(23, "");
      node0.isOptionalArg();
      node0.mayMutateGlobalStateOrThrow();
      node0.isNot();
      node0.isTry();
      node0.isBlock();
      Node node1 = new Node(29, node0);
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(23);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      boolean boolean0 = false;
      node0.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(12, node0, (-879), 55);
      node1.getIntProp(1);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node2 = Node.newString(37, "", 153, 33);
      node2.isVarArgs();
      node2.isQualifiedName();
      node0.useSourceInfoFrom(node2);
      node2.isDo();
      Node node3 = Node.newNumber((-189.8232646522481), 15, 37);
      Node node4 = null;
      try {
        node4 = new Node(4095, node1, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      Node node1 = new Node(2948, (-928), 110);
      Node node2 = new Node(30, node1);
      node1.isLocalResultCall();
      node2.isEquivalentTo(node0, true, false, false);
      Node node3 = null;
      try {
        node3 = new Node((-1949), node0, node0, node2, node1, 30, 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      node0.copyInformationFrom(node0);
      int int0 = Node.DIRECT_EVAL;
      node0.mayMutateGlobalStateOrThrow();
      node0.setType(47);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(233474);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = new Node(Integer.MIN_VALUE, node0, 31, 54);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = Node.newString("y9@&ds1o*}VNlpct% ", 40, 52);
      Node node4 = new Node(126, node2, 55, 4095);
      node4.getIntProp(1312);
      node0.getStaticSourceFile();
      node2.getInputId();
      node0.isCatch();
      node4.putIntProp((-403), 1);
      Node node5 = Node.newNumber((double) 56);
      node0.isEquivalentToTyped(node5);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node5, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) 0, (-2016), 871);
      Node node1 = new Node(120, node0);
      node1.isQuotedString();
      Node node2 = new Node(8);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node0);
      Node.extractCharno(53);
      node0.isEquivalentTo(node2, true, true, false);
      node2.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newNumber((double) 2);
      node1.isOnlyModifiesThisCall();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node3;
      nodeArray0[6] = node3;
      Node node4 = null;
      try {
        node4 = new Node(57, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      String string0 = "KDFRr";
      Node node0 = Node.newString((-287), "KDFRr");
      node0.putIntProp((-569), (-569));
      Node node1 = Node.newNumber(0.0, 51, 2);
      Node node2 = new Node(110, node1, node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 3454;
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node3;
      nodeArray0[3] = node0;
      Node node4 = null;
      try {
        node4 = new Node(30, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4, node0, node0, node0, 32, 1163);
      node0.isBlock();
      node0.isEquivalentTo(node1, true, false, false);
      node1.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(true);
      node1.setCharno(38);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node2 = Node.newString(36, "EQUALS", 83, 102);
      // Undeclared exception!
      try { 
        node2.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(55);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      Node.extractCharno(29);
      node0.isVarArgs();
      node2.isThis();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      int int0 = (-287);
      Node node0 = Node.newString(2980, "Ntn`dz*ZS:v", (-287), 2980);
      node0.putIntProp((-287), 2980);
      Node node1 = new Node(47, node0, node0, node0);
      Node node2 = new Node(2980, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedHashSet<TemplateType> linkedHashSet0 = new LinkedHashSet<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      templateTypeMap0.getTemplateTypeKeyByName((String) null);
      templateTypeMapReplacer0.caseTemplateType((TemplateType) null);
      node1.setJSType((JSType) null);
      Node node4 = node3.removeChildren();
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node2);
      Node node6 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node3.isAnd();
      Node.newString("Ntn`dz*ZS:v", 31, 42);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTrue();
      try { 
        node5.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node((-287));
      Node node1 = new Node(2980, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(2980, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      node2.getAncestor(48);
      Node node4 = Node.newString(12, "Ntn`dz*ZS:v");
      node1.useSourceInfoIfMissingFrom(node4);
      node2.useSourceInfoIfMissingFrom(node1);
      node4.getJsDocBuilderForNode();
      Node.newNumber((double) 4, 46, 12);
      Node node5 = Node.newString("Ntn`dz*ZS:v", 1, (-287));
      node5.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node6 = null;
      try {
        node6 = new Node(83, node3, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setType(26);
      node0.setWasEmptyNode(true);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      node1.getProp((-3904));
      node3.setSourceEncodedPositionForTree((-1));
      node3.isCase();
      Node.newString("this");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3000
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isContinue();
      node0.isNumber();
      node0.isDelProp();
      Node node1 = Node.newString("8IIW[7%>E=,PEz", 124, 137);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isReturn();
      node0.getBooleanProp(2);
      node1.isRegExp();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = new Node(4669);
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getIntProp(49);
      node0.getStaticSourceFile();
      node0.getInputId();
      node0.isCatch();
      node0.useSourceInfoFrom(node0);
      node0.putIntProp((-854), 3321);
      node0.isEquivalentToTyped(node0);
      Node node1 = Node.newNumber((double) 39, 2, 53);
      Node node2 = new Node(37, node0, node1, 57, (-2653));
      node2.setWasEmptyNode(true);
      node0.hasChild(node2);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setOptionalArg(true);
      Node node1 = new Node(2);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("4tKS(", 12, 56);
      Node node3 = new Node(4095, node2, 52, 1);
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1748);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".f\"^|GR,Nn NFmQdXi", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) node4;
      objectArray0[2] = (Object) node3;
      objectArray0[3] = (Object) node1;
      objectArray0[4] = (Object) node3;
      objectArray0[5] = (Object) node4;
      objectArray0[6] = (Object) byteArrayOutputStream0;
      objectArray0[7] = (Object) node3;
      PrintStream printStream0 = mockPrintStream0.printf("4tKS(", objectArray0);
      node4.appendStringTree(printStream0);
      node1.isVarArgs();
      node2.getProp(1748);
      node2.isArrayLit();
      node4.isFromExterns();
      node0.getAncestor(61);
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(23);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(12, node0, (-879), 55);
      node1.getIntProp(1);
      node0.getStaticSourceFile();
      node0.getInputId();
      Node node2 = Node.newString(37, "", 153, 33);
      node2.isVarArgs();
      node2.isQualifiedName();
      node2.isDo();
      node2.getBooleanProp(1);
      node2.getInputId();
      node2.isThis();
      node0.getBooleanProp(12);
      Node.newString((-2682), "", 38, 1603);
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newNumber((-2466.561049));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&QsytKHG@ HwH&");
      node0.getDouble();
      node0.wasEmptyNode();
      node0.isInstanceOf();
      Node node1 = new Node(15);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("M[#`EmR1v");
      node0.setLength(30);
      Node node1 = new Node(15);
      node0.copyInformationFrom(node1);
      Node.extractCharno(526);
      node1.children();
      node0.isHook();
      node1.isLabelName();
      node1.getSourceFileName();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.isTry();
      Node node1 = new Node(114, node0, node0, node0, node0, (-2714), 4095);
      node1.siblings();
      Node node2 = Node.newString((-3212), "com.google.javascript.rhino.jstype.JSType$TypePair");
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      node3.isVarArgs();
      node0.getJsDocBuilderForNode();
      node2.getBooleanProp(0);
      node4.isThis();
      Node node5 = Node.newNumber((double) 12, (-279), 16);
      Node node6 = node3.copyInformationFromForTree(node5);
      node0.getBooleanProp((-770));
      node1.isQualifiedName();
      node1.isDo();
      node1.isEmpty();
      node6.isGetElem();
      node3.isFalse();
      Node node7 = Node.newString("{...}", 3688, 38);
      node6.srcrefTree(node7);
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4, node0, node0, node0, 32, 1163);
      node0.isBlock();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getAncestors();
      node1.getBooleanProp(1);
      Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1886);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node1.cloneNode();
      node_SideEffectFlags4.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(55);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      Node.extractCharno(29);
      node1.isVarArgs();
      Node node4 = new Node(193);
      Node node5 = node4.copyInformationFromForTree(node3);
      node5.removeFirstChild();
      node0.getInputId();
      Node node6 = new Node(12);
      node6.checkTreeEquals(node0);
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newString(86, "no next sibling.");
      node0.removeProp((-116));
      node0.isContinue();
      node0.isNumber();
      node0.isDec();
      Node node1 = Node.newString("no next sibling.", 51, (-1457));
      node1.isOptionalArg();
      Node node2 = new Node(221, node1, node0, 124, (-1500));
      node2.isLabel();
      node0.isFor();
      Node node3 = node2.removeFirstChild();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(93, node0);
      node1.cloneNode();
      node1.putProp(2980, node0);
      node1.isTry();
      // Undeclared exception!
      try { 
        Node.newString((String) null, 50, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getJsDocBuilderForNode();
      node0.isContinue();
      node0.isNumber();
      Node.extractCharno(53);
      node0.children();
      node0.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.getAncestor((-1462));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node0.setOptionalArg(true);
      node2.setCharno(1);
      Node node3 = Node.newString((-400), "reflected_object", 4, (-493));
      node3.getProp((-490));
      node1.isArrayLit();
      node0.isFromExterns();
      node1.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 108;
      Node[] nodeArray0 = new Node[5];
      Node node0 = null;
      try {
        node0 = new Node(155, nodeArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      node0.detachChildren();
      Node node1 = new Node(30);
      Node node2 = new Node(29);
      node0.isEquivalentToTyped(node2);
      Node node3 = node1.srcref(node0);
      node0.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isDec();
      node0.isQuotedString();
      node0.isBreak();
      node0.isLabelName();
      node0.isDelProp();
      node0.isHook();
      node0.isFor();
      node0.getString();
      node0.isContinue();
      node0.setVarArgs(false);
      node0.toString();
      Node.newString("Not declared as a type name", 0, 47);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node((-287));
      Node node1 = new Node(2980, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(2980, node1, node1);
      node2.copyInformationFromForTree(node1);
      node2.getAncestor(48);
      Node node3 = Node.newString(12, "Ntn`dz*ZS:v");
      node1.useSourceInfoIfMissingFrom(node3);
      node2.useSourceInfoIfMissingFrom(node1);
      node3.getJsDocBuilderForNode();
      Node.newNumber((double) 4, 46, 12);
      Node node4 = Node.newString("Ntn`dz*ZS:v", 1, (-287));
      node4.isAssign();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2980
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(130, 1554, 130);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newString(47, "Named type with empty name component", 1554, (-2593));
      node2.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(38, nodeArray0, 47, (-1800));
      node3.setCharno(46);
      node0.removeProp(29);
      node4.isStringKey();
      node2.isDefaultCase();
      node1.isSyntheticBlock();
      node1.isBreak();
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node4);
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      node0.isQuotedString();
      Node node1 = new Node(49);
      node1.hasChild(node0);
      Node node2 = node1.copyInformationFrom(node0);
      Node.extractCharno((-791));
      node0.isEquivalentTo(node1, false, false, false);
      node2.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newNumber((double) 48);
      node2.isOnlyModifiesThisCall();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)127;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString((-3829), "MUL", (-307), (-307));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isAdd();
      node0.getSourceFileName();
      Node node1 = Node.newString("MUL");
      node0.copyInformationFrom(node1);
      node0.getLength();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      int int0 = (-2084);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node((-363), node0, 300, 37);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -363
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString(3910, "*+PstlTn9!");
      Node.newString("*+PstlTn9!", 53, 103);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, 46, 46);
      Object object0 = new Object();
      node0.putProp(46, object0);
      node0.setType((-2913));
      node0.isQualifiedName();
      Node node1 = new Node(32768, node0, node0, node0, 38, 8);
      node1.getBooleanProp(57);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString(21, "]9", 1073741823, 21);
      node0.isFor();
      Node node1 = new Node(124);
      node1.isObjectLit();
      Node node2 = node1.srcref(node0);
      Node node3 = Node.newString("]9");
      node3.isNot();
      node3.isTry();
      node1.isBlock();
      Node node4 = new Node(38, node2);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node.extractCharno(0);
      Node node0 = null;
      try {
        node0 = new Node(0, (Node) null, (Node) null, (-2016), (-4282));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4, node0, node0, node0, 32, 1163);
      node0.isBlock();
      node0.isEquivalentTo(node1, true, false, false);
      node1.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(true);
      node1.setCharno(38);
      Node.newString(36, "EQUALS", 83, 102);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      node0.putProp(2, "");
      node0.isTry();
      node0.siblings();
      Node node2 = Node.newString(46, "");
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node2);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(125);
      Node.newNumber((-1202.127004447), 38, 51);
      node2.isAssign();
      node4.getString();
      node0.putIntProp(47, 8);
      Set<String> set0 = new HashSet<String>();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "start index");
      Node node0 = Node.newNumber(826.002702707669, 4, 558);
      Node node1 = new Node((-547), node0, node0, node0, 57, 57);
      Node node2 = new Node((-547), node1, 54, 47);
      node2.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -547
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.setCharno((-3198));
      node0.removeProp((-287));
      Node node1 = new Node(2, node0, node0, node0, node0, 38, 4095);
      node1.isFromExterns();
      node1.isQualifiedName();
      node1.putIntProp((-287), 49);
      node0.isGetProp();
      node0.getBooleanProp(1348);
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = new Node(36, 1073741823, 36);
      node0.removeProp(0);
      node0.setChangeTime((-699));
      node0.setOptionalArg(false);
      Node node1 = new Node(40, node0, 627, 627);
      node0.checkTreeEqualsImpl(node1);
      node1.getIntProp(50);
      node1.getStaticSourceFile();
      node1.getInputId();
      Node node2 = Node.newString("");
      Node node3 = Node.newNumber((double) 2);
      node3.isInstanceOf();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      Node node4 = new Node(48, (-513), 32);
      nodeArray0[1] = node4;
      nodeArray0[2] = node3;
      nodeArray0[3] = node2;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      Node node5 = null;
      try {
        node5 = new Node(49, nodeArray0, 53, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node((-287));
      Node node1 = new Node(2980, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(2980, node1, node1);
      node2.copyInformationFromForTree(node1);
      Node node3 = Node.newString(12, "Ntn`dz*ZS:v");
      node1.useSourceInfoIfMissingFrom(node3);
      node2.useSourceInfoIfMissingFrom(node1);
      node3.getJsDocBuilderForNode();
      Node.newNumber((double) 4, 46, 12);
      Node node4 = Node.newString("Ntn`dz*ZS:v", 1, (-287));
      node4.isAssign();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2980
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(55);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      Node.extractCharno(29);
      node1.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node3.isCast();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(65536);
      node0.getSourceOffset();
      node0.siblings();
      node0.isVarArgs();
      node0.isInc();
      node0.isOptionalArg();
      node0.isRegExp();
      node0.isInstanceOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isArrayLit();
      Node node1 = Node.newNumber(0.0);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = new Node(4, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.cloneTree();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      int int0 = Node.CHANGE_TIME;
      Node node0 = Node.newString(56, "");
      node0.isOptionalArg();
      node0.isDelProp();
      node0.isNot();
      node0.isTry();
      node0.isBlock();
      Node node1 = Node.newNumber((double) 30);
      node1.getLength();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newString("opt_arg");
      node0.setQuotedString();
      node0.siblings();
      node0.getString();
      node0.isContinue();
      node0.toString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = Node.newString("opt_arg", 50, 37);
      node0.removeFirstChild();
      Node node2 = node0.srcref(node1);
      Node node3 = Node.newString("opt_arg");
      Node.newString("IsEqualTo(", 3418, (-2105));
      node2.isOptionalArg();
      node0.isLabel();
      node3.isFor();
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      node0.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(42, nodeArray0, 12, 0);
      Node node2 = node1.removeFirstChild();
      node0.copyInformationFrom(node1);
      Node node3 = new Node(51, node0);
      node1.hasChild(node3);
      node0.isEquivalentTo(node1, true, false, false);
      node3.isEquivalentToShallow(node0);
      Node node4 = node1.copyInformationFromForTree(node2);
      node4.isIf();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newString("tSOsbB,>6A)A9m<{");
      node0.setOptionalArg(true);
      node0.mayMutateArguments();
      Node node1 = Node.newNumber((-2614.14293221), (-825), (-3539));
      node1.toStringTree();
      Node.newNumber((double) 31, 42, 4573);
      node1.checkTreeEquals(node0);
      node0.addSuppression("tSOsbB,>6A)A9m<{");
      node1.isOnlyModifiesArgumentsCall();
      Node.extractCharno(3314);
      int int0 = 38;
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, 46, 46);
      Object object0 = new Object();
      node0.putProp(46, object0);
      node0.setType((-2913));
      node0.isQualifiedName();
      node0.isWith();
      node0.isDelProp();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newNumber((-1303.206), Integer.MIN_VALUE, 44);
      node0.getSourceOffset();
      node0.addChildToFront(node0);
      node0.getJSDocInfo();
      node0.isScript();
      Node node1 = null;
      try {
        node1 = new Node(42, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString(110, "CONTINUE", 147, (-2254));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node2);
      Node node6 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node6.isQualifiedName();
      Node node7 = new Node(40, node4, node6, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node7.getDirectives();
      node1.isCatch();
      node4.putIntProp((-184), 22);
      node2.isEquivalentToTyped(node5);
      Node node8 = new Node(47, 40, 57);
      node8.checkTreeTypeAwareEqualsImpl(node3);
      // Undeclared exception!
      try { 
        node5.addChildAfter(node2, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setOptionalArg(true);
      Node node1 = new Node(2);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("4tKS(", 12, 56);
      Node node3 = Node.newString(30, "4tKS(");
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      Node node5 = node0.useSourceInfoIfMissingFrom(node2);
      node2.isVarArgs();
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp((-1700));
      node4.isThis();
      Node node6 = node4.copyInformationFromForTree(node0);
      node3.getBooleanProp(4);
      node5.isQualifiedName();
      node5.isDo();
      node3.isEmpty();
      node6.isGetElem();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("opt_arg");
      node0.setQuotedString();
      node0.siblings();
      node0.getString();
      node0.isContinue();
      node0.toString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-577), nodeArray0, 37, 46);
      node0.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 47
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString(23, "");
      node0.isOptionalArg();
      node0.mayMutateGlobalStateOrThrow();
      node0.isNot();
      Node node1 = new Node(42, node0, node0, node0, node0, 30, 3930);
      node0.children();
      node1.isFromExterns();
      node0.isLabelName();
      node1.isQualifiedName();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = new Node(1, node0, node0, node0, node0, 53, 54);
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.addChildrenAfter(node1, node0);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isCall();
      node0.getInputId();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(149, (-1846), 149);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = Node.newString(47, "Named type with empty name component", (-1846), (-2593));
      node2.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(38, nodeArray0, 47, (-1786));
      node3.setCharno(46);
      node0.removeProp(29);
      node4.isStringKey();
      node2.isDefaultCase();
      node1.isSyntheticBlock();
      node1.isBreak();
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node4);
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString("", (-248), 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node((-3286), nodeArray0);
      node1.hasChild(node2);
      Node node3 = node1.copyInformationFrom(node2);
      node3.children();
      Node.extractCharno(29);
      node1.children();
      node1.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node3.isCast();
      node1.isName();
      node2.getChildBefore(node1);
      Set<String> set0 = jSDocInfo0.getModifies();
      node3.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isComma();
      node0.isScript();
      Object object0 = new Object();
      Node node1 = new Node(54);
      node0.setSourceFileForTesting("");
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(50, node1, node0);
      node2.getIntProp(40);
      node2.getStaticSourceFile();
      InputId inputId0 = new InputId("");
      Node node3 = Node.newString("");
      Node node4 = Node.newString(1, "not a StringNode", 12, 86);
      node1.isVarArgs();
      Node node5 = new Node(30, node3, 39, 43);
      node1.isRegExp();
      node3.setLength(4095);
      Node node6 = new Node((-3457), 39, 1);
      node6.isComma();
      node4.isCast();
      node4.isName();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setType(26);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(2579);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2579
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newNumber((-1303.206), Integer.MIN_VALUE, 44);
      Node node1 = null;
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isContinue();
      node0.isQuotedString();
      node0.isBreak();
      node0.isLabelName();
      node0.isDelProp();
      node0.isHook();
      node0.isFor();
      node0.getString();
      node0.isContinue();
      node0.setVarArgs(true);
      node0.toString();
      Node.newString("Not declared as a type name", 0, 47);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("opt_arg");
      node0.setQuotedString();
      node0.siblings();
      Node node1 = new Node(38);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(21, nodeArray0, 2949, 39);
      Node node3 = node1.srcref(node2);
      node0.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isFor();
      Node node3 = new Node(1554);
      node2.isObjectLit();
      Node node4 = node2.srcref(node3);
      Node node5 = Node.newString("reflected_object");
      node5.isEquivalentTo(node4, false, false, false);
      node4.getInputId();
      Node.newString("reflected_object");
      node4.removeChildren();
      Node.newNumber(2071.18641340502);
      node1.isDo();
      node5.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getVisibility();
      node0.putProp((-3457), (Object) null);
      node0.isFalse();
      Node node1 = new Node(54, 57, 1906);
      Node node2 = new Node(36, node1);
      node2.isLocalResultCall();
      node2.isEquivalentTo(node1, true, true, true);
      node1.setSourceFileForTesting("Object#Element");
      Node node3 = new Node(1733, node2, node2, 57, 4095);
      node3.checkTreeEqualsImpl(node1);
      node1.setOptionalArg(false);
      node3.setCharno(1465);
      Node.newString(1365, "Object#Element", 124, 46);
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      int int0 = Node.DIRECT_EVAL;
      Node node2 = node1.clonePropsFrom(node0);
      node2.getCharno();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isContinue();
      node0.isNumber();
      node0.isDec();
      Node node1 = Node.newString("8IIW[7%>E=,PEz", 124, 161);
      node1.isOptionalArg();
      node1.isLabel();
      node0.isFor();
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = new Node(30, 1073741823, 30);
      node0.removeProp(0);
      node0.isCase();
      Node node1 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node1.setLength(0);
      node0.getIntProp(1);
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString((-287), "com.google.common.collect.SingletonImmutableBiMap");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      node2.wasEmptyNode();
      Node node3 = node2.copyInformationFromForTree(node1);
      node3.checkTreeEquals(node2);
      node2.useSourceInfoIfMissingFromForTree(node2);
      Node node4 = node2.copyInformationFromForTree(node0);
      node1.getBooleanProp(116);
      node0.setString("com.google.common.collect.SingletonImmutableBiMap");
      node4.isQualifiedName();
      node3.getParent();
      Node node5 = null;
      try {
        node5 = new Node(3000, node2, node1, node2, node2, 39, (-993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = new Node(1, node0, node0, node0, node0, 53, 54);
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.addChildrenAfter(node1, node0);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.hasChild(node2);
      node0.getInputId();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setOptionalArg(true);
      Node node1 = new Node(2);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("4tKS(", 12, 56);
      Node node3 = new Node(4095, node2, 52, 1);
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1748);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".f\"^|GR,Nn NFmQdXi", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) node4;
      objectArray0[2] = (Object) node3;
      objectArray0[3] = (Object) node1;
      objectArray0[4] = (Object) node3;
      objectArray0[5] = (Object) node4;
      objectArray0[6] = (Object) byteArrayOutputStream0;
      objectArray0[7] = (Object) node3;
      PrintStream printStream0 = mockPrintStream0.printf("4tKS(", objectArray0);
      node4.appendStringTree(printStream0);
      node1.isVarArgs();
      node3.getBooleanProp(747);
      node3.getInputId();
      node1.isThis();
      node0.getBooleanProp(31);
      Node.newString(2132, "4tKS(", 61, 154);
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setType(26);
      node0.setWasEmptyNode(false);
      Node node1 = new Node(2579);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2579
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setOptionalArg(true);
      Node node1 = new Node(2);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("4tKS(", 12, 56);
      Node node3 = new Node(4095, node2, 52, 1);
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1748);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) node4;
      objectArray0[2] = (Object) node3;
      objectArray0[3] = (Object) node1;
      objectArray0[4] = (Object) node3;
      objectArray0[5] = (Object) node4;
      objectArray0[6] = (Object) byteArrayOutputStream0;
      objectArray0[7] = (Object) node3;
      PrintStream printStream0 = mockPrintStream0.printf("4tKS(", objectArray0);
      node4.appendStringTree(printStream0);
      node1.isVarArgs();
      node3.getBooleanProp(747);
      node3.getInputId();
      node1.isThis();
      node0.getBooleanProp(31);
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      node0.putProp(2, "");
      node0.isTry();
      node0.siblings();
      Node node2 = Node.newString(46, "");
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node2);
      node0.isVarArgs();
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(39);
      Node.newNumber(1.0, 38, 51);
      node2.isAssign();
      node4.getString();
      node0.putIntProp(47, 154);
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      Node.newString(52, "reflected_object", 32, 46);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING reflected_object is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("opt_arg");
      node0.setQuotedString();
      node0.siblings();
      node0.getString();
      node0.isContinue();
      node0.toString();
      Node.newString("STRING opt_arg [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]", 55, 2);
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.javascript.rhino.jstype.JSType$TypePair");
      int int0 = 0;
      node0.removeProp(0);
      node0.isContinue();
      node0.isQuotedString();
      node0.isBreak();
      node0.isLabelName();
      node0.isDelProp();
      node0.isHook();
      node0.isFor();
      Node node1 = new Node((-269));
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.srcref(node1);
      node0.copyInformationFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(83);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      Node node1 = new Node(0, node0, node0, node0, 52, (-175));
      node0.getQualifiedName();
      node0.isQuotedString();
      int int0 = 152;
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      String string0 = "l4eMj8E~#lBxqaY\"Dud";
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      node0.getSourceFileName();
      int int0 = 3591;
      node0.isTypeOf();
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING l4eMj8E~#lBxqaY\"Dud is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      node0.isNot();
      Node node1 = new Node(42, node0, node0, node0, node0, 30, 3930);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("kCR", 1774, 1774);
      node0.isNoSideEffectsCall();
      node0.setWasEmptyNode(true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("kCR");
      node_FileLevelJsDocBuilder0.append("kCR");
      Node node1 = node0.cloneNode();
      node0.getIndexOfChild(node1);
      node0.getIntProp(42);
      node1.getStaticSourceFile();
      node1.getInputId();
      node0.isCatch();
      node0.putIntProp(12, 46);
      node0.isEquivalentToTyped(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      Node node1 = new Node(2948, (-936), 110);
      Node node2 = new Node(30, node1);
      node1.isLocalResultCall();
      node2.isEquivalentTo(node0, true, false, false);
      node0.checkTreeEqualsImpl(node2);
      node1.setOptionalArg(true);
      node2.setCharno(36);
      Node node3 = Node.newString(4095, "!Gh<+.4&$go-O;K+W7", 4, 4095);
      node1.isBlock();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.setLineno(38);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node0.isDo();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = Node.newString("kCR", 1774, 1774);
      Node node1 = Node.newNumber(0.0);
      Node node2 = new Node(1982, node0, node0, node1, 1, 57);
      node1.useSourceInfoFrom(node0);
      Node node3 = null;
      try {
        node3 = new Node(1658, node0, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = new Node(4669);
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.error("Object#Key", "Object#Key", 4095, 30);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isFor();
      Node node3 = new Node(1554);
      node2.isObjectLit();
      Node node4 = node2.srcref(node3);
      Node node5 = node4.copyInformationFromForTree(node3);
      node0.isDefaultCase();
      Node node6 = Node.newString(36, "reflected_object", 0, 15);
      node6.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node7 = new Node(53, nodeArray0, 3930, 14);
      node7.setCharno(55);
      node1.removeProp(40);
      node3.isStringKey();
      node0.isDefaultCase();
      node5.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = null;
      try {
        node0 = new Node(21, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 33);
      node4.isVarArgs();
      node4.isEquivalentToTyped(node3);
      Node node5 = new Node(112, node0, 38, 38);
      node2.isNull();
      node1.useSourceInfoIfMissingFromForTree(node4);
      node0.isSwitch();
      node2.setLength(4827);
      node3.hasOneChild();
      Node.newString("", (-1092), 50);
      node3.isFunction();
      node2.removeProp((-2888));
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      String string0 = "reflected_object";
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.setLineno(38);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      Node node2 = null;
      try {
        node2 = new Node(37, node0, 55, 1299);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(52);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 33);
      node4.isVarArgs();
      Node node5 = new Node(112, node0, 38, 38);
      node5.getSideEffectFlags();
      node2.isNull();
      node1.useSourceInfoIfMissingFromForTree(node4);
      node0.isSwitch();
      node2.setLength(4827);
      node3.hasOneChild();
      Node.newString("", (-1092), 50);
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      Node.newString("com.google.javascript.rhino.Node$NumberNode", 32, 32);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newNumber((-99.417416));
      Node node1 = new Node((-236), node0, node0, node0, 38, 153);
      node1.detachChildren();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        node1.setDouble(54);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -236
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      Node.newString(53, "", (-3301), 0);
      node1.putProp(16, (Object) null);
      node2.putIntProp(31, 236);
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newString("", 21, 1073741823);
      node0.isFor();
      Node node1 = new Node(8388608);
      node1.isObjectLit();
      Node node2 = node1.srcref(node0);
      node0.copyInformationFromForTree(node2);
      Node node3 = Node.newString(51, "", 1, (-353));
      node0.getInputId();
      int int0 = 3930;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node4 = new Node(2097152, nodeArray0, 36, 30);
      node2.setCharno(50);
      node2.removeProp(40);
      Node node5 = null;
      try {
        node5 = new Node(32, node2, node0, node3, node1, 43, 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(117, (-1846), 117);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = node0.getLastSibling();
      node2.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString(".<");
      node3.removeChildren();
      Node.newNumber(1.2);
      node2.isQualifiedName();
      node0.isDo();
      // Undeclared exception!
      try { 
        node3.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node1);
      node2.getType();
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isVarArgs();
      node2.getBooleanProp(310);
      node2.getInputId();
      node2.isThis();
      node1.getBooleanProp(8);
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      Node node5 = new Node(48, 42, 1);
      node1.getBooleanProp(46);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      String string0 = "~99? &r\"h`";
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      Node node2 = new Node(42, node0, (-277), 51);
      node2.hasChild(node0);
      Node node3 = null;
      try {
        node3 = new Node(51, node1, node0, node2, 49, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      node0.putProp(2, "");
      node0.isTry();
      node0.siblings();
      Node node2 = Node.newString(46, "");
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node2);
      node0.isVarArgs();
      node0.getBooleanProp(39);
      node2.isThis();
      node4.copyInformationFromForTree(node0);
      node3.getBooleanProp(1);
      node0.setCharno(11);
      Node node5 = new Node(39);
      node5.isCatch();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node((-1714), node0, 32, 4);
      node1.hasChild(node0);
      Node node2 = node0.copyInformationFrom(node1);
      node1.checkTreeEqualsImpl(node0);
      node1.setOptionalArg(true);
      node2.setCharno(4095);
      Node node3 = Node.newString((-2007), "pypEF5i%[Jdb#-g", 4095, 51);
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isScript();
      node0.putIntProp(48, (-3457));
      Node node1 = new Node(27, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 108;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      Node node3 = null;
      try {
        node3 = new Node(155, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node((-287));
      node0.putIntProp((-287), 2980);
      Node node1 = new Node(2980, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(2980, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      // Undeclared exception!
      try { 
        node0.setString("Ntn`dz*ZS:v");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -287
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString("4tKS(");
      node0.setType((-2786));
      node0.setWasEmptyNode(false);
      Node node1 = new Node(154);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2786
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      int int0 = 1393;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(1393, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      node3.checkTreeEquals(node2);
      node2.useSourceInfoIfMissingFromForTree(node2);
      Node node4 = node2.copyInformationFromForTree(node0);
      node1.getBooleanProp(116);
      node0.setString("Ntn`dz*ZS:v");
      node4.isQualifiedName();
      Node node5 = null;
      try {
        node5 = new Node(3000, node2, node1, node2, node2, 39, (-993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(true);
      node2.setCharno(1);
      Node node3 = Node.newString((-400), "reflected_object", 4, (-493));
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = Node.newString("rflected~_object");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = Node.newString(2, "slash_v");
      node0.isEquivalentToTyped(node1);
      node0.removeProp(154);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString(1073741782, "com.google.javascript.rhino.jstype.JSType$TypePair");
      node0.removeProp(0);
      node0.isContinue();
      node0.isNumber();
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(21);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1073741782
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString("", 102, 1590);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, 52, 36);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node((-3286), nodeArray0);
      node1.hasChild(node2);
      Node node3 = new Node(37, 57, 49);
      node3.children();
      Node.extractCharno(29);
      node1.children();
      node2.getDirectives();
      node1.isVarArgs();
      node0.isTrue();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getSourceName();
      node2.setJSDocInfo(jSDocInfo0);
      node3.isCast();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 33);
      node4.isVarArgs();
      Node node5 = new Node(112, node0, 38, 38);
      node2.isNull();
      node1.useSourceInfoIfMissingFromForTree(node4);
      node0.isSwitch();
      node2.setLength(4827);
      node3.hasOneChild();
      Node.newString("", (-1092), 50);
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node7 = new Node((-1189));
      node5.getInputId();
      node6.toString();
      Node.newString("STRING");
      node3.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setExpose(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node6, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isScript();
      node0.getProp((-6199));
      Node node1 = new Node(54);
      node0.setSourceFileForTesting("");
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(50, node1, node0);
      node2.getIntProp(40);
      node2.getStaticSourceFile();
      node1.getInputId();
      Node node3 = Node.newString("");
      Node.newString(1, "not a StringNode", 12, 86);
      node1.isVarArgs();
      Node node4 = new Node(30, node3, 39, 43);
      node1.isRegExp();
      node3.setLength(4095);
      Node node5 = new Node(46, (-2095), 107);
      node5.hasOneChild();
      Node.newString(50, "");
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      Node node1 = new Node(3930);
      node0.setSourceEncodedPositionForTree((-2060));
      node1.setOptionalArg(false);
      Node node2 = Node.newNumber((double) 56, 1, 43);
      node0.checkTreeEqualsImpl(node1);
      node2.getIntProp(39);
      node0.getStaticSourceFile();
      Node node3 = new Node(50);
      Node node4 = Node.newString("");
      node4.getInputId();
      Node node5 = null;
      try {
        node5 = new Node(91, (Node) null, node4, (Node) null, 50, (-58));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = new Node(55, node1, node1, node0, node1);
      node1.getString();
      node0.isEquivalentToShallow(node1);
      Node node3 = Node.newString(1, "~99? &r\"h`", 12, 54);
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node4.isVarArgs();
      node1.hasChild(node1);
      node2.getInputId();
      node1.toString();
      node2.isThis();
      node3.getBooleanProp(15);
      Node node5 = Node.newString(36, "~99? &r\"h`", 1073741823, 31);
      node5.detachChildren();
      // Undeclared exception!
      try { 
        node5.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = Node.newString(2, "slash_v");
      node0.isEquivalentToTyped(node1);
      node0.removeProp(154);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isScript();
      node0.getProp((-6199));
      node0.setSourceEncodedPositionForTree((-57));
      node0.setChangeTime((-6199));
      node0.setOptionalArg(false);
      Node node1 = Node.newNumber((double) 48, 37, 39);
      node0.checkTreeEqualsImpl(node1);
      node1.getIntProp(1);
      node0.getStaticSourceFile();
      Node node2 = new Node(114);
      node2.getInputId();
      node1.toString();
      Node node3 = Node.newString("");
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node[] nodeArray0 = null;
      Node node0 = null;
      try {
        node0 = new Node(23, (Node[]) null, 23, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = Node.newString("~99? &r\"h`", 57, 29);
      node1.isOptionalArg();
      node2.isLabel();
      Node node3 = Node.newString(3000, "", 87855567, 3000);
      node0.setCharno(86);
      Node node4 = new Node(30, node2, node2, node3, node0);
      node4.removeProp(57);
      Node node5 = null;
      try {
        node5 = new Node(57, node1, node1, node3, node1, 793, 1073741824);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      node2.copyInformationFromForTree(node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3000
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.setLineno(38);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      Node node2 = node1.srcref(node0);
      node0.copyInformationFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      Node node1 = Node.newString(56, "X&\u0004", (-87), 48);
      node1.setCharno(52);
      node1.removeProp(43);
      Node node2 = new Node(49, node1, node1, node0, node1, (-287), 2411);
      node1.children();
      node0.isFromExterns();
      node2.isLabelName();
      node0.isQualifiedName();
      node0.putIntProp(1348, 46);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isFor();
      Node node3 = new Node(1554);
      node2.isObjectLit();
      Node node4 = node2.srcref(node3);
      Node node5 = node4.copyInformationFromForTree(node3);
      node5.isQualifiedName();
      Node node6 = Node.newString(36, "reflected_object", 0, 15);
      node6.getInputId();
      Node[] nodeArray0 = new Node[0];
      Node node7 = new Node(53, nodeArray0, 3930, 14);
      node7.setCharno(55);
      node1.removeProp(40);
      Node node8 = null;
      try {
        node8 = new Node(39, node3, node4, node1, node4, 820, (-3138));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newNumber(354.0619175);
      Node node1 = new Node(0, node0, node0, node0, 52, (-175));
      node1.detachChildren();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getSourceOffset();
      node2.setDouble(2026.70408401792);
      node0.isStringKey();
      node2.isDefaultCase();
      node2.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = node0.cloneNode();
      node0.putProp(2, "");
      node0.addSuppression("");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.isEquivalentToShallow(node2);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      Node node4 = node0.useSourceInfoIfMissingFrom(node3);
      node2.isVarArgs();
      node3.getBooleanProp(914);
      node0.getInputId();
      // Undeclared exception!
      try { 
        node4.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node0.checkTreeEqualsImpl(node1);
      Node node3 = null;
      try {
        node3 = new Node(589, node2, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = Node.newString("", 21, 1073741823);
      node0.removeProp(0);
      node0.isGetterDef();
      Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = new Node(55, node1, node1, node0, node1);
      node0.isEquivalentToShallow(node1);
      Node node3 = Node.newString(1, "~99? &r\"h`", 12, 54);
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node4.isVarArgs();
      node1.hasChild(node1);
      node2.getInputId();
      node1.toString();
      node2.isThis();
      node3.getBooleanProp(15);
      Node node5 = Node.newString(36, "~99? &r\"h`", 1073741823, 31);
      // Undeclared exception!
      try { 
        node5.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString(1073741823, "com.google.javascript.rhino.jstype.JSType$TypePair");
      int int0 = 0;
      node0.removeProp(0);
      node0.isContinue();
      node0.isQuotedString();
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(21);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1073741823
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      node1.isCatch();
      node0.putIntProp(313, 2);
      node0.isEquivalentToShallow(node2);
      node2.getSourceFileName();
      Node node3 = new Node(51);
      node2.addChildrenToFront(node3);
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3930
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      node0.isQuotedString();
      node0.isQualifiedName();
      Node node1 = Node.newString(4095, "70fn", 1, 115);
      node0.setCharno((-441));
      node1.removeProp(4095);
      Node node2 = new Node(625, node1, node0, node1, node0, 4, 120);
      node2.children();
      node2.isFromExterns();
      node0.isLabelName();
      Node.newString(37, "com.google.common.base.Preconditions", 31, 1);
      Node node3 = new Node(39, 313, 39);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      int int0 = (-750);
      Node node1 = new Node((-750));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(119);
      node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      Node node1 = new Node(57);
      node0.removeProp(46);
      Node node2 = new Node(57, node0, node0, 53, 39);
      node2.useSourceInfoIfMissingFrom(node0);
      node0.copyInformationFrom(node1);
      Node node3 = new Node(1, node1, 40, 56);
      node3.putBooleanProp(47, false);
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      node0.removeProp(3346);
      Node node1 = new Node((-90), node0, node0, 0, 44);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.copyInformationFrom(node0);
      node0.putBooleanProp(1102, true);
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      Node node1 = new Node(2948, (-936), 110);
      Node node2 = new Node(30, node1);
      node1.isLocalResultCall();
      Node.newNumber(0.0, 2, 38);
      node0.setSourceEncodedPosition(1132);
      node2.isEquivalentTo(node0, true, false, false);
      Node node3 = node1.getLastSibling();
      node0.getStaticSourceFile();
      InputId inputId0 = new InputId("");
      Node node4 = Node.newString("e:Iv!a`L/WE6\"'3F,");
      node2.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setConsistentIdGenerator(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node4, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      String string0 = "reflected_object";
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node2.getLastSibling();
      node1.getStaticSourceFile();
      node3.getInputId();
      Node.newString("e:Iv!a`L/WE6\"'F,");
      node0.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setConsistentIdGenerator(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.addChildBefore((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      node0.getQualifiedName();
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(3829);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString("");
      Node node4 = Node.newString(37, "", (-2650), 28);
      node4.isVarArgs();
      Node node5 = new Node(112, node0, 38, 38);
      node2.isNull();
      node0.isSwitch();
      node2.setLength(4827);
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node1.getChildBefore(node0);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.children();
      Node.extractCharno(0);
      node2.getBooleanProp((-164));
      node2.getInputId();
      node0.isThis();
      node2.getBooleanProp(16);
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newString("kCR", 1774, 1774);
      node0.isNoSideEffectsCall();
      node0.setWasEmptyNode(false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("kCR");
      node_FileLevelJsDocBuilder0.append("kCR");
      Node node1 = node0.cloneNode();
      node0.getIndexOfChild(node1);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      String string0 = "free_call";
      Node node0 = Node.newString(2076, "free_call");
      node0.isLocalResultCall();
      node0.isUnscopedQualifiedName();
      node0.putProp(39, "free_call");
      node0.isEmpty();
      node0.isDefaultCase();
      Node node1 = new Node(53, node0, node0, node0, 50, 29);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2076
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isScript();
      node0.getProp((-6199));
      node0.setSourceEncodedPositionForTree((-57));
      node0.setChangeTime((-6199));
      node0.setOptionalArg(false);
      Node node1 = Node.newNumber((double) 48, 37, 39);
      node0.checkTreeEqualsImpl(node1);
      node1.getIntProp(1);
      node0.getStaticSourceFile();
      Node node2 = new Node(114);
      node2.getInputId();
      node1.toString();
      Node node3 = Node.newString("");
      node3.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.setLineno(38);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node0.isDo();
      Node node2 = Node.newNumber((double) 43, 29, 11);
      node2.hasChild(node0);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = new Node(48, 42, 1);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      Node node1 = node0.copyInformationFrom(node0);
      int int0 = Node.DIRECT_EVAL;
      node0.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node0.isQualifiedName();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      String string0 = "free_call";
      Node node0 = Node.newString(2076, "free_call");
      node0.isQualifiedName();
      node0.isLocalResultCall();
      node0.isSwitch();
      node0.putProp(39, "free_call");
      node0.isEmpty();
      node0.hasOneChild();
      node0.addSuppression("free_call");
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(53, node0, node0, node0, 50, 29);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2076
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString(1073741823, "com.google.javascript.rhino.jstype.JSType$TypePair");
      int int0 = 0;
      node0.removeProp(0);
      node0.isContinue();
      node0.isQuotedString();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(21);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1073741823
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      Node node0 = Node.newNumber((-2397.995630451));
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(973, node0, node0, node0, node0);
      node1.setSourceFileForTesting("var_args_name");
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 973
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(255, 1073741823, 255);
      node0.isAssign();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "");
      jSTypeArray0[0] = (JSType) objectType0;
      LinkedList<TemplateType> linkedList0 = new LinkedList<TemplateType>();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterable<? extends TemplateType>) linkedList0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("", node0, immutableList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      node0.isQuotedString();
      node0.isQualifiedName();
      Node node1 = Node.newString(4095, "70fn", 1, 115);
      node0.setCharno((-441));
      node1.removeProp(4095);
      Node node2 = new Node(625, node1, node0, node1, node0, 4, 120);
      node2.children();
      node2.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node1.isDo();
      node0.isEmpty();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null, 118, 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = new Node((-269));
      node0.getProp(21);
      node0.setSourceEncodedPositionForTree(0);
      node0.setChangeTime(0);
      node0.setOptionalArg(false);
      Node node1 = new Node(3930);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(12, node1, (-879), 55);
      node2.getIntProp(1);
      node1.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString("");
      node0.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node3, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      node0.isNot();
      Node node1 = new Node(42, node0, node0, node0, node0, 30, 3930);
      node0.children();
      node1.isFromExterns();
      node0.isLabelName();
      node1.isQualifiedName();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(255, 1073741823, 255);
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      Node node1 = new Node(2948, (-936), 110);
      Node node2 = new Node(30, node1);
      node1.isLocalResultCall();
      node2.isEquivalentTo(node0, true, false, true);
      Node node3 = node1.getLastSibling();
      node0.getStaticSourceFile();
      node3.getInputId();
      Node node4 = Node.newString("e:Iv!a`L/WE6\"'3F,");
      node2.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setConsistentIdGenerator(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node4, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node4.isVarArgs();
      node2.getBooleanProp(310);
      node2.getInputId();
      node1.toString();
      node2.isThis();
      node3.getBooleanProp(15);
      Node node5 = Node.newString(36, "~99? &r\"h`", 1073741823, 31);
      // Undeclared exception!
      try { 
        node5.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isOptionalArg();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = new Node((-1287), 32, 32);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(107, (-1846), 107);
      Node node1 = new Node(48, node0);
      node0.isVoid();
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = node0.getLastSibling();
      node2.getStaticSourceFile();
      node0.getInputId();
      Node node3 = Node.newString(".<");
      node3.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node3.setCharno(51);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeEqualsImpl(node0);
      node0.setOptionalArg(true);
      node2.setCharno(1);
      Node node3 = Node.newString((-400), "reflected_object", 4, (-493));
      node3.getProp((-484));
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = Node.newString(2, "Ntn`dz*ZS:v", 2, 56);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node1.children();
      Node.extractCharno((-4202));
      node0.children();
      node3.isVarArgs();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = new Node(12, node0, node0, node0);
      node2.putIntProp(54, 57);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      LinkedHashSet<UnknownType> linkedHashSet0 = new LinkedHashSet<UnknownType>();
      Iterator<UnknownType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node4 = new Node((-297), node3, node1);
      node1.getIndexOfChild(node4);
      node1.isTry();
      node4.siblings();
      node4.copyInformationFromForTree(node3);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.checkTreeEqualsImpl(node2);
      node0.setOptionalArg(true);
      node1.setCharno((-484));
      Node node3 = Node.newString(46, "7<0>DgweTLa@", 36, (-1489));
      node3.getProp((-576));
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.newString(2, "Ntn`dz*ZS:v", 2, 56);
      node0.children();
      Node.extractCharno(16);
      Node node4 = new Node((-910), node2, 1073741823, 4095);
      node4.children();
      node1.isVarArgs();
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      Node node1 = Node.newNumber((double) 1, 36, 3591);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.cloneTree();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      Node node0 = new Node((-248));
      node0.removeProp(1590);
      Node node1 = new Node(0, node0, node0, 36, 30);
      Node node2 = node0.copyInformationFrom(node1);
      node0.putBooleanProp(38, true);
      node1.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.cloneNode();
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isTry();
      node0.siblings();
      String string0 = "";
      Node node1 = Node.newString((-862048943), "");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.addChildrenToFront(node0);
      Node node3 = null;
      try {
        node3 = new Node(30, node0, node2, 44, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      assertEquals(23, node_SideEffectFlags4.valueOf());
      
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      node0.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-1974), nodeArray0, 12, 0);
      node1.removeFirstChild();
      node0.copyInformationFrom(node1);
      Node node2 = new Node(51, node0);
      node1.hasChild(node2);
      node0.isEquivalentTo(node1, true, false, false);
      assertEquals(49152, node0.getSourcePosition());
      
      node2.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.copyInformationFrom(node1);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isVarArgs();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(42, node1, node0, node1, node2, 38, 46);
      node3.isVarArgs();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      Node node0 = new Node((-248));
      node0.removeProp(1590);
      Node node1 = new Node(0, node0, node0, 36, 30);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.copyInformationFrom(node1);
      node0.putBooleanProp(38, true);
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.copyInformationFrom(node1);
      node0.setLineno(38);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node0.isDo();
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(2658, node0, node0, node0, node0, 49, 1373);
      Node node2 = null;
      try {
        node2 = new Node(609, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test740()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      Node node1 = new Node((-1604), node0, 57, 37);
      node1.mayMutateArguments();
      node0.setSourceEncodedPositionForTree(29);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test741()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      node0.hasChild(node0);
      node0.copyInformationFrom(node0);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test742()  throws Throwable  {
      int int0 = (-1566);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setDisposedParameter("3w");
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node((-1566), (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test743()  throws Throwable  {
      String string0 = "free_call";
      Node node0 = Node.newString(2076, "free_call");
      node0.isQualifiedName();
      node0.isLocalResultCall();
      node0.isUnscopedQualifiedName();
      node0.putProp(39, "free_call");
      node0.isEmpty();
      node0.hasOneChild();
      node0.addSuppression("free_call");
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(53, node0, node0, node0, 50, 29);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2076
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test744()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1924);
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test745()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      node0.isFalse();
      node0.isScript();
      Node node1 = Node.newString("", 21, 46);
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test746()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isFor();
      Node node3 = new Node(1554);
      node2.isEquivalentToTyped(node3);
      Node node4 = node2.srcref(node3);
      Node node5 = node4.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test747()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.valueOf();
      Node node0 = Node.newString("", (-2913), (-2497));
      node0.isOptionalArg();
      node0.isLabel();
      node0.isFor();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node((-1974), nodeArray0, 12, 0);
      node1.removeFirstChild();
      node0.copyInformationFrom(node1);
      Node node2 = Node.newString(36, "", 39, 53);
      node1.hasChild(node2);
      node0.isEquivalentTo(node1, true, false, false);
  }

  @Test(timeout = 4000)
  public void test748()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isOptionalArg();
      Node node3 = new Node((-6718), 2, 2827);
      Node node4 = new Node(561, node3);
      node4.isLocalResultCall();
      node0.isEquivalentTo(node4, true, false, true);
      node2.getLastSibling();
      node0.getStaticSourceFile();
      node0.getInputId();
      String string0 = "e:Iv!a`L/WE6\"'3\\F,";
      Node.newString("e:Iv!a`L/WE6\"'3F,");
      node1.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test749()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1924);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber((double) 1924);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "K{Z%5XzZ";
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(2915, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test750()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = Node.newString(2, "Ntn`dz*ZS:v", 2, 56);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node4.checkTreeEqualsImpl(node0);
      node3.setOptionalArg(true);
      node4.setCharno(40);
      Node node5 = Node.newString(0, "Ntn`dz*ZS:v", 52, 64);
      node5.getProp(12);
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test751()  throws Throwable  {
      String string0 = "~99? &r\"h`";
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isVarArgs();
      node3.setVarArgs(false);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test752()  throws Throwable  {
      Node node0 = Node.newString("e:Iv!a`L/WE6\"'3F,");
      node0.removeChildren();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setJaggerModule(true);
      jSDocInfo0.getAssociatedNode();
  }

  @Test(timeout = 4000)
  public void test753()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node((-269));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(83);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -269
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test754()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node1);
      node2.useSourceInfoIfMissingFrom(node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isVarArgs();
      node2.getBooleanProp(310);
      node2.getInputId();
      node2.isThis();
      node1.getBooleanProp(8);
  }

  @Test(timeout = 4000)
  public void test755()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node3.checkTreeEquals(node2);
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = node2.copyInformationFromForTree(node4);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test756()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node3.cloneNode();
      node3.checkTreeEquals(node2);
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = node2.copyInformationFromForTree(node4);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
      try { 
        node6.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test757()  throws Throwable  {
      int int0 = (-2016);
      Node node0 = Node.newNumber(1.0, 0, (-2016));
      String string0 = "70fn";
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(3829);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test758()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentToShallow(node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.isVarArgs();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test759()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1924);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber((double) 1924);
      node0.getProp((-99));
  }

  @Test(timeout = 4000)
  public void test760()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = Node.newString(2, "Ntn`dz*ZS:v", 2, 56);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node4.checkTreeEqualsImpl(node0);
      node3.setOptionalArg(true);
      node4.setCharno(40);
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test761()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      node0.getSourceFileName();
      double double0 = 0.0;
      int int0 = 3591;
      node0.isSyntheticBlock();
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING l4eMj8E~#lBxqaY\"Dud is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test762()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.copyInformationFrom(node1);
      Node.extractCharno(0);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test763()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(21, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isLocalResultCall();
      Node node1 = new Node(12, nodeArray0, 49, 29);
      node1.isVarArgs();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test764()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node3.checkTreeEquals(node2);
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node2);
      node1.isOptionalArg();
      node5.isLabel();
      node1.isNot();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node5;
      Node node6 = null;
      try {
        node6 = new Node(30, nodeArray0, (-570), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test765()  throws Throwable  {
      Node node0 = new Node(1590, (-248), 0);
      node0.removeProp(1590);
      Node node1 = Node.newNumber((-381.0), 85, (-2087));
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test766()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(255, 1073741823, 124);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test767()  throws Throwable  {
      Node node0 = new Node((-1145));
      int int0 = 46;
      // Undeclared exception!
      try { 
        node0.setDouble((-616.4335191691922));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1145
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test768()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node3.checkTreeEquals(node2);
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = node2.copyInformationFromForTree(node4);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      Node node6 = new Node(40, node4, node5, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
      try { 
        node6.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test769()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(21, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(1846);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ADD
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test770()  throws Throwable  {
      int int0 = (-2016);
      Node.newNumber(1.0, 0, (-2016));
      String string0 = "70fn";
      Node node0 = Node.newString("70fn");
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(3829);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test771()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(21, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.isArrayType();
      templateType0.hasAnyTemplateTypes();
      // Undeclared exception!
      try { 
        JSType.toMaybeTemplatizedType((JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test772()  throws Throwable  {
      int int0 = (-1261);
      // Undeclared exception!
      try { 
        Node.newString((-1261), (String) null, (-1261), (-1261));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test773()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      String string0 = "{&3=";
      Node node0 = null;
      try {
        node0 = new Node((-212), (Node) null, (Node) null, (Node) null, (Node) null, 2219, 2219);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test774()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      String string0 = "06]l3wKMC,~$d_l";
      int int0 = 1268;
      Node node0 = new Node(108);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      Node node1 = new Node((-2738), 15, 2);
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
      try {
        node2 = new Node(108, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test775()  throws Throwable  {
      Node node0 = Node.newString("kCR", 1774, 1774);
      node0.isNoSideEffectsCall();
      node0.setWasEmptyNode(false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("kCR");
      node_FileLevelJsDocBuilder0.append("kCR");
      Node node1 = node0.cloneNode();
      node0.getIndexOfChild(node1);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test776()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", 21, 1073741823);
      node0.removeProp(0);
      node0.isContinue();
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(21);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test777()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(116, "");
      Node node1 = new Node(2, node0, node0, node0);
      node1.putIntProp(51, 32);
      node0.getIndexOfChild(node1);
      node0.isTry();
      node0.siblings();
      // Undeclared exception!
      try { 
        node1.copyInformationFromForTree(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test778()  throws Throwable  {
      Node node0 = Node.newString((-287), "Ntn`dz*ZS:v");
      node0.putIntProp((-287), 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0, 37, 47);
      Node node2 = new Node(3000, node1, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = node3.removeChildren();
      node3.checkTreeEquals(node2);
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = node2.copyInformationFromForTree(node4);
      node1.getBooleanProp(189);
      node0.setString("Ntn`dz*ZS:v");
      node5.isQualifiedName();
      node0.addChildToBack(node3);
      Node node6 = null;
      try {
        node6 = new Node(3000, node2, node1, node2, node2, 39, (-980));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test779()  throws Throwable  {
      Node node0 = Node.newString("~99? &r\"h`");
      Node node1 = Node.newString("~99? &r\"h`");
      node1.addSuppression("~99? &r\"h`");
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test780()  throws Throwable  {
      Node node0 = new Node((-1145));
      Node node1 = Node.newString(46, "this:", (-880), (-2401));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setOptionalArg(false);
      node0.setCharno(0);
  }

  @Test(timeout = 4000)
  public void test781()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setType(2548);
      boolean boolean0 = node0.hasMoreThanOneChild();
      assertEquals(2548, node0.getType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test782()  throws Throwable  {
      Node node0 = new Node((-1788), (-1788), 563);
      Node node1 = new Node((-1788), node0);
      Node node2 = new Node(0, node1, node1);
      Node.newString((-1317), "=**DX0B](KWAX#");
      Node.newNumber((double) 53, (-2648), 4095);
      Node node3 = null;
      try {
        node3 = new Node((-1788), node2, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test783()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node((-337), node0, node0, node0, node0);
      Node node2 = new Node((-337), node1, node1);
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test784()  throws Throwable  {
      Node node0 = Node.newString(0, "WzVdb-tj8P!mPb0|u!o", 9, 52);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test785()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(86, "(s+[ih!a:4x`J;");
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node1, node0, 306, 3374);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test786()  throws Throwable  {
      Node node0 = new Node(65536);
      node0.getSourceOffset();
      node0.siblings();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.isVarArgs();
      Node node1 = null;
      try {
        node1 = new Node(124, nodeArray0, 103, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test787()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2603));
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      assertEquals(8, node_SideEffectFlags1.valueOf());
      
      Node node0 = Node.newString("    ", (-91), 2430);
      node0.setIsSyntheticBlock(true);
      node0.isOptionalArg();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      assertFalse(node0.isNumber());
  }

  @Test(timeout = 4000)
  public void test788()  throws Throwable  {
      Node.newString(16, "Ko9\"@f+Q3cOVG", 16, 1395);
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test789()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node0 = Node.newString((-2641), "", 0, 0);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("2z9`", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test790()  throws Throwable  {
      Node node0 = Node.newString("Sv<p,m_@Fj/_9\"k");
      boolean boolean0 = true;
      boolean boolean1 = true;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = null;
      try {
        node1 = new Node(0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test791()  throws Throwable  {
      Node node0 = Node.newString(1241, "");
      Node node1 = new Node(0, node0);
      node1.setIsSyntheticBlock(true);
      assertEquals(0, node1.getType());
      assertEquals(1241, node0.getType());
  }

  @Test(timeout = 4000)
  public void test792()  throws Throwable  {
      Node node0 = Node.newString(" : ", 65536, 65536);
      Node node1 = node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.putIntProp((-538), 52);
      String string0 = "com.google.common.collect.RegularImmutableList";
      Node.newString("");
      String string1 = "9e";
      File file0 = MockFile.createTempFile("vQ\"}lODVXFgGs/s", "9e");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test793()  throws Throwable  {
      Node node0 = Node.newString("reflected_object");
      node0.getStaticSourceFile();
      Node node1 = new Node(57, node0, 57, 2);
      node0.hasChild(node1);
      node0.copyInformationFrom(node1);
      Node.extractCharno(0);
      node0.children();
      node0.isFromExterns();
      node0.isLabelName();
      node0.isQualifiedName();
      node0.isDo();
      assertEquals(57, node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test794()  throws Throwable  {
      Node node0 = Node.newString("l4eMj8E~#lBxqaY\"Dud");
      node0.getSourceFileName();
      double double0 = 0.0;
      int int0 = 3591;
      node0.isNoSideEffectsCall();
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING l4eMj8E~#lBxqaY\"Dud is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test795()  throws Throwable  {
      Node node0 = new Node((-1), (-1), 2056);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test796()  throws Throwable  {
      int int0 = (-450);
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newNumber((double) (-450), (-837), (-837));
      Node node1 = new Node((-837), node0, node0, node0, node0, 21, 1308);
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test797()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(580, (Node) null, (-178), 1234);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test798()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.putProp((-3457), "");
      // Undeclared exception!
      try { 
        node0.getBooleanProp((-3457));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }
}
