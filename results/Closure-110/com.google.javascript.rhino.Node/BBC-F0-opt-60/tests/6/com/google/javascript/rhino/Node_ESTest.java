/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 12 10:09:07 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.PrintStream;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      int int0 = 19;
      Node[] nodeArray0 = new Node[7];
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "lc#*";
      int int0 = (-2082);
      Node node0 = Node.newString("lc#*", (-2082), 11);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) null);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node node1 = new Node(0, node0, 55, 53);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node0.getParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      double double0 = 0.0;
      Node node0 = Node.newNumber(0.0);
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node.extractLineno((-1484));
      Node node0 = new Node(11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node0.setType(3000);
      node0.addChildToFront((Node) null);
      node0.isSetterDef();
      node0.getInputId();
      char[] charArray0 = new char[1];
      char char0 = '7';
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(0, 0, 2191);
      Node node1 = new Node(56);
      node1.isOptionalArg();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.srcref(node0);
      node0.getIntProp(37);
      node0.isSyntheticBlock();
      node1.addChildrenToFront(node0);
      node0.getString();
      node0.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = (-2353);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2353));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      int int1 = 148;
      Node.newString(148, (String) null, 148, 148);
      double double0 = 0.0;
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("OreEV7-y$G", 1720, (-790));
      node0.mayMutateArguments();
      node0.mayMutateArguments();
      node0.getLastChild();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(2268, (Node) null, (Node) null);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1222));
      node0.setSourceEncodedPositionForTree(749);
      Node node1 = new Node((-1222), node0);
      node1.setCharno(3679);
      node0.getIntProp(1030);
      node1.setSideEffectFlags(56);
      String string0 = "l^El";
      Node node2 = Node.newString(string0, node1.FLAG_NO_THROWS, node0.FLAG_ARGUMENTS_UNMODIFIED);
      node0.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("!50]$", 1755, 1755);
      node0.isFalse();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 0;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newString(" oT <");
      Node node1 = new Node(0, (Node) null, node0, 0, 1);
      int int1 = 0;
      jSDocInfo0.getModifies();
      // Undeclared exception!
      try { 
        node0.getBooleanProp(int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.siblings();
      node0.getProp(2006);
      node0.isObjectLit();
      node0.getType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(85);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags4);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, 0);
      node0.getExistingIntProp(0);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      node0.isOptionalArg();
      node0.isString();
      node0.isEmpty();
      node0.isUnscopedQualifiedName();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-4096), (-4096));
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "o ,KtNq1.;c54IKLZM";
      node0.addSuppression("o ,KtNq1.;c54IKLZM");
      boolean boolean0 = node0.isFromExterns();
      int int0 = 281;
      Node node1 = Node.newString((-4096), "", 40, 4392);
      Node node2 = Node.newNumber((double) 1);
      node2.detachFromParent();
      node0.isEquivalentTo(node1, boolean0, boolean0, boolean0);
      stringWriter0.append((CharSequence) string0, node0.FLAG_ARGUMENTS_UNMODIFIED, int0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, node0.INFERRED_FUNCTION);
      char char0 = 'Z';
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString(28, "V|l@U_&dy");
      node2.addChildrenToBack(node4);
      Node.newNumber((double) 49, 40, 1625);
      node3.addChildAfter(node1, node0);
      node0.getInputId();
      node3.isNot();
      node3.getDouble();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString(";O`)1");
      node0.getParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(180);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node0.isCast();
      node0.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = (-1198);
      Node node0 = new Node(0, (Node[]) null, (-3567), 0);
      int int1 = 1777;
      Node node1 = new Node(int0, node0, node0, node0, node0, node0.FLAG_ARGUMENTS_UNMODIFIED, int1);
      node1.type = node0.VAR_ARGS_NAME;
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node1.getExistingIntProp(55);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = Node.newNumber((double) 40, 2, 1675);
      Node node2 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.checkTreeEquals(node2);
      node0.getDirectives();
      node0.isWhile();
      Node node3 = new Node(0, node0, node0);
      node3.wasEmptyNode();
      node3.getLength();
      Node node4 = Node.newString("u", 0, 0);
      node4.addChildrenAfter(node1, (Node) null);
      node0.addChildAfter(node2, node3);
      node0.isString();
      node3.setChangeTime(node2.IS_CONSTANT_NAME);
      node0.isNull();
      node2.isOptionalArg();
      node3.copyInformationFromForTree(node0);
      node1.getLineno();
      node1.isFalse();
      // Undeclared exception!
      try { 
        node2.isCatch();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newString(55, "uV\"@QRqj");
      Node node1 = new Node(102, (Node) null, (Node) null, node0, 0, 0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node((-2600), (Node) null, (-2600), 2913);
      double double0 = (-3462.61031961919);
      Node.newNumber(double0);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newNumber((-1395.216), 0, 0);
      nodeArray0[0] = node0;
      Node node1 = new Node(52, nodeArray0, 40, 30);
      nodeArray0[1] = node1;
      int int1 = 550;
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString(1318, "");
      Node node1 = new Node(0, node0, node0, node0, node0);
      node0.getStaticSourceFile();
      node1.isAdd();
      node1.isAnd();
      node0.isNew();
      node1.isRegExp();
      node0.toStringTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.isSyntheticBlock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1318
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = ",j";
      Node node0 = Node.newString((-300), ",j");
      Node node1 = new Node(0, node0, node0, node0, 0, 53);
      Node node2 = new Node(0, node1, node1, node1, node0);
      boolean boolean0 = true;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
      // Undeclared exception!
      try { 
        node2.setStaticSourceFile(simpleSourceFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString((-1776), "", (-1776), (-1776));
      int int0 = 0;
      node0.setLength(0);
      Locale locale0 = Locale.ROOT;
      ImmutableList<String> immutableList0 = ImmutableList.of("", "6[R-S ZI", ",W/lSU+itM2CTOY}", "", "", ",W/lSU+itM2CTOY}", "\"Hx%x@F#\"mwhRw9b8*", ".negate()", "6[R-S ZI");
      Locale.filterTags((List<Locale.LanguageRange>) null, (Collection<String>) immutableList0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      int int1 = 0;
      node0.setType(int1);
      node0.isCall();
      node0.isName();
      node0.getIntProp(int0);
      double double0 = 0.0;
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(148, 148, 0);
      Node node1 = new Node(2671, node0, node0, 42, 0);
      Node node2 = new Node(102, node1, node0);
      node2.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      Node node1 = Node.newString("VB+mLi$r", 37, 2);
      node0.isWhile();
      node1.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node0.children();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING VB+mLi$r 37 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newNumber((double) 0, 122, 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 13, (-3523));
      JSType.toMaybeTemplateType((JSType) null);
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node2 = enumElementType0.getPropertyNode(templatizedType0.NOT_A_CLASS);
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 0;
      int int1 = 2778;
      Node node0 = new Node(40, (Node[]) null);
      int int2 = 21;
      int int3 = (-1537);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) enumElementType1, (JSType) enumElementType1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[2] = node2;
      Node node3 = new Node(101, nodeArray0, 122, 15);
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber(2362.0, 0, 0);
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString(3061, "b21|Rm2q:V{NIM lYW", (-82), 2574);
      int int0 = 0;
      int int1 = 2167;
      Node node1 = new Node(37, node0, node0, node0, 56, (-2835));
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(53, node0, node0);
      node0.addChildBefore(node2, node2);
      Node node3 = new Node(node0.COLUMN_MASK, int0, int1);
      node0.clonePropsFrom(node3);
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newNumber((-1371.0711828));
      node0.setString("duplicate child");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.valueOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, (Map<TemplateType, JSType>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString(1221, (String) null);
      node0.getChangeTime();
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString("<", 2135, 2135);
      node0.getInputId();
      Node node1 = Node.newString("<");
      node1.setChangeTime(15);
      node1.checkTreeEquals(node0);
      Node node2 = new Node(2135, node0, node0, node0, node0, 0, 55);
      node2.isEquivalentTo(node1);
      node2.getJSType();
      node0.replaceChild(node2, node2);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.getDouble();
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "01S/7Q18}F)5o&*");
      ObjectType objectType1 = jSTypeRegistry0.createObjectType(objectType0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) objectType0;
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) objectType0, jSType0, (JSType) templateType0, (JSType) objectType0, (JSType) templateType0, (JSType) objectType1, jSType0, jSType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType1, (JSType) templateType0, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = Node.newString("u", 0, 0);
      node0.isEquivalentToTyped(node1);
      node1.type = 18;
      node0.isOptionalArg();
      node0.isCatch();
      node0.isEquivalentToShallow(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getProp((-2612));
      Node node1 = new Node(0, node0, node0, 4095, 49);
      node1.copyInformationFromForTree(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("incrdecr", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      node0.addChildToFront(node0);
      node0.isSetterDef();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) enumType0, (JSType) enumType0, (JSType) enumType0, (JSType) enumType1, (JSType) enumType1, (JSType) templateType0, (JSType) enumType0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.getInputId();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      charArray0[5] = '7';
      charArray0[6] = '7';
      charArray0[7] = '7';
      charArray0[8] = '7';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer.wrap((CharSequence) "Unknown class name", 2379, 340);
      node2.appendStringTree(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      Node node2 = Node.newString(" \u00A0\u00AD\u0604\u06DD\u070F\u1680\u180E\u200F\u202F\u2064\u206F\u3000\uF8FF\uFEFF\uFFF9\uFFFB", 54, 30);
      node2.removeChild(node0);
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.siblings();
      Node node1 = new Node(2, node0);
      node1.setCharno(47);
      node0.getIntProp(53);
      node0.setSideEffectFlags(55);
      String string0 = "l^El";
      int int0 = 8388608;
      // Undeclared exception!
      try { 
        Node.newString(string0, node0.QUOTED_PROP, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags8.setMutatesThis();
      int int0 = 49;
      Node node0 = Node.newNumber((double) (-1));
      int int1 = 5;
      Node node1 = new Node(332, node0, node0, 3195, 5);
      Node node2 = new Node(42);
      Node node3 = new Node(46, node1, node0, node1, node2, 42, 77);
      Node node4 = new Node(int1, node0);
      Node node5 = new Node(int0, node4, node4, node1, node1);
      node5.isCast();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString(";O`)1");
      Node node1 = node0.getParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(180);
      Node node2 = new Node(17);
      Node node3 = new Node(54, node0, node2, node0, node0, (-203), 55);
      Node node4 = new Node(8, (Node) null, node0, node3);
      node4.getExistingIntProp(node1.FLAG_LOCAL_RESULTS);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.copyInformationFromForTree(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node3 = Node.newString(28, "V|l@U_&dy");
      node2.addChildrenToBack(node3);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 472;
      Node node0 = Node.newNumber((double) 2231);
      Node node1 = Node.newString(2, "function (");
      Node node2 = new Node(2231, node0, node1, (-136), 36);
      Node node3 = new Node(53, node2, node0, node2);
      Node node4 = new Node(int0, node3);
      boolean boolean0 = true;
      boolean boolean1 = true;
      node4.toString(boolean0, boolean0, boolean1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      node3.isAnd();
      node1.isNew();
      node3.isRegExp();
      node0.toStringTree();
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(1318, "");
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((-3174.045379), (-1508), (-3585));
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.setSourceFileForTesting("Y5");
      node0.getDouble();
      node0.getDouble();
      int int0 = 2816;
      node1.removeProp(int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("OreEV7-y$G", 1720, (-790));
      node0.mayMutateArguments();
      node0.isNumber();
      Node node1 = node0.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("OreEV7-y$G", node0, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSDocInfo jSDocInfo0 = enumElementType0.getOwnPropertyJSDocInfo(enumType0.EMPTY_TYPE_COMPONENT);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      node0.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(true);
      node0.getSourceFileName();
      Node.mergeLineCharNo(57, 2050);
      node0.siblings();
      node0.isAssign();
      Node node1 = new Node((-262), (Node[]) null, 64, 3448);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      node1.copyInformationFrom(node0);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) enumElementType1, (JSType) enumElementType1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[2] = node2;
      node2.setLength(4095);
      node1.addChildBefore(node2, node2);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newNumber(1040.0596516397063);
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("\n\nTree2:\n", (-583), 1);
      node1.addSuppression("\n\nTree2:\n");
      int int0 = Node.FREE_CALL;
      node1.isOptionalArg();
      node1.isString();
      node1.addChildBefore(node0, node0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString("W_w'3>\"z=sR-VA9^t", (-2154), (-2154));
      node0.isNoSideEffectsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.isIn();
      Node node1 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker", 38, 125);
      node1.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber((-1250.0));
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node1.hasMoreThanOneChild();
      node2.setType(39);
      Node node3 = Node.newNumber(3162.5921598736836);
      node0.addChildToFront(node3);
      node0.isSetterDef();
      node0.getInputId();
      CharBuffer charBuffer0 = CharBuffer.wrap((char[]) null);
      int int0 = 1073741823;
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0, node0.SIDE_EFFECTS_FLAGS_MASK, int0);
      // Undeclared exception!
      try { 
        node2.appendStringTree(charBuffer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node.extractLineno((-1484));
      Node node0 = new Node(11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString(24, "q~Dq'5'm-oEw &S?^L[");
      node0.addChildrenToBack(node1);
      node1.setOptionalArg(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      JSDocInfo jSDocInfo2 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo2);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      Node.mergeLineCharNo(3404, 8);
      node1.siblings();
      node1.isAssign();
      Node node2 = new Node(48, nodeArray0, 1, 49);
      node0.isDo();
      nodeArray0[0].getBooleanProp(node0.LAST_PROP);
      nodeArray0[1].useSourceInfoIfMissingFrom(nodeArray0[1]);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      node0.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(true);
      node0.getSourceFileName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      JSType jSType0 = jSTypeRegistry0.createOptionalNullableType(objectType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("VB+mLi$r", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      Node node1 = Node.newString((String) null, 113, 113);
      node0.removeChild(node1);
      Node node2 = new Node(node0.FLAG_NO_THROWS, node0, node0, node1, node0, objectType0.NOT_ENUMDECL, node1.FLAG_ARGUMENTS_UNMODIFIED);
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString(28, "V|l@U_&dy");
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      node0.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(true);
      node0.getSourceFileName();
      Node.mergeLineCharNo(57, 2050);
      node0.siblings();
      node0.isAssign();
      node0.isOnlyModifiesThisCall();
      int int0 = (-262);
      Node[] nodeArray0 = null;
      node0.setString((String) null);
      int int1 = 64;
      int int2 = 3448;
      Node node1 = new Node(int0, nodeArray0, int1, int2);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber((double) 506, 506, (-1661));
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber(0.0, 40, 30);
      node1.setDouble(113);
      node1.isWhile();
      node1.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      Node node2 = new Node(42, node0, node1, 57, 57);
      node2.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(false);
      node2.getSourceFileName();
      Node.mergeLineCharNo(4, 2);
      node1.siblings();
      node2.isAssign();
      Node node3 = new Node(421, (Node[]) null, 64, (-1783));
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1), 49);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(49);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node(32, node0, node0, (-1), 49);
      node1.isNew();
      node0.isTypeOf();
      node1.children();
      node1.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(true);
      node1.getSourceFileName();
      Node.mergeLineCharNo((-1608), 57);
      node0.siblings();
      node1.isAssign();
      Node node2 = new Node((-1484), (Node[]) null, 31, 3198);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newNumber(1040.0596516397063);
      node0.setWasEmptyNode(true);
      Node node1 = Node.newString("\n\nTree2:\n", (-583), 1);
      node1.addSuppression("\n\nTree2:\n");
      node0.getSourceFileName();
      Node.mergeLineCharNo((-500), 49);
      node0.siblings();
      Node node2 = Node.newNumber((double) 55);
      node2.isAssign();
      node1.setLength(36);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.isIn();
      node0.toStringTree();
      Node node1 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker", 38, 125);
      node1.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "OreEV7-y$G";
      Node node0 = new Node(12288);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node0.setType(86);
      Node node1 = new Node((-2289), (Node) null, (Node) null, node0, (Node) null);
      node0.addChildToFront(node1);
      node1.isSetterDef();
      node0.getInputId();
      // Undeclared exception!
      try { 
        CharBuffer.allocate(node1.INPUT_ID);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      enumType0.toMaybeEnumType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setAllFlags();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(0, node0, node0);
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node2 = new Node(38, nodeArray0, 36, (-1850));
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = Node.newString("u", 0, 0);
      node0.isEquivalentToTyped(node1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      node1.appendStringTree(charBuffer0);
      int int0 = 12;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setAllFlags();
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      node0.isNew();
      node0.isDelProp();
      node0.getProp((-2958));
      node0.putProp((-1484), (Object) null);
      Node node1 = new Node(47, node0, node0, node0, node0, 57, 42);
      node1.isSyntheticBlock();
      node0.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1318);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.valueOf();
      node1.removeChild(node0);
      node1.checkTreeEquals(node0);
      node1.setSourceEncodedPosition(12);
      node1.getExistingIntProp(12);
      node0.children();
      node0.isOr();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = new Node(31, node0, 4095, 32);
      Node node2 = node1.copyInformationFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node3 = Node.newString(15, "end index");
      node3.addChildrenToBack(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      node3.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      Node node1 = new Node(111, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = new Node(4095, node2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString(28, "V|l@U_&dy");
      node2.addChildrenToBack(node4);
      Node.newNumber((double) 49, 40, 1625);
      node3.addChildAfter(node1, node0);
      node0.getInputId();
      node3.isNot();
      node3.getDouble();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString(";O`)1");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(180);
      Node node1 = new Node(17);
      Node node2 = new Node(54, node0, node1, node0, node0, (-203), 55);
      Node node3 = new Node(8, node0, node0, node2);
      node3.getExistingIntProp(node0.FLAG_LOCAL_RESULTS);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = "u";
      Node node0 = Node.newString("u");
      node0.children();
      Node node1 = new Node(79, node0, node0, (-1543), 57);
      Node node2 = Node.newString((-1484), "");
      node2.getSideEffectFlags();
      node2.isEquivalentToTyped(node0);
      node1.isOptionalArg();
      node1.addChildToBack(node0);
      Node node3 = node1.getChildAtIndex(node2.QUOTED_PROP);
      node3.detachFromParent();
      node1.isUnscopedQualifiedName();
      int int0 = 83;
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(4095, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = new Node(31, node1, node2, node0);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isVarArgs();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(28, "V|l@U_&dy");
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker", 0, 0);
      node0.isEquivalentToTyped(node1);
      node1.type = 18;
      node0.isOptionalArg();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("!50]$", 1755, 1755);
      node0.isFalse();
      Node node1 = Node.newString(4, "!50]$");
      node0.addChildToFront(node1);
      node0.isSetterDef();
      node0.getInputId();
      node0.clonePropsFrom(node1);
      Node node2 = node0.removeFirstChild();
      node2.getSideEffectFlags();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.newNumber(0.5, 54, 46);
      Node node4 = Node.newString("qo");
      Node node5 = new Node(15, node3, node2, node4, 31, 12);
      node5.checkTreeEquals(node2);
      node2.getDirectives();
      double double0 = 0.0;
      Node node6 = Node.newNumber(double0, node0.QUOTED_PROP, node2.SIDE_EFFECTS_FLAGS_MASK);
      // Undeclared exception!
      try { 
        node6.isWhile();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = Node.newString(53, "VOID_TYPE");
      node1.addChildrenToBack(node0);
      Node node2 = Node.newNumber((-1033.931371175), 4, 15);
      node2.getInputId();
      node2.isNot();
      node1.getDouble();
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(100);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags7.setMutatesGlobalState();
      node_SideEffectFlags7.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags6);
      node3.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString(";O`)1");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(180);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node0.isCast();
      node0.hasChild(node0);
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      node0.isVoid();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isEquivalentTo(node0, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "01S/7Q18}F)5)o&*");
      ObjectType objectType1 = ObjectType.cast(templateType0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) objectType0;
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) objectType0, jSType0, (JSType) templateType0, (JSType) objectType0, (JSType) templateType0, (JSType) objectType1, jSType0, jSType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType1, (JSType) templateType0, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(100, node0, node0, node0, node0, 265, 12);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.addSuppression("ZPe");
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      node1.isOptionalArg();
      node1.isString();
      node1.addChildBefore(node0, node1);
      nodeArray0[0].isCatch();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeTemplateType((JSType) null);
      node0.isName();
      node1.setWasEmptyNode(false);
      node1.getSourceFileName();
      Node.mergeLineCharNo(50, 477);
      node1.siblings();
      node0.isAssign();
      node1.isOnlyModifiesThisCall();
      Node[] nodeArray0 = null;
      node1.setString((String) null);
      int int0 = 65536;
      Node node2 = new Node(node1.FLAG_GLOBAL_STATE_UNMODIFIED, nodeArray0, node1.CHANGE_TIME, int0);
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(154, (Node) null);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = ", ...";
      Node node0 = Node.newString(29, ", ...");
      Node node1 = new Node(29, node0, 43, 53);
      node0.getAncestor((-738));
      int int0 = 280;
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 98, 98);
      node0.setQuotedString();
      node0.getSideEffectFlags();
      String string0 = "com.google.javascript.rhino.jstype.NamespaceType";
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("u", 46, 173);
      node1.isEquivalentToTyped(node0);
      node0.isOptionalArg();
      node0.isCatch();
      node0.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isEquivalentTo(node0, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      node0.getQualifiedName();
      Node node1 = new Node((-1), 1784, 4095);
      node1.isName();
      node0.setWasEmptyNode(false);
      Node node2 = new Node(49, 32, 782);
      node2.getSourceFileName();
      Node.mergeLineCharNo(34, 2);
      node0.siblings();
      node0.isAssign();
      node2.isOnlyModifiesThisCall();
      Node[] nodeArray0 = null;
      node1.setString("u");
      int int0 = (-1);
      int int1 = 415;
      Node node3 = new Node(int0, nodeArray0, node1.FLAG_THIS_UNMODIFIED, int1);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      Node node1 = new Node(57, node0, 57, 29);
      node1.isOptionalArg();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.getLineno();
      node0.isFalse();
      node2.isCatch();
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.getIndexOfChild(node2);
      node0.getLastChild();
      node3.isInstanceOf();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(56);
      node1.isOptionalArg();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.srcref(node0);
      node0.isSyntheticBlock();
      node1.addChildrenToFront(node0);
      node0.getString();
      node0.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node0.isName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.isTypeOf();
      node0.children();
      node0.getQualifiedName();
      node0.isName();
      node0.setWasEmptyNode(true);
      node0.setWasEmptyNode(true);
      node0.getSourceFileName();
      Node.mergeLineCharNo(12, (-428));
      node0.siblings();
      node0.isAssign();
      Node node1 = new Node((-1430), (Node[]) null, 1925, 4095);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node.newNumber((-1.0));
      Node node0 = Node.newNumber((double) 37);
      node0.isOr();
      node0.toStringTree();
      node0.removeFirstChild();
      Node node1 = new Node((-1965));
      node1.isOptionalArg();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString(";O`)1");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(180);
      node0.putProp(2964, node_SideEffectFlags0);
      Node node1 = new Node(2, node0, node0, node0, node0, 35, 31);
      node0.isSyntheticBlock();
      node1.getDouble();
      int int0 = (-466);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(int0);
      int int1 = (-1179);
      Node.SideEffectFlags node_SideEffectFlags2 = null;
      try {
        node_SideEffectFlags2 = new Node.SideEffectFlags(int1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      node0.isNew();
      node0.isDelProp();
      node0.getProp((-2958));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-365));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags5.setMutatesThis();
      node0.isCast();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = new Node(48, nodeArray0, 113, 52);
      node0.hasChild(node1);
      nodeArray0[4].getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(49);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node((-1), node0, node0, node0);
      Node.newString(4095, "$H/bZ>.");
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(28);
      node0.isAssignAdd();
      node0.isReturn();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("<", 2135, 2135);
      node0.getInputId();
      Node node1 = Node.newString("<");
      JSType.toMaybeTemplateType((JSType) null);
      node1.isName();
      node1.setWasEmptyNode(false);
      node1.getSourceFileName();
      Node.mergeLineCharNo(2, 42);
      node0.isAssign();
      node0.isOnlyModifiesThisCall();
      node0.setString("Not declared as a constructor");
      Node node2 = new Node(432, (Node[]) null, 57, 15);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1799);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node0.setType(96);
      Node node1 = Node.newNumber(1.0);
      node0.addChildToFront(node1);
      node1.isFor();
      node0.getInputId();
      CharBuffer.wrap((char[]) null);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      int int0 = 48;
      node0.getProp(48);
      node0.getBooleanProp((-511));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node((-3433), nodeArray0, 124, 2);
      node0.isEquivalentTo(node1);
      node0.setLength(int0);
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        nodeArray0[1].getLength();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber(1768.222775951976, 113, 506);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(1768.222775951976);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      node0.isNew();
      node0.getString();
      node0.isTypeOf();
      node0.children();
      String string0 = "prototype";
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(55);
      node_SideEffectFlags5.setThrows();
      node0.isCall();
      node_SideEffectFlags4.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      node0.isNew();
      node0.isDelProp();
      node0.isNumber();
      Node node1 = node0.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("first new child has existing parent", (Node) null, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      String string0 = "this";
      JSDocInfo jSDocInfo0 = enumElementType0.getOwnPropertyJSDocInfo(string0);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("<", 2135, 2135);
      node0.getInputId();
      Node node1 = Node.newString("<");
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      node1.isName();
      node1.setWasEmptyNode(false);
      node1.getLength();
      Node node2 = Node.newString("6ejA=", 2171, 281);
      Node node3 = null;
      node1.addChildrenAfter(node2, node2);
      String string0 = "u";
      Node node4 = Node.newString(node1.NO_SIDE_EFFECTS, string0);
      node0.addChildAfter(node4, node2);
      node4.isString();
      int int0 = (-1823);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node1.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
      node1.setType(39);
      Node node3 = Node.newNumber(3162.5921598736836);
      node0.addChildToFront(node3);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(36);
      node0.isString();
      node3.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString("u");
      node0.setSourceEncodedPositionForTree(749);
      Node node1 = new Node(32, node0);
      node0.setCharno(861);
      node0.getIntProp(4095);
      node1.removeChildren();
      node0.setSideEffectFlags(12);
      node1.setSideEffectFlags(node0.COLUMN_BITS);
      String string0 = "u";
      int int0 = 113;
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(30, node0, 55, 53);
      node0.useSourceInfoFromForTree(node1);
      node0.getJSType();
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0);
      node0.getSourceFileName();
      node2.removeProp(4095);
      node1.setSourceEncodedPosition(1530);
      node2.setSourceEncodedPosition(38);
      node1.removeProp(0);
      node1.setCharno(0);
      node0.getQualifiedName();
      node0.putIntProp((-3143), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node0.isCall();
      node_SideEffectFlags2.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeTemplateType((JSType) null);
      node0.isName();
      node1.setWasEmptyNode(false);
      node1.getSourceFileName();
      node1.setVarArgs(false);
      node0.setIsSyntheticBlock(false);
      node1.hasOneChild();
      node0.srcref(node1);
      Node node2 = Node.newString("Tggm6lEys89+=  @");
      node2.isOr();
      node0.isStringKey();
      node1.isLabelName();
      node2.setString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.isBreak();
      node0.isName();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      node0.isOr();
      Node node1 = new Node(147, node0, node0, node0, 38, (-1331));
      node1.isStringKey();
      node0.isLabelName();
      node1.setString((String) null);
      node1.isBreak();
      node1.isName();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.newNumber(0.5, 54, 46);
      Node.newString("qo");
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node0.isCast();
      node3.hasChild(node2);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      node0.isOr();
      Node node1 = new Node(147, node0, node0, node0, 38, (-1331));
      node1.isStringKey();
      node0.isLabelName();
      node1.isNoSideEffectsCall();
      node0.getLength();
      boolean boolean0 = false;
      Node node2 = new Node(39, node1, node0, node1, 39, 42);
      node2.setVarArgs(boolean0);
      boolean boolean1 = false;
      node2.setIsSyntheticBlock(boolean1);
      node0.hasOneChild();
      // Undeclared exception!
      try { 
        node1.srcref(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      node0.isNew();
      node0.isDelProp();
      node0.isNumber();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseAllType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      Node node2 = new Node(32, nodeArray0);
      node0.addChildToFront(node2);
      nodeArray0[3].isSetterDef();
      nodeArray0[6].getInputId();
      // Undeclared exception!
      try { 
        node2.clonePropsFrom(nodeArray0[5]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = Node.newNumber((double) 40, 2, 1675);
      Node node2 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.checkTreeEquals(node2);
      node0.getDirectives();
      node0.isWhile();
      Node node3 = new Node(0, node0, node0);
      node3.wasEmptyNode();
      node3.getLength();
      node3.cloneNode();
      Node node4 = Node.newString("u", 0, 0);
      node4.addChildrenAfter(node1, (Node) null);
      node0.addChildAfter(node2, node3);
      node0.isString();
      node3.setChangeTime(node2.IS_CONSTANT_NAME);
      node0.isNull();
      node2.isOptionalArg();
      node3.copyInformationFromForTree(node0);
      node1.getLineno();
      node1.isFalse();
      // Undeclared exception!
      try { 
        node2.isCatch();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("V`?V1smq2#B1o");
      node0.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setAllFlags();
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags6);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node0.isOptionalArg();
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.getLineno();
      Node.newString("Y33tn", (-468), 50);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = Node.newString("", 16, 57);
      node1.isFalse();
      Node node3 = Node.newString(57, "jsAdO");
      node3.addChildToFront(node0);
      node1.getInputId();
      Node node4 = node2.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node4.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("Yat7/?!1bI4 o", 1755, 1755);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber((double) 32, (-2626), (-693));
      node1.checkTreeTypeAwareEqualsImpl(node3);
      Node.newString("PoFmI");
      node2.isCast();
      node1.isSwitch();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = new Node(36, node0, 50, 40);
      Node node2 = new Node(53, node1);
      node0.useSourceInfoFromForTree(node2);
      node1.copyInformationFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.newNumber((double) 32, 10, (-1878));
      Node node3 = Node.newString("qo");
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(105);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node1.isCast();
      node3.hasChild(node2);
      Node node4 = new Node(32, node2, 36, 1737);
      node4.getSourceOffset();
      Node.AncestorIterable node_AncestorIterable0 = node4.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "<";
      Node node0 = Node.newString("<", 2135, 2135);
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node0.setType(379);
      Node node1 = Node.newNumber((double) 2);
      node0.addChildToFront(node1);
      node0.isSetterDef();
      node0.getInputId();
      CharBuffer.wrap((char[]) null);
      int int0 = 3086;
      int int1 = (-790);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) string0, int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString("");
      node0.setChangeTime(114);
      Node node2 = new Node(41, node1, node0, node0, node1);
      node2.checkTreeEquals(node0);
      Node node3 = new Node(1460, node1, node0, node0, node2);
      int int0 = (-1037);
      Node node4 = new Node(node0.FREE_CALL, node1, node3, node2, node3, int0, node2.LAST_PROP);
      node3.isEquivalentTo(node0);
      node3.getJSType();
      node1.replaceChild(node2, node2);
      // Undeclared exception!
      try { 
        node3.isEmpty();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      boolean boolean0 = node0.isIn();
      node0.toStringTree();
      Node node1 = Node.newString("/\"[xW9/", 54, 29);
      Node node2 = new Node(2, (Node[]) null);
      node2.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      jSDocInfo0.getSuppressions();
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(2135, (Node) null, (Node) null, (Node) null, (Node) null, 4095, (-1644));
      node1.isFromExterns();
      node1.srcref(node0);
      // Undeclared exception!
      try { 
        node1.isGetElem();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(73, node0, node0, node0, node0, 265, 12);
      node1.isComma();
      Node node2 = node1.getFirstChild();
      node2.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1643);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString(28, "V|l@U_&dy", 1931, 28);
      Node node1 = new Node(1643, node0, node0, node0, node0, (-843), 90);
      node1.hasMoreThanOneChild();
      node0.isOnlyModifiesArgumentsCall();
      node1.setType((-1599));
      Node node2 = Node.newNumber((-2685.03));
      node2.addChildToFront(node1);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(39);
      node1.isString();
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(621, 29, 621);
      Node node1 = new Node(38);
      node1.isOptionalArg();
      Node node2 = node1.srcref(node0);
      node0.getIntProp((-2181));
      node1.isSyntheticBlock();
      node2.addChildrenToFront(node0);
      node1.getString();
      node1.mayMutateGlobalStateOrThrow();
      node2.getString();
      // Undeclared exception!
      try { 
        node0.isVar();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 29 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.toStringTree();
      Node node1 = new Node(54);
      Node.mergeLineCharNo((-4502), (-705));
      Iterable<Node> iterable0 = new TreeSet<Node>();
      node1.isAssign();
      node1.isOnlyModifiesThisCall();
      Node[] nodeArray0 = null;
      node1.setString("o#]hsG[QrcBs'FvbRss");
      Node node2 = new Node(node0.REFLECTED_OBJECT, nodeArray0, node1.INFERRED_FUNCTION, node0.IS_DISPATCHER);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node node2 = Node.newString(40, "$H/bZ>.");
      node1.isAssignAdd();
      node2.isCatch();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(8, node0);
      node1.isOptionalArg();
      node1.srcref(node0);
      node0.getIntProp(37);
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node4 = Node.newNumber(0.5, 54, 46);
      String string0 = "qo";
      Node.newString("qo");
      node_SideEffectFlags0.setReturnsTainted();
      node3.isOptionalArg();
      Node node5 = new Node(39);
      node5.isCatch();
      node1.isEquivalentToShallow(node2);
      Node node6 = new Node(37, node0, node4);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node6.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(string0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node.newString("", 47, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newNumber(1.0, (-701), 2543);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      Node.newString("Object#Element");
      node3.isCast();
      node1.isSwitch();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node4.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      node0.getLineno();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry1.createOptionalParameters((JSType[]) null);
      Node node3 = new Node(node2.SIDE_EFFECTS_ALL, nodeArray0[0]);
      node3.isFalse();
      node0.isCatch();
      node0.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.getProp(2006);
      node0.isObjectLit();
      Node node1 = new Node(1, node0, node0, node0, 1, 12);
      Node node2 = new Node(16, node0, node1, 42, 46);
      node0.isEquivalentToTyped(node2);
      // Undeclared exception!
      try { 
        node1.isOptionalArg();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isEquivalentTo(node0, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeTemplateType((JSType) null);
      node0.isName();
      node0.setWasEmptyNode(false);
      node0.getSourceFileName();
      node0.setIsSyntheticBlock(false);
      node0.hasOneChild();
      node0.srcref(node0);
      Node node1 = Node.newString("Tggm6lEys89+=  @");
      node1.isOr();
      node0.isStringKey();
      node1.setString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.isBreak();
      node0.isName();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node node1 = new Node(37, node0, node0, node0, node0);
      Node node2 = new Node(37, node1, 56, 0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("u");
      node0.getDouble();
      int int0 = 959;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING u is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = Node.newString("5H9uSW%Qg", 1749, 2);
      node0.mayMutateArguments();
      node3.mayMutateArguments();
      node2.getLastChild();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      node3.isFor();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Object object0 = new Object();
      node0.isObjectLit();
      node0.getType();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.siblings();
      Node node1 = new Node(2, node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.collect.Maps$KeySet");
      Node node2 = Node.newNumber((double) 2, 56, 57);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node.newString("PoFmI");
      node1.isCast();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node2.isSwitch();
      node2.getSourceOffset();
      Node.newNumber((-1.0));
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-4096), (-4096));
      StringWriter stringWriter0 = new StringWriter();
      node0.addSuppression("|,fBQtF)F@");
      node0.isFromExterns();
      Node node1 = Node.newString((-4096), "|,fBQtF)F@", 40, 4392);
      Node node2 = Node.newNumber((double) 1);
      node2.setChangeTime((-1300));
      Node[] nodeArray0 = new Node[3];
      Node node3 = Node.newNumber(0.0, 56, 91);
      nodeArray0[0] = node3;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[1] = null;
      nodeArray0[2] = node1;
      Node node4 = new Node(53, nodeArray0);
      Node node5 = new Node(node1.INCRDECR_PROP, node1, node0, node4, node0);
      nodeArray0[2].checkTreeEquals(nodeArray0[1]);
      int int0 = 3331;
      Node node6 = new Node(int0, nodeArray0[1], node1, nodeArray0[0], node2, node2.DIRECTIVES, node0.SYNTHETIC_BLOCK_PROP);
      node0.isEquivalentTo(nodeArray0[1]);
      nodeArray0[2].isHook();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = Node.newNumber((double) 29, 123, 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags(43);
      node_SideEffectFlags4.setThrows();
      node0.isCall();
      node_SideEffectFlags0.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node2 = new Node(30, node1, node0, node1, 49, 41);
      node2.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString(0, "IuyGh/");
      node0.setWasEmptyNode(false);
      node0.getIntProp(3949);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2079);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node node1 = new Node(50, node0, 26, 54);
      node0.isOptionalArg();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getIndexOfChild(node3);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = new Node(8, node0, node0, node0);
      node1.setDirectives((Set<String>) null);
      node0.siblings();
      Node node2 = new Node(31, node0);
      node0.getIntProp(node2.DIRECT_EVAL);
      int int0 = 132;
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = new Node((-1939), node0, 43, 1);
      Node node2 = new Node((-1939), node1, node1, node0, node1);
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = Node.newNumber((double) 29, 123, 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags(43);
      node_SideEffectFlags4.setThrows();
      node0.isCall();
      node_SideEffectFlags0.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node2 = new Node(30, node1, node0, node1, 49, 41);
      node2.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node node2 = Node.newString(4095, "$H/bZ>.");
      node2.isAssignAdd();
      node0.isCatch();
      Node node3 = new Node(0, node0, node2, 32, 29);
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = Node.newNumber((double) 40, 2, 1675);
      Node node2 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.checkTreeEquals(node2);
      node0.getDirectives();
      node0.isWhile();
      Node node3 = new Node(48, node0, node1, 48, 2506);
      node3.copyInformationFromForTree(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.JSDocInfo$Marker", true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = jSTypeRegistry0.createParameters((JSType[]) null);
      node4.setStaticSourceFile(simpleSourceFile0);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = Node.newNumber((double) 29, 123, 1);
      node1.putBooleanProp(36, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags(43);
      node_SideEffectFlags4.setThrows();
      node0.isCall();
      node_SideEffectFlags0.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node2 = new Node(30, node1, node0, node1, 47, 41);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node node3 = Node.newString("FUNCTION", 15, 85);
      node1.isEquivalentToTyped(node3);
      node0.isOptionalArg();
      node2.isCatch();
      node1.isEquivalentToShallow(node0);
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = ", ...";
      Node node0 = Node.newString(29, ", ...");
      Node node1 = new Node(29, node0, 43, 53);
      node0.getAncestor(4095);
      node1.setSideEffectFlags(280);
      node0.getJsDocBuilderForNode();
      String string1 = "q&2f";
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      Node node1 = new Node(147, node0, node0, node0, 38, (-1331));
      node1.isStringKey();
      node1.getAncestors();
      node1.getChangeTime();
      node0.setString("");
      node1.isBreak();
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isBlock();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber((double) 16, 1946, 15);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node.newString("Object#Element");
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node node1 = new Node(37, node0, node0, node0, node0);
      Node node2 = new Node(37, node1, 56, 0);
      node2.getJsDocBuilderForNode();
      node2.children();
      node1.getQualifiedName();
      node0.isName();
      node1.setWasEmptyNode(true);
      node2.getSourceFileName();
      Node.mergeLineCharNo(30, 1);
      node0.setString((String) null);
      node2.isBreak();
      node2.isName();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(280);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node node2 = Node.newString(40, "$H/bZ>.");
      node1.isAssignAdd();
      node2.isCatch();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Object object0 = new Object();
      node0.isObjectLit();
      Node node1 = Node.newString("Bc^_vvO3HfwpK[", 34, 15);
      node0.useSourceInfoIfMissingFromForTree(node1);
      String string0 = "l^El";
      Node node2 = Node.newString("amrl#i", 43, 49);
      node2.addChildrenAfter(node1, node1);
      int int0 = 1272;
      Node node3 = Node.newString(string0, node0.VAR_ARGS_NAME, int0);
      node3.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(60, node0, node0, node0);
      node1.putBooleanProp(96, false);
      Node node2 = Node.newString(40, "$H/bZ>.");
      node1.isParamList();
      node2.isCatch();
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TreeSet<String> treeSet1 = new TreeSet<String>();
      Object object0 = new Object();
      node0.isObjectLit();
      node0.getType();
      node0.isGetterDef();
      node0.setLineno((-2934));
      node0.isBreak();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString("u", 57, 54);
      node0.isEquivalentToTyped(node1);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals("u");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.toStringTree();
      Node node1 = new Node(54);
      node0.isEquivalentToTyped(node1);
      node0.isOptionalArg();
      node1.isCatch();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      node0.isOr();
      Node node1 = new Node(147, node0, node0, node0, 38, (-1331));
      node1.isStringKey();
      node0.isLabelName();
      node1.addChildAfter(node0, node0);
      String string0 = null;
      node1.setString(string0);
      node1.isBreak();
      node1.isName();
      // Undeclared exception!
      try { 
        node1.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("OreEV7-y$G", 1720, (-790));
      Node node1 = new Node(4095, node0, node0, node0);
      Node node2 = Node.newString(101, "free_call");
      node0.isAssignAdd();
      node2.isCatch();
      node2.mayMutateGlobalStateOrThrow();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setDouble((-1.0));
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node((-134), node0, node0, (-790), 29);
      node0.isNew();
      node1.isTypeOf();
      node1.children();
      node0.getQualifiedName();
      node1.isName();
      Node.newString((String) null, 56, 114);
      node1.isString();
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      int int0 = (-450);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(30, node0, 55, 53);
      node0.useSourceInfoFromForTree(node1);
      node0.getJSType();
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0);
      node0.getSourceFileName();
      node2.removeProp(4095);
      node1.setSourceEncodedPosition(1530);
      node2.setSourceEncodedPosition(38);
      node1.removeProp(0);
      node1.setCharno(0);
      node0.getQualifiedName();
      node0.putIntProp((-3143), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node0.isCall();
      node_SideEffectFlags2.areAllFlagsSet();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.getSourceOffset();
      Node.extractLineno(778);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(280);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node node2 = Node.newString(2, "VOID_TYPE");
      node2.addChildrenToBack(node0);
      node1.isVoid();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = Node.newString((-681), "");
      node1.isAssignAdd();
      node1.isDo();
      node0.mayMutateGlobalStateOrThrow();
      node1.isTrue();
      node0.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.toStringTree();
      Node node1 = new Node(54);
      node0.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo((-4502), (-705));
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node1.isAssign();
      node1.isOnlyModifiesThisCall();
      node0.getSideEffectFlags();
      node0.isSetterDef();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(24, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node2.detachFromParent();
      node1.removeFirstChild();
      String string0 = "o#]hsG[QrcBs'FvbRss";
      node2.setString("o#]hsG[QrcBs'FvbRss");
      Node node3 = new Node((-859), (Node[]) null, 39, 52);
      Node node4 = Node.newString(node2.SLASH_V, string0);
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeTemplateType((JSType) null);
      node0.isName();
      node1.setWasEmptyNode(false);
      node1.getSourceFileName();
      node0.putBooleanProp((-3143), true);
      Node node2 = Node.newString(1048, "Object#Key");
      node1.isParamList();
      node1.isCatch();
      node1.mayMutateGlobalStateOrThrow();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, 300);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(0.0);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node(1, node0, node0, 36, 46);
      node1.isNew();
      node0.isTypeOf();
      node1.children();
      node0.getQualifiedName();
      node1.isName();
      Node.newString("com.google.javascript.rhino.Node$NumberNode", 1, 1);
      node1.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = Node.newString(37, "u", 126, (-692));
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(60, node0, node0, node0);
      node1.isEquivalentToTyped(node0);
      node1.getIntProp(26);
      node1.putBooleanProp(96, false);
      Node node2 = Node.newString(40, "$H/bZ>.");
      node1.isParamList();
      node2.isCatch();
      node0.mayMutateGlobalStateOrThrow();
      node1.getAncestor(126);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      String string0 = "!50]$";
      Node node0 = Node.newNumber((double) 1675, 1675, 1755);
      node0.checkTreeEquals(node0);
      node0.getDirectives();
      node0.isWhile();
      Node node1 = new Node(248, node0, node0);
      node0.wasEmptyNode();
      node0.getLength();
      node1.getIntProp(46);
      Node node2 = Node.newString("", 57, 743);
      Node node3 = null;
      Node node4 = new Node(16, node1, (Node) null, node0);
      node2.addChildrenAfter(node4, node4);
      node1.addChildAfter(node0, node3);
      node4.isString();
      node1.getType();
      // Undeclared exception!
      try { 
        node4.isGetterDef();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.toStringTree();
      Node node1 = new Node(54);
      node0.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      node0.children();
      node1.getQualifiedName();
      node0.isName();
      Node node2 = Node.newString("1[W\"FN6HM!)%>", 113, 116);
      node1.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node2.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node0.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getProp((-2612));
      Object object0 = new Object();
      node0.isObjectLit();
      node0.getType();
      node0.isGetterDef();
      Node node1 = Node.newNumber(0.0, 53, 15);
      node1.setLineno(0);
      node1.isBreak();
      node0.isComma();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      node3.isFor();
      node3.getChildAtIndex((-1073741824));
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString("u", 57, 54);
      node0.isEquivalentToTyped(node1);
      node0.isOptionalArg();
      node0.isFromExterns();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals("u");
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.setDouble(0.0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      Node node1 = new Node(57, node0, 57, 29);
      node1.isOptionalArg();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.getLineno();
      node0.isFalse();
      node2.isCatch();
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.getIndexOfChild(node2);
      node0.getLastChild();
      node3.isInstanceOf();
      node3.getLastChild();
      node2.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("OreEV7-y$G", 1720, (-790));
      Node node1 = new Node(4095, node0, node0, node0);
      Node node2 = Node.newString(101, "free_call");
      node0.isAssignAdd();
      node1.isBlock();
      node2.mayMutateGlobalStateOrThrow();
      node0.isTrue();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.newNumber(0.5, 54, 46);
      Node.newNumber((double) 1, 30, 46);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      Node node4 = Node.newString("1RkNOuZ+");
      Node node5 = new Node(37, node3, node1);
      node5.isEquivalentTo(node4, false, false, true);
      node5.isHook();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(1720);
      node0.isObjectLit();
      Node node1 = Node.newString("Bc^_vvO3HfwpK[", 4095, 125);
      Node node2 = Node.newString("y-{4WtzMkF", 49, 6);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      String string0 = "amrl#i";
      Node.newString("%U(rs''", 32, 1935);
      node3.addChildrenAfter(node2, node2);
      int int0 = 105;
      Node.newString(string0, node2.COLUMN_MASK, int0);
      node1.removeChild(node3);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node node1 = new Node(37, node0, node0, node0, node0);
      Node node2 = new Node(30, node0, 2236, 55);
      int int0 = (-1505);
      node1.getAncestor(int0);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node0.COLUMN_MASK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node node1 = new Node(37, node0, node0, node0, node0);
      Node node2 = new Node(37, node1, 56, 0);
      node2.getJsDocBuilderForNode();
      node2.children();
      node1.getQualifiedName();
      node0.isName();
      node1.setWasEmptyNode(true);
      node2.getSourceFileName();
      JSType.toMaybeTemplatizedType((JSType) null);
      node2.setDouble((-2024.271));
      node2.getType();
      String string0 = "u";
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isBlock();
      node0.isVar();
      Node node1 = Node.newNumber((double) 32, 36, 899);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplateType((JSType) null);
      node1.isName();
      node0.getSourceFileName();
      node1.setIsSyntheticBlock(true);
      node1.hasOneChild();
      Node node2 = node1.srcref(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = Node.newString("");
      Node[] nodeArray0 = new Node[1];
      Node node4 = new Node((-595), node2, node1, node1);
      nodeArray0[0] = node4;
      Node node5 = new Node(29, nodeArray0, 1, 50);
      node5.isCast();
      node3.isSwitch();
      node4.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("UWuQ]EoQxz");
      node0.isQuotedString();
      node_FileLevelJsDocBuilder0.append("CZUyF&=*nv`} $G\"");
      node0.isLabelName();
      node0.setString("UWuQ]EoQxz");
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo((Node) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      String string0 = "com.google.common.collect.Maps$KeySet";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-1190), (-1190));
      node0.isOnlyModifiesArgumentsCall();
      node0.setDouble(32.0);
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(1092, "g#gZ>'dx", 1092, (-1354));
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.AbstractSetMultimap", 147, (-1574));
      node0.getIntProp((-1574));
      node0.getBooleanProp((-1574));
      node0.mayMutateArguments();
      node0.isInc();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      String string0 = "\\rwG^*978*U";
      node0.addSuppression(string0);
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1), 49);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(49);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node(32, node0, node0, (-1), 49);
      node1.isNew();
      node0.isTypeOf();
      node1.children();
      node1.getQualifiedName();
      node0.isName();
      Node node2 = Node.newString((String) null, 57, 43);
      node2.isString();
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      // Undeclared exception!
      try { 
        node0.setJSDocInfo(jSDocInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getIndexOfChild(node0);
      node2.getLastChild();
      node2.isInstanceOf();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("u", 0, (-3));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.isQuotedString();
      node_FileLevelJsDocBuilder0.append("Should not call getLineOffset with line number ");
      node0.isLabelName();
      node0.setString("u");
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(2.00011828448085);
      node0.isQualifiedName();
      node0.isOr();
      node0.isVar();
      Node node1 = Node.newNumber((double) 40, 2, 1675);
      Node node2 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.checkTreeEquals(node2);
      node0.getDirectives();
      node0.isWhile();
      node2.getString();
      Node node3 = new Node(0, node0, node0);
      node3.wasEmptyNode();
      node3.getLength();
      node3.isOptionalArg();
      node0.isCatch();
      node2.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jsdoc_info");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%");
      Node node0 = new Node(100);
      Node node1 = Node.newString("7=qUgI/4H:}'-v@?){");
      Node node2 = node0.removeChildAfter(node1);
      node1.getSourceFileName();
      node2.getParent();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(30, node0, 55, 53);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.getJSType();
      Node node3 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0);
      node0.getSourceFileName();
      node3.removeProp(4095);
      node1.setSourceEncodedPosition(1530);
      node3.setSourceEncodedPosition(38);
      node1.removeProp(0);
      node1.setCharno(0);
      node0.getQualifiedName();
      node0.putIntProp((-3143), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isLabelName();
      node2.setString("+'_K_p");
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node node3 = Node.newNumber((double) 55);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node1.addChildToFront(node2);
      node3.isSetterDef();
      node3.setLineno(56);
      node0.isBreak();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3118));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = new Node((-3650));
      node0.isAssignAdd();
      node1.isReturn();
      node0.getChildAtIndex(51);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      node3.isGetterDef();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      node0.isFalse();
      node0.isCatch();
      Node node1 = new Node(24, node0, node0, node0, 1, 54);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getIndexOfChild(node1);
      Node node3 = Node.newString("length");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node2;
      nodeArray0[2] = node3;
      nodeArray0[3] = node1;
      nodeArray0[4] = node3;
      Node node4 = new Node(8, nodeArray0[1]);
      nodeArray0[5] = node4;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node node1 = new Node(37, node0, node0, node0, node0);
      node1.setSideEffectFlags(40);
      Node node2 = new Node(37, node1, 56, 0);
      node2.getJsDocBuilderForNode();
      node2.children();
      node1.getQualifiedName();
      node0.isName();
      node1.setWasEmptyNode(true);
      node2.getSourceFileName();
      Node.mergeLineCharNo(30, 1);
      node2.siblings();
      node2.isAssign();
      node1.isOnlyModifiesThisCall();
      node1.setString("String node not created with Node.newString");
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isHook();
      node1.toString(false, true, true);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.newNumber((double) 55);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      node3.getChildAtIndex((-1073741824));
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.getIntProp(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString("u", 57, 54);
      node0.isEquivalentToTyped(node1);
      node0.isOptionalArg();
      node0.isFromExterns();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isBreak();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node2.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isHook();
      node0.getSourceOffset();
      node1.hasMoreThanOneChild();
      node0.isQuotedString();
      node1.isLocalResultCall();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(24, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.getSideEffectFlags();
      node1.cloneTree();
      node2.isQuotedString();
      node1.isLocalResultCall();
      node0.getBooleanProp(56);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node0.getLength();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node1.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
      node1.setType(39);
      node1.isOptionalArg();
      node2.isCatch();
      node1.isEquivalentToShallow(node2);
      node1.isContinue();
      node0.setSideEffectFlags(15);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isHook();
      node1.toString(false, false, true);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isCall();
      node0.isCast();
      node1.getInputId();
      node1.isHook();
      node0.toString(false, true, true);
      node1.useSourceInfoFromForTree(node0);
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node1 = node0.cloneTree();
      Node node2 = new Node(4095, node1, node0, node0, 37, 4);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node1.getJSDocInfo();
      Node.extractLineno(53);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.JSDocInfo$Marker";
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.setSourceEncodedPositionForTree((-4601));
      node0.isEquivalentToTyped((Node) null);
      node0.isTry();
      int int0 = 83;
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.getSideEffectFlags();
      Node node3 = node1.cloneTree();
      node2.isTry();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.getProp(56);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node node1 = Node.newString(307, "");
      node0.isAssignAdd();
      node1.isDo();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node2 = new Node(667, nodeArray0);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isFromExterns();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAssignAdd();
      node2.isReturn();
      Node node4 = new Node(36);
      node2.getChildBefore(node4);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isEquivalentTo(node0, false, false, false);
      node0.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = node0.useSourceInfoIfMissingFrom((Node) null);
      node1.getString();
      // Undeclared exception!
      try { 
        node0.isString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(73, node0, node0, node0, node0, 265, 12);
      Node.newString(52, "'\"4/!6,~(n{", 37, 607);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setSourceFileForTesting("'\"4/!6,~(n{");
      node1.toString(false, false, true);
      Node node2 = new Node(node1.IS_CONSTANT_NAME);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node3.isAdd();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(30, node0, 55, 53);
      node0.useSourceInfoFromForTree(node1);
      node0.getJSType();
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0);
      node0.getSourceFileName();
      node2.removeProp(4095);
      node1.setSourceEncodedPosition(1530);
      node2.setSourceEncodedPosition(38);
      node2.cloneNode();
      node1.removeProp(0);
      node1.setCharno(0);
      node0.getQualifiedName();
      node0.putIntProp((-3143), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node0.isCall();
      node0.getSourceOffset();
      Node.extractLineno(778);
      node2.isNot();
      Node.newNumber(522.234, 47, 2);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isCall();
      node0.isCast();
      node1.getSourceOffset();
      node1.getInputId();
      node1.isHook();
      node0.toString(false, true, true);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isAdd();
      node2.getChildAtIndex(37);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(128, 128, 57);
      Node node1 = new Node(128, node0, node0, node0, (-2199), 43);
      Node node2 = node1.cloneTree();
      node0.setWasEmptyNode(false);
      node2.setDouble(2);
      node2.getStaticSourceFile();
      node0.hasOneChild();
      node2.isDec();
      double double0 = (-427.0820734134065);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(",@gFb>.9ze``$r]-4", 30, 87855567);
      Node node1 = new Node(964, node0, node0);
      Node node2 = new Node(964, node1, 309, (-1));
      Node node3 = new Node(87855567, node2, node2, 16, 572);
      node3.putProp(51, node0);
      node3.cloneTree();
      Node node4 = new Node(87855567, node3, node0, node0, (-908), 49);
      node4.isQualifiedName();
      node2.isName();
      String string0 = "";
      int int0 = 38;
      Node node5 = Node.newString(node3.IS_CONSTANT_NAME, string0, node0.STATIC_SOURCE_FILE, int0);
      node5.addChildToBack(node1);
      node3.isNoSideEffectsCall();
      node3.children();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newString("KUWI/Mk*dK5/-Z", 917, (-588));
      Node node1 = new Node(917, node0);
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(49, node0, node0, node0, node0, 1363, 12);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getSideEffectFlags();
      node1.cloneTree();
      node0.isTry();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      node1.isSetterDef();
      node0.setLineno(49);
      node0.isBreak();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = node1.getLastChild();
      node2.isNew();
      node2.getAncestor((-1152));
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3118));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(1.0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Node node1 = node0.copyInformationFromForTree((Node) null);
      int int0 = 4095;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.ORIGINALNAME_PROP, int0, node0.FLAG_THIS_UNMODIFIED);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node(81);
      Node node1 = new Node(108, node0, node0, node0, 54, 1);
      node1.replaceChild(node0, node0);
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0, (-1), (-1));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = jSDocInfo0.getAssociatedNode();
      node0.addChildrenAfter((Node) null, (Node) null);
      int int0 = 48;
      Node node2 = new Node(int0, node1, node1, node1);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString(49, "", 49, 482);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(40, node0, node0, node0);
      node0.putBooleanProp(1803, false);
      Node node2 = Node.newString(4095, "");
      node2.isParamList();
      node0.mayMutateGlobalStateOrThrow();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isFromExterns();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node1.removeChildren();
      Node node3 = Node.newString(1073741824, "com.google.javascript.rhino.JSDocInfo$Marker");
      node3.checkTreeTypeAwareEqualsImpl(node2);
      Node.newString("PoFmI");
      node1.isSwitch();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhinC.JSDocInfo$Marker");
      node0.isInc();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = Node.newNumber((double) 37, 15, 53);
      Node node2 = Node.newString("");
      Node node3 = Node.newNumber((double) 2, 4095, 57);
      Node node4 = new Node(4095, node3, node1, node3, node2, 46, 39);
      node2.isEquivalentTo(node1, true, true, true);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
      Node node0 = new Node((-2043));
      node0.isReturn();
      Node node1 = new Node(52);
      Node node2 = new Node(118, node0, node1, node0, 1, 56);
      node2.getChildBefore(node0);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.srcref(node2);
      node2.getIndexOfChild((Node) null);
      Node node3 = node2.getLastChild();
      node3.isInstanceOf();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      node1.getDirectives();
      node0.isWhile();
      Node node2 = new Node(56, node0, node1);
      node1.wasEmptyNode();
      node1.getLength();
      Node node3 = Node.newString("", 120, (-1092));
      node0.addChildrenAfter(node0, (Node) null);
      nodeArray0[0].addChildAfter(node0, node3);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.JSDocInfo$Marker";
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      int int0 = (-91);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(49, node0, node0, node0, node0, 1363, 12);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getSideEffectFlags();
      Node node3 = node1.cloneTree();
      node3.isOnlyModifiesArgumentsCall();
      node0.isTry();
      node0.isDefaultCase();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEquivalentTo(node1, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isQualifiedName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      node0.clonePropsFrom(node1);
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "01S/7Q18}F)5o&*");
      node0.cloneNode();
      ObjectType objectType1 = jSTypeRegistry0.createObjectType(objectType0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) objectType0;
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) objectType0, jSType0, (JSType) templateType0, (JSType) objectType0, (JSType) templateType0, (JSType) objectType1, jSType0, jSType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType1, (JSType) templateType0, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(49);
      node0.isEquivalentTo(node0, true, true, true);
      node0.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(0.0, (-1), (-1));
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble((-1));
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node(32, node0, node0, (-1), 49);
      Node.mergeLineCharNo(1330, 54);
      node0.siblings();
      node1.addChildBefore(node0, node0);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)119;
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getLastChild();
      node2.isInstanceOf();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("!50]$", 1755, 1755);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isDebugger();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setExport(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.toStringTree();
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isHook();
      node0.isAssignAdd();
      node0.isReturn();
      node0.getChildAtIndex(39);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node.newNumber((-1.0));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = new Node(33);
      node0.setInputId((InputId) null);
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(2261.85);
      node0.getProp((-2866));
      Node node1 = new Node(30, node0, node0, 30, 48);
      node1.copyInformationFromForTree(node0);
      node0.isAssign();
      Node node2 = new Node(55, node0, (-72), 39);
      node2.isOnlyModifiesThisCall();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(49, node0, node0, node0, node0, 1363, 12);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesThisCall();
      node2.getSideEffectFlags();
      Node node3 = node1.cloneTree();
      node1.replaceChildAfter(node0, node3);
      node3.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node1.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
      node1.setType(39);
      node1.isOptionalArg();
      node2.isCatch();
      node1.isEquivalentToShallow(node2);
      node1.isFromExterns();
      node2.setJSType((JSType) null);
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node((-43), (-43), (-43));
      Node node1 = new Node((-43), node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      node0.isEquivalentTo(node1, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isOnlyModifiesThisCall();
      node2.isCast();
      node0.isInstanceOf();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      Node.newNumber((double) 1, 36, 45);
      Node.newString("P69`v*h");
      node1.isCast();
      node1.hasChild(node0);
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(148, 148, 0);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(2675, node0, node0, 42, 0);
      Node node2 = Node.newNumber((-286.0));
      node0.clonePropsFrom(node2);
      Node node3 = new Node(102, node1, node0);
      node3.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = node1.srcref(node0);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      Node node4 = node3.getLastChild();
      node4.isDefaultCase();
      Node.newString("length");
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString("!50]$", 1755, 1755);
      node0.isStringKey();
      node0.isOnlyModifiesThisCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isBlock();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTrue();
      Node node1 = new Node(2689, node0, node0, (-388), (-388));
      node0.addChildToFront(node1);
      node1.isQuotedString();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isOr();
      node0.toStringTree();
      Node node1 = new Node(54);
      node0.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo((-4502), (-705));
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node1.isAssign();
      node1.isOnlyModifiesThisCall();
      node0.getSideEffectFlags();
      node0.isSetterDef();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node0.putIntProp(100, 0);
      Node node1 = Node.newString("u", 0, 0);
      node0.isEquivalentToTyped(node1);
      node1.type = 18;
      node0.isOptionalArg();
      node0.isCatch();
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node1.isOnlyModifiesArgumentsCall();
      node0.setType(39);
      node0.isOptionalArg();
      node1.isCatch();
      node0.isEquivalentToShallow(node1);
      node0.isFromExterns();
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node0.useSourceInfoFrom(node1);
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isObjectLit();
      node1.hasMoreThanOneChild();
      node0.isQuotedString();
      node1.isString();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(30, node0, 55, 53);
      node0.useSourceInfoFromForTree(node1);
      node0.getJSType();
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0);
      node0.getSourceFileName();
      node2.removeProp(4095);
      node1.setSourceEncodedPosition(1530);
      node2.setSourceEncodedPosition(38);
      node1.removeProp(0);
      node1.setCharno(0);
      node0.getQualifiedName();
      node0.putIntProp((-3143), 2);
      node1.removeChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node0.isCall();
      node0.getSourceOffset();
      Node.extractLineno(778);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isFalse();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "sNB~`\"ai";
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "com.google.javascript.rhino.JSDocInfo$Marker");
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) objectType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node0, templateType0);
      // Undeclared exception!
      try { 
        enumType0.getElementsType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.removeProp(130);
      node0.setSourceEncodedPosition(52);
      node0.setSourceEncodedPosition(87855567);
      node0.removeProp(0);
      node0.setCharno((-146));
      node0.getQualifiedName();
      node0.putIntProp(130, (-1611));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.getSourceOffset();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(49, node0, node0, node0, node0, 1363, 12);
      Node node2 = node0.clonePropsFrom(node1);
      node1.addChildrenAfter(node2, node0);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        ObjectType.cast(jSType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getProp((-2612));
      Node node1 = new Node(0, node0, node0, 4095, 49);
      node1.copyInformationFromForTree(node1);
      node1.detachChildren();
      Node.newString(53, ";,+t_!Ns>;Cjh*e6F");
      Node node2 = Node.newString((-3992), ";,+t_!Ns>;Cjh*e6F", 155, 4095);
      node2.isFor();
      node1.getJSDocInfo();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37);
      Node node1 = node0.cloneTree();
      node0.getAncestors();
      node0.isDo();
      node1.isLocalResultCall();
      Node.extractLineno(1249);
      node0.isArrayLit();
      Node node2 = node0.getChildAtIndex(1);
      node2.getLastChild();
      int int0 = 37;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      int int0 = 116;
      Node node0 = Node.newNumber(0.0, 1741, 123);
      node0.srcref((Node) null);
      Node node1 = new Node(int0, node0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      Node.newString(40, "$H/bZ>.");
      Node node3 = Node.newString(97, "a0LaqN-v51b(4DrXCi", 30, 16);
      node3.isFor();
      node1.isVarArgs();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(4, 4, 1910);
      node0.isAdd();
      Node node1 = Node.newNumber((-1275.487));
      node0.isQualifiedName();
      node1.isCall();
      node0.isCast();
      node0.getInputId();
      node1.isHook();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.isFalse();
      node1.getString();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // WHILE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(64, node0, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = node1.removeFirstChild();
      node0.getSideEffectFlags();
      node3.isSetterDef();
      node2.isWhile();
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      node0.isOr();
      node0.toStringTree();
      Node node1 = new Node(872);
      Node node2 = new Node(32, node0);
      node2.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo((-4072), 40);
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node2.isAssign();
      Node node3 = new Node(152);
      node3.isOnlyModifiesThisCall();
      node1.getSideEffectFlags();
      node1.isSetterDef();
      node2.isThrow();
      node1.checkTreeEqualsImpl(node0);
      node1.getProp(40);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node((-1730), node0, node0);
      node0.getLineno();
      boolean boolean0 = node0.isThis();
      node1.isCatch();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = node1.getLastChild();
      node2.isInstanceOf();
      boolean boolean1 = node1.isVar();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      nodeArray0[2] = node1;
      nodeArray0[3] = node3;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node4 = new Node(50, nodeArray0);
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        node1.isEquivalentTo(node4, boolean1, boolean2, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(50, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node1.isCatch();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getLastChild();
      Node node3 = new Node(2, 323, 12);
      node2.addChildrenAfter(node3, node0);
      node2.isInstanceOf();
      node0.isScript();
      node2.getIntProp(100);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-3541.02243));
      node0.isIf();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.isUnscopedQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("XVKL>d} |4b6");
      node1.getSourceFileName();
      node0.isQualifiedName();
      node0.isName();
      node1.isFunction();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = node1.cloneTree();
      node3.isOnlyModifiesArgumentsCall();
      node2.isTry();
      node2.isDefaultCase();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = Node.newNumber(0.5, 54, 46);
      node3.isQualifiedName();
      node0.isName();
      node4.setDouble(2);
      Node.extractLineno(13);
      node4.isFunction();
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newNumber((double) 32, (-2618), (-693));
      node1.removeChildren();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString("PoFmI");
      node2.getSideEffectFlags();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node2.addChildAfter((Node) null, node3);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType(jSType0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node((-665), 85, (-4847));
      Node node1 = new Node(85, node0, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node2 = new Node(85, node1);
      node1.checkTreeEquals(node0);
      String string0 = "-9r8";
      int int0 = (-968);
      int int1 = 50;
      Node.newString(node1.FLAG_LOCAL_RESULTS, string0, int0, int1);
      int int2 = (-1490);
      // Undeclared exception!
      try { 
        Node.newString(int2, string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -665
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node0.isNull();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags2);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      enumType1.matchesUint32Context();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      templateType0.resolve(simpleErrorReporter1, enumType1);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      node1.isCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.getSourceOffset();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newNumber(1585.0);
      node0.isDelProp();
      node0.getDirectives();
      Node node1 = Node.newString(53, "N1wsw/dS1gYC:85+4)", 15, 15);
      node1.isOnlyModifiesThisCall();
      node0.isBlock();
      node0.hasOneChild();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newNumber(1254.721689022645, 50, (-413));
      Node node4 = Node.newNumber((double) 36, 4, 4095);
      node4.isQuotedString();
      node3.type = 2;
      node0.isHook();
      node1.addChildrenToFront(node0);
      node0.isExprResult();
      node0.isFor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDebugger();
      node0.isVar();
      node2.isIf();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(4, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType.toMaybeTemplateType((JSType) null);
      node0.isName();
      node1.isContinue();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getIndexOfChild(node0);
      Node node3 = node1.getLastChild();
      node1.isOnlyModifiesArgumentsCall();
      node3.getInputId();
      node1.isHook();
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node1.setVarArgs(false);
      node1.addChildrenToBack(node1);
      node1.removeChild(node0);
      node0.isEquivalentTo(node1, false, false, false);
      node1.isVoid();
      node0.isSwitch();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) null);
      node3.getIndexOfChild(node1);
      node3.getLastChild();
      node3.getInputId();
      // Undeclared exception!
      try { 
        node2.isHook();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isThrow();
      node0.getSourcePosition();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node0.isInc();
      Node.newNumber((double) 1);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = Node.newNumber((-1.0), (-23), 1497);
      Node.newNumber((double) 40, 1, 38);
      node3.isQuotedString();
      node1.isVarArgs();
      node2.isHook();
      node0.addChildrenToFront(node2);
      node0.isExprResult();
      boolean boolean0 = false;
      node0.setOptionalArg(boolean0);
      node1.isFor();
      FileSystemHandling fileSystemHandling0 = null;
      try {
        fileSystemHandling0 = new FileSystemHandling();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      Node.newString(40, "$H/bZ>.");
      node0.isWhile();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("com.google.javascript.rhino.JSDocInfo$Marker", "com.google.javascript.rhino.JSDocInfo$Marker", 1910, (-1719));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isOnlyModifiesThisCall();
      node0.isCast();
      node0.isInstanceOf();
      node0.getLastChild();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(85, node0, node0, node0);
      node1.detachChildren();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.newString("(]n5G");
      node0.isSwitch();
      node0.getSourceOffset();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(188, 188, 188);
      node0.getChildCount();
      Node node1 = Node.newString("");
      node0.setLineno((-3450));
      node0.isBreak();
      node0.srcrefTree(node1);
      node0.isComma();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node1.addChildrenToBack(node0);
      Node node2 = Node.newString(12, "gV[EX", 16, 102);
      node2.isNE();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isFromExterns();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setLength(1);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isAnd();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isFromExterns();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = new Node(188);
      node2.isReturn();
      node2.isName();
      node3.isInstanceOf();
      node2.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      node1.srcref(node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getLastChild();
      node1.isEquivalentTo(node2, false, false, false);
      node2.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("!50]$", 1755, 1755);
      node0.isStringKey();
      node0.copyInformationFrom((Node) null);
      boolean boolean0 = node0.isOnlyModifiesThisCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      // Undeclared exception!
      try { 
        node0.isBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0, (-1), (-1));
      Node node1 = new Node(1672, node0, node0, 48, 39);
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = node1.getLastChild();
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      node1.setSourceFileForTesting("u");
      node0.isRegExp();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "var_args_name");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)105;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString(2901, "@CA(bN$I_~", 2901, 4095);
      Node node1 = Node.newString((-713), "@CA(bN$I_~");
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isNE();
      node2.getString();
      node2.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 1, 119, 86);
      node0.setQuotedString();
      node1.isAdd();
      node3.toString();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node.mergeLineCharNo((-3991), (-2351));
      Node node0 = new Node((-1));
      Node node1 = new Node((-1), node0, node0);
      node1.type = 110;
      Node node2 = node1.cloneTree();
      node0.setLength(3919);
      node2.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("u", true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node0.setJSDocInfo(jSDocInfo0);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      node2.isGetProp();
      node2.isNoSideEffectsCall();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      node0.getCharno();
      node1.getLastChild();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SWITCH
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isReturn();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node(43, node0, node0, node0, 51, 4095);
      node0.isAssignAdd();
      node1.isReturn();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node2.getInputId();
      node1.hasChildren();
      Node node3 = new Node(53, 2, 42);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node((-1730), node0, node0);
      node0.isThis();
      node0.getSideEffectFlags();
      node1.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      node0.isTry();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node.mergeLineCharNo(1287, 42);
      Object object0 = new Object();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(414, node0, node0, node0, node0);
      node1.isFunction();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      Node node1 = new Node(112, node0, node0);
      node0.getLineno();
      node0.isFalse();
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newString("empty_block");
      Node node4 = new Node(1684, node2, node1, node3, node1);
      node2.toString(false, false, false);
      node3.getIndexOfChild(node4);
      node1.detachFromParent();
      node0.getInputId();
      node4.isHook();
      node0.isNumber();
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isThrow();
      node0.getSourcePosition();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.srcrefTree(node0);
      Node node2 = new Node((-2616), node0, 112, 45);
      node1.hasOneChild();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      node1.srcref(node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = node2.getLastChild();
      node3.getLastChild();
      node2.isAnd();
      Node node4 = new Node(31, node1, 4, 15);
      node4.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString("", 117, (-1));
      node0.getInputId();
      Node node1 = Node.newString("58GB'b}h");
      node1.setChangeTime(40);
      Node node2 = null;
      node1.checkTreeEquals((Node) null);
      int int0 = 39;
      int int1 = 91;
      Node node3 = new Node(int0, node2, node0, node2, node1, int0, int1);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3118));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      StringWriter stringWriter0 = new StringWriter(153);
      StringWriter stringWriter1 = stringWriter0.append('<');
      char[] charArray0 = new char[3];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      node0.appendStringTree(stringWriter2);
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      node0.setType(2);
      node0.isSetterDef();
      node0.setLineno(32);
      node0.isBreak();
      node0.isComma();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("u", 0, 0);
      node0.isOr();
      Node node1 = new Node(147, node0, node0, node0, 38, 53);
      node1.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isOnlyModifiesThisCall();
      node0.isCast();
      node1.isInstanceOf();
      Node node2 = new Node(57, node1, node1);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(95);
      node0.isAssignAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isTry();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = new Node((-858));
      node1.isReturn();
      Node node2 = new Node(630);
      node2.getChildBefore((Node) null);
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newNumber(146.7771);
      Node node2 = new Node(8287, node0, node1);
      node1.setCharno(52);
      node2.isIf();
      node0.removeChildren();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1", 0, 0);
      node0.isOr();
      Node node1 = new Node(42, node0, node0, node0, node0, 1843, (-866));
      Node node2 = node1.clonePropsFrom(node0);
      node1.isOnlyModifiesThisCall();
      node1.getSideEffectFlags();
      Node node3 = node0.cloneTree();
      node2.replaceChildAfter(node1, node3);
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      String string0 = node0.toString(false, true, false);
      node0.isQualifiedName();
      JSType[] jSTypeArray1 = new JSType[2];
      jSTypeArray1[0] = (JSType) functionType0;
      jSTypeArray1[1] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray1);
      functionType0.isSubtype(jSTypeArray1[1]);
      node0.addChildToFront(node1);
      node1.isEquivalentTo(node0);
      node0.removeChild(node1);
      node0.isArrayLit();
      Node node2 = Node.newNumber((-73.6), 638, 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", node1, jSTypeArray1[1]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      Node node3 = enumElementType0.getPropertyNode("5c__vb+=_rf");
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      node1.copyInformationFrom((Node) null);
      node2.isCase();
      node3.getParent();
      Node.newString(string0);
      int int0 = (-1312);
      node0.getIntProp(int0);
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node2.isObjectLit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = new Node(49);
      TreeSet<Node> treeSet0 = new TreeSet<Node>();
      node0.isAssign();
      Node node1 = Node.newNumber((double) 48);
      node1.getSideEffectFlags();
      node1.isSetterDef();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(4095, node0, node0, node0);
      Node node2 = Node.newString(40, "$H/bZ>.");
      node2.getLastChild();
      node1.isInstanceOf();
      node0.isScript();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newNumber((double) 40, (-369), 39);
      Node node2 = Node.newNumber((double) 281, 2958, 4);
      node0.isFromExterns();
      node2.isQuotedString();
      node1.addChildrenToFront(node2);
      node2.isFor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDebugger();
      node2.isVar();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(42, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isContinue();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getIndexOfChild(node0);
      Node node3 = node2.getLastChild();
      node2.isOnlyModifiesArgumentsCall();
      node3.getInputId();
      node2.isHook();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      Node node1 = new Node(30, node0, node0);
      node1.getLineno();
      node0.isFalse();
      node1.isCatch();
      Node node2 = node1.srcref(node0);
      Node node3 = new Node(4095, node0, node0, node1, 49, 52);
      Node node4 = node2.useSourceInfoIfMissingFrom(node3);
      String string0 = "c\"r`{G1#nkQ";
      Node node5 = Node.newString(string0, node4.NO_SIDE_EFFECTS, node0.POST_FLAG);
      // Undeclared exception!
      try { 
        node5.getLastChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(4, 4, 1904);
      node0.getLineno();
      node0.isFalse();
      node0.isContinue();
      Node node1 = new Node(302, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.getIndexOfChild(node0);
      Node node2 = new Node(1023, node1, node1);
      node2.getLastChild();
      node2.isOnlyModifiesArgumentsCall();
      node1.getInputId();
      node0.isHook();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isThrow();
      node0.getSourcePosition();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.srcrefTree(node0);
      Node node1 = new Node((-2616), node0, 112, 45);
      node0.hasOneChild();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-3824), node0, node0);
      node0.getLineno();
      node1.isFalse();
      node1.isCatch();
      Node node2 = Node.newNumber((-1.0), 40, 4095);
      Node node3 = node2.srcref(node0);
      node0.useSourceInfoIfMissingFrom(node2);
      node0.getLastChild();
      node1.isDefaultCase();
      Node.newString((String) null);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newNumber(32.0);
      Node node1 = new Node(105, node0, node0);
      node0.setCharno((-1787));
      node1.isIf();
      node0.getJSDocInfo();
      node1.removeChildren();
      node0.getSideEffectFlags();
      Node node2 = new Node(50, node1, 50, 115);
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString((-773), "com.google.common.collect.ImmutableList$1", (-773), 86);
      node0.getQualifiedName();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isOr();
      node0.isStringKey();
      node0.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) null);
      int int0 = 33;
      Node node2 = new Node(node1.REFLECTED_OBJECT, node1.QUOTED_PROP, int0);
      node0.addChildAfter(node1, node2);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s)G~` -QQ}vAB*sNG]o");
      Node.extractCharno(15);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = Node.newNumber((double) 15);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("s)G~` -QQ}vAB*sNG]o", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      Node node1 = enumElementType1.getRootNode();
      // Undeclared exception!
      try { 
        node1.isDo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("empty_block");
      Node node1 = new Node(112, node0, node0);
      node0.getLineno();
      node0.isFalse();
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newString("empty_block");
      Node node4 = new Node(1684, node2, node1, node3, node1);
      node2.setCharno(40);
      node3.isIf();
      node4.removeChildren();
      node3.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3118));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.hasMoreThanOneChild();
      Node node1 = new Node(77);
      Node node2 = Node.newString(675, "com.google.javascript.rhino.Node$NumberNode");
      node2.isAssignAdd();
      node0.isReturn();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals((Object) null);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(277);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(77, node0, node0, node0);
      node1.isDebugger();
      node0.isEmpty();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.UnionTypeBuilder");
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(65536, node0, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      node0.isEquivalentToTyped(node1);
      node1.children();
      node0.isCatch();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      int int0 = 67;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(67, "comdgoogle.javascript.rhino.JSDocInfouMarker");
      node0.mayMutateGlobalStateOrThrow();
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      Node node1 = new Node(node0.DIRECTIVES, node0, node0, node0, node0, node0.IS_CONSTANT_NAME, node0.FLAG_ARGUMENTS_UNMODIFIED);
      // Undeclared exception!
      try { 
        node0.srcrefTree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = Node.newString("u", 1654, 93);
      node0.isEquivalentToTyped(node1);
      node0.isCatch();
      node0.isThis();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isFromExterns();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      node3.isThis();
      node3.isTry();
      node1.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isOr();
      node0.setDouble(152);
      node0.isStringKey();
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEBUGGER [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      node1.addChildrenToBack(node1);
      node1.isVoid();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("7", 0, 11);
      Node node1 = new Node(29, 38, 17);
      node1.isOr();
      node1.isStringKey();
      node1.isLabelName();
      node0.isScript();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, 4095, 49);
      Node node2 = node1.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
      node1.setType(39);
      node2.getDouble();
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(152);
      node0.isOptionalArg();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isOr();
      node0.getProp(36);
      Node node1 = new Node((-117), node0, node0, (-663), 152);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isAssign();
      node0.isOnlyModifiesThisCall();
      node2.isFor();
      node1.isEquivalentTo(node2, true, false, false);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node((-1), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isOnlyModifiesThisCall();
      node0.isCast();
      node0.isInstanceOf();
      node0.getLastChild();
      node2.addChildAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(113, node0, node0);
      int int0 = Node.JSDOC_INFO_PROP;
      node1.isFalse();
      node0.isStringKey();
      node1.srcref(node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = node2.getLastChild();
      node3.isUnscopedQualifiedName();
      node1.isEquivalentTo(node2, false, true, false);
      node3.isUnscopedQualifiedName();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(155, node0, node0, node0, node0);
      node0.addChildrenToBack(node1);
      node1.isVoid();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node1 = Node.newString("CharMatcher.anyOf(\"");
      Node node2 = node0.srcref(node1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.getLastChild();
      node2.getLastChild();
      node1.isAnd();
      Node node4 = new Node(0, (Node) null, 1, 1);
      // Undeclared exception!
      try { 
        node2.isDefaultCase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(281);
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = Node.newString("d_r~LPk}|t", 48, 54);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(117, nodeArray0);
      node0.isEquivalentToTyped(node2);
      node2.isCatch();
      Node node3 = Node.newNumber((double) 29);
      Node node4 = new Node(36, node0, node3, node1, node2, 53, 57);
      node4.isThis();
      node4.cloneNode();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1.0), 0, 2500);
      nodeArray0[0] = node0;
      Node node1 = new Node(959, 3195, 32);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("0wh.6,GA^Pz1");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("0wh.6,GA^Pz1", node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) enumElementType1, (JSType) enumElementType1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[2] = node2;
      Node node3 = new Node(12, node2, 54, 29);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = (JSType) enumType1;
      jSTypeArray0[1] = (JSType) enumType0;
      jSTypeArray0[2] = (JSType) enumType0;
      jSTypeArray0[3] = (JSType) templateType0;
      jSTypeArray0[4] = (JSType) enumType0;
      jSTypeArray0[5] = (JSType) enumType0;
      jSTypeArray0[6] = (JSType) enumElementType0;
      Node node4 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      node4.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-958), "u");
      Node node1 = new Node(50, node0, node0, node0);
      Node node2 = new Node(57, node1, node1);
      Node node3 = node2.srcrefTree(node0);
      Node node4 = Node.newString("u");
      Node node5 = new Node(4095, node4, 4, 52);
      node3.hasOneChild();
      Node.extractCharno(48);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString("Qc6=");
      node0.getLineno();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.isContinue();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getIndexOfChild(node1);
      Node node3 = node2.getLastChild();
      node1.isOnlyModifiesArgumentsCall();
      node1.getInputId();
      node3.isHook();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, 300);
      node0.getInputId();
      node0.isUnscopedQualifiedName();
      node0.setDouble(0.0);
      node0.isWhile();
      node0.getDouble();
      node0.isLocalResultCall();
      Node node1 = new Node(1, node0, node0, 36, 46);
      node1.isNew();
      node0.isTypeOf();
      node1.children();
      node1.setSourceEncodedPositionForTree(52);
      node0.getQualifiedName();
      node1.isName();
      Node.newString("com.google.javascript.rhino.Node$NumberNode", 1, 1);
      node1.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = Node.newString(37, "u", 126, (-692));
      node2.getStaticSourceFile();
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(38, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      jSTypeArray0[0] = (JSType) templateType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString(9, "", 9, 4);
      node0.cloneNode();
      node0.isNE();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(42, node0, node0);
      node1.getLineno();
      node1.isFalse();
      Node node2 = Node.newNumber((-569.0));
      node1.isQualifiedName();
      node0.isCall();
      node0.getInputId();
      node1.isHook();
      node2.isGetterDef();
      node0.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString(29, ", ...");
      Node node1 = new Node(29, node0, 43, 53);
      node1.setOptionalArg(false);
      node1.getDirectives();
      node1.children();
      Node node2 = new Node(1, (-3591), (-3591));
      node1.isEquivalentToShallow(node2);
      Node node3 = new Node(4095, node1, node2);
      node3.getChildBefore(node0);
      node3.isUnscopedQualifiedName();
      node1.isDo();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.toString(false, true, false);
      node0.isQualifiedName();
      JSType[] jSTypeArray1 = new JSType[2];
      jSTypeArray1[0] = (JSType) functionType0;
      jSTypeArray1[1] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray1);
      functionType0.isSubtype(jSTypeArray1[1]);
      node0.addChildToFront(node1);
      node1.isEquivalentTo(node0);
      node0.removeChild(node1);
      node0.isArrayLit();
      Node.newNumber((-73.6), 638, 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", node1, jSTypeArray1[1]);
      enumType0.getElementsType();
      node0.isOnlyModifiesThisCall();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray0);
      node2.isCast();
      node2.isInstanceOf();
      node0.getLastChild();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node1.addChildrenToBack(node1);
      node0.isEquivalentTo(node1);
      node1.getJSType();
      node1.replaceChild(node0, node0);
      // Undeclared exception!
      try { 
        node0.isEmpty();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(0, "+.");
      Node node1 = new Node(38, node0, 47, 37);
      node1.setOptionalArg(false);
      node1.getDirectives();
      node1.isQualifiedName();
      node0.children();
      node0.getQualifiedName();
      node1.isName();
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 47 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Object object0 = new Object();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(4095, node0, node0, node0, 54, 4975);
      node0.isEquivalentTo(node1, false, false, true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter2, true);
      node1.isOnlyModifiesThisCall();
      node1.isCast();
      node1.isInstanceOf();
      Node node2 = node1.getLastChild();
      node0.getDouble();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Object object0 = new Object();
      Node node0 = Node.newNumber((double) 103, 103, 1545);
      node0.removeChildren();
      Node node1 = Node.newNumber((-307.401992));
      node1.checkTreeTypeAwareEqualsImpl((Node) null);
      String string0 = "F3%@Uu41^U)dVYs%W";
      Node.newString(string0);
      int int0 = 12288;
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      String string0 = "+&nNRf%<?/";
      Node node0 = Node.newString(4046, "+&nNRf%<?/");
      boolean boolean0 = node0.isSwitch();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getString();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node((-747), node0);
      node1.getAncestors();
      Node node2 = node1.srcref(node0);
      Node.newString(77, "+&nNRf%<?/");
      node2.isEquivalentTo(node0, true, true, true);
      node2.detachFromParent();
      node1.setOptionalArg(boolean0);
      node1.setCharno(node2.IS_CONSTANT_NAME);
      String string1 = "set2";
      node1.setSourceFileForTesting(string1);
      FileSystemHandling fileSystemHandling2 = null;
      try {
        fileSystemHandling2 = new FileSystemHandling();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(120, node0, node0);
      node1.getLineno();
      node1.isFalse();
      node1.isCatch();
      node1.srcref(node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isEquivalentTo(node1, false, true, true);
      node2.getLastChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newString(108, "u");
      Node node1 = new Node(105, node0, node0, node0);
      node1.isArrayLit();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getLastChild();
      Node node3 = node2.getLastChild();
      node3.isAnd();
      Node node4 = new Node(56, node3, 36, 117);
      node1.isDefaultCase();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(1368, 117, 751619276);
      node0.isUnscopedQualifiedName();
      Node node1 = node0.getLastSibling();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString("jJ/G/1");
      Node node1 = new Node(32, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node1.addChildrenToBack(node1);
      node1.isVoid();
      node1.isNew();
      node1.getProp(36);
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString(411, "");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.pollFirst();
      treeSet0.higher("");
      node0.getJSDocInfo();
      node0.setString("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setQuotedString();
      treeSet0.add("");
      node0.setDirectives(treeSet0);
      node0.wasEmptyNode();
      node0.getIntProp(100);
      node0.getChangeTime();
      node0.isTypeOf();
      node0.getStaticSourceFile();
      node0.putBooleanProp((-306), false);
      node0.isOnlyModifiesThisCall();
      node0.isStringKey();
      node0.getJSDocInfo();
      node0.isWith();
      node0.isStringKey();
      Node node1 = Node.newString("BOOLEAN_TYPE", 1, 972);
      node0.addChildToFront(node1);
  }
}
