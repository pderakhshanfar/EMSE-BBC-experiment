/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 12:18:00 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.File;
import java.io.StringWriter;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(117);
      String string0 = "yy,d}D#Z0h";
      Node.newString(155, "yy,d}D#Z0h", (-1251), 4095);
      node0.isUnscopedQualifiedName();
      node0.setLength(117);
      node0.isTrue();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yy,d}D#Z0h");
      node0.getParent();
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(91, 91, 91);
      Node node1 = Node.newNumber((double) 55, 16, 743);
      node0.isUnscopedQualifiedName();
      node0.toString();
      node0.isDebugger();
      node1.getAncestors();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((-1160.85170374));
      node0.isQualifiedName();
      Node node1 = Node.newString(38, "Fy");
      node0.setChangeTime(52);
      node1.isName();
      try { 
        node0.setString("UU!QK|D?L9L");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1160.85170374 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000337] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isBreak();
      Node node1 = new Node(42, node0, node0);
      node0.srcrefTree(node0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(155, 2627, 2143);
      Node node1 = new Node(126);
      node1.isLabel();
      node0.isDebugger();
      Node.newNumber((double) 126);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isHook();
      Node node1 = new Node(130, node0, node0, node0);
      node1.getChangeTime();
      node1.isCatch();
      node0.isLabelName();
      node1.isThrow();
      node0.isHook();
      node1.isScript();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(91, 91, 91);
      Node.newNumber((double) 55, 16, 743);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(56, 91, 46);
      node0.toString();
      Node node2 = new Node(38, node0, 2, 2);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 2 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(111);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 4095);
      node2.addChildToBack(node0);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isDo();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(118);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node((-1849), node0);
      node1.isNew();
      node1.isIf();
      Node.mergeLineCharNo((-749), 52);
      node0.isVar();
      Node node2 = Node.newString("first new child has existing sibling");
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node2.isDo();
      node1.siblings();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = new Node(56, (-834), 49);
      Node node3 = new Node(102, node0, node1);
      Node node4 = node3.copyInformationFrom(node0);
      node3.isOnlyModifiesArgumentsCall();
      node4.setIsSyntheticBlock(false);
      node4.isNull();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getIntProp(53);
      node0.isTry();
      node0.setChangeTime(39);
      node0.getChangeTime();
      node0.setLength(0);
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0);
      node0.isArrayLit();
      node0.isDelProp();
      node0.getJSDocInfo();
      Node node1 = Node.newString(53, "5LwMCF,_Q:1");
      Node node2 = new Node(1, node0, node1, node0);
      node2.useSourceInfoIfMissingFrom(node0);
      node2.isInc();
      Node node3 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-211), (-1697), (-1697));
      Node node1 = new Node(21, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.children();
      node1.isEquivalentToTyped(node0);
      node2.putIntProp(1, 36);
      int int0 = Node.FREE_CALL;
      node1.hasMoreThanOneChild();
      node2.mayMutateGlobalStateOrThrow();
      node2.isInc();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JSType[] jSTypeArray0 = new JSType[1];
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0);
      Node node1 = new Node(4, nodeArray0, 56, 2);
      node1.setSourceFileForTesting("}7n");
      node1.getSourceOffset();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = Node.newString((-184), "ASSIGN");
      node2.setSourceFileForTesting("sw{H tylcgO(QV$");
      node2.isQualifiedName();
      node1.isIf();
      node1.getQualifiedName();
      node2.isDefaultCase();
      node2.isWhile();
      node1.getQualifiedName();
      node0.isTry();
      Node.extractCharno(0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.setSourceFileForTesting(".E/1kvnN[");
      node0.getSourceOffset();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isTry();
      node0.setChangeTime(39);
      Node node1 = Node.newString(38, "Object#Element");
      node1.setSourceFileForTesting("Object#Element");
      node1.isQualifiedName();
      node0.isIf();
      node1.getQualifiedName();
      node0.isDefaultCase();
      node0.isWhile();
      node0.getQualifiedName();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(60);
      Node node1 = Node.newString("UNKNOWN_TYPE", 34, 4051);
      Node node2 = new Node((-531), node0, node1, node1, (-5224), 47);
      node2.isNew();
      node2.getChildBefore(node1);
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(127);
      node0.isArrayLit();
      node0.isDo();
      Node node1 = Node.newString(3659, "~", (-816), 1);
      Node node2 = new Node((-1), node1, node1, node0, node0);
      Node node3 = new Node(64, 40, 32);
      node3.copyInformationFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      node2.setIsSyntheticBlock(false);
      node1.isNull();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(155, 155, 155);
      Node node1 = Node.newNumber((double) 2);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getAncestors();
      node0.isLabel();
      node0.isDebugger();
      node0.getAncestors();
      node0.getIntProp(35);
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = new Node(30, 854, 3372);
      Node node1 = new Node(85, node0, node0, node0, node0, 49, 36);
      node1.isSetterDef();
      node1.wasEmptyNode();
      node0.getLength();
      Node node2 = Node.newString(21, "    ");
      node0.isInstanceOf();
      node0.cloneNode();
      node0.useSourceInfoFromForTree(node2);
      node0.children();
      node1.getProp(4095);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 14);
      node0.isTrue();
      node0.isParamList();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(14, nodeArray0);
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString("Object#Key");
      node2.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = node1.cloneTree();
      node2.isThis();
      node3.getLength();
      node2.removeProp((-669));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(108);
      node0.putIntProp(55, 52);
      node0.isSwitch();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber(0.5);
      node1.addChildToBack(node2);
      node1.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isDo();
      node1.setCharno(2048);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isHook();
      Node node1 = new Node(1, node0, node0, node0);
      node0.isSwitch();
      node1.isAnd();
      node0.isLabel();
      node0.getJsDocBuilderForNode();
      node1.isContinue();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getStaticSourceFile();
      node0.isNew();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isGetterDef();
      Node node1 = new Node(102, node0, node0, node0, node0);
      node1.getSourceFileName();
      node0.isFromExterns();
      node1.isVoid();
      node1.cloneNode();
      node0.isGetElem();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(20);
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Class<UnionType> class0 = UnionType.class;
      ServiceLoader<UnionType> serviceLoader0 = ServiceLoader.loadInstalled(class0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.isReturn();
      node0.getQualifiedName();
      node0.getChildAtIndex(0);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString("Object#Element");
      node0.setLineno(33);
      node0.getString();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      Node node1 = new Node(36, (-996), 29);
      node1.isBlock();
      node0.setString("Object#Element");
      node0.isReturn();
      Node node2 = new Node(86, node0, node1);
      node2.cloneNode();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSType[] jSTypeArray0 = new JSType[1];
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node1 = node0.copyInformationFrom(node0);
      Node.newString(2174, "Object#Element", (-1370), 16777215);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(908);
      node1.isEquivalentTo(node0, false, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-251), node0, node0, 2, 1806);
      node0.useSourceInfoFromForTree(node1);
      jSTypeRegistry0.createOptionalNullableType(functionType0);
      node0.mayMutateArguments();
      node0.isFromExterns();
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node3 = new Node(36, 3212, 15);
      node3.setCharno(55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isWhile();
      node3.isGetElem();
      node3.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber(1242.7232426031558, 32, 937);
      node0.wasEmptyNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("first new child has existing parent");
      node_FileLevelJsDocBuilder0.append("jPZ|FLG}fpFq)*4_'p");
      node_FileLevelJsDocBuilder0.append("ADfS<A: al|'0");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node1.isEquivalentToTyped(node2);
      node0.putIntProp(37, 35);
      int int0 = Node.FREE_CALL;
      node0.hasMoreThanOneChild();
      node1.mayMutateGlobalStateOrThrow();
      node1.isInc();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      node0.putBooleanProp(20, true);
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node0.hasChild(node1);
      node1.getAncestors();
      node1.children();
      node1.getStaticSourceFile();
      node2.isReturn();
      node1.isObjectLit();
      node2.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 155;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(155);
      node0.isQuotedString();
      Node node1 = new Node(40, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("1`_ozs& 8WKv(EyG9", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      node0.isNoSideEffectsCall();
      node0.setChangeTime(12);
      Node node1 = new Node(30);
      node1.isThrow();
      node1.isFor();
      node1.isLabel();
      node1.isLabelName();
      node1.getAncestors();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeRegistry0.identifyNonNullableName("me&$ 2PFw|");
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = Node.newString(1, "OBJECT_PROTOTYPE");
      node0.setSourceFileForTesting("com.google.common.collect.ImmutableList$1");
      node0.isLabelName();
      node0.isIf();
      node0.getQualifiedName();
      node0.isDefaultCase();
      node0.isWhile();
      Node node1 = new Node(31);
      node1.setLength(0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(45);
      node0.isFalse();
      node0.putIntProp(45, 2409);
      node0.isSwitch();
      node0.isCast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 47, 1, (-1934));
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node1.isIf();
      node1.isWhile();
      node1.setLength(3641);
      node0.isGetProp();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 45
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(1224, 126, (-316));
      Node node1 = new Node(126, node0, node0, node0, 1069317, 38);
      node1.getLength();
      Node node2 = new Node(126, node1, node1, node1, node1, 36, 32);
      Node.newString(4095, "com.google.javascript.rhino.SourcePosition");
      node2.cloneTree();
      node2.removeChild(node1);
      // Undeclared exception!
      try { 
        node0.setDouble((-1550.5592255));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1224
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(103);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.isFunction();
      Node node1 = new Node(32);
      node0.addSuppression("com.google.javascript.rhino.Node$IntPropListItem");
      Node node2 = new Node(3669, node1, node1);
      node0.srcrefTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.Node$IntPropListItem");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      node0.isFromExterns();
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node1 = new Node(36, 3212, 15);
      node1.setCharno(55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString("ebYA.`q10^>^eR.", 64, 64);
      node0.isWith();
      node0.getIntProp(751619276);
      node0.setSourceFileForTesting("ebYA.`q10^>^eR.");
      Node node1 = new Node(108);
      node0.copyInformationFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setChangeTime(108);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isFunction();
      node0.isFromExterns();
      Node node1 = new Node(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      node0.isEquivalentToShallow(node1);
      node_SideEffectFlags0.setThrows();
      node0.isAssignAdd();
      node1.setSideEffectFlags(2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(33);
      node0.isIn();
      node0.isEmpty();
      node0.siblings();
      node0.isSwitch();
      node0.isIf();
      node0.isNew();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      Node node1 = new Node(0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node1.isEquivalentToTyped(node2);
      node0.putIntProp(37, 51);
      int int0 = Node.FREE_CALL;
      node0.hasMoreThanOneChild();
      node1.mayMutateGlobalStateOrThrow();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isFunction();
      Node node1 = new Node(2465);
      node1.addSuppression("PROTECTED");
      Node node2 = new Node((-862048943), node1, node1);
      Node node3 = node1.srcrefTree(node2);
      node2.addChildrenAfter(node0, node3);
      node0.cloneTree();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(60);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isObjectLit();
      node0.setWasEmptyNode(false);
      int int0 = Node.FREE_CALL;
      node0.setLineno(50);
      Node node1 = new Node(43, node0, node0, node0);
      node1.hasMoreThanOneChild();
      Node node2 = new Node(55, 60, 55);
      node2.mayMutateGlobalStateOrThrow();
      node1.isInc();
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node.extractCharno((-409));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.checkTreeEquals(node0);
      Node node1 = new Node(49);
      node0.isLabel();
      node0.isDebugger();
      Node node2 = Node.newNumber((double) 40, (-190), 2);
      Node node3 = node1.copyInformationFrom(node2);
      node3.hasMoreThanOneChild();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isGetProp();
      node0.getInputId();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      node1.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newNumber((double) 46);
      Node node2 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node2.setLineno(116);
      node2.isStringKey();
      node2.getQualifiedName();
      node0.getSourceFileName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newNumber((-1616.589797512));
      node0.isThrow();
      node0.isTrue();
      Node node1 = new Node(30);
      Node node2 = Node.newString("com.google.javascript.rhino.Node", (-3481), 4095);
      node2.isNot();
      node2.setQuotedString();
      Node node3 = new Node(32, node2, node0);
      node1.srcrefTree(node2);
      node3.copyInformationFromForTree(node1);
      node1.isOptionalArg();
      node3.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(113);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node node1 = new Node(2, node0, 32, 36);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isWhile();
      node1.isNew();
      node0.copyInformationFrom(node1);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isDo();
      Node node1 = new Node(2, node0, node0, node0, node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = node0.copyInformationFrom(node1);
      node3.isExprResult();
      node2.setIsSyntheticBlock(false);
      node0.isNull();
      node3.isContinue();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = Node.newNumber((double) 55, 16, 743);
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(56, 114, 46);
      node0.toString();
      node1.isLabel();
      node0.isLabelName();
      node0.getAncestors();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      Node node3 = Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node0.getAncestors();
      Node.newString(1, "ASSIGN");
      node2.isGetterDef();
      node2.isLabel();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("ASSIGN");
      node1.srcrefTree(node0);
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber((-246.0));
      Node node1 = Node.newString("com.google.common.collect.ImmutableList$1");
      node1.isSyntheticBlock();
      Node node2 = new Node(46, node0, node0, node1, 4, 49);
      Node node3 = Node.newString(43, "com.google.common.collect.ImmutableList$1");
      Node node4 = new Node(8);
      node4.isQualifiedName();
      node1.siblings();
      int int0 = Node.SIDE_EFFECTS_ALL;
      node3.isNoSideEffectsCall();
      Node node5 = new Node(51, 1373, 40);
      node5.cloneNode();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = null;
      jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node.newString("kPz+");
      Node node1 = new Node(51);
      node1.isThrow();
      Node node2 = new Node((-513), (-1), 42);
      node1.isIn();
      Node.mergeLineCharNo((-1), 47);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.getSourceFileName();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isGetElem();
      node0.isTry();
      node0.setChangeTime(1351);
      Node node1 = Node.newString(38, "Object#Element");
      node1.setSourceFileForTesting("Object#Element");
      node0.isLabelName();
      node0.isIf();
      node1.getQualifiedName();
      node1.toStringTree();
      Node node2 = Node.newString(4095, "NAME Object#Element [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005]\n", 53, 30);
      node2.getQualifiedName();
      node2.getProp((-1682));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(108);
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      Node node1 = new Node(16, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(48, "jsdoc_info", 122, 560);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(155);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = Node.newString(117, "Object#Element", 117, 2395);
      node0.addChildrenAfter(node1, (Node) null);
      node0.isGetterDef();
      Node node2 = null;
      try {
        node2 = new Node(15, node0, node0, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(113);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node node1 = new Node(2, node0, 32, 36);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isQualifiedName();
      Node node2 = node1.removeFirstChild();
      Node node3 = new Node(4095, node2);
      node1.isName();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = "com.google.common.collect.ImmutableList";
      Node node0 = Node.newString("com.google.common.collect.ImmutableList", (-2388), (-2388));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(113);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node node1 = new Node(2, node0, 32, 36);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isWhile();
      node1.setLength(644);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isDo();
      node2.setCharno(105);
      node1.copyInformationFrom(node2);
      node0.getSourceFileName();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$NodeMismatch");
      Node node0 = Node.newString(124, "-,CUTcdYa^");
      node0.setCharno(124);
      node0.isEmpty();
      node0.isVar();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString("Object#Element");
      node0.putIntProp(33, 1250);
      node0.isSwitch();
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 33
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node1.isEquivalentToTyped(node2);
      node0.putIntProp(1809, 35);
      Node.newString(4095, "\"@`", 54, (-651));
      node1.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 1809
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(46);
      node0.isDefaultCase();
      node0.useSourceInfoIfMissingFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("+Q{mSL", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-2719), (-2719), (-2719));
      node0.isLocalResultCall();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(46, node0, 63, 52);
      node1.getInputId();
      Node node2 = node1.removeFirstChild();
      node2.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1);
      Node node3 = Node.newNumber((double) 4095);
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(155);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isGetterDef();
      int int0 = (-1212);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(103);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newNumber((double) 48, 111, 103);
      node0.mayMutateArguments();
      node1.isAdd();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      node0.isLabel();
      node0.getLength();
      node0.toString();
      Node node1 = new Node(85, node0);
      node0.isComma();
      node1.isAnd();
      node1.isIf();
      Node.mergeLineCharNo(5185, 2180);
      node0.isFalse();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      node1.clonePropsFrom(node0);
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      node1.isEquivalentToTyped(node1);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      Node node2 = null;
      try {
        node2 = new Node(53, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(1711, 1711, 1711);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(2, "Not has xisZi7g properties.");
      nodeArray0[1] = node1;
      Node node2 = new Node(1711, nodeArray0, (-797), 1711);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-2719));
      node0.isLocalResultCall();
      node0.isEquivalentTo(node0, false, false, false);
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 31, 1304, 50);
      node0.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node1.isIf();
      node0.isWhile();
      node1.setLength(88);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      Node node1 = new Node(57, node0, 43, (-272));
      Node node2 = node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.newNumber((double) 29);
      node2.isLabelName();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.getString();
      node0.isIf();
      Node.mergeLineCharNo(4, 49);
      int int0 = Node.FREE_CALL;
      node0.setLineno(50);
      node0.hasMoreThanOneChild();
      Node node1 = new Node((-1), 62, 2899);
      node1.mayMutateGlobalStateOrThrow();
      node0.isInc();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isThrow();
      node0.setLineno(57);
      node0.isUnscopedQualifiedName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newNumber((-1205.2960699057528));
      node2.putIntProp(38, 8);
      Node node3 = new Node(51);
      Node.newString(">", 47, 4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2726));
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node4 = new Node(51, 98, 38);
      node2.setCharno(29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isWhile();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1496), (-1496), (-1496));
      Node node1 = new Node((-1496), node0, 50, 48);
      node1.setLineno(53);
      node0.isBreak();
      Node node2 = node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node0.cloneNode();
      node0.isGetProp();
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(1, node0, node0, 55, 52);
      node0.addChildrenToBack(node1);
      node1.setSourceEncodedPosition(2);
      Node.newString(112, "C!y", (-463), 1);
      try { 
        node0.setString("C!y");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 110;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 110);
      nodeArray0[0] = node0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "new child has existing parent");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(110, nodeArray0, (-463), 87855567);
      node1.getBooleanProp((-4927));
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.addSuppression("com.google.common.collect.Sets");
      Node node3 = null;
      try {
        node3 = new Node(83, node1, node1, (Node) null, 32, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1496), (-1496), (-1496));
      node0.setLineno(53);
      node0.isName();
      Node node1 = new Node(57, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.newNumber((double) 2);
      node0.cloneNode();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[6];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = node0.getLastChild();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.isOnlyModifiesArgumentsCall();
      node1.mayMutateGlobalStateOrThrow();
      node1.isNew();
      node1.isLabelName();
      Node node2 = Node.newString(4095, "Object#Element", 16, 53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1324);
      node1.isEquivalentToShallow(node2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node3 = new Node(57, (-3694), 3327);
      Node node4 = Node.newNumber((double) 53);
      node4.setCharno(4095);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isWhile();
      node3.isGetElem();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(118);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.isCatch();
      node0.isIf();
      node0.removeChildren();
      node0.isQualifiedName();
      node0.siblings();
      int int0 = Node.SIDE_EFFECTS_ALL;
      node0.isCall();
      node0.cloneNode();
      Node.newNumber((-1221.0242743047725));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(155, 155, 155);
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.isBreak();
      Node node1 = new Node((-1028), node0, node0);
      node0.srcrefTree(node0);
      Node.newString("=XV6M9|m+0hC}G");
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("PROTECTED");
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber((-1606.072792238646));
      Node node1 = new Node(39, node0, node0, node0, node0);
      node1.isThrow();
      node1.setLineno(57);
      node0.addSuppression("DS+%a$5");
      node0.putIntProp(14, 42);
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isCatch();
      node0.isIf();
      Node.mergeLineCharNo(1236, 57);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isName();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      String string0 = null;
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node1.isEquivalentToTyped(node2);
      node0.hasChild(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "BL8I|`SFE}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      String string0 = "&j_[bSYT@_iEPiVJS";
      Node node1 = Node.newString("&j_[bSYT@_iEPiVJS");
      node1.isQualifiedName();
      node0.getAncestors();
      Node node2 = new Node((-2050), node1, node0, 1251, 893);
      node2.children();
      node2.getStaticSourceFile();
      Node node3 = node0.getParent();
      node3.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "OL;_Ep\\fZRy<SI>5?E/";
      Node node0 = Node.newString(4095, "OL;_Ep\fZRy<SI>5?E/", 2572, 4095);
      Node node1 = Node.newNumber((double) 29);
      Node node2 = new Node(2572, node0, node0, node0, node1);
      node2.removeChild(node1);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(1, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getStaticSourceFile();
      node0.isEquivalentToShallow(node1);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(153, 4095, (-3004));
      Node node1 = new Node(4, node0, 2530, 39);
      node1.setLineno(0);
      node1.isBreak();
      node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.hasChildren();
      node0.putIntProp(51, 67);
      Node node1 = new Node((-3101));
      Node node2 = Node.newString("#77", 108, 1849);
      node0.checkTreeEqualsImpl(node1);
      node0.checkTreeEquals(node2);
      node2.isFromExterns();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber(2089.7);
      Node node1 = new Node(0, node0, node0, node0);
      node1.getAncestor(55);
      Node node2 = node1.getLastSibling();
      node0.isOptionalArg();
      node0.setDouble(54);
      node1.wasEmptyNode();
      node0.isStringKey();
      Node node3 = Node.newString("MW@SX%D#:4 _", (-1509), 53);
      // Undeclared exception!
      try { 
        node3.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isThrow();
      Node node1 = new Node(30);
      Node node2 = new Node((-1289), 876, 207);
      node2.setWasEmptyNode(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ObjectType.cast((JSType) null);
      Node node3 = Node.newString("Not declared as a constructor");
      Node node4 = new Node(51, node3, node3, node1);
      Node.mergeLineCharNo(43, 37);
      node1.isNew();
      node4.isGetProp();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node0.removeChildren();
      ArrayDeque<Node> arrayDeque0 = new ArrayDeque<Node>();
      int int0 = Node.MAX_COLUMN_NUMBER;
      node1.useSourceInfoFromForTree(node2);
      node0.isNoSideEffectsCall();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not declared as a constructor");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(300);
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NAME
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node1 = Node.newNumber(1681.258156142, (-1), 53);
      node1.isReturn();
      node0.isObjectLit();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(124, 98, 98);
      Node node1 = new Node(12, node0, 1, 29);
      node0.setLineno(55);
      node0.isBreak();
      node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node0.getChildAtIndex((-1636));
      node1.isLabelName();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber((-246.0));
      Node node1 = Node.newString("com.google.common.collect.ImmutableList$1");
      node1.isSyntheticBlock();
      Node node2 = new Node(46, node0, node0, node1, 4, 119);
      Node node3 = new Node(56);
      Node node4 = new Node(1, 54, 50);
      Node.newString(4194304, "com.google.common.collect.ImmutableList$1");
      // Undeclared exception!
      try { 
        node2.replaceChild(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isHook();
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = new Node((-1684), 39, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-171), (-171));
      Node node1 = new Node((-171), node0, node0, node0, (-531), (-531));
      Node node2 = new Node(3539);
      node2.isRegExp();
      node0.isNew();
      node1.srcref(node2);
      node2.setChangeTime(39);
      node0.isName();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = Node.newNumber(45.0, 39, 47);
      node1.isUnscopedQualifiedName();
      node0.detachChildren();
      Node node2 = new Node(108, 51, 40);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.toString();
      node1.isQualifiedName();
      node2.isComma();
      node0.isReturn();
      node2.useSourceInfoFromForTree(node0);
      node0.toString();
      Node.mergeLineCharNo(43, 50);
      node1.isNew();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(155);
      node0.isThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isLabel();
      node0.isDebugger();
      node0.isLabelName();
      node0.getAncestors();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString(" [");
      node0.isEquivalentTo(node1);
      node1.putIntProp(4095, 50);
      Node node2 = new Node(32);
      Node node3 = Node.newString("", 36, 8);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node3.checkTreeEquals(node0);
      node0.isFromExterns();
      Node node4 = node0.copyInformationFromForTree(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.isNoSideEffectsCall();
      node2.cloneNode();
      node4.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(92);
      node0.hasChildren();
      node0.getAncestors();
      node0.isGetterDef();
      node0.detachChildren();
      node0.putIntProp((-3114), 64);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2698);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node0.isSetterDef();
      node0.isGetElem();
      node0.getString();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isObjectLit();
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(30, node0, node0, 54, 52);
      node1.setLineno(55);
      Node node2 = node0.srcref(node1);
      node0.setChangeTime(37);
      node0.isName();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString("", (-877), 103);
      Node node1 = new Node(305, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.addSuppression("first new child has existing parent");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putIntProp(57, 4095);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [reflected_object: com.google.javascript.rhino.Node$IntPropListItem@0000000007] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber((-579.56), (-99), 112);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('5');
      StringBuffer stringBuffer0 = stringWriter1.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isFor();
      node0.isThrow();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("no next sibling.", 115, 16);
      node0.setLength(30);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(102);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(31, node1, node1, 110, 55);
      node2.setLineno(11);
      node2.srcref(node1);
      node0.setChangeTime(9);
      node2.isName();
      try { 
        node0.setString("Object#Key");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000353] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isTry();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("=V6M9|m+0hC}G");
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(1457, node0, node0, node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSourcePosition();
      node1.getAncestors();
      node0.isName();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC 103 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isHook();
      Node node1 = new Node(1, node0, node0, node0);
      node1.setVarArgs(false);
      node0.isTrue();
      Node node2 = new Node(43);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node0.isNot();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(155);
      node0.isThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isLabel();
      node0.isDebugger();
      node0.isLabelName();
      node0.getAncestors();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isThis();
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node0);
      node_SideEffectFlags0.setThrows();
      node0.isDo();
      node0.setCharno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(77);
      Node node1 = Node.newString(40, "com.google.javascript.rhino.jstype.TemplateTypeMap");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-1210), nodeArray0, 26, 47);
      Node node3 = new Node(50, node2, node1, node2);
      node3.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      node0.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isDo();
      node0.isFromExterns();
      Node node2 = node1.copyInformationFromForTree(node0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node0.isNoSideEffectsCall();
      Node node3 = new Node(49, node1, node2, node1, 92, 52);
      node3.cloneNode();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0, 122, (-4113));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-35);
      byteArray0[2] = (byte) (-13);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(130);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("|n+=PnW6)}#dkX+lVzWG");
      node0.setLineno(56);
      node0.isVar();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      Node node1 = new Node(52, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node1.checkTreeEquals(node0);
      node0.isFromExterns();
      node1.copyInformationFromForTree(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isNoSideEffectsCall();
      node0.cloneNode();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      Node node1 = Node.newString("'8z+v<!(");
      node1.isSyntheticBlock();
      Node node2 = new Node(32, node1, node0, node1, 42, 12);
      Node node3 = new Node(303);
      node1.getChangeTime();
      node3.isCase();
      node1.setLineno(54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "Q\"35Y&,o}S[j|aTg}`+";
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a type name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      node0.isLabelName();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getSourceFileName();
      node0.isNew();
      node0.useSourceInfoFrom(node0);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isThrow();
      node0.setLineno(57);
      node0.isUnscopedQualifiedName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newNumber((-1205.2960699057528));
      node2.putIntProp(38, 8);
      Node node3 = new Node(51);
      Node node4 = Node.newString(">", 47, 4);
      node2.checkTreeEqualsImpl(node1);
      node4.checkTreeEquals(node2);
      node0.isFromExterns();
      Node node5 = node1.copyInformationFromForTree(node3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node5.isNoSideEffectsCall();
      node5.cloneNode();
      node4.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(52);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(54, node0, node0, node0, node0, 56, 643);
      node0.useSourceInfoFrom(node1);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTrue();
      Node node1 = new Node(32);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isNot();
      Node.newString("Object#Element", 46, 118);
      String string0 = "no next sibling.";
      Node node3 = Node.newString("no next sibling.");
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node1.checkTreeEquals(node2);
      node2.isFromExterns();
      Node node4 = node0.copyInformationFromForTree(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.isNoSideEffectsCall();
      node2.cloneNode();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createNullableType((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTrue();
      Node node1 = new Node(32);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isNot();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(0, 0);
      Node node1 = Node.newString("<5?7F8R/(tKq8imtdF", 57, 47);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(43, node1, node0, node0);
      node2.checkTreeEquals(node0);
      node2.copyInformationFromForTree(node0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node1.isNoSideEffectsCall();
      node2.cloneNode();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isThis();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("");
      node0.isBreak();
      Node node1 = new Node(518, node0, node0);
      node0.srcrefTree(node0);
      Node.newString("");
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("PROTECTED");
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(49);
      node1.isThrow();
      Node node2 = Node.newString("incrdecr", 1023, (-160));
      node2.isOnlyModifiesArgumentsCall();
      node2.isLabel();
      node2.isDebugger();
      node1.isLabelName();
      node1.getAncestors();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(113, "9S", 231, 113);
      Node node1 = new Node(54);
      Node node2 = new Node(113, node0, node0, node0, node1);
      String string0 = "&0?4|";
      Node node3 = Node.newString(1, "&0?4|", 56, 52);
      Node.mergeLineCharNo(31, (-346));
      Node node4 = node2.useSourceInfoFromForTree(node0);
      node4.isEquivalentTo(node1, true, true, true);
      node1.isFromExterns();
      node3.isVarArgs();
      node3.isOptionalArg();
      node4.setSourceEncodedPositionForTree(52);
      // Undeclared exception!
      try { 
        node4.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      node1.addChildToBack(node0);
      node1.addChildrenToFront(node2);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isDo();
      node2.setCharno((-1131));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isWhile();
      Node node3 = Node.newString(57, "Object#Element", 37, 53);
      Node node4 = new Node(30, node1, node3, node1);
      node4.isGetElem();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.hasChildren();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      node0.isFromExterns();
      node0.isVoid();
      Node.newString("8fQ{nve");
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDefaultCase();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      node0.isIf();
      Node.mergeLineCharNo(1, 1);
      int int0 = Node.FREE_CALL;
      node0.setLineno(2);
      node0.isRegExp();
      node0.toStringTree();
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = node0.copyInformationFrom(node0);
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.setChangeTime(5359);
      node1.isEquivalentTo(node0);
      node0.putIntProp(43, 55);
      Node node2 = new Node(15);
      Node node3 = Node.newString("<5?7F8R/(tKq8imtdF", 30, 262144);
      node0.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node0);
      node2.isFromExterns();
      Node node4 = node2.copyInformationFromForTree(node3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.isNoSideEffectsCall();
      node0.cloneNode();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      String string0 = null;
      Node node1 = new Node(37, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.children();
      node0.hasChild(node1);
      node1.getAncestors();
      node1.children();
      node1.getStaticSourceFile();
      Node.mergeLineCharNo(0, 0);
      node2.getParent();
      node2.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isEquivalentToTyped(node0);
      node1.isIf();
      Node.mergeLineCharNo(36, 4095);
      int int0 = Node.ORIGINALNAME_PROP;
      Node node2 = new Node(111);
      node1.removeFirstChild();
      Node.newString("J8:(");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      Node node1 = new Node(51, node0, node0);
      node1.srcrefTree(node0);
      int int0 = (-991);
      Node node2 = null;
      try {
        node2 = new Node(53, node0, 39, 1645);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(88);
      Node node1 = new Node(52, 29, (-1684));
      node0.isEquivalentTo(node1);
      node1.setCharno(1667);
      Node.newString((-3272), "p0}0~D&HogGvcLo|H");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("'j|tsK", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newString("'j|tsK", (-536870912), 53);
      node0.isOr();
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node.newNumber(2966.115360059255);
      Node node0 = Node.newNumber((double) 16);
      node0.isQualifiedName();
      Node node1 = Node.newString("{`pmZ@");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("{`pmZ@", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.addChildToFront(node1);
      node0.srcref(node1);
      node0.setChangeTime(57);
      node0.isName();
      try { 
        node0.setString("{`pmZ@");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 16.0 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000007] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      node1.srcrefTree(node0);
      node1.isLabel();
      node1.putIntProp((-1238), 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node1.isStringKey();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newNumber((-246.0));
      Node node1 = Node.newString("com.google.common.collect.ImmutableList$1");
      node1.isSyntheticBlock();
      Node node2 = new Node(46, node0, node0, node1, 4, 119);
      Node node3 = new Node(56);
      node3.isCase();
      node2.setLineno(1);
      node2.isRegExp();
      Node node4 = new Node(36, 32, (-1041));
      Node.newString("Ozw-k@@f^I)kbF");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.cloneTree();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString(2130, "yy,d}D#Z0h");
      node0.setLineno(2130);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isExprResult();
      node0.getAncestors();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node.mergeLineCharNo(191, 50);
      node0.isNew();
      node0.isLabelName();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      Node node3 = Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node3.addChildrenToFront(node2);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isDo();
      node2.setCharno((-1131));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isWhile();
      Node node4 = Node.newString(57, "Object#Element", 37, 53);
      Node node5 = new Node(30, node3, node4, node1);
      node5.isGetElem();
      node3.isOr();
      node5.isBreak();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      Node node3 = Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node3.addChildrenToFront(node2);
      Node.newNumber((double) 55, 29, (-1244));
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isDo();
      node2.setCharno((-1131));
      node1.setJSDocInfo((JSDocInfo) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isWhile();
      Node node4 = Node.newString(57, "Object#Element", 37, 53);
      node4.putIntProp(5713, 56);
      Node node5 = new Node(30, node3, node4, node1);
      node5.isGetElem();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("4");
      node0.isObjectLit();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.removeProp(1901);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(112);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = null;
      jSTypeArray0[4] = null;
      jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node2 = new Node(32, node1, node1, node1, 2106, (-1348));
      Node node3 = new Node(38);
      node1.isThrow();
      node0.isLocalResultCall();
      node0.isDo();
      node2.setChangeTime(115);
      node2.checkTreeEquals(node0);
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = Node.newNumber((double) 55, 16, 743);
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(56, 114, 1);
      node2.addChildrenToBack(node1);
      node1.getLength();
      node0.toString();
      Node node3 = new Node(43, node2);
      node3.isQualifiedName();
      node1.isComma();
      node1.wasEmptyNode();
      node2.isIf();
      Node.mergeLineCharNo(36, 57);
      node1.isNew();
      node0.isOr();
      node0.isWith();
      node2.detachFromParent();
      node3.isSwitch();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = Node.newString("Not declared as a type name");
      Node node2 = new Node(36);
      Node node3 = Node.newNumber(335.94134746);
      Node node4 = new Node(4, node0, node3, 49, 43);
      node1.isExprResult();
      node4.isNull();
      node1.isContinue();
      Node node5 = new Node(0, node2, node4);
      // Undeclared exception!
      try { 
        node5.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isCatch();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isSwitch();
      Node node2 = node0.removeChildren();
      node2.isQualifiedName();
      node2.siblings();
      node1.getCharno();
      node1.isNoSideEffectsCall();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isDelProp();
      Node node1 = new Node(39, node0, node0, node0, (-585), 4095);
      Node node2 = new Node(155);
      node2.isThrow();
      node2.isLabel();
      node0.isDo();
      Node node3 = new Node((-4096), 48, 40);
      node2.isDebugger();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isSetterDef();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node node1 = new Node((-151), node0, node0, 4, 32);
      node1.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node1);
      node_SideEffectFlags1.setThrows();
      node0.isDo();
      node0.setCharno(114);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags((-1341));
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      node0.isLabel();
      node0.putIntProp(114, 114);
      node0.isIn();
      node0.getExistingIntProp(114);
      node0.isQualifiedName();
      node0.toString(false, false, false);
      // Undeclared exception!
      try { 
        node0.setString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 114
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1278), 93);
      node0.type = 93;
      node0.isUnscopedQualifiedName();
      node0.detachChildren();
      Node node1 = new Node(1, 93, 16);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getLength();
      node0.toString();
      node0.isAssignAdd();
      node0.isComma();
      node0.isLocalResultCall();
      node1.isReturn();
      node0.isSyntheticBlock();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(86);
      node0.isTry();
      node0.setChangeTime(48);
      node0.getCharno();
      node0.children();
      node0.setLength(86);
      node0.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node1 = new Node(32, node0, node0, node0, node0);
      node0.isDo();
      node0.setCharno(42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1259));
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(88);
      Node node1 = new Node(2130, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node node2 = node1.getChildAtIndex((-4096));
      Node node3 = new Node(49, node1);
      Node.newNumber((double) 8);
      Node node4 = Node.newString("Duplicate record field ", 419, 83);
      // Undeclared exception!
      try { 
        node4.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isExprResult();
      node0.getAncestors();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[0] = node0;
      node0.setStaticSourceFile((StaticSourceFile) null);
      nodeArray0[3] = node0;
      nodeArray0[1] = node0;
      nodeArray0[5] = node0;
      Node.mergeLineCharNo(2, 29);
      node0.isNew();
      node0.isLabelName();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isObjectLit();
      int int0 = Node.QUOTED_PROP;
      int int1 = Node.FREE_CALL;
      Node node1 = new Node(30, node0, node0, 54, 52);
      node1.setLineno(55);
      node0.srcref(node1);
      node0.setChangeTime(37);
      node0.isName();
      try { 
        node0.setString("change_time");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF 55 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(1711, 1711, 1711);
      nodeArray0[0] = node0;
      Node node1 = new Node(38, node0, node0, node0, node0, 40, 1540);
      node1.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node2 = new Node(15, node0, node0, node0, node0);
      node1.srcrefTree(node0);
      node0.isGetProp();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[6];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      // Undeclared exception!
      try { 
        JSType.toMaybeTemplatizedType((JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      node0.isLabel();
      node0.getLength();
      node0.toString();
      Node node1 = new Node(85, node0);
      node1.isQualifiedName();
      node0.isComma();
      node0.wasEmptyNode();
      node1.isIf();
      Node.mergeLineCharNo(5185, 2180);
      node0.isFalse();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      Node node2 = null;
      try {
        node2 = new Node(53, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      node0.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isDo();
      Node node2 = new Node(36, 3212, 15);
      node2.setCharno(3296);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.cloneTree();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(155);
      node0.isThrow();
      node0.isLabel();
      node0.isOr();
      node0.isSwitch();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(45);
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString("&j_[bSYT@_iEPJS");
      node1.isQualifiedName();
      Node node2 = new Node(43, node1, node0, node0, node1, 142, 55);
      node2.isTrue();
      node1.getProp(36);
      node2.getBooleanProp(38);
      Node node3 = new Node(48, node2, node2);
      node3.isVar();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(48);
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isFor();
      Node node1 = new Node(227, (-2153), 47);
      Node node2 = new Node(48, node0, 46, 30);
      node2.setLineno(3934);
      node0.isBreak();
      Node node3 = node2.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      // Undeclared exception!
      try { 
        node3.getChildAtIndex(57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = new Node((-1496), (-1496), (-1496));
      Node node1 = new Node((-1496), node0, 50, 48);
      node1.setLineno(53);
      node0.isBreak();
      Node node2 = node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node3 = new Node(51, node1, node2, node0, 42, 32);
      node0.removeFirstChild();
      Node.newNumber((double) 2);
      // Undeclared exception!
      try { 
        node2.addChildAfter((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6PL:4?L`8B-k2jP}");
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node1.removeFirstChild();
      Node node2 = Node.newNumber((double) 1);
      // Undeclared exception!
      try { 
        node2.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(85);
      node0.isQualifiedName();
      node0.isComma();
      node0.wasEmptyNode();
      node0.isIf();
      Node.mergeLineCharNo(1, 1351);
      node0.isNew();
      node0.isLabelName();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(117);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.isBreak();
      Node node1 = new Node((-1028), node0, node0);
      node0.srcrefTree(node0);
      Node.newString("=XV6M9|m+0hC}G");
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("PROTECTED");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString(586, "com.google.common.base.Predicates");
      node0.isDefaultCase();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1496), (-1496), (-1496));
      Node node1 = new Node((-1496), node0, 50, 48);
      node1.setLineno(53);
      node0.isBreak();
      Node node2 = node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node node1 = Node.newString("New Collection violated the Collection spec", 54, 46);
      node0.checkTreeEqualsImpl(node1);
      node0.isEquivalentTo(node0, true, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.cloneTree();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAnd();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(557);
      node0.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isDo();
      functionType0.getPrototype();
      Node node2 = new Node(36, 3212, 15);
      node2.setCharno(3296);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      node1.isWhile();
      node2.isGetElem();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(33);
      node0.isThrow();
      node0.setLineno(119);
      node1.isRegExp();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isDo();
      Node node3 = Node.newString("Object#Element", 32, 54);
      node0.checkTreeEqualsImpl(node3);
      node3.isEquivalentTo(node2, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node4 = node1.cloneTree();
      node4.isThis();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.putIntProp(124, 124);
      Node node1 = Node.newString("|l1!t", 36, 461845907);
      node1.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.isDo();
      node1.setCharno(12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isWhile();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("|l1!t");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isThis();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isDo();
      node0.setCharno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-3020));
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(151);
      node0.addSuppression(".}gyQ&}%Q");
      node0.isBreak();
      Node node1 = new Node(16, node0, node0, node0, 4095, 153);
      Node node2 = new Node(153, 4, 8);
      node1.isThrow();
      node1.setLineno(54);
      node0.isRegExp();
      Node node3 = new Node(38, node2, node1, 42, 39);
      node2.isNull();
      node0.isContinue();
      Node.mergeLineCharNo((-2200), 37);
      node3.isNew();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isHook();
      Node node1 = new Node(1, node0, node0, node0);
      node1.setVarArgs(false);
      Node.newString("String node not created with Node.newString");
      Node node2 = Node.newString("dnYM{gP4&<D3$XT#-6", 4095, 103);
      node2.isIf();
      Node.mergeLineCharNo(4095, 29);
      int int0 = Node.ORIGINALNAME_PROP;
      node1.isLabelName();
      Node node3 = new Node(56);
      node3.removeFirstChild();
      node3.useSourceInfoFrom(node2);
      Node.newNumber(260.317758728);
      node3.isParamList();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte) (-113);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.mayMutateArguments();
      Node.newString("Object#Element");
      node0.isTrue();
      InputId inputId0 = new InputId(">5WpPN%wyCO");
      Node node1 = new Node(32);
      node1.srcref(node0);
      node1.isNot();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1496), (-1496), (-1496));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(UG8HdmEeU^oD/OI'P");
      Node node1 = new Node((-1496), node0, 50, 48);
      node1.isOptionalArg();
      node1.checkTreeEqualsImpl(node0);
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(86);
      node0.isTry();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[5] = node0;
      String string0 = "=XV6M9|m+0hC}G";
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.putIntProp(55, 52);
      node0.isReturn();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(86);
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow(nodeArray0[4]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = Node.newString(38, "&0D'U");
      node2.setSourceEncodedPositionForTree(53);
      node2.isUnscopedQualifiedName();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.getSourceFileName();
      node0.isScript();
      node0.getNext();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(39, node0, node0, node0, (-580), 4095);
      node0.isThrow();
      node0.setLineno(46);
      node1.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node1.isIf();
      Node.mergeLineCharNo(38, 31);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isLabelName();
      node1.isIf();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node1.isLocalResultCall();
      Node node3 = new Node(50, 43, 43);
      node3.isIn();
      node2.isDebugger();
      node1.isOnlyModifiesArgumentsCall();
      Node node4 = node1.copyInformationFrom(node0);
      node4.hasMoreThanOneChild();
      Node node5 = new Node(132, node2, node2);
      node5.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isTry();
      node0.toString();
      node0.addSuppression("directives");
      node0.isDo();
      node0.isNE();
      node0.getAncestors();
      Node node1 = Node.newString(1220, "]K /N2^JA-348T");
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = Node.newNumber((double) 15);
      String string0 = " [";
      Node node2 = new Node(0, node0, node0, node0);
      Node node3 = new Node(63, node1, node2);
      Node node4 = node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node4, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node0.isEquivalentToShallow(node0);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isDo();
      node0.setCharno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isWhile();
      node0.isGetElem();
      node0.addChildrenToBack(node0);
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node1.isLocalResultCall();
      node0.isArrayLit();
      node0.setChangeTime((-1791));
      node2.isIf();
      Node node3 = Node.newNumber((-2267.0), 57, 110);
      node2.isGetElem();
      node0.isEmpty();
      node3.isAssignAdd();
      node0.isIf();
      // Undeclared exception!
      try { 
        node1.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newNumber((-883.2594658), 32, 4230);
      node0.wasEmptyNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Element");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString(35, "&0D'U");
      node0.setLineno(35);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(51, node0, node0, node0, node0);
      Node node2 = Node.newString(33, "&0D'U");
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = Node.newString(38, "&0D'U");
      Node.newString(10, "", 0, 2);
      node2.isUnscopedQualifiedName();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.getSourceFileName();
      node0.isContinue();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isTypeOf();
      Node node1 = new Node(39, node0, node0, node0, (-580), 4095);
      Node node2 = new Node(155);
      node2.isThrow();
      node0.setLineno(46);
      node2.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node2.isIf();
      Node.mergeLineCharNo(38, 31);
      int int0 = Node.ORIGINALNAME_PROP;
      node2.isLabelName();
      node1.isIf();
      node0.isGetElem();
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node0.isScript();
      node0.isFunction();
      Node node2 = new Node(52);
      node1.addSuppression("au9yz<ze[+Dt");
      node2.clonePropsFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node4 = Node.newString(46, "FUNCTON", 50, 49);
      node0.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node5 = new Node(4, node3, 4095, 29);
      node5.isScript();
      node4.isDelProp();
      JSType[] jSTypeArray0 = new JSType[3];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
      JSType jSType0 = jSTypeRegistry0.createOptionalType(functionType0);
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      node4.isNE();
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      Node node6 = node4.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node6.addChildrenAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      Node node1 = Node.newString(193, "au9yz<ze[+Dt");
      node1.isScript();
      node0.isFunction();
      Node node2 = new Node(32);
      node0.addSuppression("\n\nTree2:\n");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node.newString(39, "NE", 36, 1024);
      Node node3 = new Node(4095, node2, node0, node1);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.newNumber((double) (-4570));
      Node node0 = Node.newString(2, "Node has existing properties.");
      node0.isTypeOf();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = Node.newString(38, "&0D'U");
      node2.isUnscopedQualifiedName();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.getSourceFileName();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.isNull();
      node0.hasMoreThanOneChild();
      Node node1 = new Node(120, (-151), 46);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = Node.newString("");
      node2.isIn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, (ImmutableList<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.TemplateTypeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      node1.isThrow();
      node0.setLineno((-1061));
      node1.isRegExp();
      node0.isDo();
      Node node2 = new Node(42, 8, 46);
      node0.isIn();
      node0.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("Named type with empty name component", (-1915), 38);
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isSetterDef();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node node1 = new Node((-151), node0, node0, 4, 32);
      node1.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-901));
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node0.isEquivalentTo(node1, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags7.areAllFlagsSet();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 0, 1, 114);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isScript();
      node0.putIntProp(51, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node1.isDo();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      int int0 = Node.ORIGINALNAME_PROP;
      Node node0 = Node.newString("@=", 40, 992);
      Node node1 = new Node(40, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.setLineno(8);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("new child as existing parent", 37, 36);
      Node node1 = new Node(37, node0, node0);
      node1.srcrefTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createConstructorType("@=", node1, node1, jSType0, immutableList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isHook();
      Node node1 = new Node(1, node0, node0, node0);
      node1.setVarArgs(false);
      Node node2 = Node.newString("dnYM{gP4&<D3$XT#-6", 4095, 103);
      node2.isIf();
      Node.mergeLineCharNo(4095, 29);
      int int0 = Node.ORIGINALNAME_PROP;
      node1.isLabelName();
      Node node3 = null;
      try {
        node3 = new Node((-483), node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 0, 1, 114);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isScript();
      node0.putIntProp(51, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node1.isDo();
      Node node2 = new Node(40, node1, node1);
      // Undeclared exception!
      try { 
        node2.useSourceInfoFrom(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(4095, node0, node0, 79, 4095);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.addSuppression("");
      node1.putIntProp(32, 51);
      node1.isSwitch();
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node0.isEquivalentTo(node1, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.areAllFlagsSet();
      node1.getSourceFileName();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString(124, "&0D'U");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = Node.newString(38, "&0D'U");
      node2.isUnscopedQualifiedName();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.getSourceFileName();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(33);
      node0.isThrow();
      node0.setLineno(119);
      node1.isRegExp();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isDo();
      Node node3 = new Node(36, 2, 4095);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isIn();
      node2.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      int int1 = Node.ORIGINALNAME_PROP;
      node3.isLabelName();
      node3.isIf();
      node3.getQualifiedName();
      node1.srcrefTree(node3);
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("R$0@Q>i)F.-(", 1, 21);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(1, node1, node1, node1);
      node2.setVarArgs(true);
      node1.getCharno();
      node2.children();
      node0.setLength((-222));
      node2.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node3 = node2.srcrefTree(node0);
      node3.setVarArgs(false);
      Node node4 = new Node(40, 47, 1417);
      node4.setLength(32);
      node3.isGetProp();
      node0.isStringKey();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getChildCount();
      node0.isThis();
      node0.isThrow();
      Node node1 = new Node(4095, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.setWasEmptyNode(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = node2.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isLocalResultCall();
      node2.isDo();
      node0.setChangeTime((-1791));
      node0.checkTreeEquals(node1);
      Node node3 = node2.srcrefTree(node0);
      node0.setLength(55);
      node2.isGetProp();
      Node node4 = new Node(30);
      node4.setChangeTime(4095);
      node4.isStringKey();
      node3.getNext();
      // Undeclared exception!
      try { 
        node3.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(33);
      node0.isThrow();
      node0.setLineno(119);
      node1.isRegExp();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isDo();
      Node node3 = new Node(53, (-3695), 2);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ImmutableList.copyOf((Iterable<? extends JSType>) linkedList0);
      Node node4 = new Node(47, node3, node1, node2);
      Node node5 = node4.srcrefTree(node3);
      node1.setLength(116);
      node5.isGetProp();
      node4.isStringKey();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isLocalResultCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      Node.newNumber((double) 0, 1, 114);
      node0.isDo();
      node0.isOnlyModifiesArgumentsCall();
      node0.isIf();
      Node.mergeLineCharNo(32, 43);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0);
      node1.isIf();
      node0.isGetElem();
      Node.extractLineno(1958);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString((-4477), "com.google.javascript.rhino.jstype.UnionType", 85, 85);
      node0.mayMutateArguments();
      Node node1 = new Node(31, node0, 57, 29);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node1);
      node1.mayMutateGlobalStateOrThrow();
      node1.isFor();
      node1.hasOneChild();
      node0.getSourceFileName();
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
      node1.isCast();
      node1.getChildBefore(node0);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(397);
      node0.isSetterDef();
      node0.isDo();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = null;
      try {
        node1 = new Node(26, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node(12, node1, node0, node0);
      node2.addSuppression("Object#Element");
      node1.isAssign();
      node1.getAncestors();
      Node node3 = Node.newNumber(16.0, 4095, 38);
      node2.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node0.isIf();
      node3.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("Unknown class name", 48, 8);
      node3.isTypeOf();
      node2.getChildAtIndex((-794));
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isRegExp();
      node2.isDo();
      Node node3 = new Node(42, 8, 46);
      node2.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      node1.isReturn();
      node3.getQualifiedName();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      node0.setChangeTime(4095);
      node0.isCase();
      node0.putIntProp(202, 12);
      Node node1 = new Node(53, node0, node0, node0, 31, (-2009));
      // Undeclared exception!
      try { 
        node1.setDouble(817.7760514327);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.addSuppression("");
      node1.putIntProp(32, 51);
      node1.isSwitch();
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node0.isEquivalentTo(node1, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.areAllFlagsSet();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.setChangeTime(5359);
      node0.isEquivalentTo(node1);
      node0.putIntProp(49, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2302);
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = new Node(57);
      Node node3 = Node.newString("<5?7F8R/(tKq8imtdF", 32, 37);
      node2.checkTreeEqualsImpl(node3);
      node_SideEffectFlags0.clearAllFlags();
      node0.checkTreeEquals(node3);
      node1.isFromExterns();
      node1.copyInformationFromForTree(node3);
      node2.isNoSideEffectsCall();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(103);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = node0.cloneTree();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(1724);
      node0.isTry();
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.putIntProp((-2513), 128);
      Node node1 = Node.newNumber((-2008.3063619746247));
      node1.isIf();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2438));
      node0.isEquivalentToShallow(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newNumber(1507.48, 0, 2221);
      node2.isDo();
      Node node3 = Node.newString("Object#Element");
      node2.setCharno(450);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node5 = new Node(15, node4, node3, node2, node3);
      node4.checkTreeEquals(node2);
      Node node6 = Node.newString(48, "yy,d}D#Z0h");
      node5.isFromExterns();
      node6.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(48);
      node0.isLabel();
      node0.putIntProp(113, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isDo();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node0.removeFirstChild();
      Node node2 = Node.newNumber((double) 54);
      Node node3 = new Node(8287, node2, 4, 2221);
      Node node4 = node1.copyInformationFrom(node3);
      node4.isExprResult();
      Node node5 = Node.newString("fK31E!=~d3W@[{]JoZ", 20, 48);
      node5.isCall();
      node0.isNull();
      node4.isContinue();
      node1.addChildBefore(node3, node0);
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(83, nodeArray0, 0, 124);
      node0.getBooleanProp(1292);
      Node node1 = new Node((-2393), node0, node0, node0, node0, 301, 11);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2393
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(1711, 1711, 1711);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(2, "Not has xisZi7g properties.");
      nodeArray0[1] = node1;
      node1.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(1711, nodeArray0, (-797), 1711);
      Node node3 = node2.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString("W%`ku>K?:._:#T1/l");
      Node node1 = new Node(3207, node0, node0, 1, 40);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(45);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = Node.newString("&j_[bSYT@_iEPJS");
      node0.isLabel();
      Node node2 = Node.newString("&j_[bSYT@_iEPJS", 38, (-1));
      node2.getBooleanProp((-1766));
      Node node3 = new Node(9, node1, node0);
      Node node4 = node2.srcrefTree(node3);
      node3.addChildrenAfter(node4, node1);
      node4.cloneTree();
      node4.isThis();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[6];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node2.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo(32, 2172);
      node1.isNew();
      node1.isLabelName();
      Node node3 = Node.newString(4095, "Object#Element", 16, 53);
      Node.newNumber((double) 31, 55, (-2829));
      node0.isDo();
      node3.isOnlyModifiesArgumentsCall();
      node2.isIf();
      Node.mergeLineCharNo(40, 16);
      int int0 = Node.ORIGINALNAME_PROP;
      node3.isLabelName();
      node3.isIf();
      node1.getQualifiedName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      node1.getIntProp(147);
      Node node2 = new Node(12, node1, node0, node0);
      node2.addSuppression("Object#Element");
      node1.isAssign();
      node1.getAncestors();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node3 = null;
      try {
        node3 = new Node(43, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(103);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.isBreak();
      node0.setLineno(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[0] = (JSType) templateType0;
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      jSTypeRegistry1.createParameters(jSTypeArray0);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(86);
      node0.isTry();
      node0.setChangeTime(48);
      node0.getCharno();
      node0.children();
      node0.setLength(86);
      node0.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node1 = Node.newString(2, "||?0$Me)!$2~que");
      Node node2 = node0.srcrefTree(node1);
      node1.setLength((-3871));
      node0.isGetProp();
      node2.isStringKey();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = Node.newNumber(2966.115360059255, 114, 9);
      node0.isNoSideEffectsCall();
      Node node2 = new Node(42);
      Node node3 = new Node(1121, node1, node2);
      node2.srcrefTree(node3);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isTypeOf();
      Node node1 = new Node(39, node0, node0, node0, (-580), 4095);
      Node node2 = new Node(155);
      node2.isThrow();
      node0.setLineno(46);
      node2.isLabel();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node3 = new Node(300, node1, node1, node2, node1);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      node1.srcrefTree(node0);
      Node node2 = node1.srcrefTree(node0);
      node2.setLength(45);
      node2.isGetProp();
      node2.isCall();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.FunctionType$Kind", 48, (-1288));
      Node node2 = new Node(12, node1, node1);
      Node node3 = node0.srcrefTree(node1);
      Node node4 = new Node(55, node3, node3, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node0.addSuppression("directives");
      node0.isDo();
      node1.addSuppression("directives");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node2.isDo();
      node2.addChildToFront(node0);
      Node.newString(42, "\n\nSubtree2: ", 29, 1608);
      Node.newString("pD7x");
      Node node3 = null;
      try {
        node3 = new Node(2, node0, (-1202), 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      JSType jSType0 = null;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(1, node0, node0, node0, node0, 1282, (-4178));
      node1.isBreak();
      Node node2 = new Node(49, node1, node1, node1, 0, 57);
      Node node3 = new Node(50);
      node1.isThrow();
      node0.setLineno(16);
      node2.isRegExp();
      node0.isDo();
      node3.setChangeTime(969);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(45);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = Node.newString("&j_[bSYT@_iEPJS");
      node0.isLabel();
      Node node2 = new Node(43, node1, node0, node0, node1, 113, 55);
      node2.isTrue();
      node1.getProp(36);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("Object#Element");
      node1.putProp(3772, node_SideEffectFlags0);
      Node node3 = Node.newNumber((double) 30, 30, 2051);
      node3.isEquivalentToTyped(node1);
      Node node4 = new Node((-418), node2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node1.mayMutateGlobalStateOrThrow();
      node1.isNull();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(103);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[2] = node0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tNr/UWjMo[l2%>-");
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.setLineno((-2908));
      node0.isStringKey();
      Node node2 = new Node(149, node1, node0, node0, node1, 3007, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      int int0 = 103;
      Node node0 = new Node(103);
      node0.isObjectLit();
      Node node1 = new Node(1, node0, node0, node0);
      node1.setVarArgs(false);
      String string0 = "dnYM{gP4&<D3$XT#-6";
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node((-5), (-5), (-5));
      node0.isCast();
      node0.setSourceEncodedPositionForTree((-5));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(43, node1, node1, 38, 57);
      node0.isNoSideEffectsCall();
      Node node3 = new Node(42);
      node0.isDo();
      Node.newString("");
      Node node4 = null;
      try {
        node4 = new Node(43, node3, node3, node1, 1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6PL:4?L`8B-k2jP}");
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.setLineno(224);
      node0.isStringKey();
      Node node2 = new Node(36, node1, node1, node1, node0, 0, 49);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      Node node3 = Node.newString((-4777), "Object#Element", 51, 11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node4 = new Node(1, node3);
      node3.isWhile();
      node4.setSourceEncodedPositionForTree((-1232));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node2.mayMutateGlobalStateOrThrow();
      node4.isNull();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node0.isEquivalentToShallow(node0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isDo();
      Node node1 = Node.newString("Object#Element");
      node0.setCharno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node3 = new Node((-1352), node0, node0, node2, node0);
      node2.checkTreeEquals(node0);
      Node node4 = Node.newString((-2419), "quoted");
      node4.isFromExterns();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2145, node0, (-2321), 32);
      Node node2 = null;
      try {
        node2 = new Node(85, node1, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 124, 15, 46);
      node0.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node1.isIf();
      Node.mergeLineCharNo(42, 32);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isLabelName();
      node0.isIf();
      node1.getQualifiedName();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      node0.getInputId();
      Node node1 = new Node((-1216), node0, node0, node0, node0);
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.getCharno();
      node1.getFirstChild();
      node1.isNull();
      node1.hasMoreThanOneChild();
      Node node2 = new Node(50, 37, 0);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("Object#Key");
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      node0.putProp((-1691), locale_FilteringMode0);
      Node.newNumber((double) 50, (-1468), 77);
      Node node3 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6PL:4?L`8B-k2jP}");
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setVarArgs(true);
      node1.isFor();
      node0.isStringKey();
      Node node2 = Node.newString("first new child has existing parent", 46, 1005);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(46, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isNoSideEffectsCall();
      node1.isFunction();
      Node node2 = new Node(0);
      node0.addSuppression("direct_eval");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.mayMutateGlobalStateOrThrow();
      Node.newString(114, "", 16, 52);
      node0.addChildrenToFront(node2);
      Node node4 = Node.newString(837, "S", 0, (-2308));
      node4.mayMutateGlobalStateOrThrow();
      node0.addChildAfter(node4, node2);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp((-5202));
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(3930);
      node_SideEffectFlags0.setAllFlags();
      Node node1 = Node.newString("", 4095, 8);
      node1.isFromExterns();
      node1.isVoid();
      Node.newString("Object#Element");
      try { 
        node1.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      node0.setChangeTime(48);
      node0.getCharno();
      node0.children();
      node0.setLength(103);
      node0.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node1 = Node.newString(2, "||?0$Me)!$2~que");
      Node node2 = node0.srcrefTree(node1);
      node2.mayMutateGlobalStateOrThrow();
      node1.setLength((-3871));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isGetProp();
      node2.isStringKey();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      int int0 = 8;
      Node node0 = Node.newString("com.google.common.collect.AbstractMapBasedMultimap$2", 8, 8);
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(33);
      node0.isThrow();
      node0.setLineno(119);
      node1.isRegExp();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isDo();
      node2.putProp((-2242), jSTypeRegistry0);
      Node node3 = Node.newNumber((-458.411), 30, 2);
      Node node4 = new Node(32);
      node1.isVoid();
      node2.isNot();
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node4, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setVarArgs(true);
      node0.isLabel();
      node0.putIntProp(113, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2798);
      node0.isDo();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node0.removeFirstChild();
      Node node2 = Node.newNumber((double) 54);
      Node node3 = new Node(8287, node2, 4, 2221);
      Node node4 = node1.copyInformationFrom(node3);
      node4.isExprResult();
      Node node5 = Node.newString("fK31E!=~d3W@[{]JoZ", 20, 48);
      node5.isCall();
      node0.isNull();
      node4.isContinue();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.mayMutateGlobalStateOrThrow();
      node0.addSuppression("directives");
      node0.isDo();
      node0.isNE();
      node0.getAncestors();
      Node node1 = new Node(46, 48, 8);
      Node node2 = new Node(523, node1, node0);
      Node node3 = node1.srcrefTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = node2.removeChildren();
      node2.siblings();
      node1.getCharno();
      node4.isNoSideEffectsCall();
      node1.addChildrenToFront(node3);
      Node.newString(4, "directives", (-1427), 2);
      node2.isEmpty();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(55, node0, node0, node0, node0, 4, 47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo(37, 53);
      node1.isNew();
      node1.isLabelName();
      Node.newString((-704), "Object#Key", 2, 1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node3 = new Node(16, node2);
      node2.isWhile();
      Node.newString("Object#Key", 30, 4095);
      node3.setSourceEncodedPositionForTree(4095);
      node3.mayMutateGlobalStateOrThrow();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isRegExp();
      node2.isDo();
      Node node3 = new Node(42, 8, 46);
      node0.isIn();
      node0.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      node2.isReturn();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isThrow();
      node0.setLineno(57);
      node0.isUnscopedQualifiedName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node0.setWasEmptyNode(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      Node node2 = new Node(32, node1, node0, node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.mergeLineCharNo((-2403), 40);
      node2.isNew();
      node2.isLabelName();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isRegExp();
      node2.isDo();
      Node node3 = new Node(42, 8, 46);
      node0.isIn();
      node0.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      node2.isReturn();
      node2.getQualifiedName();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node2 = new Node(52);
      node1.addSuppression("au9yz<ze[+Dt");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node4 = Node.newString(46, "FUNCTON", 50, 49);
      node0.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node5 = new Node(4, node3, 4095, 29);
      node4.isDefaultCase();
      node4.isDelProp();
      JSType[] jSTypeArray0 = new JSType[3];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      JSType jSType0 = jSTypeRegistry0.createOptionalType(functionType0);
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("FUNCTON", node2, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[1] = (JSType) null;
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_TYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.InstanceObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      JSType.toMaybeFunctionType((JSType) null);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setChangeTime((-1555));
      node0.isLabel();
      node0.putIntProp(1351, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1473));
      node0.isDo();
      Node node1 = new Node(39);
      Node.newNumber((double) 2);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Vector<TemplateType> vector0 = new Vector<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(vector0);
      node0.putIntProp(262, 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2785);
      Node node1 = new Node((-483), node0, node0);
      node0.addChildToFront(node1);
      Node node2 = Node.newString((-2316), "1@PI]#Udf{]w:AkPaBY", 0, 1);
      Node node3 = Node.newString("ELE7tRBT|&/(,");
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(33);
      node0.isThrow();
      node0.setLineno(119);
      node1.isRegExp();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isDo();
      Node node3 = new Node(36, 2, 4095);
      node1.isIn();
      node2.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isLabelName();
      node0.isReturn();
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(51, (-737), 16);
      node0.isOptionalArg();
      node0.isAssignAdd();
      node0.isTypeOf();
      node0.isOptionalArg();
      node0.isSyntheticBlock();
      node0.children();
      Node node1 = new Node((-375), node0);
      Node node2 = Node.newNumber((-2342.641186089));
      node2.getJSDocInfo();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node3.cloneNode();
      node0.addChildrenToBack(node1);
      Node.extractLineno(48);
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1496), 2130, 2130);
      Node node1 = new Node((-1496), node0, 50, 48);
      node1.isOptionalArg();
      node1.checkTreeEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.newString("com.google.common.collet.bstractutimap$Values", 37, 0);
      node0.isFromExterns();
      node0.isVoid();
      Node node2 = Node.newString("8fQ{nve");
      try { 
        node2.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING 8fQ{nve is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(1711, 1711, 1711);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(2, "Not has xisZi7g properties.");
      nodeArray0[1] = node1;
      Node node2 = new Node(1711, nodeArray0, (-797), 1711);
      node2.isUnscopedQualifiedName();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node(12, node1, node0, node0);
      node2.addSuppression("Object#Element");
      node1.isAssign();
      node1.getAncestors();
      Node.newNumber(16.0, 4095, 38);
      node2.isDo();
      node1.isOnlyModifiesArgumentsCall();
      node0.isIf();
      Node.mergeLineCharNo(837, 0);
      int int0 = Node.ORIGINALNAME_PROP;
      node1.isLabelName();
      node0.isReturn();
      node1.getQualifiedName();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isCatch();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isSwitch();
      Node node2 = node0.removeChildren();
      node2.isQualifiedName();
      node2.siblings();
      node1.getCharno();
      node1.isNoSideEffectsCall();
      Node.newString(38, "Object#Key", 268, 53);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = Node.newNumber((-1.0), 886, (-338));
      Node node1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W-Z*F^;WtiYv'>'0U=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isTry();
      Node node1 = new Node(38, node0, 103, 46);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[1] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      Node node3 = null;
      try {
        node3 = new Node(37, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(57, node0, node0, 30, 12);
      double double0 = 2966.115360059255;
      int int0 = 114;
      int int1 = 9;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isNoSideEffectsCall();
      node1.isFunction();
      Node node2 = new Node(0);
      node0.addSuppression("direct_eval");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.mayMutateGlobalStateOrThrow();
      Node.newString(114, "", 16, 52);
      Node.mergeLineCharNo(4095, 50);
      int int0 = Node.ORIGINALNAME_PROP;
      node3.isLabelName();
      node2.isReturn();
      node3.getQualifiedName();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.hasChildren();
      node0.getStaticSourceFile();
      node1.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      int int0 = (-3222);
      Node node2 = null;
      try {
        node2 = new Node(29, node1, node0, node1, 152, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(55, node0, node0, node0, node0, 4, 47);
      node1.isTrue();
      node1.getProp(40);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("");
      node1.putProp((-1166), "PROTECTED");
      Node node2 = Node.newNumber((double) 52, 4, 849);
      node0.getChildAtIndex((-127));
      node0.removeFirstChild();
      Node.newNumber((-1.0));
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node2 = new Node(52);
      node1.addSuppression("au9yz<ze[+Dt");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node.newString(46, "FUNCTION", 50, 49);
      node0.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
      node2.getSourceFileName();
      node3.isParamList();
      node3.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.getInputId();
      node0.getProp(1586);
      node0.isAssignAdd();
      node0.removeProp(1586);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.toString(false, false, false);
      node0.getDirectives();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = Node.newNumber((double) 3293);
      node0.isFromExterns();
      Node node1 = new Node(3293, node0, node0, node0, node0);
      node1.srcref(node0);
      node1.isSyntheticBlock();
      node1.isComma();
      node0.getIndexOfChild(node1);
      Node.extractLineno(8);
      String string0 = "com.google.javascript.rhino.Node$ObjectPropListItem";
      try { 
        node0.setString("com.google.javascript.rhino.Node$ObjectPropListItem");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 3293.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getInputId();
      Node node1 = new Node(29, node0, 4, 2);
      node1.getSideEffectFlags();
      node1.getCharno();
      node1.isNull();
      node0.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(300);
      node0.isDo();
      Node node2 = null;
      try {
        node2 = new Node(31, node0, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isBreak();
      Node node1 = new Node(39, node0, node0, node0, (-580), 4095);
      Node node2 = new Node(155);
      node2.isThrow();
      node0.setLineno(46);
      Node node3 = Node.newNumber((double) 16);
      Node node4 = new Node((-694), node2, 4095, 0);
      node4.copyInformationFrom(node1);
      node4.isExprResult();
      Node.newString("z(K=ZF2Tk", 93, 57);
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(55, node0, node0, node0, node0, 4, 47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo(37, 36);
      node1.isNew();
      node1.isLabelName();
      Node.newString((-704), "Object#Key", 2, 1);
      Node node3 = new Node(16, node2);
      node2.isWhile();
      Node.newString("Object#Key", 30, 4095);
      node3.setSourceEncodedPositionForTree(4095);
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      node0.getInputId();
      Node node1 = new Node(29, node0, 4, 2);
      node1.getSideEffectFlags();
      node1.getCharno();
      Node node2 = node1.getFirstChild();
      node1.isNull();
      node1.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(300);
      node0.isDo();
      Node node3 = null;
      try {
        node3 = new Node(31, node0, node0, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isCast();
      node0.setVarArgs(false);
      Node node1 = new Node(12, node0, 53, 1);
      node1.isScript();
      node1.putIntProp(868, 102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node1.isDo();
      Node node2 = null;
      try {
        node2 = new Node(995, node1, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isRegExp();
      node2.isDo();
      node0.setChangeTime((-1791));
      node0.checkTreeEquals(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node3 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      Node node4 = new Node(37, node1, node1, node3, node1);
      Node node5 = node1.copyInformationFromForTree(node3);
      node2.isDec();
      node5.setLength(57);
      node2.isGetProp();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 32;
      Node node0 = new Node(32, 32, 32);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)16;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.newNumber((double) 4);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isBreak();
      Node node1 = new Node(39, node0, node0, node0, (-580), 4095);
      Node node2 = new Node(155);
      node2.isThrow();
      node0.setLineno(46);
      node1.isRegExp();
      node0.isDo();
      Node node3 = new Node((-4096), 48, 40);
      node0.isIn();
      node2.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      node3.isLabelName();
      node3.isReturn();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(45);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = Node.newString("&j_[bSYT@_iEPJS");
      node0.isLabel();
      String string0 = "PROTECTED";
      Node node2 = new Node(43, node1, node0, node0, node1, 113, 55);
      node2.isTrue();
      node0.getProp(2051);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("Object#Element");
      node1.putProp(3772, node_SideEffectFlags0);
      Node node3 = Node.newNumber((double) 30, 30, 2051);
      node3.isEquivalentToTyped(node1);
      Node node4 = new Node((-418), node2);
      node4.isNot();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.setChangeTime(40);
      node0.isEquivalentTo(node0);
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(49);
      Node node2 = Node.newString("<5?7F8R/(tKq8imtdF", 0, (-5604));
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(52, node0, node0, node0, node2);
      node1.copyInformationFromForTree(node3);
      node3.isDec();
      node1.setLength(52);
      node0.isDec();
      node2.getSourceOffset();
      node2.isReturn();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.setChangeTime(40);
      node0.isEquivalentTo(node0);
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(49);
      Node node2 = Node.newString("<5?7F8R/(tKq8imtdF", 0, (-5604));
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(52, node0, node0, node0, node2);
      node1.copyInformationFromForTree(node3);
      node0.setChangeTime(38);
      node0.isVarArgs();
      Node node4 = null;
      try {
        node4 = new Node(54, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isCast();
      node0.setVarArgs(true);
      Node node1 = Node.newString(40, "dnYM{gP4&<D3$XT#-6", 116, (-929));
      node1.isScript();
      node1.putIntProp(868, 102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node1.isDo();
      Node node2 = new Node(995, node1, node0, node1, node1);
      Node node3 = node2.removeFirstChild();
      Node node4 = Node.newNumber((double) 4);
      Node node5 = new Node((-2036), node4, 4, 49);
      node0.copyInformationFrom(node4);
      node3.isParamList();
      Node.newString("fK31E!=~d3W@[{]JoZ", 50, 2934);
      node5.isCall();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN", 105, 49);
      node0.isTrue();
      node0.isObjectLit();
      Node node1 = new Node(105);
      Node node2 = node1.cloneNode();
      Node node3 = Node.newNumber((-1524.68991));
      node1.addChildToBack(node0);
      node3.addChildrenToFront(node2);
      node0.checkTreeEquals(node1);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(46);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 46
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      node1.isIn();
      node1.isWhile();
      node0.setLineno(51);
      Node node2 = Node.newString(37, "Named type with empty name component");
      node0.setChangeTime(31);
      node2.checkTreeEquals(node0);
      Node node3 = new Node(4095, node1, node0, node1, node2);
      Node node4 = node0.copyInformationFromForTree(node3);
      node1.isDec();
      node4.setLength(30);
      node2.isGetProp();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[9];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(48, node0, node0, node0, 49, 55);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      Node node3 = Node.newString("7_W}2LD[Vz()");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)47;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte) (-84);
      byteArray0[5] = (byte)67;
      byteArray0[7] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.detachChildren();
      node2.getType();
      Node node4 = node1.srcrefTree(node0);
      node4.setLength(12);
      node1.isGetProp();
      node2.isAnd();
      node0.checkTreeEqualsImpl(node3);
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setSourceEncodedPositionForTree(46);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node.newNumber((double) 114, 103, 991);
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-1476));
      node1.isDo();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isThrow();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isSwitch();
      Node node2 = node0.removeChildren();
      node2.siblings();
      node1.getCharno();
      node1.isNoSideEffectsCall();
      Node node3 = new Node(1, node1, node1, node0, node1, 32, 63);
      node1.hasChild(node3);
      try { 
        node1.setString("Q)`':{");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node2 = new Node(47);
      node1.addSuppression("au9yz<ze[+Dt");
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.toString();
      Node node3 = Node.newString("FUNCT5ON");
      node0.isIn();
      node3.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("Object#Element", 228, 1);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      node0.getInputId();
      Node node1 = new Node((-1216), node0, node0, node0, node0);
      node1.getSideEffectFlags();
      node1.getCharno();
      Node node2 = node1.getFirstChild();
      node1.isNull();
      node1.hasMoreThanOneChild();
      Node node3 = Node.newString("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-105);
      node0.setSourceEncodedPosition(390);
      byteArray0[1] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.getSourceOffset();
      node2.isOptionalArg();
      node2.addChildToBack(node3);
      node3.isEmpty();
      node1.getBooleanProp(0);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(454);
      Node node1 = new Node(454, node0, node0, (-1424), 90);
      node1.cloneNode();
      node1.setType(57);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isScript();
      node0.isCatch();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node4.isVar();
      node4.isCall();
      node4.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("1Gy?rxSx)N)NX2:", (-978), 52);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = Node.newString("PROTECTED", 4, 77);
      node1.isTrue();
      node1.getProp(40);
      jSTypeRegistry0.clearTemplateTypeNames();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = new Node(46);
      Node node3 = Node.newString("");
      Node node4 = new Node(43, node3, node1, node2, node2, 8287, 663);
      node4.hasChild(node3);
      node0.setString("|0");
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString(45, "@=");
      Node node1 = new Node(2130, node0, node0);
      node1.setLength(1);
      Object object0 = new Object();
      node1.putProp(30, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node2 = new Node(1);
      Node node3 = Node.newString("@=");
      node3.isVoid();
      // Undeclared exception!
      try { 
        node3.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(40, node0);
      // Undeclared exception!
      try { 
        node1.setString(" [");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber(706.14057);
      nodeArray0[0] = node0;
      Node node1 = new Node(4);
      nodeArray0[1] = node1;
      node0.removeChildren();
      Node node2 = new Node((-4570), nodeArray0, (-797), (-4570));
      node2.removeChildAfter(node0);
      Node.extractLineno(55);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = Node.newNumber((-4534.476));
      node0.isComma();
      node0.isThrow();
      node0.setLineno(122);
      Node node1 = new Node(57, node0);
      node1.isRegExp();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("=XV6M9|m+0hC}G");
      node0.putIntProp(55, 52);
      node0.isSwitch();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node0.isEquivalentToShallow(node0);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = Node.newString(91, "=XV6M9|m+0hC}G", 32, 1655);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-2146755962));
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node0.checkTreeEquals(node0);
      node0.isFromExterns();
      node0.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.addSuppression("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.putIntProp(32, 51);
      node1.isSwitch();
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags7.setMutatesThis();
      node0.checkTreeEquals(node1);
      node1.isFromExterns();
      node0.copyInformationFromForTree(node1);
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.addSuppression("");
      node1.putIntProp(32, 51);
      node1.isSwitch();
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node1.checkTreeEquals(node0);
      node0.isFromExterns();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber(16.0, 0, (-1000));
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(53, (-1053), 29);
      node0.addSuppression("directives");
      node1.isDo();
      node0.addSuppression("directives");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.isDo();
      node0.addChildToFront(node2);
      Node.newString(49, "\n\nSubtree2: ", 46, 113);
      Node.mergeLineCharNo(1417, 38);
      node2.isNew();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node2 = new Node(47);
      node1.addSuppression("au9yz<ze[+Dt");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.isDo();
      Node.newString(4095, "", 40, 56);
      Node.mergeLineCharNo((-3077), 46);
      node1.isNew();
      Node node4 = new Node((-3634), node3, node2);
      node4.getIndexOfChild(node2);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      node1.isIn();
      node1.isWhile();
      node0.setLineno(51);
      Node.newString(37, "Named type with empty name component");
      node0.setChangeTime(31);
      node0.isName();
      node1.getCharno();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.extractLineno((-536870912));
      Node node0 = Node.newNumber(0.7);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5515);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(55);
      node0.setVarArgs(true);
      node0.isLabel();
      node0.putIntProp(113, (-509));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node0.isDo();
      Node node1 = new Node(1470, node0, node0, node0, node0);
      node1.removeFirstChild();
      Node.newNumber((-1.0));
      Node node2 = new Node((-894), node0, 53, 48);
      Node node3 = null;
      try {
        node3 = new Node(40, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getExtendedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber((double) 8, 30, 38);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.addChildrenToFront(node2);
      node2.isQuotedString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newString("e'f_VL8#", 32, 4);
      node2.isFromExterns();
      node3.getChildAtIndex((-783));
      node3.isVoid();
      Node node4 = null;
      try {
        node4 = new Node(16, node2, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString(124, "|n+nW6)}#dkX+lVzWG");
      node0.setLineno(110);
      node0.getString();
      node0.hasChildren();
      node0.getStaticSourceFile();
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.isGetterDef();
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = Node.newString(38, "|n+nW6)}#dkX+lVzWG");
      node2.isUnscopedQualifiedName();
      node1.wasEmptyNode();
      Node node3 = null;
      try {
        node3 = new Node(51, node0, node1, (-1958), 118);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isEquivalentToShallow(node0);
      node0.isThrow();
      node0.setLineno(57);
      node0.isUnscopedQualifiedName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node0.isRegExp();
      node0.isDo();
      node0.isIn();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      node0.setLineno(1);
      int int0 = (-3049);
      Node node1 = Node.newString((-3049), "Object#Key");
      node0.setChangeTime(1199);
      node1.isName();
      try { 
        node0.setString("Object#Element");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST 1 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000346] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      String string0 = "@=";
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      node1.setChangeTime(4095);
      node0.isLabel();
      node0.putIntProp(202, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node0.isDo();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      node0.setChangeTime(48);
      Node node1 = new Node(15);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isLabel();
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node0.isDo();
      Node node2 = new Node(113);
      node2.removeFirstChild();
      Node.newNumber((double) 32);
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = new Node(55, node0, node0, node0, node0, 4, 47);
      node1.isTrue();
      node1.getProp(40);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("");
      node1.putProp((-1166), "PROTECTED");
      Node node2 = Node.newNumber((double) 52, 4, 849);
      node1.isEquivalentToTyped(node0);
      node2.isNot();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(37, 39, 39);
      node0.isCall();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(1688, nodeArray0);
      node0.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      Node node1 = Node.newString("PROTECTED", 4, 77);
      node1.isTrue();
      node1.getProp(40);
      jSTypeRegistry0.clearTemplateTypeNames();
      InputId inputId0 = new InputId("");
      node1.putProp((-1166), "PROTECTED");
      Node node2 = Node.newNumber((double) 52, 4, 849);
      node1.isEquivalentToTyped(node0);
      node2.isNot();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = new Node(32, node0, node0, node0, 115, (-2774));
      Node node2 = new Node(36);
      node1.isThrow();
      node2.setLineno((-1061));
      node1.isRegExp();
      node2.isDo();
      Node node3 = new Node(42, 8, 46);
      node0.isIn();
      node0.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("", (-1915), 1507);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node0.putBooleanProp(46, false);
      node0.getAncestor(16);
      Node node2 = Node.newNumber(16.0, 57, 50);
      node1.isNoSideEffectsCall();
      Node node3 = new Node(12, node1);
      node3.getQualifiedName();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node3.isRegExp();
      node1.addSuppression("free_call");
      node0.isDo();
      node0.isAssign();
      node1.isString();
      Node node4 = new Node(4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      node0.setChangeTime(48);
      node0.isLabel();
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node0.isDo();
      Node node1 = new Node(113);
      node1.removeFirstChild();
      Node.newNumber((double) 32);
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.NamespaceType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isCatch();
      Node node3 = new Node(114);
      node1.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("Object#Element");
      node0.isLabel();
      node0.isTrue();
      node0.getProp(1655);
      InputId inputId0 = new InputId("");
      node0.putProp(154, inputId0);
      Node node1 = Node.newNumber(2864.566147, (-2752), 15);
      node1.isEquivalentToTyped(node0);
      node1.isNot();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber((-484.7411602));
      Node node1 = new Node(8, node0);
      node1.setWasEmptyNode(true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);
      node1.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node((-4072), (Node) null, (Node) null, (Node) null, 2250, 108);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node0.isThrow();
      node2.setLineno(29);
      node0.isRegExp();
      node0.isDo();
      Node node3 = new Node((-1826), 5, 37);
      node3.isIn();
      node1.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("com.google.javascript.rhino.jstype.NamespaceType", 1, 52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1826
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber(825.994);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isSetterDef();
      Node node1 = Node.newString(2, "z");
      Node node2 = node0.copyInformationFrom(node1);
      node2.isExprResult();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node2.setLineno(29);
      node0.isRegExp();
      node0.isDo();
      node2.copyInformationFrom(node1);
      Node node3 = new Node((-1826), 56, 37);
      node3.isIn();
      node1.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("com.google.javascript.rhino.jstype.NamespaceType", 1, 52);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node.newString("unexpected prop id ", 2130, 57);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      Node node3 = new Node(456, 55, 16);
      node3.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("Not declared as a type name", (-1616), 42);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      functionType0.getExtendedInterfaces();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Element");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("7_W}2LD[Vz()");
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      node0.isAssign();
      node0.isInstanceOf();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("");
      node0.isLabel();
      Node node1 = new Node(1396, node0);
      node1.isTrue();
      Node node2 = null;
      try {
        node2 = new Node(42, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber(706.14057);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(2, "Node has existing properties.");
      nodeArray0[1] = node1;
      Node node2 = new Node((-4570), nodeArray0, (-797), 41);
      node2.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node0.isThrow();
      node2.setLineno(29);
      node0.isRegExp();
      node0.isDo();
      Node node3 = new Node((-1826), 5, 37);
      node3.isIn();
      node1.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("com.google.javascript.rhino.jstype.NamespaceType", 1, 52);
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = new Node(32);
      node0.putIntProp(133, 16);
      Node node2 = Node.newString(16, "", 31, 21);
      node1.setSourceFileForTesting("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.isVar();
      node1.addChildrenToFront(node2);
      node3.setLength(773);
      Node.mergeLineCharNo(42, 1048576);
      node3.isSyntheticBlock();
      jSTypeRegistry0.clearTemplateTypeNames();
      Node.newString("Object#Element");
      try { 
        node2.setDouble(21);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT  31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      node1.putIntProp((-1199), 130);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1164));
      node1.isDo();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber(16.0, 0, (-1000));
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(53, 48, 29);
      node0.setChangeTime(16);
      Node node2 = new Node((-3871), node0, node1, 1, 2247);
      node2.isEquivalentTo(node0);
      node2.putIntProp((-2121), (-3871));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2702);
      node_SideEffectFlags0.setMutatesArguments();
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((-1246.36));
      node3.removeChildren();
      node3.getAncestors();
      String string0 = null;
      // Undeclared exception!
      try { 
        node3.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newNumber(825.994);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isSetterDef();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.FUNCTION_PROTOTYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.U2U_CONSTRUCTOR_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.OBJECT_NUMBER_STRING;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.setSourceEncodedPosition((-3201));
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      functionType0.getExtendedInterfaces();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("7_W}2LD[Vz()");
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      node0.isAssign();
      node0.isInstanceOf();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getProp(1586);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(1586);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags6.setMutatesThis();
      node0.isGetProp();
      node0.setLength((-1546));
      node0.detachChildren();
      node0.getType();
      Node node1 = new Node(39, node0, node0, 57, 29);
      node1.srcrefTree(node0);
      node1.setLength((-1260));
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber(16.0, 0, (-1000));
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(53, 50, 29);
      node0.addSuppression("directives");
      node1.isDo();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = Node.newNumber((double) 55, 43, (-1000));
      node2.isDo();
      Node node3 = Node.newString(":`1rgKF8Rm");
      node3.setCharno(3092);
      node2.isVar();
      node2.isCall();
      Node.mergeLineCharNo(42, 49);
      node1.isNoSideEffectsCall();
      Node node4 = Node.newString(114, "first new child has existing sibling", 39, 4095);
      // Undeclared exception!
      try { 
        node4.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.addSuppression("directives");
      node0.isDo();
      node0.isNE();
      node0.getAncestors();
      Node.newNumber((double) 57, 3666, 695);
      node0.isDo();
      Node.newString(":`1rgKF8Rm");
      node0.setCharno(1);
      int int0 = (-940);
      Node node1 = null;
      try {
        node1 = new Node((-940), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isCatch();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node0);
      node4.isOr();
      node1.isDo();
      Node node5 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node5.isVar();
      node5.isCall();
      node5.isDebugger();
      int int0 = Node.VAR_ARGS_NAME;
      Node node6 = Node.newString("1Gy?rxSx)N)NX2:", (-978), 52);
      node2.isFunction();
      node2.getIndexOfChild(node6);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[2] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.setChangeTime(40);
      node0.isEquivalentTo(node0);
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(49);
      Node.newString("<5?7F8R/(tKq8imtdF", 0, (-5604));
      node0.checkTreeEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("<5?7F8R/(tKq8imtdF", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node0.isWhile();
      node1.setLineno(57);
      Node.newString((-5604), "{`pmZ@");
      Node node2 = Node.newString(347, "{`pmZ@");
      node2.getAncestor(30);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getExtendedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.addChildrenToFront(node2);
      node2.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(64);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.checkTreeEquals(node2);
      node3.isFromExterns();
      node1.copyInformationFromForTree(node2);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getExtendedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.newNumber(16.0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = Node.newString("7_W}2LD[Vz()");
      node0.mayMutateArguments();
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      Node node3 = node0.removeFirstChild();
      node2.isAssign();
      node3.isString();
      node1.isOnlyModifiesArgumentsCall();
      node2.isInstanceOf();
      node0.getAncestors();
      node0.addSuppression("Named type with empty name component");
      node3.getString();
      node0.isAssignAdd();
      node0.isOr();
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      int int0 = 2130;
      Node node0 = new Node(105);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("R$0@Q>i)F.-(", 1, 21);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(1, node1, node1, node1);
      node2.setVarArgs(true);
      node1.getCharno();
      node2.children();
      node0.setLength((-222));
      node2.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      Node node3 = node2.srcrefTree(node0);
      Node node4 = new Node(40, 47, 1417);
      node4.setLength(32);
      node3.isGetProp();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(48);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType jSType0 = null;
      JSType[] jSTypeArray0 = new JSType[3];
      // Undeclared exception!
      try { 
        node0.setDouble(48);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node.newString("unexpected prop id ", 2130, 57);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      nodeArray0[3] = node3;
      node2.isFromExterns();
      node3.isVoid();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isCatch();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node4.isVar();
      node4.isCall();
      node4.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node node5 = Node.newString("1Gy?rxSx)N)NX2:", (-978), 52);
      node2.isFunction();
      node2.getIndexOfChild(node5);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newNumber((double) 45);
      node0.isFalse();
      Node node1 = Node.newString(15, "au9yz<ze[+Dt");
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node2 = new Node(47);
      node1.addSuppression("au9yz<ze[+Dt");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.isDo();
      Node.newString(4095, "", 1310, 56);
      Node.mergeLineCharNo(2619, 46);
      node1.isNew();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newNumber(16.0, 0, (-1000));
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(53, 48, 29);
      node0.getProp((-473));
      node0.setChangeTime(16);
      Node node2 = new Node((-3871), node0, node1, 1, 2247);
      node2.isEquivalentTo(node0);
      node2.putIntProp((-2121), (-3871));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2702);
      node_SideEffectFlags0.setMutatesArguments();
      node0.isOnlyModifiesArgumentsCall();
      node1.isIf();
      Node node3 = Node.newNumber((-1246.36));
      node3.removeChildren();
      node3.getAncestors();
      node0.addSuppression((String) null);
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1246.36 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber(706.14057);
      node0.putIntProp(55, 101);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(2, "Node has existing properties.");
      nodeArray0[1] = node1;
      node0.srcrefTree(node1);
      node1.setLength(2259);
      node1.isGetProp();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(8, "A?(");
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.valueOf();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isComma();
      node0.setOptionalArg(false);
      node0.isArrayLit();
      node0.getSourceOffset();
      node0.getString();
      Node node1 = Node.newString(38, "A?(");
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(15, (-2119), 53);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(2130, node0, node0, node0);
      node1.getChangeTime();
      node0.isGetterDef();
      node0.getNext();
      Node.extractCharno(54);
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setVarArgs(true);
      node0.getCharno();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.children();
      node0.setLength(16);
      node0.detachChildren();
      int int0 = Node.EMPTY_BLOCK;
      node0.srcrefTree(node0);
      node0.setLength(43);
      node0.isGetProp();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isCatch();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      // Undeclared exception!
      try { 
        node2.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 719
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((-1246.36), 1, 77);
      node1.isQuotedString();
      Node.newString((-3569), "{`pmZ@");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(2172, nodeArray0, 56, 35);
      node0.setChangeTime(233);
      Node.newString("");
      Node.newString(4095, "");
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(236);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = Node.newString(8, "A?(");
      node0.isFromExterns();
      node0.isDo();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(8, "A?(");
      node0.isFromExterns();
      node0.isDo();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(153);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setVarArgs(true);
      node0.getCharno();
      int int0 = 968;
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node0.children();
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isFalse();
      Node node2 = Node.newString((-837), "au9yz<ze[+Dt");
      node2.isNoSideEffectsCall();
      node1.isFunction();
      Node node3 = new Node(1227);
      node2.addSuppression("NUMBER_OBJECT_FUNCTION_TYPE");
      node0.isDo();
      Node.newString(113, "au9yz<ze[+Dt", (-310), 39);
      Node.mergeLineCharNo(504, 51);
      node3.isNew();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getAncestor(0);
      Node node1 = node0.getLastSibling();
      node1.isOptionalArg();
      Node node2 = Node.newString(49, "RdvVij0xF^yG)TW~:h", 43, 40);
      node2.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber(16.0, 0, (-1000));
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(53, (-1053), 29);
      node0.getProp((-473));
      node0.addSuppression("directives");
      node1.isDo();
      node1.isAssign();
      node1.getAncestors();
      Node node2 = Node.newNumber((double) 55, 16, (-1000));
      node0.isDo();
      Node node3 = Node.newString(":`1rgKF8Rm");
      node3.setCharno(3092);
      node2.isVar();
      Node.mergeLineCharNo(42, 50);
      node1.isNoSideEffectsCall();
      Node.newString(114, "first new chld has existing sbling", 39, 4095);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isNoSideEffectsCall();
      node1.isFunction();
      Node node2 = new Node(1227);
      node1.addSuppression("?3oM*");
      node2.isDo();
      node2.isAssign();
      node2.isDo();
      Node.newString("incrdecr");
      node2.setCharno(122);
      node2.isVar();
      node1.isVoid();
      Node.mergeLineCharNo((-964), 48);
      node1.isNoSideEffectsCall();
      Node.newString(51, "", (-1), 31);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = new Node((-964));
      node0.isNE();
      node0.isDo();
      node0.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString((-200), "com.google.javascript.rhino.jstype.NamespaceType");
      Node node1 = new Node((-200), node0, node0, node0, (-521), (-521));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = null;
      node1.setVarArgs(false);
      jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node0.isThrow();
      node1.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.newString(16, "", 29, 18);
      node1.isName();
      try { 
        node2.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.setChangeTime(40);
      node0.isEquivalentTo(node0);
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(49);
      Node.newString("<5?7F8R/(tKq8imtdF", 0, (-5604));
      node0.isEquivalentToShallow(node1);
      Node node2 = Node.newString((-1185), "<5?7F8R/(tKq8imtdF", 30, 45);
      Node node3 = new Node(52, node0, node0, node0, node2);
      node1.copyInformationFromForTree(node3);
      node3.isDec();
      node0.getSourceOffset();
      node0.isReturn();
      Node.newString((-1), "<5?7F8R/(tKq8imtdF");
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 261, 261);
      node0.toStringTree();
      node0.isGetterDef();
      node0.setDouble(1.0);
      node0.isLabel();
      node0.setLength(0);
      Node[] nodeArray0 = new Node[3];
      Node node1 = Node.newString(13, "NUMBER 1.0 261\n", 50, 42);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node((-706), nodeArray0, 116, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(8192, node0, node0);
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getProp(1586);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(1586);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setAllFlags();
      node0.getQualifiedName();
      Node node1 = Node.newString("NULL_TYPE", 2, 19);
      node0.isFromExterns();
      node1.isVoid();
      node1.isSyntheticBlock();
      Node.newString("3oW^)n~");
      try { 
        node1.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING NULL_TYPE 2 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.isThrow();
      node0.setLineno(1586);
      node0.isRegExp();
      node0.isDo();
      Node node1 = new Node(5, 2, 154);
      node1.isDebugger();
      int int0 = Node.ORIGINALNAME_PROP;
      Node node2 = Node.newString("D?(gHUVH+w!p", 54, 1011);
      node2.isOnlyModifiesArgumentsCall();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node.newString("unexpected prop id ", 2130, 57);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      nodeArray0[3] = node3;
      node3.srcrefTree(node3);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.newNumber(2966.115360059255, 114, 9);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node2 = new Node(42);
      node0.isDo();
      String string0 = "";
      Node node3 = Node.newString("");
      node3.isEquivalentToShallow(node1);
      String string1 = "";
      Node.newString(1, "");
      node2.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node2.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getAncestor(0);
      Node node1 = node0.getLastSibling();
      node1.isOptionalArg();
      Node node2 = Node.newString(49, "RdvVij0xF^yG)TW~:h", 43, 40);
      node2.isNoSideEffectsCall();
      Node.mergeLineCharNo((-1730), 42);
      node1.isNew();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node node2 = node1.srcrefTree(node0);
      node2.type = 2;
      node2.addChildrenAfter(node1, node0);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      node0.setChangeTime(40);
      node0.isEquivalentTo(node0);
      node0.putIntProp(2, 113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      node_SideEffectFlags0.setMutatesArguments();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInstanceOf();
      node0.getAncestors();
      node0.addSuppression((String) null);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = Node.newString("7_W}2LD[Vz()");
      functionType0.isNumberObjectType();
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      Node node4 = node0.removeFirstChild();
      node3.isAssign();
      node4.isString();
      Node node5 = new Node(1264);
      Node.newString("AND", 49, (-5011));
      node2.isEquivalentToShallow(node2);
      Node node6 = new Node(42, node1, node4, node4, node4);
      Node node7 = node2.copyInformationFromForTree(node1);
      node1.isDec();
      node6.getSourceOffset();
      node7.isReturn();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      node0.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isTry();
      String string0 = "X%tMok3^X~4N";
      Node node1 = Node.newString("X%tMok3^X~4N", 2, 46);
      Node[] nodeArray0 = new Node[5];
      node0.getQualifiedName();
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[4] = node1;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 36, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newNumber(2966.115360059255, 114, 33);
      jSDocInfo0.setExterns(false);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node3 = new Node(42);
      node0.isDo();
      node2.srcrefTree(node0);
      Node node4 = Node.newString("");
      node4.isEquivalentToShallow(node1);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isThrow();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(54, "gARRd/k\"b1(5+,k", 40, 57);
      node1.isName();
      try { 
        node0.setString("Not declared as a constructor");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isFalse();
      Node node2 = Node.newString((-837), "au9yz<ze[+Dt");
      node2.isNoSideEffectsCall();
      node1.isFunction();
      Node node3 = new Node(1227);
      node2.addSuppression("NUMBER_OBJECT_FUNCTION_TYPE");
      node0.isDo();
      node3.isAssign();
      node2.isDo();
      Node node4 = Node.newString("au9yz<ze[+Dt");
      node4.setCharno(8);
      node1.isVar();
      node2.isVoid();
      Node.mergeLineCharNo(40, 27591);
      node4.isNoSideEffectsCall();
      Node.newString(432, "", 1, 83);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node4.isVar();
      node4.isCall();
      Node.mergeLineCharNo(40, 116);
      node0.isNoSideEffectsCall();
      node0.copyInformationFromForTree(node3);
      node2.isDec();
      node0.getSourceOffset();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)28;
      byteArray0[6] = (byte)108;
      byte byte0 = (byte)36;
      byteArray0[7] = (byte)36;
      byteArray0[8] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber(2966.946593994456);
      int int0 = (-3216);
      node0.toString(true, false, false);
      node0.setVarArgs(true);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-1602), nodeArray0, 46, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(719);
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node4.isVar();
      node4.isCall();
      Node.mergeLineCharNo(40, 116);
      node0.isNoSideEffectsCall();
      Node.newString(37, "", 6, 49);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(1498);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1498
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      Node node1 = new Node(0, 48, 765);
      node1.getProp(46);
      node0.addSuppression("com.google.javascript.rhino.jstype.StringType");
      node0.isDo();
      node0.isAssign();
      node0.isDo();
      Node node2 = Node.newString(": ");
      node2.setCharno(36);
      node1.isVar();
      node0.isCall();
      Node.mergeLineCharNo(678, 29);
      node0.isNoSideEffectsCall();
      Node.newString(125, "", 8, 1);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(47, node0, node0, 29, 48);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got REGEXP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString("=\"in`F.%+");
      node0.isLabel();
      node0.isTrue();
      node0.getProp(1655);
      node0.putProp(1586, (Object) null);
      Node node1 = Node.newNumber((double) 38, 1180, 324);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node3.getQualifiedName();
      Node node4 = new Node(30, node3, node2, node2, node2);
      // Undeclared exception!
      try { 
        node4.getExistingIntProp((-563));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -563
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newNumber(2966.115360059255, 114, 9);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node3 = new Node(42);
      node0.isDo();
      Node node4 = Node.newString("");
      node4.isEquivalentToShallow(node1);
      Node.newString((-2671), "");
      node3.getStaticSourceFile();
      node2.isDebugger();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node3);
      node_NodeMismatch0.equals("");
      int int0 = Node.ORIGINALNAME_PROP;
      Node node5 = Node.newString("");
      // Undeclared exception!
      try { 
        node5.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isTry();
      String string0 = "X%tMok3^X~4N";
      Node node1 = Node.newString("X%tMok3^X~4N", 2, 46);
      Node[] nodeArray0 = new Node[5];
      node0.getQualifiedName();
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = null;
      try {
        node2 = new Node(15, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setString("ALWAYS_FALSE");
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      int int0 = 3403;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newString("");
      nodeArray0[0] = node0;
      Node node1 = Node.newString(12, "");
      nodeArray0[1] = node1;
      Node node2 = new Node(635, node1);
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(2503, node1, node2, 43, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      byte byte0 = (byte) (-37);
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      node1.setLength(1);
      Object object0 = new Object();
      node1.putProp(30, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node node2 = new Node(1);
      Node node3 = Node.newString("@=");
      node3.hasChild(node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      Node.newString((-1730), "{`pmZ@");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isThrow();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isSwitch();
      Node node2 = node0.removeChildren();
      node2.siblings();
      node1.getCharno();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      Node node4 = new Node((-2019), node3, node1, node2, node3);
      node4.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      node1.getJsDocBuilderForNode();
      Node node3 = Node.newString("");
      Node node4 = node3.getAncestor(0);
      Node.newString(50, "");
      node1.isOnlyModifiesThisCall();
      Node node5 = node3.getLastSibling();
      node5.isOptionalArg();
      Node node6 = Node.newString(49, "RdvVij0xF^yG)TW~:h", 43, 40);
      node1.hasChild(node6);
      Node node7 = new Node(48, (-3082), 53);
      node7.isCall();
      Node node8 = new Node(25, node5, node3);
      node3.isEquivalentToShallow(node8);
      Node node9 = null;
      try {
        node9 = new Node(43, node4, node5, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node node2 = node1.srcrefTree(node0);
      node2.type = 2;
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node_NodeMismatch0.equals(node1);
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("@=");
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = Node.newString("7_W}2LD[Vz()");
      functionType0.isNumberObjectType();
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      Node node4 = node0.removeFirstChild();
      node3.isAssign();
      node4.isString();
      Node node5 = new Node(1264);
      Node node6 = Node.newString("AND", 49, (-5011));
      Node node7 = new Node(53, node6, node2);
      node7.isEquivalentToShallow(node2);
      Node node8 = new Node(42, node1, node4, node7, node4);
      Node node9 = node2.copyInformationFromForTree(node1);
      node1.isDec();
      node8.getSourceOffset();
      node9.isReturn();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = new Node((-3741), (-3741), (-3741));
      node0.isThrow();
      node0.removeFirstChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(3887, "gARRd/k\"b1(5+,k", 42, 15);
      node1.getBooleanProp(54);
      node1.isFromExterns();
      node0.isVoid();
      node1.isSyntheticBlock();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node0.putBooleanProp(46, false);
      node0.getAncestor(16);
      Node node2 = Node.newNumber(16.0, 57, 50);
      node1.isNoSideEffectsCall();
      Node node3 = new Node(12, node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node3.isRegExp();
      node1.addSuppression("free_call");
      node0.isDo();
      node0.isObjectLit();
      node1.isString();
      Node.newNumber((double) 51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.hasChildren();
      Node node1 = Node.newString(137, ": ", 4095, 55);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.setWasEmptyNode(true);
      node2.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 137
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      node1.getJsDocBuilderForNode();
      Node node3 = Node.newString("");
      node3.getAncestor(0);
      Node.newString(50, "");
      node1.isOnlyModifiesThisCall();
      Node node4 = node3.getLastSibling();
      node4.isOptionalArg();
      Node node5 = Node.newString(49, "RdvVij0xF^yG)TW~:h", 43, 40);
      node1.hasChild(node5);
      Node node6 = new Node(48, (-3082), 53);
      node6.isCall();
      Node.mergeLineCharNo((-1730), 42);
      Node node7 = Node.newNumber((double) 30, 751619276, 51);
      node7.isNoSideEffectsCall();
      Node.newString(57, "second new child has existing sibling", 4095, 56);
      node4.isNew();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = new Node((-3741), (-3741), (-1292));
      node0.isThrow();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDo();
      node0.isAssign();
      String string0 = "SNqFV(*XGf;Rk%v)";
      // Undeclared exception!
      try { 
        node0.setString("SNqFV(*XGf;Rk%v)");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3741
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1730), "{`pmZ@");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(4, nodeArray0, 48, (-732));
      node2.setChangeTime(47);
      node1.isQualifiedName();
      Node node3 = Node.newString("is_constant_name");
      Node.newString((-6598), "bK]B3mTFaqmk|U~i4");
      node3.isOnlyModifiesThisCall();
      node2.getLastSibling();
      node3.isOptionalArg();
      node2.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      node1.isNoSideEffectsCall();
      Node node2 = null;
      try {
        node2 = new Node(51, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      Node node3 = Node.newNumber((double) 52, 132, 57);
      node1.isRegExp();
      node1.addSuppression("{`pmZ@");
      node0.isDo();
      node0.isIn();
      node3.setWasEmptyNode(false);
      node3.getStaticSourceFile();
      node2.isNumber();
      Node node4 = new Node(34);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = node3;
      nodeArray0[5] = node2;
      Node node5 = new Node(113, 1, 4095);
      nodeArray0[6] = node5;
      nodeArray0[7] = node2;
      Node node6 = null;
      try {
        node6 = new Node(63, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 261, 261);
      node0.isLocalResultCall();
      Node node1 = node0.cloneTree();
      node1.isThrow();
      node1.setLineno(4095);
      Node.newString(46, "com.google.javascript.rhino.Node$NumberNode");
      node0.setChangeTime(46);
      node1.isVarArgs();
      Node node2 = Node.newString("");
      int int0 = 0;
      node2.getAncestor(38);
      Node.newString(36, "<p<lW0/;H|");
      node1.getStaticSourceFile();
      Node node3 = null;
      try {
        node3 = new Node(43, (Node[]) null, 2, 1683);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newString(63, "~Sk:RX<]f~Gw*RVx", 63, 3);
      node0.removeChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node1 = new Node(2, node0, node0, node0, (-646), 57);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node0.putBooleanProp(46, false);
      node0.getAncestor(16);
      Node node2 = Node.newNumber(16.0, 57, 50);
      node1.isNoSideEffectsCall();
      Node node3 = new Node(12, node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node3.isRegExp();
      node1.addSuppression("free_call");
      node0.isDo();
      node0.isAssign();
      node1.isString();
      Node node4 = new Node(4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setVarArgs(true);
      node0.getCharno();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = null;
      try {
        node1 = new Node(968, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node((-3741), (-3741), (-1292));
      node0.isThrow();
      node0.isFromExterns();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(3887, "gARRd/k\"b1(5+,k", 37, 15);
      node1.isFromExterns();
      node0.isVoid();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2386, 2386, 2386);
      Node node1 = new Node(2386, node0, node0, node0, 0, 39);
      node1.isEquivalentToShallow(node0);
      node1.getProp(38);
      node1.isEquivalentTo(node0, false, false, false);
      node1.isWhile();
      node1.removeChildren();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.hasChildren();
      Node node1 = Node.newString(137, ": ", 4095, 55);
      node0.addChildrenToBack(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      boolean boolean0 = true;
      node2.setWasEmptyNode(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      String string0 = " is not a number node";
      Node node0 = Node.newString(" is not a number node");
      node0.getChildCount();
      node0.isGetElem();
      node0.isThrow();
      Node node1 = null;
      Node node2 = new Node(49, node0, 42, 57);
      node2.isUnscopedQualifiedName();
      node0.useSourceInfoIfMissingFrom(node2);
      node0.setWasEmptyNode(false);
      node2.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, " is not a number node");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      Node node3 = Node.newNumber((double) 52, 132, 8202);
      node1.isRegExp();
      node1.addSuppression("{`pmZ@");
      node0.isDo();
      node0.isIn();
      node3.setWasEmptyNode(false);
      node1.isDebugger();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals("{`pmZ@");
      int int0 = Node.ORIGINALNAME_PROP;
      Node.newString("{`pmZ@");
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(55);
      node0.isNoSideEffectsCall();
      node2.isRegExp();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node3.setCharno((-532));
      node4.isVar();
      node4.isCall();
      Node.mergeLineCharNo(40, 116);
      node0.isNoSideEffectsCall();
      Node.newString(37, "", 6, 49);
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      Node node3 = Node.newString("");
      node1.isAssign();
      node3.isString();
      Node node4 = new Node(42);
      Node node5 = new Node(38, node3, node0, node2, node3);
      node4.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node node6 = null;
      try {
        node6 = new Node(38, node2, node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getProp(1586);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(1586);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags6.setMutatesThis();
      node0.isGetProp();
      Node node1 = new Node(54, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newString("=\"in`F.%+");
      Node node4 = Node.newString(57, "4:H!Ee5lPvox", 116, 94);
      node4.checkTreeEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.replaceChild(node3, node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node0.isNumber();
      node1.setLineno(57);
      node1.mayMutateArguments();
      Node node2 = Node.newString((-5604), "{`pmZ@");
      Node node3 = Node.newString("", 133, 2);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node3;
      nodeArray0[5] = node1;
      Node node4 = null;
      try {
        node4 = new Node(15, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      Node node3 = Node.newString("");
      Node node4 = node3.getAncestor(0);
      node3.getFirstChild();
      Node node5 = new Node(47, node4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      String string0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 292, 292);
      node0.isLocalResultCall();
      Node node1 = node0.cloneTree();
      node0.isIf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.spliterator();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newNumber(2966.115360059255, 114, 9);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node3 = new Node(42);
      node0.isDo();
      node0.isAssign();
      node2.isString();
      Node node4 = new Node(41);
      Node node5 = new Node(29, node3, node3, node0, node4);
      node5.copyInformationFromForTree(node0);
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      String string0 = "@=";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("@=", 45, 45);
      Node node1 = new Node(2130, node0, node0);
      Node node2 = node1.srcrefTree(node0);
      node2.type = 2;
      node2.addChildrenAfter(node1, node0);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node0.isNumber();
      node1.setLineno(57);
      node1.mayMutateArguments();
      Node.newString((-5604), "{`pmZ@");
      Node.newNumber((double) 52, 132, 8202);
      Node.newString("");
      node1.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("pZa|5p5xdNnU&R", "pZa|5p5xdNnU&R", 0, 0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      int int0 = 865;
      Node node1 = new Node(49, node0, node0, 7, 865);
      node0.addChildrenToFront(node1);
      node0.isQuotedString();
      Node node2 = new Node(334, (-418), 31);
      node2.isVarArgs();
      Node.newString("~6E[-7}k6bc7O?");
      node2.getAncestor(47);
      Node node3 = Node.newString((-563), "Node tree inequality:\nTree1:\n");
      node3.isOnlyModifiesThisCall();
      Node node4 = null;
      try {
        node4 = new Node(3363, (Node) null, node0, (Node) null, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 52, 132, 8202);
      Node node3 = Node.newString(9, "SyntaxError");
      node3.getStaticSourceFile();
      MockFile mockFile0 = new MockFile("RsB>zJS{Ss<c", "C>#SrUuI9v>c'*O+n");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, true);
      node2.appendStringTree(mockFileWriter0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(64, node0, node0, (-1734), 32);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getProp(24);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp(12);
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesThis();
      node0.setLineno(4095);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      Node node2 = new Node(55);
      node0.isNoSideEffectsCall();
      node2.isRegExp();
      Node node3 = new Node(114);
      node2.addSuppression("com.google.javascript.rhino.jstype.NamespaceType");
      node0.isDo();
      node3.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node4.isAssign();
      node2.isString();
      Node node5 = new Node(2292);
      node1.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      node1.getProp(3227);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2276));
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.setLineno(36);
      node1.removeChild(node0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -200
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString(1722, "direct_eval");
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.getProp(1586);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeProp(1586);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node0.setLineno(154);
      Node node1 = null;
      try {
        node1 = new Node(57, (Node) null, node0, (Node) null, (Node) null, 2493, (-524));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      Node[] nodeArray0 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeRegistry0.resolveTypesInScope(objectType0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = new Node(37, node0, node0);
      node0.useSourceInfoFrom(node1);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.hasChildren();
      node0.putBooleanProp(1586, false);
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(878);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.isGetProp();
      Node node1 = new Node((-4911), node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString("4:H!Ee5lPvox");
      node3.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      Node.newString("7_W}2LD[Vz()");
      functionType0.isNumberObjectType();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte) (-84);
      byteArray0[6] = (byte)67;
      byteArray0[7] = (byte)47;
      byteArray0[8] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.detachChildren();
      node2.getType();
      Node node3 = node1.srcrefTree(node0);
      node3.setLength(12);
      node1.isGetProp();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 147, 147);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.valueOf();
      node0.getBooleanProp(4);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("pZa|5p5xdNnU&R", "pZa|5p5xdNnU&R", 0, 0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.valueOf();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isComma();
      node0.setOptionalArg(true);
      node0.isArrayLit();
      node0.getSourceOffset();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000338] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      Node node1 = Node.newString(13, "Not declared as a type name");
      Node.newNumber(2966.115360059255, 8287, 506);
      node1.isNoSideEffectsCall();
      node0.isRegExp();
      node1.addSuppression("|$\")s)Xx");
      Node node2 = Node.newString("1+", (-2188), 16);
      node2.isDo();
      node2.isAssign();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray0);
      node3.isString();
      Node node4 = new Node(2);
      Node node5 = Node.newNumber((double) 54);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node6 = jSTypeRegistry2.createOptionalParameters(jSTypeArray0);
      node5.copyInformationFromForTree(node6);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      Node.newNumber((double) 52, 132, 8202);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      node1.addSuppression("{`pmZ@");
      node0.isDo();
      node2.isAssign();
      node0.isString();
      Node node3 = new Node(12);
      node0.copyInformationFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(126);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString("_G8@ -m.L@>/JT2Kb");
      Node node1 = new Node(0, node0, node0, 42, 1);
      node1.isNoSideEffectsCall();
      node1.isRegExp();
      node1.addSuppression("_G8@ -m.L@>/JT2Kb");
      node1.isDo();
      node1.isAssign();
      node0.isString();
      Node node2 = new Node(1);
      node1.copyInformationFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node1.mayMutateArguments();
      Node.newString((-5604), "{`pmZ@");
      Node.newNumber((double) 52, 132, 8202);
      Node.newString("");
      node1.getDouble();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      Node node3 = Node.newString("");
      node3.getAncestor(0);
      Node.newString(50, "");
      node1.isOnlyModifiesThisCall();
      Node node4 = node3.getLastSibling();
      node4.isOptionalArg();
      node1.hasChild(node3);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(47);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node3 = new Node(42);
      node3.addSuppression("");
      node0.isDo();
      node0.isAssign();
      node1.isDo();
      Node node4 = Node.newString("1Gy?rxSx)N)NX2:");
      node4.isAssign();
      node4.isString();
      Node node5 = new Node((-5788));
      node5.copyInformationFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString("b\"<J!Js B|\"A/");
      node0.isCall();
      Node node1 = new Node(36, node0, node0, node0, 57, 57);
      node0.getProp(91);
      node1.mayMutateGlobalStateOrThrow();
      node0.removeProp(49);
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      Node node3 = Node.newNumber((double) 52, 132, 8202);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      node1.addSuppression("{`pmZ@");
      node0.isDo();
      node2.isAssign();
      node3.setWasEmptyNode(false);
      node1.isDebugger();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals("{`pmZ@");
      node3.isFromExterns();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      int int0 = 148;
      Node node0 = new Node(1498);
      Node node1 = new Node(56, node0, node0, node0, node0, 52, 4095);
      Node.newNumber((double) 56);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(444);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 444
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isBreak();
      node0.setLineno(0);
      functionType0.getAllImplementedInterfaces();
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.getLastChild();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber(16.0);
      Node node3 = Node.newString("7_W}2LD[Vz()");
      functionType0.isNumberObjectType();
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      node0.removeFirstChild();
      node2.isEquivalentToShallow(node3);
      node3.setIsSyntheticBlock(false);
      node2.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.hasChildren();
      node0.putBooleanProp(1586, false);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInstanceOf();
      node0.getAncestors();
      node0.addSuppression("NUMBER 2036.70164542 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002]");
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2036.70164542 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getChildCount();
      node0.isGetElem();
      node0.isThrow();
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(4095, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      node0.putBooleanProp(0, true);
      node0.getAncestor(0);
      node0.setChangeTime(2);
      Node node1 = new Node(57);
      node1.isVarArgs();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = new Node(32);
      node0.putIntProp(133, 16);
      Node node2 = Node.newString(16, "", 31, 21);
      node1.setSourceFileForTesting("");
      node2.setLength(1355);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)37;
      byteArray0[5] = (byte)52;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)67;
      byteArray0[8] = (byte) (-84);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.detachChildren();
      node0.getType();
      Node node3 = node1.srcrefTree(node2);
      node0.setLength(4095);
      node0.isGetProp();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 261, 261);
      Node node1 = new Node(36, node0, 63, 1);
      node1.isLocalResultCall();
      node0.getSourceFileName();
      Node node2 = node0.cloneTree();
      String string0 = "(%&mqI0%yu)";
      try { 
        node2.setString("(%&mqI0%yu)");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.0 261 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = new Node(32);
      node0.putIntProp(133, 16);
      Node.newString(16, "", 31, 21);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-838));
      node0.wasEmptyNode();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("b\"<J!Js B|\"A/");
      node0.isCall();
      Node node1 = new Node(36, node0, node0, node0, 57, 57);
      node0.getProp(91);
      node1.mayMutateGlobalStateOrThrow();
      node0.removeProp(49);
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.mergeLineCharNo(65536, 1076);
      Node node2 = new Node(53, (-1457), 39);
      node0.getSideEffectFlags();
      node2.hasChild(node1);
      Node node3 = null;
      try {
        node3 = new Node(12, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(42, (Node) null, node0, (-2004), 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node((-200), (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      node1.getProp(3227);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2276));
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -200
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      node0.isTry();
      Node node1 = new Node(31, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.newString("6a\"~?8|yN(\"<,,", 42, 43);
      node1.getDirectives();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      Node node3 = null;
      try {
        node3 = new Node(29, node0, node0, node0, node2, 39, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber((double) 1);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node0.isThrow();
      node0.setLineno(8);
      // Undeclared exception!
      try { 
        Node.newString(40, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      node0.putBooleanProp(0, false);
      Node node1 = node0.getAncestor(0);
      Node node2 = Node.newNumber((-173.54677001), 1, 0);
      node1.isNoSideEffectsCall();
      node1.isRegExp();
      node0.addSuppression("free_call");
      node0.isDo();
      node2.isAssign();
      node0.isString();
      Node node3 = new Node(8);
      Node node4 = node2.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1585);
      node4.getDouble();
      node1.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      Node node2 = Node.newString((-5604), "{`pmZ@");
      node2.setChangeTime((-563));
      node1.isVarArgs();
      Node node3 = Node.newString("");
      Node node4 = node3.getAncestor(0);
      Node.newString(50, "");
      node0.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node4.isNumber();
      Node node5 = new Node(155);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      node1.getProp(3227);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2276));
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.setLineno(36);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 15;
      Node node0 = Node.newString("", 15, (-683));
      node0.mayMutateArguments();
      Node node1 = Node.newString(": ");
      node1.addChildToBack(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(": ", false);
      node0.isOnlyModifiesArgumentsCall();
      node0.setOptionalArg(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DVVav");
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset((-2076));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -2076
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 147, 147);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.valueOf();
      node0.getBooleanProp(4);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.NamespaceType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      node1.getProp(3227);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2276));
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node node2 = null;
      try {
        node2 = new Node(1853, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      String string0 = " is not a number node";
      Node node0 = Node.newString(" is not a number node");
      node0.getChildCount();
      node0.isGetElem();
      node0.isThrow();
      Node node1 = null;
      Node node2 = new Node(49, node0, 42, 57);
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node2.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = new Node(32);
      node0.putIntProp(133, 16);
      Node node2 = Node.newString(16, "", 31, 21);
      node1.setSourceFileForTesting("");
      node2.setLength(1355);
      node2.detachChildren();
      node0.getType();
      node1.srcrefTree(node2);
      node0.setLength(4095);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      node0.setLength(1586);
      node0.toString();
      node0.hasChildren();
      node0.putBooleanProp(1586, false);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAdd();
      node0.getAncestors();
      node0.addSuppression("NUMBER 2036.70164542 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002]");
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2036.70164542 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("pZa|5p5xdNnU&R", "pZa|5p5xdNnU&R", 0, 0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(49, node0, node0, 7, 865);
      node0.addChildrenToFront(node1);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1488);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      // Undeclared exception!
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isCast();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newNumber(2966.115360059255, 114, 9);
      node0.isNoSideEffectsCall();
      node1.isRegExp();
      Node node3 = new Node(42);
      node3.addSuppression("");
      node0.isDo();
      node0.isAssign();
      node2.isString();
      Node node4 = new Node(41);
      Node node5 = new Node(29, node3, node3, node0, node4);
      node5.copyInformationFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(345);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      int int0 = 39;
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
      try {
        node0 = new Node(39, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newNumber(2966.115360059255);
      Node node1 = Node.newNumber((double) 16);
      node1.isQualifiedName();
      node0.isEquivalentToShallow(node1);
      node1.isThrow();
      node1.setLineno(57);
      node0.putBooleanProp(46, false);
      node0.getAncestor(16);
      Node.newNumber(16.0, 57, 50);
      node1.isNoSideEffectsCall();
      Node node2 = new Node(12, node1);
      node2.isRegExp();
      node1.addSuppression("free_call");
      node0.isDo();
      node0.isAssign();
      node1.isString();
      Node node3 = new Node(4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1730), "{`pmZ@");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(4, nodeArray0, 48, (-732));
      node2.setChangeTime(47);
      node0.isVarArgs();
      Node.newString("is_constant_name");
      // Undeclared exception!
      try { 
        node1.getAncestor((-42));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString("Unknown");
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Unknown is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("pZa|5p5xdNnU&R", "pZa|5p5xdNnU&R", 0, 0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(49, node0, node0, 7, 865);
      node0.addChildrenToFront(node1);
      node0.isQuotedString();
      Node node2 = node0.getAncestor(0);
      node2.isSwitch();
      Node node3 = node2.removeChildren();
      node2.siblings();
      node2.getCharno();
      node0.useSourceInfoFromForTree(node2);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      Node node4 = null;
      try {
        node4 = new Node(1641, nodeArray0, 2, (-467));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString("f&q|-zm=FKt/");
      Node node1 = new Node((-478), node0, 4095, 37);
      node0.setLength(54);
      node0.isVarArgs();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("pZa|5p5xdNnU&R", "pZa|5p5xdNnU&R", 0, 0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(49, node0, node0, 7, 865);
      node0.addChildrenToFront(node1);
      node0.isQuotedString();
      Node node2 = node0.getAncestor(0);
      node2.isSwitch();
      node2.removeChildren();
      node2.siblings();
      node2.getCharno();
      node0.useSourceInfoFromForTree(node2);
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      Node node0 = Node.newString("Object#Key", 8232, 302);
      Node node1 = new Node(8232, node0, node0, 1, 0);
      JSType jSType0 = null;
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("mPBW*", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(0);
      int int0 = 0;
      String string0 = "=%l$zrm#l";
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newNumber(860.81, 201, (-2142));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.removeProp(201);
      String string0 = "";
      Node node1 = Node.newString(264, "");
      node1.isQuotedString();
      node0.isEquivalentToTyped(node1);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("xc_+-", 0, 0);
      node0.isTry();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.newNumber((-1.0), 0, 304);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newNumber(1211.09021765733, 3194, (-2008));
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node0.setSourceEncodedPositionForTree((-2008));
      node0.isQualifiedName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(3356, (String) null, 3356, 3356);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(306654252);
      Node node1 = new Node(306654252, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(306654252, node1, node0, 56, 65536);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-2665), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newString("b\"<J!Js B|\"A/");
      node0.isCall();
      node0.setWasEmptyNode(false);
      node0.getJSType();
      Node node1 = Node.newString(1722, "direct_eval");
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node[] nodeArray0 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeRegistry0.createOptionalNullableType(objectType0);
      jSTypeRegistry0.resolveTypesInScope(objectType0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2386, 2386, 2386);
      Node node1 = new Node(2386, node0, node0, node0, 0, 39);
      node1.isEquivalentToShallow(node0);
      node1.getProp(38);
      node1.isEquivalentTo(node0, false, false, false);
      node1.isWhile();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newNumber(1477.078434397, 0, 0);
      node0.isQuotedString();
      node0.putBooleanProp(0, true);
      Node node1 = node0.getAncestor(0);
      Node node2 = Node.newNumber((-173.54677001), 1, 0);
      node1.isNoSideEffectsCall();
      node1.isRegExp();
      node0.addSuppression("free_call");
      node0.isDo();
      node2.isAssign();
      node0.isString();
      Node node3 = new Node(8);
      node2.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1585);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node((-3800), 38, 0);
      node0.setType((-3122));
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", 46, 79);
      Node node1 = new Node(46, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.addSuppression("");
      node1.putIntProp(32, 51);
      node1.isSwitch();
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node1.isEquivalentToShallow(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [incrdecr: com.google.javascript.rhino.Node$IntPropListItem@0000000007] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString("originalname", (-1830), (-2062));
      node0.removeProp(356);
      Node node1 = new Node((-2062), node0, node0);
      node1.isQuotedString();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node((-153), 0, 0);
      node0.isSyntheticBlock();
      int int1 = 0;
      Node[] nodeArray0 = null;
      int int2 = (-262);
      int int3 = 26;
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "!.";
      int int0 = (-573);
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newNumber((double) 37);
      Node node1 = new Node(37, node0);
      Node node2 = null;
      try {
        node2 = new Node(37, node1, node1, node0, 36, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isTry();
      Node node1 = new Node(35, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      Node node3 = Node.newString("", 1, 36);
      nodeArray0[6] = node3;
      nodeArray0[7] = node0;
      Node node4 = null;
      try {
        node4 = new Node(37, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      int int0 = 1937;
      Node[] nodeArray0 = new Node[2];
      Node node0 = null;
      try {
        node0 = new Node(1937, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(65536);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString("no next sibling.", 24, (-2619));
      node0.getLength();
      node0.isDo();
      String string0 = null;
      File file0 = MockFile.createTempFile("no next sibling.", (String) null);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(file0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      String string0 = "";
      int int0 = 1855;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(1855, (Node) null, 1855, 1855);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType", (-200), (-200));
      Node node1 = new Node((-200), node0, node0, node0, (-535), (-535));
      node1.getProp(3227);
      node1.mayMutateGlobalStateOrThrow();
      node1.removeProp((-2276));
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -200
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      int int0 = (-1019);
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString((-1019), "LZPL_7&5|h$Pk", (-1019), (-4944));
      nodeArray0[0] = node0;
      Node node1 = new Node(56, node0, node0, node0, node0, 57, 1);
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node(51, node1, node1, node0, node0, 0, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      String string0 = " is not a number node";
      Node node0 = Node.newString(" is not a number node");
      node0.getChildCount();
      node0.isGetElem();
      node0.isThrow();
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(1073741824, node0, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(20);
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(49, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node((-1034));
      Node node1 = Node.newString(1, ">&2W-]3 klyek:pH");
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 261, 261);
      Node node1 = new Node(36, node0, 63, 1);
      node1.isLocalResultCall();
      Node node2 = node0.cloneTree();
      try { 
        node2.setString("(%&mqI0%yu)");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.0 261 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      node0.setSourceEncodedPositionForTree(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      String string0 = "TypeError";
      Node node1 = Node.newString(36, "TypeError", 57, (-1197));
      node1.getJSDocInfo();
      String string1 = null;
      try { 
        MockURI.URI(">^", "eS!@D]QJ", "g", (String) null);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: >^://eS!@D]QJg
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newNumber(2036.70164542);
      node0.getInputId();
      int int0 = 1586;
      node0.setLength(1586);
      node0.toString();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      int int0 = 39;
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(39, nodeArray0);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(226);
      node0.putIntProp(226, 226);
      Node node1 = Node.newString(23, "", 12, 30);
      node1.setSourceFileForTesting("");
      node0.setLength(2588);
      node1.detachChildren();
      node1.getType();
      assertEquals(12, node1.getLineno());
      
      node1.srcrefTree(node0);
      assertEquals((-1), node1.getCharno());
      
      node0.setLength(0);
      node0.isGetProp();
      assertEquals(226, node0.getType());
  }
}
