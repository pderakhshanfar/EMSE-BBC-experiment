/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 22:47:53 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(68);
      Node node1 = Node.newNumber((double) 29);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node.extractLineno((-811));
      int int0 = 20;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber((-87.1618396516), 528, 528);
      ObjectType.cast((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(289, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 2;
      Node node0 = null;
      try {
        node0 = new Node(2, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString("", (-4725), 0);
      node0.isArrayLit();
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString(",W6U5@G-H~/", 34, 77);
      Node node1 = new Node(3018, node0, node0);
      Node node2 = new Node(53, node1, node1, node1, (-2130), 92);
      node0.getProp(0);
      node1.removeChildren();
      Node node3 = null;
      try {
        node3 = new Node(34, node1, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(3000, node0, node0, node0, node0);
      node0.getSideEffectFlags();
      node1.addSuppression("bdwxyv-8AH#Agk");
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      int int1 = 0;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = (-2135);
      Node node0 = Node.newNumber(1928.0, 275, 275);
      node0.wasEmptyNode();
      int int1 = 286;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "{...}";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "{...}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node((-1240), 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isTypeOf();
      node0.isDo();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "C!J1o!2@";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "KhqC#z2vJ<y})_Z%&/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node node1 = new Node(55);
      node0.copyInformationFromForTree(node1);
      node0.getAncestors();
      Node node2 = Node.newNumber(0.0, (-1413), 53);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      node0.isCase();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = null;
      node_AncestorIterable0.spliterator();
      // Undeclared exception!
      try { 
        node_AncestorIterable0.forEach((Consumer<? super Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-863));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(0, "_{z|lbDF]:");
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString(428, "", 428, 44);
      // Undeclared exception!
      try { 
        node0.setDouble(44);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 428
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(58, (Node) null, 2369, 2369);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = (-766);
      // Undeclared exception!
      try { 
        Node.newString(793, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(51, node0, node0, 1125, 2);
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      Node node0 = Node.newNumber(1.0, 0, 0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("", node0, immutableList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newNumber(2994.225);
      String string0 = "{";
      Node node1 = Node.newString(57, "{");
      Node node2 = new Node(4095, node0, node1);
      node2.setWasEmptyNode(false);
      node2.getInputId();
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      String string0 = "[B4Sby^";
      jSTypeRegistry0.createParameters(jSTypeArray0);
      String string1 = "b0";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = (-299);
      Node[] nodeArray0 = new Node[7];
      String string0 = "";
      Node node0 = Node.newString("");
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(124, nodeArray0, 1206, 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node0.isInstanceOf();
      node1.isThis();
      Node node2 = Node.newString("unexpected prop id ");
      node1.addChildrenToFront(node2);
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      node0.srcrefTree(node1);
      Node.newNumber((double) 36);
      // Undeclared exception!
      try { 
        node1.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 1639;
      Node node0 = Node.newString(12, "");
      Node node1 = new Node(0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(1639, node1, node1, node1, node0, 40, 42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(2031, "/e6$", 55, 2666);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node0.getBooleanProp(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetElem();
      node1.isDelProp();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString("", 6, 305);
      node0.putIntProp(305, 305);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(8388608);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString((-966), "CharMatcher.DIGIT");
      Node node1 = new Node(15, node0, node0, node0, node0, 48, 30);
      Node node2 = null;
      try {
        node2 = new Node(1279, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((-728.4764850568196), 4095, 1073741823);
      node1.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, (-200), (-200));
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(30);
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.toString(false, false, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = (-2194);
      int int1 = 0;
      int int2 = 235;
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(235, (String) null, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node node1 = new Node(55);
      node0.copyInformationFromForTree(node1);
      node0.getAncestors();
      node0.getBooleanProp((-1648));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-451));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.isGetElem();
      node0.isDelProp();
      node_SideEffectFlags4.valueOf();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(51, node0, node0, 1125, 2);
      node0.isUnscopedQualifiedName();
      node0.getIntProp(48);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node1.getBooleanProp((-2435));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(2031, "/e6$", 55, 2666);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      Node node3 = new Node(48, node2, (-888), 39);
      Node node4 = null;
      try {
        node4 = new Node(1125, node2, node2, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(3000, node0, node0, node0, node0);
      node1.addSuppression("ac{uj_s");
      node0.isThrow();
      node0.isArrayLit();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, (-200), (-200));
      node0.isQualifiedName();
      node0.setSourceEncodedPositionForTree((-200));
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(2031, "/e6$", 55, 2666);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node0.getBooleanProp(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetElem();
      node1.isDelProp();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      double double0 = 0.0;
      Node node1 = new Node(55);
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, (-200), (-200));
      Node node1 = new Node(54);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.forEach(consumer0);
      Node node0 = Node.newString(306654252, "", 306654252, 306654252);
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.getBooleanProp((-823));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3000);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node.newNumber((double) 55, 528, (-811));
      Node node1 = Node.newString(29, "", 886, 47);
      Node.newString(54, "", 30, 40);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node(57, nodeArray0, 38, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer2 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer2);
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.forEach(consumer0);
      Node node0 = Node.newString(306654252, "", 306654252, 306654252);
      node0.isGetElem();
      node0.isDelProp();
      Node.extractLineno(42);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString("node is not a child");
      Node node1 = new Node(148, node0, node0, node0, node0);
      Node node2 = Node.newNumber((-1381.011));
      node2.addSuppression("");
      node1.isThrow();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node.mergeLineCharNo(103, (-4293));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newString(2031, "");
      Node node1 = new Node(103, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node((-4737), node1, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node1.isThis();
      Node node2 = Node.newString("unexpected prop id ");
      node1.addChildrenToFront(node2);
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node3 = node0.srcrefTree(node1);
      Node node4 = Node.newNumber((double) 36);
      node3.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node3.hasMoreThanOneChild();
      node4.isContinue();
      node1.isThis();
      node0.getType();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String string0 = "ac{uj_s";
      Node node0 = Node.newString("ac{uj_s");
      node0.getIntProp(8);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.getBooleanProp((-823));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isWhile();
      Node node1 = new Node((-2130), node0, node0, node0, 2, (-823));
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber(2994.225);
      String string0 = "{";
      Node node1 = Node.newString(57, "{");
      Node node2 = new Node(4095, node0, node1);
      node2.setWasEmptyNode(false);
      node2.getInputId();
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.getIntProp(8);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.getBooleanProp((-823));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.toString();
      node0.isFunction();
      node0.isFromExterns();
      node0.putBooleanProp(51, false);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(32);
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-863));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags6.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags9.setReturnsTainted();
      Node node0 = Node.newString((-1), "");
      node0.toStringTree();
      node0.detachChildren();
      node0.cloneNode();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node.mergeLineCharNo((-489), 47);
      node0.isBreak();
      node0.isTypeOf();
      node0.isDo();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(46);
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "C!J1o!2@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node((-1240), 55, (-686));
      node0.wasEmptyNode();
      Node node1 = new Node(30);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.checkTreeEqualsImpl(node2);
      node0.getAncestors();
      Node node3 = Node.newNumber((double) 48, (-2348), 8202);
      Node node4 = new Node(52, node3, node1, 51, 15);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString(428, "", 428, 44);
      node0.getQualifiedName();
      node0.isFor();
      node0.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isWhile();
      Node node1 = new Node(32, node0, node0, node0, 1, 15);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(2983, node0, node0, node0, node0);
      node0.isDec();
      Node.newString(10, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      Node node2 = null;
      try {
        node2 = new Node((-2331), node0, node0, 54, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(2031, "/e6$", 55, 2666);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node0.getBooleanProp(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node1.getProp(57);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.getIntProp(8);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.getBooleanProp((-823));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.toString();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("STRING ac{uj_s", false);
      simpleSourceFile0.getLineOffset(4);
      node0.setStaticSourceFile(simpleSourceFile0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(105);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(119);
      Node node1 = Node.newString("");
      node1.getBooleanProp(98);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(423);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node node2 = new Node(4095, node0, node0, node0);
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node((-1240), 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isTypeOf();
      node0.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node0.isGetElem();
      node0.isDelProp();
      node0.isHook();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      node0.getAncestor(31);
      node0.isQualifiedName();
      node0.setSourceEncodedPositionForTree(9);
      node0.setCharno(112);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.getIntProp(8);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      Node node1 = Node.newNumber((double) 16, 57, 57);
      node0.isQualifiedName();
      node1.setSourceEncodedPositionForTree(43);
      node0.isTypeOf();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString(3719, "tDi<60NdAhw`2R'<I`");
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      Node node1 = new Node(8, node0, node0, node0, 54, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node((-1240), 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isTypeOf();
      node0.isDo();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isDo();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      simpleSourceFile0.getLineOffset(16);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node((-190), node0, node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(16384);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -190
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node0.isInstanceOf();
      node1.isThis();
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newNumber((double) 36);
      node1.toString(true, true, true);
      node2.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node2.hasMoreThanOneChild();
      node3.isContinue();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node0.getBooleanProp(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetElem();
      node1.isDelProp();
      node1.isAssignAdd();
      node0.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((-2769.0));
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(425);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isVarArgs();
      node0.setSourceEncodedPosition(425);
      node0.isVarArgs();
      node0.getCharno();
      node0.getSourceFileName();
      Node node2 = node0.cloneTree();
      node0.siblings();
      node2.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node2.getBooleanProp(29);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString((-77), "Fd[m4)Ql1EM&E`");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Fd[m4)Ql1EM&E`", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber((-1798.6386));
      node0.isFromExterns();
      Node.newNumber(0.0, 46, 1168);
      node0.isQualifiedName();
      node0.isOptionalArg();
      int int0 = (-3274);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      Node.newNumber((double) 49);
      node0.isNot();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node.newString(131072, "");
      Node node0 = Node.newNumber((double) 55, 131072, (-811));
      Node node1 = Node.newString(29, "", 886, 47);
      node0.getSourceOffset();
      Node node2 = Node.newString(54, "", 30, 40);
      node2.getProp(8);
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = node1;
      node0.isQuotedString();
      node1.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-3658));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -3658
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      Node node1 = Node.newNumber((-3412.7));
      node0.isEquivalentTo(node1, true, false, true);
      Node node2 = new Node(38, node0, node0, node0, 40, 125);
      node2.checkTreeEqualsImpl(node0);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("INVARIANT");
      Node node1 = new Node(38, node0, node0, node0, 29, 52);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.setLength(29);
      node1.checkTreeEqualsImpl(node0);
      node0.isTrue();
      node0.isSetterDef();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node.newString(131072, "");
      Node node0 = Node.newNumber((double) 55, 131072, (-811));
      Node node1 = Node.newString(29, "", 886, 47);
      Node node2 = Node.newString(54, "", 30, 40);
      node2.getProp(8);
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.newString(29, "");
      node0.toStringTree();
      node1.detachChildren();
      node2.cloneNode();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-863));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags6.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags8.setThrows();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags9.setReturnsTainted();
      Node node0 = Node.newString((-1), "");
      node0.toStringTree();
      node0.detachChildren();
      node0.cloneNode();
      node0.isTypeOf();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 9, 9);
      node0.getAncestor(1544);
      node0.isQualifiedName();
      Node node1 = null;
      try {
        node1 = new Node(12, (Node) null, node0, 30, 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node node0 = Node.newString(1749, "Object");
      node0.getAncestor(1749);
      node0.isOr();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber((-2769.0));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer1);
      Node node1 = Node.newString(39, "R%{e8Vy\"J'M", 154, (-115));
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node1.isThis();
      Node node2 = Node.newString("unexpected prop id ");
      node1.addChildrenToFront(node2);
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node3 = node0.srcrefTree(node1);
      Node node4 = Node.newNumber((double) 36);
      node3.setVarArgs(false);
      // Undeclared exception!
      try { 
        node4.addChildrenToBack(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber(2994.225);
      Node node1 = new Node(4095, node0, node0, 2, 2);
      Node node2 = null;
      try {
        node2 = new Node(4095, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      node0.getAncestor(31);
      node0.isQualifiedName();
      node0.setSourceEncodedPositionForTree(9);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      simpleErrorReporter0.warning("Object#Element", "Object#Key", 49, (-1005));
      JSTypeNative jSTypeNative1 = JSTypeNative.URI_ERROR_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString(3719, "tDi^0NdAh#`2R<I`");
      node0.setSourceFileForTesting("prev is not a child of this node.");
      node0.mayMutateGlobalStateOrThrow();
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node0.isInstanceOf();
      node1.isThis();
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newNumber((double) 36);
      node1.toString(true, false, true);
      node2.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node2.hasMoreThanOneChild();
      node3.isContinue();
      node1.isThis();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node.newNumber((double) 55, 528, (-811));
      Node.newString(29, "", 15, 47);
      Node node1 = Node.newNumber(1.0);
      node0.isNot();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(38, nodeArray0, 2, (-4096));
      Node node2 = null;
      try {
        node2 = new Node(31, node0, 46, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("", 3719, 2983);
      node0.setInputId((InputId) null);
      node0.isWhile();
      Node node1 = new Node(0, node0, node0, node0, 1610612736, 436);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 2, 1325, (-2409));
      node0.getJSDocInfo();
      node1.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getSourceOffset();
      node2.putBooleanProp(56, true);
      node2.getIntProp(2647);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(120);
      node2.getBooleanProp(9);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node0.isGetElem();
      node1.isDelProp();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 57 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newNumber(3066.54305449519, 446, 132);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node((-2633));
      node0.setSourceEncodedPosition((-2633));
      String string0 = "Jv6p&;I7/(''y";
      // Undeclared exception!
      try { 
        node0.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2633
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(3000, node0, node0, node0, node0);
      node0.addSuppression("ac{uj_s");
      node0.isLocalResultCall();
      node1.addSuppression("ac{uj_s");
      node0.isThrow();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-863));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(0, "_{z|lbDF]:");
      Node node1 = new Node(4095, node0, node0, node0, 2, (-1961));
      node0.isEquivalentTo(node1);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(3066.54305449519, 446, 132);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1, nodeArray0, 4, 2525);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      try { 
        node0.setDouble(426.52529559014056);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING unexpected prop id  is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      node0.getSourceOffset();
      node0.putBooleanProp(35, false);
      node0.getString();
      node0.getIntProp(35);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node0.getBooleanProp(11);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node0.isOnlyModifiesThisCall();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags7.setReturnsTainted();
      node0.isGetElem();
      node0.isDelProp();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(2983, node0, node0, node0, node0);
      node0.isQuotedString();
      Node node2 = null;
      try {
        node2 = new Node((-2331), node0, node0, 54, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString(3719, "tDi<60NdAhw`2R'<I`");
      node0.removeProp(3719);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      Node node1 = Node.newNumber((-3412.7));
      node0.isEquivalentTo(node1, true, false, true);
      node0.addChildToFront(node1);
      Node node2 = new Node(38, node0, node0, node0, 40, 125);
      node2.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node2.isSyntheticBlock();
      node0.removeChildren();
      node2.setWasEmptyNode(true);
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString(1990, "is_namespace");
      Node node1 = new Node(1990, node0, node0);
      node1.getStaticSourceFile();
      String string0 = "";
      Node node2 = Node.newString("", 4095, 38);
      node0.siblings();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      node1.isEquivalentTo(node2);
      // Undeclared exception!
      try { 
        node0.getAncestor((-413));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber((-865.144330131952), (-410), (-410));
      node0.setDouble((-410));
      node0.isNot();
      node0.getIntProp(9);
      Node node1 = new Node(9, 152, 3336);
      node1.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = (-413);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[9];
      int int1 = 1;
      Node.extractCharno(425);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(425, (Node) null, (Node) null, (Node) null, 425, 726);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      node0.getIntProp(8);
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      Node node1 = Node.newNumber((double) 16, 57, 57);
      node1.isRegExp();
      node1.setSourceEncodedPositionForTree(43);
      node0.isTypeOf();
      node1.getQualifiedName();
      node0.copyInformationFrom(node1);
      node0.getSideEffectFlags();
      node0.siblings();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = Node.newString(43, "com.google.javascript.rhino.Node$IntPropListItem", 12, 50);
      Node node2 = Node.newString(280, "", 15, 10);
      Node[] nodeArray1 = new Node[8];
      nodeArray1[0] = node0;
      nodeArray1[1] = node1;
      nodeArray1[2] = node2;
      nodeArray1[3] = node2;
      nodeArray1[4] = node0;
      nodeArray1[5] = node0;
      nodeArray1[6] = node1;
      nodeArray1[7] = node1;
      Node node3 = null;
      try {
        node3 = new Node(55, nodeArray1, 43, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      Node node1 = Node.newNumber((-3412.7));
      node0.isEquivalentTo(node1, true, false, true);
      node0.addChildToFront(node1);
      Node node2 = null;
      try {
        node2 = new Node(0, node0, node1, 47, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      Node node2 = new Node(33, node1, node0, node1, node1, 51, 2);
      node2.setSourceEncodedPositionForTree(625);
      node1.setLength((-187));
      Node node3 = null;
      try {
        node3 = new Node(1, node1, node2, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node.newNumber((double) 55, 528, (-811));
      Node node1 = Node.newString(29, "", 15, 47);
      Node node2 = Node.newString(54, "", 30, 40);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags7.clearAllFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags6);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(425);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isVarArgs();
      node0.setSourceEncodedPosition(425);
      node0.setCharno(40);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 425
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("+t\"GFgKLWcc");
      node0.isReturn();
      node0.getCharno();
      node0.getSourceFileName();
      Node node1 = node0.cloneTree();
      node0.siblings();
      Node node2 = new Node(47, node0);
      node1.getBooleanProp(493);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.addChildrenToBack(node0);
      Node node1 = null;
      try {
        node1 = new Node(38, nodeArray0, 2, (-4096));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      node0.getSourceOffset();
      node0.putBooleanProp(35, false);
      node0.getString();
      node0.getIntProp(35);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node0.getBooleanProp(11);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.setReturnsTainted();
      node0.isGetElem();
      node0.isDelProp();
      node0.isAssignAdd();
      node0.isBlock();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(425);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isVarArgs();
      node0.setSourceEncodedPosition(425);
      node0.isVarArgs();
      node0.getCharno();
      node0.getSourceFileName();
      Node node2 = node0.cloneTree();
      node0.siblings();
      node0.isSyntheticBlock();
      Node node3 = new Node(0, node1, node1, 37, 516);
      node1.getLineno();
      // Undeclared exception!
      try { 
        node3.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(2983, node0, node0, node0, node0);
      node0.isDec();
      Node node2 = Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      node1.putBooleanProp(253, false);
      node2.isName();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 8);
      Node node1 = new Node((-2017), node0, 6, 112);
      node1.putIntProp(46, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isOnlyModifiesThisCall();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node1.isGetElem();
      int int0 = 46;
      Node node2 = null;
      try {
        node2 = new Node(3000, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("new child has existing parent");
      Node node1 = new Node(53, node0, node0, node0, 48, 16);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = node0.getParent();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("new child has existing parent");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node0.isBlock();
      node1.isRegExp();
      node1.isEmpty();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.addSuppression("PROTECTED");
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node node4 = new Node(12);
      // Undeclared exception!
      try { 
        node3.addChildBefore(node0, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString((-2521), "");
      node0.mayMutateGlobalStateOrThrow();
      node0.setVarArgs(true);
      String string0 = "Cz!";
      // Undeclared exception!
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2521
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("change_time");
      node0.setCharno(38);
      node0.getString();
      node0.isOnlyModifiesThisCall();
      node0.isOr();
      Node node1 = Node.newString("change_time", 38, 50);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(32768);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber(0.9791279840080098);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node2.getBooleanProp(57);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node2.toString();
      node2.isFunction();
      node1.isEquivalentTo(node0);
      node1.putBooleanProp(118, false);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearAllFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.forEach(consumer0);
      Node node0 = Node.newString(306654252, "", 306654252, 306654252);
      node0.setSourceEncodedPosition(1132);
      node0.getLineno();
      node0.getBooleanProp(18);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node node2 = Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      node1.putBooleanProp(253, false);
      node2.isName();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node2.setSourceEncodedPosition(155);
      node0.getBooleanProp(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetElem();
      node1.isDelProp();
      node1.setSourceEncodedPositionForTree((-1809));
      node1.isAssignAdd();
      node0.getIndexOfChild(node2);
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      node0.getIntProp(8);
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      Node node1 = Node.newNumber((double) 16, 57, 57);
      node1.isRegExp();
      node1.setSourceEncodedPositionForTree(43);
      node0.isTypeOf();
      Node node2 = new Node((-1528), node1, node1, node1, 48, 56);
      node2.checkTreeEqualsImpl(node1);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node1.removeChildren();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1528
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node1.isThis();
      Node node2 = Node.newString("'~VS");
      node1.addChildrenToFront(node2);
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node3 = node0.srcrefTree(node1);
      Node.newNumber((double) 36);
      node3.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node3.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("'~VS", node0, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getConstructor();
      node1.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.getProp(48);
      node2.getSideEffectFlags();
      node2.copyInformationFrom(node0);
      node1.getChangeTime();
      node0.isNoSideEffectsCall();
      node2.isVar();
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString(124, "");
      node0.toString(false, true, false);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(16, node0, (-568), 29);
      node2.isOnlyModifiesThisCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.getDirectives();
      Node node3 = new Node((-211));
      node3.setDirectives((Set<String>) null);
      node2.setWasEmptyNode(false);
      node0.getInputId();
      Node node4 = new Node((-4485), node3, 1086, 102);
      // Undeclared exception!
      try { 
        node4.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString(428, "", 428, 44);
      node0.getQualifiedName();
      node0.isFor();
      node0.setInputId((InputId) null);
      node0.isWhile();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(98, node0, node0, 16, 31);
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      Node node2 = null;
      try {
        node2 = new Node((-4096), nodeArray0, 1188, (-2858));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newNumber(3066.543054, 446, 132);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.setSourceFileForTesting("The new child node has siblings.");
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      node0.getIntProp(9);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node_SideEffectFlags0.setThrows();
      node0.getBooleanProp(155);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.setSourceEncodedPositionForTree((-915));
      node0.setCharno(1475);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 8);
      Node node1 = new Node(8, node0, 6, 112);
      node1.isEquivalentTo(node0, true, true, false);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 98);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(98);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = Node.newString(37, "0)dlu4d*");
      node0.toStringTree();
      node1.detachChildren();
      node0.isTypeOf();
      Node node2 = new Node((-568), 116, 91);
      node1.srcref(node2);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newNumber((double) 37);
      node0.setChangeTime((-2606));
      node1.useSourceInfoIfMissingFrom(node0);
      node0.addChildToFront(node1);
      node0.getQualifiedName();
      Node node2 = Node.newString(47, "unexpectedprp id ");
      node0.getSideEffectFlags();
      node2.siblings();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      Node node1 = new Node(132, node0, node0, node0, node0, (-241), 16);
      node0.addChildToFront(node1);
      node1.getQualifiedName();
      Node node2 = Node.newString(1664, "");
      node2.getSideEffectFlags();
      node0.siblings();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(3000, node0, node0, node0, node0);
      node1.addSuppression("ac{uj_s");
      Node node2 = null;
      try {
        node2 = new Node(2, node0, node0, node0, 4, 558);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString(131035, "");
      Node.newNumber((double) 55, 131035, (-811));
      Node node1 = Node.newString(29, "", 886, 47);
      Node node2 = Node.newString(54, "", 30, 40);
      node2.getProp(8);
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node0.setQuotedString();
      node1.isSyntheticBlock();
      Node node3 = Node.newString(476, "");
      node3.setVarArgs(false);
      node3.isStringKey();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node node1 = Node.newNumber((double) 55, 131072, (-811));
      Node node2 = Node.newString(29, "", 886, 47);
      Node node3 = Node.newString(54, "", 30, 40);
      node3.getProp(8);
      Node[] nodeArray0 = new Node[16];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.newString(29, "");
      node2.detachChildren();
      node3.cloneNode();
      node2.isTypeOf();
      node1.getLength();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(54, 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isTypeOf();
      node0.isDo();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isDo();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      simpleSourceFile0.getLineOffset(16);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node((-190), node0, node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(16380);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -190
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node node2 = Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      Node node3 = new Node(24, node0, node1, node1, 48, 15);
      node2.checkTreeEqualsImpl(node3);
      node1.hasOneChild();
      node3.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node3.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(2196, node0, node0, (-1617), 38);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node1.setString("com.google.javascript.rhino.JSDocInfo$StringPosition");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2196
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber(3066.54305449519, 446, 132);
      node0.isSyntheticBlock();
      node0.isStringKey();
      node0.setIsSyntheticBlock(true);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("", 147, 3003);
      Node node1 = Node.newNumber(0.0, 301, 38);
      Node node2 = new Node(147, node0, node0, node1, node0);
      node2.isSyntheticBlock();
      node2.isGetterDef();
      node2.toStringTree();
      node0.setSourceEncodedPositionForTree(31);
      Node.newString((-87), "ZN..3u1<4.n`t", 50, 147);
      Node node3 = Node.newNumber((double) 48, 98, 15);
      node3.getLineno();
      node2.isAssign();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.forEach(consumer0);
      Node node0 = Node.newString(306654252, "", 306654252, 306654252);
      node0.getLineno();
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(4095, node0);
      Node node4 = new Node(1, node1, node2, node1);
      // Undeclared exception!
      try { 
        node4.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber(0.9791279840080098);
      node0.toString(true, true, true);
      Node node1 = new Node(15, node0, 49, 140);
      node0.useSourceInfoFrom(node1);
      node0.isCase();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = new Node(8, (-2500), 63);
      node3.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      node2.getBooleanProp(3114);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString(1, "StringNode: str is null", 1, 54);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(32);
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node2 = new Node(53, node1, node0, node0, 0, 12);
      Node node3 = new Node((-1463), node2, (-2718), 56);
      Node node4 = null;
      try {
        node4 = new Node(38, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString("URI_ERROR_FUNCTION_TYPE");
      Node node1 = new Node(40, node0, node0, node0, 4095, 49);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.getParent();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("INVARIANT");
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 8);
      node0.toString(true, true, false);
      Node node1 = new Node(147, node0, (-955), (-1681));
      node0.useSourceInfoFrom(node1);
      node1.isCase();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("", 3719, 2983);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isGetProp();
      Node node1 = Node.newString((-664), "", 38, (-4228));
      node1.isLabelName();
      Node node2 = new Node(4, node0, node0);
      Node node3 = new Node(8, node2, node2, node2, 2, 57);
      node3.isAssignAdd();
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("new child has existing parent");
      Node node1 = new Node(53, node0, node0, node0, 48, 16);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(36);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("new child has existing parent");
      node0.getJSDocInfo();
      node1.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(38, nodeArray0, 2, (-4096));
      node1.putBooleanProp(7, true);
      Node node2 = Node.newString(118, "new child has existing parent");
      node2.isName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.setOptionalArg(false);
      Node node4 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(16, node0, (-568), 29);
      node2.isOnlyModifiesThisCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.getDirectives();
      Node node3 = new Node((-211));
      node3.setDirectives((Set<String>) null);
      node2.setWasEmptyNode(false);
      node0.getInputId();
      Node node4 = new Node((-4485), node3, 1086, 102);
      node1.isEquivalentToShallow(node2);
      Node node5 = null;
      try {
        node5 = new Node(36, node0, 57, 1694);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3000);
      node0.toString(true, false, false);
      Node node1 = new Node(36, node0, 1, 38);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isCase();
      node0.isCast();
      node1.isLocalResultCall();
      node1.setType(47);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString("", 147, 3003);
      Node node1 = Node.newNumber(0.0, 301, 38);
      Node node2 = new Node(147, node0, node0, node1, node0);
      node2.isSyntheticBlock();
      node2.isGetterDef();
      node2.toStringTree();
      node0.setSourceEncodedPositionForTree(31);
      Node.mergeLineCharNo(56, 29);
      node0.isTypeOf();
      node0.isDelProp();
      node1.isLabelName();
      node2.isQuotedString();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node.newNumber((-3412.7));
      Node node1 = Node.newNumber(464.17509299, 120, (-1886));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(44, nodeArray0, 38, 43);
      node0.checkTreeEquals(node1);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TRUE 38 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(54, 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isTypeOf();
      node0.isDo();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isDo();
      Node node1 = new Node(38, (-839), 16);
      Node node2 = new Node(53, 271, 2);
      node2.srcref(node0);
      node2.isTry();
      // Undeclared exception!
      try { 
        node2.getAncestor((-296));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newNumber(3075.7631400906166, 446, 132);
      node0.getProp(124);
      node0.isQuotedString();
      Node node1 = new Node(38, node0, node0);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(49, node0, node0, (-1617), 38);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      try { 
        node1.setString("com.google.javascript.rhino.JSDocInfo$StringPosition");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isLocalResultCall();
      Node node1 = new Node(43, 2, 100);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.getBooleanProp(497);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node2.toString();
      node1.isFunction();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isVar();
      Node node3 = new Node(57, node2, node2, 12, 63);
      node3.getLineno();
      node0.isThrow();
      node0.setLength(886);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node node1 = new Node(0, node0, 29, (-2218));
      node1.putIntProp(12, 1);
      node0.getProp(15);
      node1.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.mayMutateArguments();
      node1.getExistingIntProp(12);
      node1.isWith();
      node0.type = 40;
      node0.isEquivalentTo(node1, false, false, false);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 30, 8);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(122, nodeArray0, (-470), 2);
      Node node1 = new Node(48, node0, 1370, 4095);
      Node node2 = new Node(636, nodeArray0);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isLocalResultCall();
      Node node1 = new Node(7, 2, 114);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(1023, 154, 1370);
      node2.isDec();
      Node node3 = Node.newString((-170), "");
      node0.isString();
      node0.wasEmptyNode();
      node1.putBooleanProp(40, true);
      node3.isName();
      node3.isCatch();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newNumber((double) 37);
      node0.addChildToFront(node1);
      node0.getQualifiedName();
      Node node2 = Node.newString(47, "unexpectedprp id ");
      node0.getSideEffectFlags();
      node2.siblings();
      node2.isVoid();
      node2.isCast();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber((double) 1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(428, "", 428, 44);
      node0.getQualifiedName();
      node0.isFor();
      Node node1 = new Node(1, node0, node0, node0, 31, 40);
      node1.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node1.isSyntheticBlock();
      node1.isNE();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(4095, node0);
      Node node4 = new Node(1, node1, node2, node1);
      node2.isNot();
      node4.isParamList();
      // Undeclared exception!
      try { 
        node4.addChildrenToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("", 3719, 2983);
      node0.setString("c/jm2|.m");
      node0.isWhile();
      node0.isThrow();
      Node.newString(46, "", 36, 51);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      node1.putIntProp((-1398), (-110));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(12, nodeArray0, 56, 32);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isLocalResultCall();
      Node node1 = new Node(43, 2, 100);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.getBooleanProp(497);
      node_SideEffectFlags0.setMutatesArguments();
      node0.isEquivalentTo(node1, false, false, false);
      node0.addChildToFront(node1);
      Node node3 = Node.newString("`RocP| ]", 40, 103);
      Node node4 = new Node(39, node2, node3, node0, (-1671), (-1057));
      node0.checkTreeEqualsImpl(node4);
      node1.hasOneChild();
      node4.isSyntheticBlock();
      node4.removeChildren();
      node4.isCast();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString(131072, "");
      Node node1 = Node.newNumber((double) 55, 131072, (-811));
      Node node2 = Node.newNumber((double) 47, 52, 131072);
      Node node3 = new Node(2417, node2, node0, node2, node1);
      node0.isSyntheticBlock();
      node1.isGetterDef();
      node2.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "vDjJGF`B";
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node4 = null;
      try {
        node4 = new Node(492, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      node1.getJSDocInfo();
      Node node2 = new Node(115);
      Node node3 = new Node(100, node1, node0, node1, node2);
      node3.isLocalResultCall();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node node4 = Node.newNumber(0.0);
      node4.toString();
      node2.isFunction();
      // Undeclared exception!
      try { 
        node1.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node.newNumber((-3412.7));
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("");
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node2 = new Node(36, node0, node1, 3003, (-1072));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node2.setString("{-5jwd:");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 98);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(98);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = Node.newString(37, "0)dlu4d*");
      node0.toStringTree();
      node1.detachChildren();
      node0.isTypeOf();
      Node node2 = new Node((-568), 116, 91);
      node2.copyInformationFromForTree(node0);
      node1.srcref(node2);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      Node node1 = new Node(2, (-1826), 4);
      node0.isDec();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.areAllFlagsSet();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isVar();
      Node node2 = Node.newString((-1737), "ac{uj_s", 37, 55);
      Node node3 = new Node(2, node2, node1, 11, 2);
      node3.getLineno();
      node0.isThrow();
      node3.setLength((-2268));
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = new Node(79, node1);
      node2.addChildToFront(node0);
      Node node3 = new Node(56, node2);
      node3.getQualifiedName();
      Node node4 = Node.newString(101, "com.google.javascript.rhino.Node$ObjectPropListItem");
      node2.getSideEffectFlags();
      node0.siblings();
      node4.isVoid();
      node0.isCast();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 98);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(98);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.isEquivalentToShallow(node0);
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = Node.newString(37, "0)dlu4d*");
      node0.toStringTree();
      node0.detachChildren();
      node_SideEffectFlags0.areAllFlagsSet();
      node1.srcref(node1);
      node0.isTry();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("`'M|4?/mtWB5hF", (-574), (-2605));
      node0.setOptionalArg(false);
      node0.toString(false, true, false);
      Node node1 = new Node(1260, node0, 1577, 32);
      node1.useSourceInfoFrom(node0);
      node1.isCast();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(155691, node0, node0, node0, node0);
      node1.addSuppression("com.google.javascript.rhino.Node$NodeMismatch");
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.getAncestor(0);
      node0.setLength(0);
      Node node1 = new Node(0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isSyntheticBlock();
      node0.isDebugger();
      node1.isThis();
      Node node2 = Node.newString("unexpected prop id ");
      node1.addChildrenToFront(node2);
      node1.setSourceEncodedPositionForTree(54);
      node0.hasMoreThanOneChild();
      Node node3 = node0.srcrefTree(node1);
      Node node4 = Node.newNumber((double) 36);
      node3.setVarArgs(false);
      node0.isNoSideEffectsCall();
      node3.hasMoreThanOneChild();
      node4.isContinue();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      node0.getIntProp(8);
      node0.putBooleanProp(8, true);
      node0.getString();
      node0.getIntProp(8);
      Node node1 = Node.newString(39, "jsw7{0|]kPFgB#\"TC", (-1995), 155691);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1926);
      node1.isEquivalentToTyped(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetterDef();
      node1.isDelProp();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3285), nodeArray0);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(159, node0, 49, 2);
      Node node2 = node1.srcref(node0);
      node2.setCharno(90);
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 159
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      node0.removeProp((-2127));
      node0.getChildCount();
      Node node1 = Node.newString(40, "");
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node1.hasChildren();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 57 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      node1.isSyntheticBlock();
      node2.isDebugger();
      node2.isThis();
      Node node3 = Node.newString("Tk9^DF[lH3MF7~Q");
      node2.addChildrenToFront(node0);
      node1.setSourceEncodedPositionForTree(42);
      node3.hasMoreThanOneChild();
      Node node4 = new Node(53);
      Node node5 = node4.srcrefTree(node3);
      Node.newNumber((double) 40);
      node5.setVarArgs(false);
      node3.isNoSideEffectsCall();
      node5.hasMoreThanOneChild();
      node0.isContinue();
      node4.isThis();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, (Node) null);
      node_NodeMismatch0.equals((Object) null);
      Node.extractLineno((-615));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      String string0 = "_xc;cwH mDo";
      Node node0 = Node.newString("_xc;cwH mDo", (-1492), 2266);
      node0.setVarArgs(true);
      Node node1 = new Node((-1492), node0, node0, 39, (-1492));
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      node1.isEquivalentTo(node1, true, false, true);
      Node.mergeLineCharNo((-1247), 1570);
      node1.isTypeOf();
      node0.isDelProp();
      node0.isLabelName();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("unex/ected pro$ id ", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 8, 5);
      node0.toString(true, true, false);
      Node node1 = new Node(147, node0, (-955), (-1681));
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isCase();
      node0.isCast();
      node1.isDefaultCase();
      node1.isGetterDef();
      node2.getIndexOfChild(node1);
      node2.isNE();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      node1.getJSDocInfo();
      Node node2 = new Node(115);
      Node node3 = new Node(100, node1, node0, node1, node2);
      node3.isLocalResultCall();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node1.isEquivalentToTyped(node4);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node2.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isGetterDef();
      node3.isDelProp();
      node4.isAssignAdd();
      node1.isNoSideEffectsCall();
      node4.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      node0.getIntProp(8);
      node0.putBooleanProp(8, true);
      node0.getString();
      node0.getIntProp(8);
      Node node1 = Node.newString(39, "jsw7{0|]kPFgB#\"TC", (-1995), 155691);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1926);
      Node.newNumber((double) 30);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 8
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ");
      Node node1 = Node.newNumber((-3412.7));
      node0.setSourceEncodedPositionForTree(49);
      node0.isEquivalentTo(node1, true, false, true);
      node0.addChildToFront(node1);
      Node node2 = new Node(38, node0, node0, node0, 40, 125);
      node2.checkTreeEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 40 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString(103, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node1.children();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Should not happen\n", node0, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node2 = new Node(50, node1);
      enumType1.defineInferredProperty("Object#Element", templateType0, node2);
      enumElementType0.getPropertyNode("Not declared as a type name");
      Node node3 = null;
      try {
        node3 = new Node(46, (Node) null, node1, 4, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.getProp(48);
      node2.getSideEffectFlags();
      node2.copyInformationFrom(node0);
      Node node3 = new Node(31, node1);
      node2.isLocalResultCall();
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = new Node(79, node1);
      node2.addChildToFront(node0);
      node1.getChangeTime();
      node2.cloneTree();
      node1.isNoSideEffectsCall();
      node1.isVar();
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      Node node1 = new Node(41, (-1826), 2136);
      node0.isDec();
      Node node2 = Node.newString(15, "! gZ");
      node1.isString();
      node2.wasEmptyNode();
      node0.putBooleanProp(57, false);
      node1.isName();
      node1.isTrue();
      // Undeclared exception!
      try { 
        node1.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte)108;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) 19);
      Node node1 = new Node(112, node0);
      node1.putProp(12, node0);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      Node node1 = new Node(40, node0, (-1489), 298);
      node0.useSourceInfoFrom(node1);
      node0.isCase();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newString(30, "com.google.javascript.rhino.Node$ObjectPropListItem", 30, (-1726));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = Node.newString(103, "\n\nSubtree2: ");
      node0.toStringTree();
      node1.isTypeOf();
      Node node2 = node0.srcref(node1);
      node1.isTry();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(55, (-2500), 55);
      node0.wasEmptyNode();
      Node.mergeLineCharNo(15, 47);
      Node node1 = new Node(154, node0, node0, 30, 2);
      node1.isTypeOf();
      node0.isQualifiedName();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isOr();
      // Undeclared exception!
      try { 
        Node.newString((String) null, 56, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("");
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isVar();
      Node node3 = new Node(49, node0, node2, 9, 365);
      node3.getLineno();
      node3.isThrow();
      node2.setLength(1429);
      Node.newString("{", 57, (-2500));
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isLocalResultCall();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node3 = Node.newNumber(464.17509299);
      node1.toString();
      node3.isFunction();
      node2.isEquivalentTo(node0);
      node3.putBooleanProp(56, false);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node node4 = null;
      // Undeclared exception!
      try { 
        node2.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isOnlyModifiesThisCall();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(105);
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(265, node0, 30, 56);
      Node node2 = Node.newString("90~~=PIX\"");
      node2.useSourceInfoFrom(node0);
      node0.isCast();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(50, node0, node0);
      node0.getJSDocInfo();
      node1.hasChildren();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, true);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 8
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString(428, "", 428, 44);
      node0.getQualifiedName();
      node0.isFor();
      Node node1 = new Node(1, node0, node0, node0, 31, 40);
      node1.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node2 = node1.srcref(node0);
      node2.isTry();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      node1.getJSDocInfo();
      Node node2 = new Node(115);
      Node node3 = new Node(100, node1, node0, node1, node2);
      node3.isLocalResultCall();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node node5 = Node.newNumber(0.0);
      node5.toString();
      node2.isFunction();
      node3.isEquivalentTo(node4);
      node1.putBooleanProp(31, false);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node4.checkTreeEquals(node1);
      node1.getDouble();
      node1.getQualifiedName();
      node1.getNext();
      node5.getLength();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString((-619), "CharMatcher.JAVA_LOWER_CASE");
      Node node1 = node0.getLastSibling();
      node1.isOptionalArg();
      node1.removeFirstChild();
      Node node2 = Node.newString("reflected_object", 304, 304);
      node2.setCharno(34);
      node1.setSourceEncodedPosition(4);
      node0.addChildToFront(node2);
      node0.siblings();
      node0.getIndexOfChild(node1);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-2303));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2303
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString("syAFAst:BR");
      Node.newNumber((-1265.7222533));
      Node node1 = Node.newNumber((double) 8, 126, 37);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(37, nodeArray0, 36, 2);
      node1.checkTreeEquals(node0);
      Node node3 = Node.newString(16, "syAFAst:BR", 3611, 2102744405);
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT syAFAst:BR 3611 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      node1.isSyntheticBlock();
      node2.isDebugger();
      node2.isThis();
      Node node3 = Node.newString("Tk9^DF[lH3MF7~Q");
      node2.addChildrenToFront(node0);
      node1.setSourceEncodedPositionForTree(42);
      node3.hasMoreThanOneChild();
      Node node4 = new Node(53);
      Node node5 = node4.srcrefTree(node3);
      Node.newNumber((double) 40);
      node1.isEquivalentTo(node0, true, false, true);
      node4.getType();
      // Undeclared exception!
      try { 
        node4.addChildBefore(node2, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = Node.newNumber((double) 29);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node node3 = new Node(12, node1, node0, 103, 119);
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(1, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("");
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node(36, node0, node1, 3003, (-1072));
      node2.checkTreeEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.setString("{-5jwd:");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("", 103, 103);
      Node node1 = new Node(29, node0, 34, 0);
      node0.getChangeTime();
      node1.getInputId();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node0.getSourceOffset();
      node_FileLevelJsDocBuilder0.append("");
      node1.removeFirstChild();
      node_FileLevelJsDocBuilder0.append("");
      node1.isArrayLit();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node0.isEquivalentTo(node0, false, true, true);
      node0.addChildToFront(node0);
      Node node1 = null;
      try {
        node1 = new Node(63, node0, node0, node0, 46, (-6537));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = Node.newNumber((double) 29);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      StringWriter stringWriter0 = new StringWriter();
      node1.appendStringTree(stringWriter0);
      node_SideEffectFlags0.setMutatesThis();
      Node node3 = new Node(12, node1, node0, 103, 119);
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(1, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newString(51, "unexpectedprp id ", 51, 50);
      node0.addChildToFront(node1);
      node1.toStringTree();
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(2);
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node1.isGetElem();
      Node node2 = new Node(47, node0);
      node2.isDelProp();
      Node node3 = new Node(2147483645);
      Node node4 = Node.newString("IN unexpectedprp id  51\n");
      node4.isAssignAdd();
      node0.isEquivalentTo(node4);
      node0.detachChildren();
      node4.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber(2994.225);
      Node node1 = Node.newString(57, "{");
      Node node2 = new Node(4095, node0, node1);
      node2.setWasEmptyNode(false);
      node2.getInputId();
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-81);
      byteArray0[0] = (byte) (-95);
      byteArray0[4] = (byte)108;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) 19);
      Node node1 = new Node(112, node0);
      node1.putProp(12, node0);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      node1.isSyntheticBlock();
      node2.isThis();
      Node node3 = Node.newString("Tk9^DF[lH3MF7~Q");
      node2.addChildrenToFront(node0);
      node1.setSourceEncodedPositionForTree(42);
      node3.hasMoreThanOneChild();
      Node node4 = node2.srcrefTree(node3);
      Node.newNumber((double) 40);
      node4.setVarArgs(false);
      node3.isNoSideEffectsCall();
      node4.hasMoreThanOneChild();
      node0.isContinue();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString("`'M|4?/mtWB5hF", (-574), (-2605));
      node0.setOptionalArg(false);
      node0.toString(false, true, false);
      Node node1 = new Node(55, (-2582), 1458);
      Node node2 = Node.newString("`'M|4?/mtWB5hF");
      Node node3 = new Node(4095, node2, node2, node0, node2, 30, 56);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("", 103, 103);
      Node node1 = new Node(29, node0, 34, 0);
      node0.getChangeTime();
      Node node2 = Node.newNumber((-1406.91645));
      node2.setCharno(31);
      node0.getString();
      node1.isOnlyModifiesThisCall();
      node2.isOr();
      Node.newString("", 8287, 0);
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  103 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      node0.addChildToFront(node0);
      node0.toStringTree();
      node0.getQualifiedName();
      int int0 = 48;
      int int1 = 645;
      int int2 = 431;
      Node node1 = new Node(int0, node0, int1, int2);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isCase();
      node1.isCast();
      node1.isDefaultCase();
      node2.isGetterDef();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(788, 788, 57);
      node0.getBooleanProp(788);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.mayMutateArguments();
      node0.isTry();
      node0.hasMoreThanOneChild();
      node0.isNumber();
      node0.isFor();
      Node node1 = Node.newString((-3081), "X~G`1Zws");
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      Node node1 = Node.newNumber((double) 49);
      node0.isLabel();
      node1.isNull();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(110);
      node0.getBooleanProp((-1189));
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newNumber((-183.99290541));
      node0.toString();
      node1.isFunction();
      node0.isEquivalentTo(node1);
      node1.putBooleanProp(1643, false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags((-99));
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<JSType> hashSet0 = new HashSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) hashSet0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.checkTreeEquals(node2);
      node1.getDouble();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(8, 39, 39);
      node0.getBooleanProp(364);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.mayMutateArguments();
      node0.isTry();
      node0.hasMoreThanOneChild();
      node0.isNumber();
      node0.isFor();
      Node node1 = Node.newString(2116, "X~G`1Zws");
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3000);
      Node node1 = Node.newNumber((-3412.7), 147, 8);
      node0.getJSDocInfo();
      Node node2 = new Node(15);
      Node node3 = new Node(0, node2, node1, node2, node0);
      node2.isLocalResultCall();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node node5 = Node.newNumber((double) 2);
      node0.toString();
      node4.isLabelName();
      node4.isEquivalentTo(node0);
      node2.putBooleanProp(30, false);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(41);
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node5.checkTreeEquals(node0);
      node5.getDouble();
      node5.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString("ac{us", (-7), (-7));
      node0.getIntProp((-7));
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.isRegExp();
      Node node1 = Node.newString(4095, "ac{us");
      // Undeclared exception!
      try { 
        node1.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = Node.newString((int) (byte) (-28), "9D0gWF'RbhSa)Sz", (int) (byte) (-28), 5564);
      Node node1 = new Node((-1372), node0);
      node1.isIf();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = null;
      try {
        node2 = new Node(54, nodeArray0, 51, (-1480));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newNumber((-2658.2275), (-959), (-959));
      node0.getJSDocInfo();
      Node node1 = new Node((-959));
      Node node2 = new Node(1441, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3632);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.newNumber((double) 29);
      node0.toString();
      node0.isFunction();
      node3.isEquivalentTo(node2);
      Node node4 = Node.newString(83, "U{jxRC'", 37, 57);
      node4.putBooleanProp(2, true);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -959
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(4750, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 98);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(98);
      node0.getProp(30);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node0.isFromExterns();
      node0.putBooleanProp(30, false);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-4843));
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags6.clearAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(365);
      Node node1 = new Node((-4602), node0, 4095, 40);
      node0.isNoSideEffectsCall();
      Node node2 = new Node((-3221), node1, node1);
      Node node3 = node2.cloneNode();
      node3.isQuotedString();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 8, 5);
      node0.toString(true, true, false);
      Node node1 = new Node(147, node0, (-955), (-1681));
      node1.checkTreeEquals(node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isCase();
      node0.isCast();
      node1.isDefaultCase();
      node1.getQualifiedName();
      node1.isGetterDef();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3412.7));
      node0.isEquivalentTo(node1, true, true, true);
      node0.addChildToFront(node1);
      Node node2 = new Node(38, node0, node0, node0, 40, 105);
      node2.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node0.mayMutateGlobalStateOrThrow();
      node2.isTry();
      Node node3 = new Node(1);
      node3.isGetProp();
      node0.isUnscopedQualifiedName();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(33);
      node0.getJSType();
      node0.getProp(788);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-777));
      node0.isUnscopedQualifiedName();
      node0.isFromExterns();
      node0.wasEmptyNode();
      Node node1 = new Node((-777), node0);
      node0.setJSDocInfo((JSDocInfo) null);
      node1.isAssign();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -777
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      node0.setSourceFileForTesting("");
      node0.isCatch();
      Node node1 = new Node(147, node0);
      node1.isEquivalentToTyped(node0);
      node1.isSyntheticBlock();
      node1.isDebugger();
      node0.isThis();
      Node node2 = Node.newString("");
      Node.newString(155, "_XD0FI~h6t_V8VHK");
      node1.addChildrenToFront(node2);
      node0.setSourceEncodedPositionForTree(57);
      node0.hasMoreThanOneChild();
      Node node3 = new Node((-2907));
      node2.srcrefTree(node1);
      Node.newNumber((double) 113);
      node3.isEquivalentTo(node0, false, false, false);
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(4095, node0);
      Node node4 = new Node(16);
      Node node5 = node3.srcrefTree(node0);
      Node node6 = Node.newNumber((double) 57);
      node2.isEquivalentTo(node6, false, false, false);
      node3.getType();
      // Undeclared exception!
      try { 
        node5.addChildBefore(node6, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 11, 11);
      node0.toString(false, true, true);
      Node node1 = new Node(4806, node0, 40, 49);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getIntProp(13);
      node2.isCase();
      node2.isCast();
      node0.isDefaultCase();
      node1.isGetterDef();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = null;
      Node node1 = Node.newNumber(143.0, 320, 1496);
      // Undeclared exception!
      try { 
        node1.isEquivalentTo((Node) null, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newNumber((double) 37);
      node1.toStringTree();
      node0.getQualifiedName();
      node0.setLineno(53);
      node0.setChangeTime(1189);
      Node node2 = Node.newString(47, "unexpectedprp id ");
      node0.getSideEffectFlags();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      Node node1 = new Node(40, node0, (-1489), 298);
      node1.removeFirstChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("q2{+9Y@AT94}QJa}X7d");
      node0.isArrayLit();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      int int0 = (-640);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-640), (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("acAuj_s");
      Node node1 = new Node(8, 40, 54);
      node0.isDec();
      Node.newString(10, "acAuj_s");
      node1.isString();
      node0.wasEmptyNode();
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(4095, node0);
      Node node4 = new Node(1, node1, node2, node1);
      node2.isNot();
      node4.isParamList();
      node0.setString("acAuj_s");
      node3.isAdd();
      node3.useSourceInfoIfMissingFrom(node1);
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = Node.newNumber(0.0);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(52);
      Node node3 = new Node(50, node0, node2, 4, 31);
      node0.getQualifiedName();
      Node.newString(47, "The existing child node of the parent should not be null.");
      node1.getSideEffectFlags();
      node2.siblings();
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newNumber(3075.7631400906166, 446, 132);
      node0.getProp(124);
      Node node1 = new Node(38, node0, node0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node.newString(131072, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((double) 55, 131072, (-811));
      Node node1 = Node.newString(29, "", 886, 47);
      node0.getSourceOffset();
      Node.newString(54, "", 30, 40);
      node1.getProp(4095);
      Node[] nodeArray0 = new Node[13];
      nodeArray0[0] = node1;
      node0.isQuotedString();
      node1.isUnscopedQualifiedName();
      node0.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node1.isSyntheticBlock();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      Node node1 = new Node(40, node0, (-1489), 29);
      node1.removeFirstChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("q2{+9Y@AT94}QJa}X7d");
      node0.children();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      node0.getJSDocInfo();
      node0.isSwitch();
      Node node2 = Node.newNumber((double) 29);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 29.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      Node.newString("", 29, 41);
      node0.isWhile();
      Node node2 = new Node(32, node0);
      node2.isThrow();
      node1.isAssign();
      node0.detachFromParent();
      node0.siblings();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node.newNumber((-3412.7));
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createUnionType(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte) (-95);
      byteArray0[4] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.newNumber(361.0);
      Node node2 = new Node(0, node0);
      node0.getProp((byte) (-95));
      node2.putProp(16, (Object) null);
      node2.isVoid();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString("", 29, 3003);
      Node node1 = Node.newNumber(1.0, 30, 32);
      Node node2 = new Node(56, node0, node0, node1, node1);
      node0.isSyntheticBlock();
      node2.isGetterDef();
      node0.toStringTree();
      node2.setSourceEncodedPositionForTree(93);
      Node.mergeLineCharNo(52, 32);
      node1.isTypeOf();
      node0.isDelProp();
      node0.isLabelName();
      Node node3 = Node.newNumber((double) 39, 55, 43);
      Node node4 = new Node(1314, 4, 42);
      node2.useSourceInfoFrom(node4);
      node0.isCase();
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = Node.newNumber(0.0);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      node2.addSuppression("PROTECTED");
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = new Node(32);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString(", ");
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("ojx$AFAH:X");
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node(101, node1, node0, (-549), 12);
      node0.isTypeOf();
      Node node3 = new Node(42);
      node3.getQualifiedName();
      node0.toStringTree();
      Node node4 = new Node(42);
      node1.getSideEffectFlags();
      node2.siblings();
      Node node5 = new Node(122, 43, 2);
      node5.isVoid();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayDeque0);
      immutableList0.reverse();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isOptionalArg();
      node0.isAssign();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      node0.getStaticSourceFile();
      nodeArray0[1] = node0;
      node0.getChildBefore(nodeArray0[2]);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(112, (-1816), 112);
      Node.mergeLineCharNo(2433, 57);
      Node node1 = new Node(55, node0, node0, 16384, 12);
      node1.isTypeOf();
      node1.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.newString(85, "! gZ");
      node1.isString();
      Node node2 = Node.newString("", 4287, 1);
      node2.wasEmptyNode();
      node1.putBooleanProp(153, true);
      node1.isName();
      node0.isTrue();
      Node node3 = null;
      try {
        node3 = new Node(15, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags2.setReturnsTainted();
      Node node2 = Node.newString(56, "com.google.javascript.rhino.Node$ObjectPropListItem");
      node1.toStringTree();
      node2.isTypeOf();
      node0.srcref(node1);
      node1.isTry();
      node0.isCase();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has exiOtig parent", 3000, 3000);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isBlock();
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(8, 39, 39);
      node0.getBooleanProp(364);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.mayMutateArguments();
      node0.isTry();
      node0.hasMoreThanOneChild();
      node0.isNumber();
      node0.isFor();
      node0.setSourceEncodedPositionForTree((-864));
      Node node1 = new Node(118, node0, node0, node0, (-951), 43);
      node1.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node0.isNE();
      node1.removeChildren();
      // Undeclared exception!
      try { 
        Node.newString(133, (String) null, 42, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber(3075.7631400906166, 446, 132);
      Node node1 = node0.cloneNode();
      node0.isNew();
      node1.isFunction();
      node1.removeProp(446);
      node1.getLength();
      node0.isIf();
      Node node2 = new Node(15, node0, node0, node1, node1, 461845907, 48);
      Node node3 = node2.removeFirstChild();
      node2.isParamList();
      node1.addChildToBack(node0);
      node3.wasEmptyNode();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.removeProp(4095);
      node0.getLength();
      node1.isIf();
      node1.isParamList();
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isSwitch();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      node0.setWasEmptyNode(false);
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.getSideEffectFlags();
      node0.siblings();
      Node node3 = new Node(105, node2);
      node3.isVoid();
      node3.isDo();
      node0.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(112, (-1816), 112);
      Node.mergeLineCharNo(2433, 57);
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      Node node1 = new Node(4174, 122, 0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node node3 = new Node(41, node2, node2, (-1483), 57);
      node0.getQualifiedName();
      node3.setWasEmptyNode(false);
      // Undeclared exception!
      try { 
        Node.newString(53, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(112, (-1816), 112);
      Node.mergeLineCharNo(2433, 57);
      Node node1 = new Node(55, node0, node0, 16384, 12);
      node1.isTypeOf();
      node1.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-57);
      node1.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      Node node2 = node1.removeChildren();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newNumber(199.87);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = Node.newString("P,a~`C?#;XU:c_JG!", 893, 26);
      node1.isWhile();
      Node node2 = new Node(40, node0, node1, node1);
      Node node3 = new Node(886, node2);
      node3.isThrow();
      node3.isAssign();
      Node node4 = node2.detachFromParent();
      node4.siblings();
      node3.isAdd();
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(57, node0, node1, node0, node1);
      node0.isEquivalentToTyped(node2);
      node0.isDebugger();
      node2.isThis();
      Node node3 = new Node((-2198));
      Node node4 = Node.newNumber(2984.65580529885, 57, 7);
      node4.getSideEffectFlags();
      node0.siblings();
      node3.isReturn();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":l)jADpNTF");
      String string0 = "8 ";
      Node node0 = Node.newString(13, "8 ");
      node0.setChangeTime(13);
      node0.isQualifiedName();
      node0.isEmpty();
      node0.isFunction();
      node0.getChangeTime();
      Node.newString(":l)jADpNTF", 446, 1);
      String string1 = "q@5w%]x*";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("8 ", "q@5w%]x*");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // q@5w%]x*
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newNumber(1019.1467, 22, 1378);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setLineno(1411);
      node0.getJSDocInfo();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(54, 55, (-686));
      node0.wasEmptyNode();
      Node.mergeLineCharNo(52, 55);
      node0.isBreak();
      node0.isLabel();
      node0.isNull();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newNumber((double) 32, 57, 2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isLocalResultCall();
      Node node2 = new Node(40, node0, node1, node0, node1);
      node1.getSourceOffset();
      node2.putBooleanProp(8, false);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3412.7));
      node0.isLocalResultCall();
      node0.isEquivalentTo(node1, true, true, true);
      node0.addChildToFront(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.isWith();
      node1.isExprResult();
      node1.siblings();
      node0.isVoid();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(55, (-2500), 55);
      node0.wasEmptyNode();
      Node.mergeLineCharNo(15, 47);
      Node node1 = new Node(154, node0, node0, 30, 2);
      node1.isTypeOf();
      node1.isDec();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.copyInformationFromForTree(node0);
      Node.newString(54, "com.google.common.collect.ImmutableList$SerializedForm");
      node1.isComma();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newString("");
      Node.newNumber((double) 1);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node3 = new Node(2228, node2, node0, 116, 30);
      Node node4 = new Node(12);
      Node node5 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.isTypeOf();
      node2.srcref(node1);
      node0.isTry();
      Node node6 = new Node((-89));
      node5.isGetProp();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node node4 = Node.newNumber(0.0);
      node4.toString();
      node3.isFunction();
      node0.isEquivalentTo(node4);
      node0.putBooleanProp((-3169), true);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(3291);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(1005.0379, 125, 125);
      node0.removeProp(51);
      node0.isOnlyModifiesArgumentsCall();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = new Node(36, node0);
      node1.getChildCount();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isGetElem();
      node2.isDelProp();
      Node node3 = new Node((-1963));
      node3.isAssignAdd();
      node2.isEquivalentTo(node3);
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = Node.newString((-1941), "BV");
      Node node3 = new Node((-355), node1, (-54), 54);
      Node node4 = Node.newString("n'm+9::R&s4Zy", (-109), 38);
      node3.addChildAfter(node2, node1);
      node4.isOnlyModifiesThisCall();
      node4.isOr();
      Node.newString("BV", 133, (-2992));
      // Undeclared exception!
      try { 
        node2.setDouble(55);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1941
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("^Ll;-><", "/r#8dZU9''", 1023, (byte)88);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((byte) (-28));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((byte) (-28));
      node_SideEffectFlags2.setReturnsTainted();
      Node node0 = new Node(1023);
      node0.isVar();
      Node.newNumber(663.5508, 29, 12);
      Node node1 = new Node(1, node0, node0, 57, (-4643));
      node1.getLineno();
      node0.isThrow();
      node1.srcref(node0);
      Node node2 = Node.newNumber((double) 57, 112, 959);
      node2.isTry();
      node2.isCase();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString("P,a~`C?#;XU:c_JG!");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getIntProp(35);
      node0.removeProp(83);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node1 = new Node((-862048943), node0, 40, 15);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.type = 916;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P,a~`C?#;XU:c_JG!");
      node1.checkTreeEqualsImpl(node0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.addChildToBack(node1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setReturnsTainted();
      node0.isGetElem();
      node0.isDelProp();
      Node node1 = new Node(51);
      node0.isAssignAdd();
      Node node2 = new Node(39, node1, node1);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node.mergeLineCharNo(57, 57);
      Node node1 = new Node(55, node0, node0, 16384, 12);
      node0.isDec();
      Node node2 = Node.newString(83, "");
      node0.isString();
      node0.wasEmptyNode();
      Node.newNumber(464.17509299);
      Node node3 = new Node(38, node1);
      node0.isNot();
      node2.isParamList();
      node2.isAssign();
      try { 
        node0.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEFAULT_CASE 112 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("syAFAst:BR");
      Node.newNumber((-1265.7222533));
      Node node1 = Node.newNumber((double) 8, 126, 37);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(37, nodeArray0, 36, 2);
      node1.checkTreeEquals(node0);
      Node.newString(16, "syAFAst:BR", 3611, 2102744405);
      node1.getDouble();
      node0.isExprResult();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch", 3325, 8);
      Node node1 = new Node(8, node0, 6, 112);
      node1.srcrefTree(node0);
      node1.isEquivalentTo(node0, false, false, false);
      Node node2 = Node.newNumber((double) 42);
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      Iterator<TemplateType> iterator0 = stack0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node2 = new Node(2, node0, node1, 57, (-1039));
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.isTypeOf();
      Node node3 = node2.srcref(node1);
      node2.isTry();
      Node node4 = new Node(56);
      node4.getIntProp(56);
      node1.isGetProp();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      Node node1 = new Node(0, node0, 29, 825);
      node1.putIntProp(12, 1);
      node0.getProp(15);
      node0.getIntProp(47);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.copyInformationFromForTree(node0);
      Node.newString((-77), "com.google.common.collect.ImmutableList$SerializedForm");
      Node node2 = Node.newNumber((-159.0), 1706, 571);
      node2.isComma();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber(1752.182, 9, 9);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isEmpty();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node2 = null;
      try {
        node2 = new Node(43, node0, node0, 32, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      Node node0 = Node.newString("");
      simpleErrorReporter0.error("^Ll;-><", "^Ll;-><", (-2576), 1903);
      Node node1 = new Node(40, node0, (-1489), 298);
      node1.removeFirstChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("q2{+9Y@AT94}QJa}X7d");
      node0.isArrayLit();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H0efMY(;MX");
      Node node0 = Node.newString(">igg7<>y$3hx?7k]q0s");
      node0.setQuotedString();
      try { 
        node0.setDouble((-1122.406428333));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING >igg7<>y$3hx?7k]q0s [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(8, 39, 39);
      node0.getBooleanProp(364);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.mayMutateArguments();
      node0.hasMoreThanOneChild();
      node0.isNumber();
      node0.isFor();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = new Node(118, node0, node0, node0, (-951), 43);
      node1.checkTreeEqualsImpl(node0);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node0.isNE();
      Node node2 = node1.removeChildren();
      node2.getAncestor(8);
      node1.isUnscopedQualifiedName();
      node1.toString(true, false, false);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(2, 8, 103);
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newString(3269, "");
      node1.wasEmptyNode();
      node2.setWasEmptyNode(false);
      node1.isComma();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(3066.54305449519, 446, 132);
      Node node1 = new Node(39, node0, node0, 47, 48);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isTypeOf();
      node1.srcref(node0);
      node0.isTry();
      Node node2 = new Node(29);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(110);
      Node.newString(40, "Qg", 699, 57);
      node0.toString(false, false, false);
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(1333, ",/Wp^z`U");
      node0.isString();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber(30.0);
      Node node2 = new Node((-2993), node1);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getQualifiedName();
      node0.getSideEffectFlags();
      node0.siblings();
      node0.isVoid();
      node0.isDo();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node((byte)42, node0, node0, node0, node1, (byte)100, 43);
      Node node3 = node2.removeChildren();
      node3.isFalse();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(1014);
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isNE();
      Node node3 = new Node(16384, node1, node2, 6, 37);
      node0.useSourceInfoIfMissingFrom(node3);
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(1932);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1014
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(2, 8, 103);
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newString(3269, "");
      node1.wasEmptyNode();
      node2.setWasEmptyNode(false);
      node1.isComma();
      node2.isName();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 98);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.setQuotedString();
      Node node1 = Node.newNumber((double) 30, 3223, 47);
      node1.isWith();
      node0.getParent();
      node0.children();
      Node node2 = Node.newString("0)dlu4d*");
      // Undeclared exception!
      try { 
        node2.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToFront(node0);
      node0.isName();
      node1.isInstanceOf();
      Node node2 = null;
      try {
        node2 = new Node((-1827), node1, node1, node0, 39, 115);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString((-2134), "J^GN");
      node0.getString();
      node0.isNoSideEffectsCall();
      node0.getIntProp((-2190));
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isUnscopedQualifiedName();
      node0.isBlock();
      node0.getCharno();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = Node.newString("");
      Node node2 = node0.clonePropsFrom(node1);
      node1.isEquivalentTo(node0, true, false, false);
      node2.addChildToFront(node1);
      node1.isName();
      node1.isInstanceOf();
      Node node3 = null;
      try {
        node3 = new Node(10, node0, node1, node0, 32, 94);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setSourceEncodedPositionForTree(0);
      node0.setLength(0);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(57, 0, 3424);
      Node node3 = node1.copyInformationFromForTree(node0);
      Node.newString(2, "");
      node3.wasEmptyNode();
      node1.setWasEmptyNode(true);
      node1.isComma();
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.isDec();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isDebugger();
      node0.isTypeOf();
      node0.isEquivalentTo(node0);
      node0.setSourceEncodedPositionForTree(1640);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newNumber(0.0, 64, 1);
      Node node2 = node0.srcrefTree(node1);
      node1.toString(false, false, false);
      node1.setVarArgs(true);
      Node node3 = new Node(43, node1, node1, node1, node2);
      node3.isNoSideEffectsCall();
      node1.hasMoreThanOneChild();
      node0.isContinue();
      node0.getChildAtIndex((-3495));
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      node1.isOr();
      node0.addChildToFront(node1);
      node0.isName();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.getSideEffectFlags();
      node0.siblings();
      Node node3 = new Node(105, node2);
      node3.isVoid();
      node3.isDo();
      node3.isInc();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.toStringTree();
      node1.isTypeOf();
      Node node2 = new Node(42, (byte)73, 55);
      Node node3 = node2.srcref(node1);
      node2.isReturn();
      node1.isTry();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = Node.newString(1333, "9D0gWF'RbhSa)Sz");
      node0.isString();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 40);
      node0.isEquivalentTo(node1, false, false, false);
      node0.addChildToFront(node1);
      node0.isWith();
      Node node2 = Node.newString("first new child has existing parent");
      node2.isExprResult();
      node1.siblings();
      node1.isVoid();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)41;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)119;
      Node node0 = Node.newString(1333, "9D0gWF'RbhSa)Sz");
      node0.isString();
      node0.wasEmptyNode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newNumber((double) 40);
      Node node2 = new Node((-99), node0);
      node2.isThrow();
      node1.isAssign();
      Node node3 = node0.detachFromParent();
      node1.siblings();
      node1.isAdd();
      node1.addChildrenToBack(node0);
      node0.isLabelName();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString(", ");
      ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString(340, ":Z@");
      node0.isString();
      node1.wasEmptyNode();
      Node node2 = Node.newNumber((double) 51);
      Node node3 = new Node(8, node0);
      Node node4 = Node.newString(38, "BITXOR", 38, 15);
      Node node5 = new Node(297);
      Node node6 = new Node((-1174), node4, node5, node5);
      node2.isNot();
      node2.isParamList();
      node4.setString("3_chfp_A");
      node6.isLabelName();
      node5.getProp((-2741));
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)100;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.addChildToFront(node0);
      node0.isWith();
      node1.isExprResult();
      node0.siblings();
      node1.isVoid();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = Node.newString(1333, "9D0gWF'RbhSa)Sz");
      node0.isString();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 40);
      Node node2 = new Node((-99), node0);
      Node node3 = Node.newString(31, "GihYdt4w+bt", (-2546), 103);
      Node node4 = null;
      try {
        node4 = new Node(16, node1, node1, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(115);
      Node node3 = new Node(100, node1, node0, node1, node2);
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node2.cloneTree();
      Node node4 = Node.newNumber(0.0);
      node4.toString();
      node2.isFunction();
      // Undeclared exception!
      try { 
        node1.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = node1.cloneNode();
      InputId inputId0 = new InputId("&  ");
      node0.setInputId(inputId0);
      node0.isNoSideEffectsCall();
      Node node3 = node1.useSourceInfoFrom(node0);
      node3.cloneNode();
      node1.getLength();
      node1.isThis();
      // Undeclared exception!
      try { 
        node2.replaceChild(node3, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.TemplateTypeMap", (-2944), (-2692));
      Node node3 = node2.cloneNode();
      InputId inputId0 = new InputId("&  ");
      node3.setInputId(inputId0);
      Node node4 = new Node(37, node3, 48, 817);
      Node node5 = new Node(2754, node4, node2, 1991, 8);
      node3.isNoSideEffectsCall();
      Node node6 = node1.useSourceInfoFrom(node5);
      node5.cloneNode();
      node0.getLength();
      node3.isThis();
      // Undeclared exception!
      try { 
        node3.replaceChild(node6, node6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node(2777);
      Node node1 = new Node(40, 553, 346);
      Node node2 = new Node(115, node1, node1, node0, node0);
      node1.toStringTree();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.newNumber(30.0);
      node3.toString();
      node1.isFunction();
      Node node4 = null;
      try {
        node4 = new Node(56, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node((-3201), (-3201), 98);
      node0.isTypeOf();
      Node.mergeLineCharNo(16, 40);
      Node node1 = new Node(39, node0, node0, node0);
      node0.isTypeOf();
      node1.isDec();
      Node node2 = new Node(2265434);
      node2.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isOr();
      Node node3 = Node.newString("Object#Key", 43, 1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("com.google.javascript.rhino.jstype.NullType");
      node1.isArrayLit();
      node3.children();
      // Undeclared exception!
      try { 
        node1.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("", 147, 3003);
      Node node1 = Node.newNumber(0.0, 301, 38);
      Node node2 = new Node(147, node0, node0, node1, node0);
      node2.isSyntheticBlock();
      node2.isGetterDef();
      node2.toStringTree();
      Node node3 = Node.newNumber((double) 56, 8, 429);
      node0.isWith();
      node1.getParent();
      node0.children();
      Node node4 = node1.clonePropsFrom(node3);
      node2.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      node4.cloneNode();
      // Undeclared exception!
      try { 
        node4.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayDeque0);
      immutableList0.reverse();
      jSTypeRegistry0.getObjectElementKey();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node1 = new Node(40, node0, node0, 306654252, 306654252);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isTypeOf();
      node1.srcref(node0);
      node1.isTry();
      Node node2 = new Node(153);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node1.getQualifiedName();
      node0.isBlock();
      Node node2 = new Node((-249), node1, node0, node1);
      node2.isRegExp();
      node0.isEmpty();
      node2.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = null;
      try {
        node3 = new Node((-1942), node0, node1, 4, 147);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)88;
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-13);
      Node node0 = Node.newString(1333, "9D0gWF'RbhSa)Sz");
      node0.isString();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 40);
      Node node2 = new Node(15, 1, 39);
      Node node3 = Node.newString(31, "GihYdt4w+bt", (-2546), 103);
      Node node4 = new Node((-3738), node2, node1, node3);
      node0.isNot();
      node1.isParamList();
      node0.isParamList();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToFront(node0);
      node0.isName();
      node1.isInstanceOf();
      node0.isVoid();
      Node node2 = new Node(2146785679, 49, 2);
      Node node3 = Node.newNumber((double) 48);
      node2.isContinue();
      node3.isAssign();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 31);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.children();
      Node node3 = new Node(38, node1, node2, 1794, 4);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node3.isTypeOf();
      Node node4 = node3.srcref(node2);
      node3.isTry();
      Node.newNumber(39.0);
      node1.isName();
      node4.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1381);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(1);
      Node node1 = new Node(54, node0, node0, node0);
      node1.getFirstChild();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.getSideEffectFlags();
      node0.siblings();
      Node node3 = new Node(105, node2);
      node3.isDo();
      node0.isOnlyModifiesThisCall();
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = Node.newString(1333, "9D0gWF'RbhSa)Sz");
      node0.isString();
      node0.hasChild(node0);
      Node node1 = Node.newNumber((double) 40);
      Node node2 = new Node(38, node0);
      Node node3 = Node.newString(31, "GihYdt4w+bt", (-2546), 103);
      Node node4 = new Node((-3738), node2, node1, node3);
      Node node5 = null;
      try {
        node5 = new Node(2223, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      Node node1 = Node.newNumber((double) 4095);
      node0.getAncestors();
      Node node2 = new Node(79, node1);
      node2.addChildToFront(node0);
      node2.getQualifiedName();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node3 = new Node(46, node2, node2, 28, 16384);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.isTypeOf();
      Node node4 = node1.srcref(node0);
      node4.isTry();
      Node.newNumber(3456.295599041);
      node1.isName();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("t");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-82);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte) (-53);
      byteArray0[4] = (byte) (-127);
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte) (-15);
      byteArray0[8] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(114, node0, node0, node0, 55, 44);
      Node node2 = new Node(114, node1);
      node2.isDo();
      node2.isOnlyModifiesThisCall();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DO is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      node0.setSourceFileForTesting("");
      node0.isCase();
      Node node1 = new Node(147, node0);
      node1.isEquivalentToTyped(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isSyntheticBlock();
      node1.isDebugger();
      node0.isThis();
      Node.newString("");
      node0.isParamList();
      try { 
        node0.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 3719.0 754 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(57, node0, node1, node0, node1);
      node2.getChangeTime();
      node0.isEquivalentToTyped(node2);
      node0.isDebugger();
      node2.isThis();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      node0.isDelProp();
      Node node3 = new Node((-330));
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      int int0 = 2904;
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I+");
      Node node0 = new Node((-232), nodeArray0, 40, (-518));
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node((-232), node0, node0, (Node) null, node0, (-518), 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(112, (-1816), 112);
      node0.isTypeOf();
      Node.mergeLineCharNo(2433, 57);
      Node node1 = new Node(55, node0, node0, 16384, 12);
      node1.isTypeOf();
      node1.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node0.isOr();
      Node node2 = Node.newString("PM%!>vQ8*", 1, (-4604));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      Node node3 = new Node((-2393));
      node0.useSourceInfoFrom(node2);
      Node node4 = Node.newString("Q+7", 1729, (-1468));
      node4.isSetterDef();
      node2.isOr();
      node4.getBooleanProp((-1492));
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.setLineno(1189);
      node0.setChangeTime(3594);
      Node node1 = Node.newString(117, "FG$ah~?%");
      Node node2 = new Node(2084, (-1286), 57);
      node2.getSideEffectFlags();
      node1.isContinue();
      node1.isThis();
      node2.isObjectLit();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(16384, "}/j@'F;FL&$Xqm-J- ", 2048, 2048);
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      Node node1 = new Node(38);
      Node node2 = new Node(49, node0, node0, node0, node1, 37, 1);
      node0.useSourceInfoFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = null;
      try {
        node3 = new Node(4095, node1, node1, 100, (-1108));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newNumber((double) 37);
      node1.toStringTree();
      node0.getQualifiedName();
      node0.setLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      node_SideEffectFlags1.setReturnsTainted();
      Node node2 = Node.newString(32, "com.google.javascript.rhino.Node$ObjectPropListItem");
      node2.toStringTree();
      node2.isTypeOf();
      Node node3 = Node.newNumber((double) 32);
      node1.srcref(node3);
      node2.isTry();
      node0.isCase();
      node0.isGetProp();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType(objectType0, (Map<TemplateType, JSType>) hashMap0);
      JSType jSType0 = jSTypeRegistry0.createOptionalType(templatizedType0);
      jSTypeArray0[0] = jSType0;
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType1 = templateTypeMapReplacer0.caseNoType();
      jSTypeArray0[1] = jSType1;
      Node node0 = Node.newNumber(0.0, 89, (-757));
      Node node1 = new Node(1756, node0, node0, node0, 65535, (-921));
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType1, node1);
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseFunctionType(functionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.isForwardDeclaredType("");
      Node.newString("Object#Element");
      simpleErrorReporter0.error(", ", "Object#Element", 2790, 29);
      Node node1 = new Node(1, node0, 57, 26);
      Node node2 = node1.removeFirstChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node2.isName();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setReturnsTainted();
      node0.toString();
      node3.isFunction();
      node0.isEquivalentTo(node1);
      node_SideEffectFlags0.setReturnsTainted();
      Node node4 = Node.newNumber(272.8982008747541);
      node4.toString();
      node4.isFunction();
      node3.isEquivalentTo(node0);
      node1.isVoid();
      node2.siblings();
      node1.isAdd();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("sq8Qz0 $eJ0FYno`", (-1733), 41);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getProp(116);
      node0.isQuotedString();
      node0.isVarArgs();
      node0.setOptionalArg(true);
      Node node1 = new Node((-1501), node0, node0, node0, 4095, 8);
      node1.cloneTree();
      node1.getChangeTime();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1501
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ERT4c8");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newString(132, "com.google.javascript.rhino.Node$AncestorIterable");
      node1.isComma();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      Node node2 = new Node(19, node0, node1, 55, 110);
      node2.isTypeOf();
      node0.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node2.isIn();
      node2.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      node1.isOr();
      Node.newString("", 12, 42);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node1.isArrayLit();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString("unexpectedprp id ");
      Node node1 = Node.newNumber((double) 37);
      node1.toStringTree();
      node0.getQualifiedName();
      node0.setLineno(53);
      node0.setChangeTime(1189);
      Node node2 = Node.newString(47, "unexpectedprp id ");
      node0.getSideEffectFlags();
      node0.isContinue();
      node2.isThis();
      node2.isObjectLit();
      node0.getAncestors();
      node1.isDo();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      Node node0 = Node.newString((-142), "com.google.javascript.rhino.jstype.EnumType");
      Node node1 = new Node(0, node0, node0, node0, 57, 4095);
      Node node2 = node1.clonePropsFrom(node0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      Node node3 = null;
      try {
        node3 = new Node(55, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(52, "t");
      node0.getQualifiedName();
      node0.isDec();
      node0.isOnlyModifiesThisCall();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = Node.newString(102, "(WG:");
      node0.isString();
      node2.wasEmptyNode();
      Node node3 = Node.newNumber((double) 46);
      Node node4 = new Node((-2094), 1, 54);
      node4.useSourceInfoFrom(node3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node5 = Node.newString(14, "GihYdt4w+bt", 29, 1572);
      Node node6 = new Node(15, node5, node2, node1);
      node6.isNot();
      node0.isParamList();
      node2.isTry();
      node1.isCase();
      node3.isGetProp();
      node1.getSideEffectFlags();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.isDec();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isDebugger();
      node0.isTypeOf();
      node0.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.removeProp(124);
      Node node1 = new Node((-1590), node0, node0, node0, node0);
      node1.getLength();
      node1.isIf();
      node0.isParamList();
      Node node2 = Node.newNumber(0.0);
      node2.isDelProp();
      node0.isAssignAdd();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      Node.newString((-1941), "BV");
      node0.isQuotedString();
      Node node2 = new Node((-355), node1, (-54), 54);
      Node.newString((-1244), "BV", 55, 105);
      Node node3 = node1.copyInformationFromForTree(node0);
      Node.newString(1, "\"s?]@c|lqxpLTs");
      node0.isComma();
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(26);
      Node node1 = Node.newString("?q1I#m;c:jNc%q", 53, 57);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newString((-1), "BV");
      node2.isQuotedString();
      Node node4 = new Node((-1549), node2, 42, (-378));
      Node node5 = Node.newString(".R`F'%unGS", 48, 37);
      // Undeclared exception!
      try { 
        node5.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(112, (-1816), 112);
      node0.isTypeOf();
      Node.mergeLineCharNo(2433, 57);
      Node node1 = new Node(55, node0, node0, 16384, 12);
      node1.isTypeOf();
      node1.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = new Node(101, node1, node1, 0, 43);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.isTypeOf();
      node0.srcref(node1);
      node1.isTry();
      Node.newNumber((double) 51);
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(110);
      Node.newNumber(489.7144);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node1 = Node.newString((-794), "Object#Key", (-355), 3116);
      node1.getSourceFileName();
      node0.copyInformationFromForTree(node1);
      Node.newString(754, "1makcZuM'");
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("Object#Element", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToTyped(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isSyntheticBlock();
      node0.isDebugger();
      node1.isThis();
      Node node2 = Node.newString("1](&wt)8o|EX(");
      node0.isParamList();
      node1.setString("1](&wt)8o|EX(");
      node1.isCast();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("M[t?0uM7&;pft29I_G", (-441), 40);
      Node node1 = new Node((-441), node0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node0.setChangeTime(55);
      node1.getProp(12);
      node1.isTry();
      node0.getSourceFileName();
      node1.isCall();
      node1.isFalse();
      node1.isScript();
      Node node2 = Node.newString("M[t?0uM7&;pft29I_G");
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isNew();
      Node node3 = Node.newString("URSH");
      Node node4 = node2.useSourceInfoFromForTree(node1);
      node4.copyInformationFromForTree(node0);
      node2.getParent();
      node3.addChildrenToBack(node4);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-824);
      Node node0 = Node.newNumber((double) (-824), (-2796), (-2796));
      int int1 = 22;
      double double0 = 464.17509299;
      node0.setChangeTime(22);
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString((-1816), "c%~mtSx}LZj>P&6mr@t");
      Node node1 = new Node(1024, node0);
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      node1.isOr();
      Node.newString("1G9IV", 1729, 2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node1.isArrayLit();
      node0.hasOneChild();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(302, "USq2ys)^");
      node0.getQualifiedName();
      node0.isDec();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node1 = Node.newString(2994, ":t;#-)O{O\u0004S");
      Node node2 = new Node(32, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      Node.newString(40, "t");
      node2.isComma();
      node2.isName();
      node0.hasChild(node3);
      node0.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.isForwardDeclaredType(", ");
      jSTypeRegistry0.getObjectElementKey();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = new Node((byte) (-28), node0, node0, 2, (byte)88);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      node1.isDelProp();
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString("unex/ected pro$ id ");
      Node node1 = Node.newNumber((-3412.7));
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.children();
      Node node2 = new Node(36, node1, node1, 30, (-2192));
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.getQualifiedName();
      node0.isString();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      node0.setWasEmptyNode(false);
      node1.isEquivalentToShallow(node0);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-4096));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -4096
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString(3000, "new child has existing parent", 3000, 30);
      node0.putIntProp(39, 1);
      node0.isDebugger();
      node0.isThis();
      Node.newString("new child has existing parent");
      node0.setString("new child has existing parent");
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867);
      Node node1 = Node.newNumber((double) 47, 43, 346);
      Node node2 = new Node(115);
      Node node3 = new Node(100, node1, node0, node1, node2);
      node0.setOptionalArg(true);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isIn();
      node2.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node3.isOr();
      Node.newString("PM%!>vQ8*", 10, 54);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      node4.isArrayLit();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToFront(node0);
      node0.isName();
      node1.isInstanceOf();
      Node node2 = null;
      try {
        node2 = new Node(50, node1, node1, node0, 39, 115);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      Node.newNumber((-722.4229524616636));
      Node node3 = new Node(640, node0);
      Node.newString(11, "com.google.common.collect.AbstractMapBasedMultimap$AsMap", 42, 57);
      Node node4 = new Node(100, node2, node3, node2);
      Node.newString("Bo\"yz[W(H:cYRF)k[");
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(114);
      Node node1 = new Node(118, node0, node0, node0, node0, 27, 93);
      nodeArray0[0] = node1;
      Node node2 = new Node(114, nodeArray0);
      node2.clonePropsFrom(node1);
      node1.isEquivalentToTyped(node2);
      Node node3 = Node.newString(48, "com.google.common.collect.EmptyImmutableBiMap");
      // Undeclared exception!
      try { 
        node3.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-2053), (-2053));
      Node node1 = new Node((-2053), node0, node0, node0, node0, 1449, 55);
      MockPrintStream mockPrintStream0 = new MockPrintStream("il7l3ol3#k}S5pKc?");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "il7l3ol3#k}S5pKc?");
      // Undeclared exception!
      try { 
        node1.appendStringTree(printStream0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2053
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = new Node(56);
      Node node3 = new Node(49, node1, node2, node2, node1);
      node1.setOptionalArg(false);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node node5 = Node.newNumber((double) 15);
      node1.toString();
      node1.isFunction();
      node3.isEquivalentTo(node1);
      node3.isParamList();
      node4.isTry();
      node0.isCase();
      node5.isGetProp();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setReturnsTainted();
      node3.removeChildren();
      node0.toString();
      node3.isFunction();
      node0.isEquivalentTo(node1);
      node_SideEffectFlags0.setReturnsTainted();
      Node node4 = Node.newNumber(272.8982008747541);
      // Undeclared exception!
      try { 
        node4.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isBlock();
      node0.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1181));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node0.isGetElem();
      node0.isDelProp();
      Node node1 = new Node((-1987));
      node0.isAssignAdd();
      node1.isGetElem();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1987
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(51);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.toStringTree();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.toString();
      Node node2 = new Node(1949, node0, node0, (-804), 751619276);
      node2.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1949
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString(", ");
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getProp((-2889));
      node0.isTry();
      node0.getSourceFileName();
      node0.isCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isFalse();
      node0.isScript();
      Node node2 = Node.newString("Object#Key");
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isNew();
      node2.isAssign();
      node0.isQuotedString();
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-4188.7897759985), (-54), (-54));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.removeFirstChild();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.getIntProp((-54));
      node0.isFromExterns();
      node0.isBlock();
      Node node1 = Node.newNumber((double) 4095);
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node.extractCharno((-2565));
      Node node0 = new Node(896, (-2565), (-1665));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("unex/ected pro$ id ", false);
      simpleSourceFile0.getLineOffset(36);
      node0.setStaticSourceFile(simpleSourceFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setOptionalArg(false);
      node0.setLineno((-1543));
      node0.isSetterDef();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      node0.isCase();
      Node node1 = new Node(50, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.mayMutateArguments();
      Node node2 = new Node(54, nodeArray0, 1936, 754);
      node1.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        Node.newString(12, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString(", ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getProp((-2889));
      node0.isTry();
      node0.getSourceFileName();
      Node node1 = new Node(31, node0, node0, 36, (-25));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isTypeOf();
      node1.srcref(node0);
      node0.isTry();
      Node.newNumber(346.0);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToFront(node0);
      node0.srcref(node1);
      node0.isName();
      node1.isInstanceOf();
      node1.isVoid();
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867, 3000, 3000);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(94, node0);
      node1.isEquivalentToTyped(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isDebugger();
      node1.removeChild(node0);
      node0.isThis();
      node0.putBooleanProp(37, true);
      node1.isName();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3000);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node(130, node0);
      node2.children();
      Node node3 = new Node((-1072), node2, node2, 12, 39);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isTypeOf();
      Node node4 = new Node(3000);
      Node node5 = node3.srcref(node4);
      node4.isTry();
      Node.newNumber(541.0);
      node5.isName();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      Node.newString(1, ",%+W/dU");
      Node.newString("com.google.common.collect.EmptyImmutableBiMap");
      Node node2 = Node.newNumber((double) 57);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node2.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType(") ");
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(46, 36, 52);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("Qrw{AZta$3:C{Yn,");
      Node node1 = new Node(2758, node0, node0, node0, node0);
      node1.setCharno(52);
      node1.mayMutateGlobalStateOrThrow();
      node0.getSourceFileName();
      node1.hasChild(node0);
      Node node2 = null;
      try {
        node2 = new Node((-2354), node0, 16, 7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte) (-28);
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.isDec();
      node0.mayMutateArguments();
      node0.setIsSyntheticBlock(true);
      node0.isDelProp();
      node0.isDebugger();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.getLength();
      node0.isIf();
      node0.isParamList();
      node0.isInc();
      node0.isVar();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("syAFAst:BR");
      node0.setSourceFileForTesting("5/o3D.VC");
      Node node1 = Node.newString("5/o3D.VC");
      node1.isCase();
      node0.removeProp(56);
      node0.isOnlyModifiesArgumentsCall();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node2 = new Node(49, node1);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((-3412.7));
      node0.setSourceEncodedPositionForTree(49);
      node0.isEquivalentTo(node1, true, true, true);
      node0.addChildToFront(node1);
      Node node2 = new Node(38, node0, node0, node0, 40, 34);
      node2.getSourceFileName();
      // Undeclared exception!
      try { 
        node2.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 40 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber(2575.867, 3000, 3000);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(42, node0, node0, node0, 57, 48);
      node1.isEquivalentToTyped(node0);
      node1.isEquivalentToTyped(node1);
      node0.isDebugger();
      node1.removeChild(node0);
      node0.isThis();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.getJSDocInfo();
      Node node2 = new Node((-418), node0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      node0.isCase();
      Node node1 = new Node(50, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(4, 30, (-28));
      node2.copyInformationFrom(node0);
      node1.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType(") ");
      ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      Node node0 = Node.newString("Not declared as a constructor", 1, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.mayMutateArguments();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(29, nodeArray0, 21, 2);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) templateType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.checkTreeEquals(node2);
      Node.newString(955, "jA.r:j=U@e>~qJ&}-I");
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(86);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node2 = new Node(16, node0, node0, node1, 43, 904);
      node2.getInputId();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      node1.removeProp(105);
      node0.getLength();
      node0.isIf();
      node1.isInc();
      node1.isVar();
      Node.newString("D#j;{ v[5tmoDHJsOx4", 4095, 50);
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isInstanceOf();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      Node.newNumber((-722.4229524616636));
      Node node3 = new Node(640, node0);
      Node node4 = Node.newString(11, "com.google.common.collect.AbstractMapBasedMultimap$AsMap", 42, 57);
      node3.copyInformationFrom(node4);
      Node node5 = new Node(100, node2, node3, node2);
      // Undeclared exception!
      try { 
        node5.addChildToBack(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node((-3083));
      node0.setWasEmptyNode(false);
      Node node1 = new Node(480, node0, node0, node0, 480, 35);
      node0.getDirectives();
      node1.isEquivalentToTyped(node0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(1013, node1, 52, 126);
      node2.isExprResult();
      node0.isAssignAdd();
      node1.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node1.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 480
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getQualifiedName();
      node0.getSourcePosition();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      int int0 = 64;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = new Node(1490, node0, node1, node1, node1, 64, 116);
      Node.newString("LZ|yG?eEe|l}$w4", (-598), 2485);
      node1.putIntProp(50, 268);
      node0.isEquivalentTo(node2, false, false, false);
      node0.useSourceInfoIfMissingFrom(node2);
      Node node3 = null;
      try {
        node3 = new Node(32, node0, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(3075.7631400906166, 446, 132);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(306654252, node0, node1, 437, 56);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isTypeOf();
      Node node3 = node0.srcref(node1);
      node0.isVarArgs();
      node2.isTry();
      Node.newNumber(3110.392632);
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(52, "t");
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(47, 113, 30);
      node0.detachChildren();
      node0.isEquivalentTo(node1, false, false, false);
      node0.addChildToFront(node1);
      node1.isName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("Xm4\"zojHvYp~u4Z9&p", 54, (-69));
      node0.setInputId((InputId) null);
      node0.getAncestors();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      Node node1 = new Node(41, 12, 2136);
      node0.isDefaultCase();
      Node node2 = Node.newString(15, "! gZ");
      node1.isIn();
      node2.wasEmptyNode();
      node0.putBooleanProp(57, false);
      node1.copyInformationFromForTree(node0);
      node1.isName();
      node1.isTrue();
      node2.isComma();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      node0.isIn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter2, true);
      node1.getQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      node0.getSourceFileName();
      node1.isQualifiedName();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node((-1816));
      node0.isAnd();
      Node.mergeLineCharNo(54, 57);
      Node node1 = new Node(55, node0, node0, (-1816), 12);
      node1.isTypeOf();
      node1.isDec();
      node1.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      Node node2 = null;
      try {
        node2 = new Node(502, node0, node0, node1, 51, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s", 8, 8);
      Node node1 = new Node(41, 12, 2136);
      node0.isDefaultCase();
      Node node2 = Node.newString(15, "! gZ");
      node1.isIn();
      node2.wasEmptyNode();
      node0.putBooleanProp(57, false);
      node1.isName();
      node1.isTrue();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3000);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      ArrayDeque<TemplateType> arrayDeque0 = new ArrayDeque<TemplateType>();
      ArrayDeque<TemplateType> arrayDeque1 = arrayDeque0.clone();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayDeque1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseNoObjectType();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node((-580), node0, node1);
      Node node3 = null;
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      String string0 = "ac{uj_s";
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(35);
      node0.getBooleanProp((-823));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.cloneNode();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isWhile();
      Node node1 = new Node((-2130), node0, node0, node0, 2, (-823));
      node1.replaceChild(node0, node1);
      Node node2 = null;
      try {
        node2 = new Node(147, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(115);
      node0.setChangeTime(115);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.getSideEffectFlags();
      node0.siblings();
      Node node3 = new Node(105, node2);
      node3.useSourceInfoFrom(node2);
      node0.isOnlyModifiesThisCall();
      node0.isDo();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(754, 754, 3719);
      node0.isCase();
      Node node1 = new Node(50, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node((-19), 30, (-28));
      node2.copyInformationFrom(node0);
      node1.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.hasMoreThanOneChild();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dJyX@)|$+4XZD");
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.removeProp(111);
      node0.getLength();
      node0.isIf();
      node0.isInc();
      node0.isTry();
      node0.isCase();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("", 52, 52);
      node0.getQualifiedName();
      node0.isFor();
      Node node1 = Node.newNumber((double) 1);
      node1.isTypeOf();
      node1.getQualifiedName();
      Node node2 = new Node(114, node1, node0, node1, 0, 30);
      Node node3 = Node.newString(" is not a string node", 0, 15);
      Node node4 = Node.newString(524288, "~P=,mqzS-Tn", 32, 55);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      node3.isArrayLit();
      node3.hasOneChild();
      node1.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(118, "seWoj3vC", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node0.getBooleanProp(43);
      Node node2 = new Node(1, node0, node1, 55, 110);
      node0.isDec();
      node1.setWasEmptyNode(true);
      Node node3 = new Node((-653));
      Node node4 = Node.newNumber((double) 54, 37, 8);
      node1.checkTreeEquals(node4);
      node0.isEquivalentToShallow(node3);
      node2.isQuotedString();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(120);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 120
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(85, 27, 83);
      Node node1 = new Node(39, node0, node0, 2, 461845907);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isEquivalentTo(node2, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node3.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node((-1840));
      Node node1 = node0.clonePropsFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = Node.newString((-170), "Object#Element", 751619276, (-170));
      node1.getQualifiedName();
      node1.isGetProp();
      Node node3 = new Node((-344), node2, node2, 4095, 43);
      node0.isDec();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = new Node(689, node1);
      Node.newNumber(4095.0, 602, 0);
      node0.removeProp(2);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ERT4c8");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      Node node2 = new Node((-1489), node1);
      node2.isOnlyModifiesThisCall();
      node1.wasEmptyNode();
      node0.setLineno(4);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ERT4c8");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node0.isTypeOf();
      Node node2 = node1.srcref(node0);
      node1.isTry();
      node2.isOnlyModifiesThisCall();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // WHILE is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(52, "}v[zWf)]PK.f3d<-");
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isIn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node((-2888), node0, node0, node0, 4, 1388);
      Node node2 = node0.detachFromParent();
      Node.extractLineno(133);
      node2.isObjectLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ERT4c8");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isUnscopedQualifiedName();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeEquals(node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString(" : ");
      Node node1 = Node.newString(" : ", 15, 55);
      node0.isIn();
      node0.addChildToFront(node1);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getProp(102);
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3000);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.getInputId();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags1.setReturnsTainted();
      node0.isDec();
      node0.isDelProp();
      Node node1 = new Node(46);
      node0.isNew();
      node0.isThis();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber(3066.54305449519);
      node0.setSourceEncodedPosition(39);
      String string0 = "*";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*");
      Node node1 = new Node(1634, node0, 1634, (-978));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.srcref(node0);
      node2.addSuppression("*");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(16);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 16
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      int int0 = 103;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      String string0 = "`";
      Node.newString("`");
      Node node0 = Node.newString(57, "JUSB");
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.hasMoreThanOneChild();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dJyX@)|$+4XZD");
      InputId inputId0 = new InputId("dJyX@)|$+4XZD");
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.removeProp(111);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem", (-978), 36);
      node0.copyInformationFrom(node1);
      node0.getLength();
      node0.isIf();
      node0.isInc();
      node0.isTry();
      node0.isCase();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ERT4c8");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      node0.isOnlyModifiesThisCall();
      node0.isFalse();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = new Node(39, node0, node0, 2, 461845907);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isEquivalentTo(node2, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node_NodeMismatch0.equals("Object#Element");
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.getQualifiedName();
      node0.isRegExp();
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(0);
      node1.srcref(node0);
      node1.isReturn();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H0efMY(;MX");
      Node node0 = Node.newString(">igg7<>y$3hx?7k]q0s");
      node0.setQuotedString();
      node0.isQuotedString();
      Node node1 = new Node(32, node0, 8232, 44);
      Node.newString("lc>G$LZg_", 37, 3000);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.hasMoreThanOneChild();
      node0.mayMutateArguments();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}s%Tm&Kr!waY!");
      node0.isBlock();
      node0.isRegExp();
      node0.isEmpty();
      Node node1 = Node.newString("}s%Tm&Kr!waY!", 122, 56);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = new Node(37, node0, node2, 8232, 5184);
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("", 52, 52);
      node0.getQualifiedName();
      node0.isFor();
      Node node1 = Node.newNumber((double) 1);
      node1.isTypeOf();
      node1.getQualifiedName();
      Node node2 = new Node(30, node1, node0, node1, 0, 30);
      node2.getSideEffectFlags();
      node2.copyInformationFrom(node0);
      node1.siblings();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("Named type with empty name component", 152, 152);
      node0.isQuotedString();
      Node node1 = new Node(152, node0, node0);
      Node node2 = Node.newNumber((double) 57);
      node2.toString();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node3.getInputId();
      node1.useSourceInfoFrom(node2);
      node0.isNE();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = Node.newNumber(0.0, 57, (-81));
      node1.getJSDocInfo();
      Node node2 = new Node(42);
      Node node3 = new Node(0, node2, node0, node2, node1);
      node2.isArrayLit();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setReturnsTainted();
      Node.newNumber((double) 2);
      node4.isFunction();
      node3.isEquivalentTo(node1);
      node3.putBooleanProp(38, true);
      // Undeclared exception!
      try { 
        node3.addChildrenToBack(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node((-1622));
      Node node1 = new Node((-150), node0, node0);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isTypeOf();
      node0.hasMoreThanOneChild();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isDebugger();
      Node node1 = Node.newString(53, "Object#Element");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dJyX@)|$+4XZD");
      InputId inputId0 = new InputId("dJyX@)|$+4XZD");
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.removeProp(111);
      node0.getLength();
      node0.isIf();
      node0.isInc();
      node0.isTry();
      node0.isCase();
      node0.isGetProp();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.getProp(48);
      node2.getSideEffectFlags();
      node2.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(31, node1);
      node2.isLocalResultCall();
      node1.getQualifiedName();
      node3.isObjectLit();
      node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newString("99Gd35Iim_7)");
      node0.toString(false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.setQuotedString();
      node0.getSideEffectFlags();
      node0.getIntProp(763);
      node0.siblings();
      node0.removeProp((-3088));
      Node.mergeLineCharNo(101, 1117);
      node0.isAssign();
      node0.isBlock();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(19, node0);
      node0.srcrefTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.setDeprecationReason("99Gd35Iim_7)");
      node0.isNoSideEffectsCall();
      node2.addSuppression("o]Bk=A..CK!cS");
      node2.isNew();
      node0.checkTreeEqualsImpl(node2);
      node1.isFromExterns();
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isLocalResultCall();
      node0.getAncestors();
      Node node1 = new Node(102, node0, node0, node0);
      Node node2 = Node.newString("Bo\"yz[W(H:cYRF)k[");
      node2.isScript();
      node0.isSwitch();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.setOptionalArg(false);
      node3.removeChildAfter(node0);
      Node node4 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      node0.isSetterDef();
      Node node1 = new Node(4891, node0);
      node1.useSourceInfoFromForTree(node0);
      node0.setLength(38);
      node0.setChangeTime(146);
      Node node2 = new Node((-880), node1);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -880
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(52, "}v[zWf)]PK.f3d<-");
      Node node1 = new Node(40);
      Node node2 = new Node((-2471), node0, node1, node1, node0);
      node0.isArrayLit();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setReturnsTainted();
      Node.newNumber((double) 38);
      node0.isFunction();
      node3.isEquivalentTo(node0);
      node3.putBooleanProp(2330, true);
      node3.addChildrenToBack(node2);
      Node node4 = new Node(39, (-3642), 0);
      node4.isLabelName();
      node3.getAncestor(4095);
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node((-1816));
      node0.isTypeOf();
      Node.mergeLineCharNo(54, 57);
      Node node1 = new Node(55, node0, node0, (-1816), 12);
      node1.isTypeOf();
      node1.isDec();
      node0.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = new Node(16, node1, node1);
      node0.isUnscopedQualifiedName();
      node0.clonePropsFrom(node1);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node3 = Node.newNumber((-1.0));
      Node node4 = Node.newString(8, "reflected_object", 37, 8);
      node4.setLineno(12);
      node3.setCharno((-1308));
      node2.isNew();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(40);
      Node node1 = Node.newString("{>");
      Node node2 = node0.clonePropsFrom(node1);
      node1.isEquivalentTo(node2, true, false, false);
      Node node3 = new Node((-51), node1, (-1416), 38);
      node3.addChildToFront(node0);
      Node node4 = Node.newNumber(3073.0924);
      node4.isName();
      node4.isLabel();
      node4.getStaticSourceFile();
      node3.isSetterDef();
      node3.isNumber();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node1.isTypeOf();
      node0.isInstanceOf();
      node0.isString();
      node1.wasEmptyNode();
      Node node2 = Node.newNumber((double) 32);
      Node node3 = node2.useSourceInfoFrom(node0);
      Node node4 = new Node(32, 57, 56);
      node4.useSourceInfoFrom(node3);
      Node node5 = Node.newString(57, "m,N*L}PG<}m1dy", 40, 57);
      node5.checkTreeEqualsImpl(node1);
      Node node6 = new Node((-2098), node0, node0, node1);
      node2.isParamList();
      node2.isTry();
      node0.isCase();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isRegExp();
      node0.isEmpty();
      node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, 42, 4);
      node1.getQualifiedName();
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.getSideEffectFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node0.siblings();
      Node node3 = new Node(105, node2);
      node0.isOnlyModifiesThisCall();
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)100;
      byteArray0[1] = (byte)124;
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      simpleErrorReporter1.error("com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", 50, (-2354));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node((byte)100, 2, (-1336));
      node2.isFunction();
      node1.isEquivalentTo(node0);
      node0.isDec();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      Node node2 = new Node(50, 15, 2);
      node1.isUnscopedQualifiedName();
      Node node3 = node0.copyInformationFrom(node1);
      node3.checkTreeEquals(node1);
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(1, nodeArray0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setReturnsTainted();
      node0.toString();
      node3.isFunction();
      node0.isEquivalentTo(node1);
      node3.checkTreeEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node4 = Node.newNumber(272.8982008747541);
      Node.newString("&GR u b", 408, 2744);
      node2.addChildAfter(node4, node0);
      node2.isCast();
      node4.getSourceOffset();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      Node node1 = new Node(2, node0, node0, node0);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isInstanceOf();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      Node.newNumber((-722.4229524616636));
      Node node3 = new Node(640, node0);
      Node.newString(11, "com.google.common.collect.AbstractMapBasedMultimap$AsMap", 42, 57);
      Node node4 = new Node(100, node2, node3, node2);
      Node.newString("Bo\"yz[W(H:cYRF)k[");
      node1.isScript();
      node4.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "", 56, 52);
      node0.getQualifiedName();
      node0.setSourceFileForTesting((String) null);
      Node node2 = new Node(43, node1);
      node1.isSyntheticBlock();
      node2.isDebugger();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.copyInformationFromForTree(node1);
      node0.setQuotedString();
      node2.isSyntheticBlock();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      Node node1 = Node.newString(118, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.isCatch();
      Node node2 = new Node(118, node1);
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.getQualifiedName();
      Node.newNumber((double) 30);
      Node.newString(47, "", 2, 1497);
      node2.copyInformationFromForTree(node1);
      node1.setQuotedString();
      node0.isSyntheticBlock();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newString("collection too large");
      node0.getQualifiedName();
      node0.isBlock();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(55, node0, node0, node0);
      Node node2 = Node.newString(1, "collection too large");
      node0.siblings();
      Node node3 = new Node(105, node2);
      Node node4 = node3.cloneTree();
      node4.setLength(2);
      node3.isVoid();
      node1.getBooleanProp(46);
      node3.isInc();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      Node node2 = new Node(43, node1);
      node1.isSyntheticBlock();
      node2.isDebugger();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.addSuppression((String) null);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isLabelName();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719);
      Node node1 = new Node(122, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(87);
      node2.setChangeTime(2);
      Node node3 = null;
      try {
        node3 = new Node(2096, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isVarArgs();
      node0.isEmpty();
      Node node1 = Node.newString((-1263), "?");
      node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node((-911), node0, node1, 16, 31);
      Node node3 = Node.newString(46, ",%+W/dU");
      node2.getSideEffectFlags();
      node3.siblings();
      Node node4 = null;
      try {
        node4 = new Node(4095, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString("qsbEHiK'qz=%aXo");
      node0.getQualifiedName();
      node0.isString();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(55, node0, node0, node0);
      Node node2 = Node.newString(1, ",%+W/dU");
      node0.siblings();
      Node node3 = new Node(105, node2);
      node1.getBooleanProp(46);
      Node node4 = new Node(43);
      node4.isFalse();
      Node node5 = new Node(57, 56, 2881);
      node5.isScript();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      Node node1 = node0.getLastSibling();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(52, "}v[zWf)]PK.f3d<-");
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isDebugger();
      node0.isThis();
      node0.isDelProp();
      Node node1 = new Node(93);
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("0)dlu4d*", 111, 111);
      Node node1 = new Node(37, 4, 50);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isEquivalentToTyped(node1);
      Node node2 = node1.copyInformationFrom(node0);
      node0.checkTreeEquals(node2);
      // Undeclared exception!
      try { 
        Node.newString(111, (String) null, 30, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3719, 3719, 3719);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Node node0 = new Node((-1028));
      Node node1 = new Node(43, node0, node0, node0, node0);
      node1.isLocalResultCall();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.setOptionalArg(true);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-51), (-51));
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isArrayLit();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.useSourceInfoFromForTree(node2);
      Node node4 = Node.newNumber(0.0);
      node3.isFunction();
      node0.isEquivalentTo(node4);
      node0.putBooleanProp((-3169), true);
      node0.addChildrenToBack(node3);
      node0.isWhile();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(12);
      Node node2 = new Node(39, node1, node0, node1, node1);
      node2.isLocalResultCall();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node0.toString();
      node3.isFunction();
      node0.isEquivalentTo(node1);
      node3.checkTreeEqualsImpl(node1);
      Node node4 = Node.newNumber(272.8982008747541);
      node4.toString();
      node4.isFunction();
      node3.isEquivalentTo(node0);
      node1.isVoid();
      node2.siblings();
      node1.isAdd();
      node3.isGetProp();
      node0.isAnd();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString("Qrw{AZta$3:C{Yn");
      Node node1 = new Node(38, 4095, 51);
      node1.isString();
      node1.isName();
      node1.isTrue();
      node0.getQualifiedName();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      Node node0 = new Node(111);
      node0.isTypeOf();
      Node node1 = new Node(4095, node0, node0, node0);
      node1.isDec();
      node1.getStaticSourceFile();
      node0.mayMutateArguments();
      node0.isDelProp();
      node0.isTypeOf();
      node0.isEquivalentTo(node1);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node0.getQualifiedName();
      node1.isBlock();
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      node0.getQualifiedName();
      node1.isFor();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node1.isName();
      node0.isTrue();
      node0.getQualifiedName();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "", 56, 52);
      node0.getQualifiedName();
      node0.setSourceFileForTesting((String) null);
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node(1);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)100;
      byteArray0[1] = (byte)124;
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      simpleErrorReporter1.error("com.google.common.io.PatternFilenameFilter", "com.google.common.io.PatternFilenameFilter", 39, 1);
      simpleErrorReporter1.error("com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", 50, (-2341));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Node node2 = new Node((byte)100, 2, (-1336));
      node2.isFunction();
      node1.isEquivalentTo(node0);
      node0.isDec();
      node2.isStringKey();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber((-3063.2387372), 132, 31);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 12);
      Node node3 = new Node(133, node1, node2, 2114, 40);
      Node node4 = new Node(48, node3, 54, 1);
      node2.isNE();
      Node node5 = new Node(2, 1, 12);
      node5.getAncestor(0);
      Node node6 = Node.newString(16, "V:Z#K/OL6p=", 51, 43);
      node6.isDebugger();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newString(31, "E", 31, 1234);
      node0.isVarArgs();
      node0.getIntProp(2048);
      node0.children();
      node0.isQualifiedName();
      node0.removeProp(31);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(31, node0, node0, 29, 46);
      Node node2 = new Node(37, node1, node1);
      Node node3 = new Node(48, node2, node2);
      node0.isCast();
      node0.checkTreeEquals(node1);
      node2.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(52);
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(47, 113, 30);
      node0.detachChildren();
      node0.isEquivalentTo(node1, false, true, true);
      node0.addChildToFront(node1);
      node1.isName();
      node0.isInstanceOf();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) 1);
      ImmutableList.of();
      ArrayDeque<Node> arrayDeque0 = new ArrayDeque<Node>();
      Node node1 = Node.newString("s9Y", 87, 16);
      Node node2 = new Node(0, node0, node1, node1, 1786, 42);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(5650.197871647);
      Node node1 = new Node(1476, 103, 4095);
      Node node2 = new Node(114, node0, node0, node1, node0, (-341), 15);
      Node node3 = new Node((-392), node2);
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = new Node(8, node0);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.setSourceFileForTesting((String) null);
      node0.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3711, 3711, 3711);
      Node node1 = new Node(147, node0);
      node1.copyInformationFromForTree(node0);
      node1.isEquivalentToTyped(node0);
      node1.isCast();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(52, "}v[zWf)]PK.f3d<-");
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.isIn();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(64, node0, node0);
      node1.isObjectLit();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = new Node(39, node0, node0, 2, 461845907);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node(8, 36, 126);
      Node node4 = new Node(78, node3, 33, 55);
      node1.copyInformationFromForTree(node4);
      node0.isEquivalentTo(node2, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = new Node(36, node0, node0, node0, node0, 30, 57);
      node0.isQuotedString();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = null;
      try {
        node3 = new Node(683, node2, node2, 1, 6302);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node1.setLength((-1));
      node0.addChildToFront(node1);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAnd();
      Node node2 = node1.srcref(node0);
      node1.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(0.0, 1613, 1613);
      node0.getJSDocInfo();
      Node node1 = new Node(1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node3 = new Node(56, node2, node1, node2, node2);
      node0.isLocalResultCall();
      node2.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(155);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToFront(node0);
      node0.isName();
      node0.isLabel();
      node0.isNumber();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3711, 3711, 3711);
      Node node1 = new Node(147, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(477, nodeArray0, 8, 96);
      Node node3 = new Node(4);
      node3.useSourceInfoFromForTree(node2);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.isWith();
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      Node node1 = new Node(37);
      node1.isGetElem();
      node1.copyInformationFromForTree(node0);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString((-3507), "", 133, 1244);
      Node node1 = new Node(33, node0);
      node1.getQualifiedName();
      node1.isTypeOf();
      node1.setSourceFileForTesting((String) null);
      Node node2 = new Node(1622, node1);
      node1.isEquivalentToTyped(node0);
      node1.isEquivalentToTyped(node0);
      node1.isThis();
      node2.isDelProp();
      node2.isReturn();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString(30, "DExel~!&Or}77K", 3001, 3001);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3001);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isCatch();
      node0.isNot();
      node0.isEquivalentToTyped(node0);
      node0.isWhile();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newNumber(0.12065049942069661, 38, 38);
      Node node1 = new Node(49, node0, node0, (-1641), 44);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = Node.newNumber((-1.0));
      node3.isEquivalentTo(node2, false, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.AncestorIterable node_AncestorIterable0 = node3.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node1);
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4dw*", 3000, 3000);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3000);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node0.setSideEffectFlags(57);
      node1.getChangeTime();
      Node node2 = new Node(51);
      node0.isEquivalentToTyped(node2);
      node2.isDebugger();
      Object object0 = new Object();
      node1.getFirstChild();
      node0.getBooleanProp(2);
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "is_constant_name");
      Node node0 = new Node(55, 55, 38);
      Node node1 = new Node(4204, node0, node0, node0);
      node1.getSourceFileName();
      node1.isLabel();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node(130);
      node0.toStringTree();
      Node node1 = Node.newNumber((double) 1, 1729, 36);
      node0.getProp(1074);
      node1.isContinue();
      Node node2 = new Node(31, node0, node0);
      node2.isUnscopedQualifiedName();
      node2.getBooleanProp(4095);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node0.cloneTree();
      Node node3 = new Node(56);
      node3.getLength();
      Node node4 = null;
      try {
        node4 = new Node(2, node2, node2, node0, 50, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isEmpty();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString(1, ",%+\"/dU");
      node0.getSideEffectFlags();
      node0.siblings();
      node0.isDelProp();
      node1.isReturn();
      Node node3 = new Node(54, node1, node2, node2, 113, 814);
      node3.isName();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(110);
      node0.isArrayLit();
      Node node1 = new Node(39, node0, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.newNumber((double) 56);
      node1.isFunction();
      node1.isNot();
      node0.putBooleanProp(44, true);
      Node node2 = null;
      try {
        node2 = new Node(105, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newNumber(0.12065049942069661, 41, 41);
      Node node1 = new Node(35, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(2);
      node1.setChangeTime(40);
      Node node3 = new Node(52, node2);
      node1.checkTreeEquals(node3);
      Object object0 = new Object();
      node2.isCast();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("ac{uj_s");
      Node node1 = new Node(40, node0, node0, 1, 461844480);
      Node node2 = node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newNumber(30.0, (-1966), 105);
      node0.getJSDocInfo();
      Node node1 = new Node(31);
      Node node2 = new Node(22, node0, node1, node0, node1);
      Node node3 = new Node(92, 52, 55);
      node3.isLocalResultCall();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node5 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node5.toString();
      node4.isFunction();
      node5.isEquivalentTo(node4);
      node1.checkTreeEqualsImpl(node0);
      Node.newNumber((-1.0));
      node2.toString();
      node3.isFunction();
      node0.isEquivalentTo(node5);
      node4.isVoid();
      node3.siblings();
      node1.isAdd();
      node4.isGetProp();
      node0.isAnd();
      node1.useSourceInfoIfMissingFrom(node5);
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3730, 779, 83);
      node0.setSourceFileForTesting("9");
      node0.isCase();
      Node node1 = new Node(57, node0, 47, 1);
      node0.isLabel();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(57, node1, node1, 2, 2306);
      node2.isNull();
      node0.isString();
      Node node3 = new Node(42);
      node0.isGetElem();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = new Node(30);
      node0.putIntProp(39, 1);
      Node node1 = new Node(1192, node0, node0, node0, 52, 57);
      node0.wasEmptyNode();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      nodeArray0[5] = node1;
      Node node2 = null;
      try {
        node2 = new Node(39, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = node0.clonePropsFrom(node0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)42;
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", 50, (-2330));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isOr();
      Node node2 = new Node(48, node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch");
      node1.isBreak();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = Node.newString(4095, "slash_v", 1100, (-19));
      node1.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      Node node2 = new Node(1100);
      node0.useSourceInfoIfMissingFrom(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node(130);
      node0.toStringTree();
      Node node1 = Node.newNumber((double) 1, 1729, 36);
      node0.getProp(1074);
      node1.isContinue();
      Node node2 = new Node(31, node0, node0);
      node2.isUnscopedQualifiedName();
      node2.getBooleanProp(4095);
      node2.isThis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isDelProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("EXPR_RESULT\n", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.isInstanceOf();
      Node node2 = new Node(43, node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newNumber((-722.4229524616636));
      node3.getJsDocBuilderForNode();
      Node node4 = Node.newString(11, "com.google.common.collect.AbstractMapBasedMultimap$AsMap", 42, 57);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isAdd();
      node4.isGetProp();
      node1.isAnd();
      node2.useSourceInfoIfMissingFrom(node4);
      Node node5 = new Node(15, (-2087831322), (-390));
      node5.isLabel();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      Node node1 = new Node(52, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isEquivalentTo(node2, true, true, false);
      node1.getSideEffectFlags();
      node0.siblings();
      Node node3 = new Node(12, node1);
      node1.isOnlyModifiesThisCall();
      node0.getIntProp(36);
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EQ is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) 52, 52, (-463));
      node0.isCase();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newNumber((-3063.2387372), 132, 31);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 12);
      Node node3 = new Node(133, node1, node2, 2114, 40);
      Node node4 = new Node(48, node3, 54, 1);
      node2.isNE();
      Node node5 = new Node(2, 1, 12);
      Node node6 = node5.getAncestor(0);
      node6.getSourceOffset();
      Node node7 = Node.newString(16, "V:Z#K/OL6p=", 51, 43);
      node7.isDebugger();
      node3.isCall();
      node4.copyInformationFrom(node3);
      node3.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(3719);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-210));
      Node node2 = new Node(2710, 0, 4808);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-1307), "daS2Q^'vK^G[)g>i");
      Node node1 = new Node((-1307), node0, 9, 1);
      Node node2 = node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(1, node0, node0, 0, 47);
      Node node2 = Node.newString(148, "slash_v", (-1833), 132);
      node1.addChildrenAfter(node2, node0);
      Node node3 = null;
      try {
        node3 = new Node(15, node2, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = node0.clonePropsFrom(node0);
      node1.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node0.getQualifiedName();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newNumber((-2667.99), (-1897), 44);
      Node node1 = new Node((-1897), node0, node0, 4095, 30);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)116;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node((-1457), node1, 670, 50);
      Node node3 = node2.cloneNode();
      Node node4 = node2.srcrefTree(node0);
      node0.isEquivalentTo(node3, false, false, false);
      node3.isOptionalArg();
      node4.isEquivalentToTyped(node1);
      node1.isComma();
      node0.getBooleanProp(4095);
      node4.isEquivalentTo(node0);
      node2.getLastSibling();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      node0.addChildrenToBack(node1);
      node0.isWhile();
      node1.setLineno(42);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString(62, "0)dlu4d*", 3000, 3000);
      Node node1 = Node.newNumber((double) 38);
      Node node2 = new Node(42, node0, node0, node1, 4, 2);
      node1.removeProp(2103);
      node2.checkTreeEqualsImpl(node1);
      node2.isQualifiedName();
      node2.isName();
      node1.putIntProp(2407, 1);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString(30, "0)dlu4d*", 3000, 3000);
      Node node1 = new Node(49, node0, node0, node0, 57, 161);
      node0.getSideEffectFlags();
      node1.siblings();
      node1.isWhile();
      Node node2 = node1.getLastSibling();
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      node0.isLocalResultCall();
      Node node1 = Node.newString("is_constant_name", 40, 2850);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.toString();
      node1.getIntProp(57);
      node0.isFunction();
      node0.isEquivalentTo(node1);
      node1.checkTreeEqualsImpl(node0);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = new Node(4095, node1, node3, 1610612736, 47);
      // Undeclared exception!
      try { 
        node4.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.getProp(48);
      node1.getSideEffectFlags();
      node1.copyInformationFrom(node0);
      Node node2 = new Node(31, node1);
      node0.isLocalResultCall();
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(27, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(2);
      node1.setChangeTime(40);
      node1.checkTreeEquals(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Object object0 = new Object();
      node0.checkTreeEquals(node1);
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      String string0 = "null";
      Node node0 = Node.newString(41, "null", 41, 44);
      Node node1 = new Node(55, node0, node0);
      node1.isWith();
      node1.isEmpty();
      node1.isLabel();
      node0.isNull();
      int int0 = Node.DIRECT_EVAL;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("null", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(196656, node0);
      node1.removeChildren();
      node0.copyInformationFromForTree(node1);
      node0.isLocalResultCall();
      node0.getAncestors();
      node0.setLineno(130);
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newNumber(118.0);
      Node node1 = new Node(37, node0, node0, node0, 15, 122);
      node1.setSideEffectFlags(8);
      node1.isDefaultCase();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString((-525), "'9UL+~xi", (-653), (-653));
      node0.isNew();
      Node node1 = new Node(47);
      node1.isRegExp();
      Node node2 = Node.newNumber((-379.03));
      node2.isContinue();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node0.addChildToFront(node1);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAnd();
      node1.putIntProp(57, 39);
      node1.getLength();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR [reflected_object: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      ImmutableList.builder();
      jSTypeRegistry0.isForwardDeclaredType("");
      jSTypeRegistry0.getObjectElementKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.putIntProp(1, 0);
      Node node1 = new Node(113, node0, node0, (-619), 132);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      node0.addChildrenToBack(node1);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString(31, "E", 31, 1234);
      node0.isVarArgs();
      node0.getIntProp(40);
      Node node1 = new Node(1729, node0, node0);
      node0.addChildrenAfter(node1, (Node) null);
      node0.children();
      node0.isQualifiedName();
      node0.isDebugger();
      node0.isCall();
      node0.isLabel();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node(115);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isLabelName();
      node0.isComma();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node((-2938), 1986, 96);
      node0.getJSDocInfo();
      Node node1 = new Node(32);
      Node node2 = new Node(54, node1, node1, node0, node1);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = null;
      try {
        node3 = new Node(8, node0, node0, node2, node2, (-3792), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(0.0, 48, 48);
      node0.getJSDocInfo();
      Node node1 = new Node(15);
      Node node2 = new Node((-569), node0, node0, node0, node1);
      node0.isLocalResultCall();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node3.toString();
      node3.isFunction();
      node0.isEquivalentTo(node1);
      node3.checkTreeEqualsImpl(node0);
      Node node4 = Node.newNumber((double) 57);
      node0.toString();
      node3.isReturn();
      node4.isOr();
      Node node5 = new Node(50, node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder2 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder2.append("d");
      node3.isBreak();
      node2.isWhile();
      node2.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(40, ".G");
      node0.setChangeTime(40);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(40, node0, node0, node0, node0, 3592, 62);
      node1.wasEmptyNode();
      node1.getSourcePosition();
      node0.isFunction();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = node0.clonePropsFrom(node0);
      node1.srcrefTree(node0);
      node0.addChildToFront(node1);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAnd();
      node0.getIntProp(50);
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node(155);
      node0.clonePropsFrom(node0);
      Node node1 = new Node(39, node0, node0);
      node1.getStaticSourceFile();
      node1.isEquivalentTo(node0, true, false, false);
      node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString(62, "0)dlu4d*", 3000, 3000);
      Node node1 = Node.newString(55, "0)dlu4d*", 2, 4095);
      Node node2 = new Node((-662), node1);
      node2.isNoSideEffectsCall();
      node0.getString();
      node2.addChildBefore(node0, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isAnd();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isArrayLit();
      node1.isString();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = null;
      try {
        node3 = new Node(4095, node1, 2, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(346, 346, 346);
      node0.getJSDocInfo();
      Node node1 = new Node(42, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(4095);
      node1.setChangeTime(53);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 346
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(0, node0, node0, node0, 30, 1);
      Node node2 = Node.newString(148, "slash_v", (-1833), 145);
      node1.addChildrenAfter(node2, node0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(118, 118, (-650));
      Node node1 = new Node(1048576, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.setLength(39);
      node0.setChangeTime(27);
      node2.checkTreeEquals(node0);
      Object object0 = new Object();
      Node node3 = null;
      try {
        node3 = new Node(101, node1, node1, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isLocalResultCall();
      node0.getAncestors();
      try { 
        node0.setDouble(49);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EXPR_RESULT 130 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(155);
      node0.clonePropsFrom(node0);
      Node node1 = new Node(39, node0);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isVarArgs();
      node0.isBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isArrayLit();
      Node node1 = Node.newString(89, "?ZG`Wh4H!h!{9Tq", 1, 216);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(62, node0, 51, 83);
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 62
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(40, node0, node0, 31, 46);
      node1.useSourceInfoFromForTree(node0);
      node1.setLength(2);
      node1.setChangeTime(40);
      node1.checkTreeEquals(node0);
      node1.isStringKey();
      node0.isParamList();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 3719, 3719);
      Node node1 = Node.newNumber((double) 4, 98, 55);
      node0.getProp(52);
      node0.isContinue();
      node0.getLength();
      node0.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      node1.isEmpty();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node node2 = new Node(30);
      Node node3 = new Node(38, node2, node1, node1, 8388608, (-2063));
      node3.isCall();
      node3.removeChild(node2);
      node3.isOnlyModifiesArgumentsCall();
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(40, node0, node0, 31, 46);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(2);
      node1.setChangeTime(40);
      node2.isNE();
      Node node3 = node2.removeChildren();
      node2.getAncestor(49);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3711);
      Node node1 = new Node(108, node0);
      node1.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAnd();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      node0.getQualifiedName();
      node0.setSourceFileForTesting((String) null);
      Node node1 = new Node(43, node0);
      node1.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node0);
      node0.getSourceOffset();
      node1.isThis();
      node0.isDelProp();
      node0.isReturn();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch", (String) null, 48, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(98, node0);
      node1.setLineno(2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node0.isBreak();
      node0.wasEmptyNode();
      Node node2 = new Node(102);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      int int0 = 27;
      int int1 = 34;
      int int2 = (-1158);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 108, (-1158), 27);
      Node node1 = new Node(108, node0, 108, (-1497600945));
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(27, node1, node0, node0, node1, (-2444), 1534);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      Node node0 = Node.newString("Object#Key");
      node0.setIsSyntheticBlock(true);
      node0.isLabelName();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Object#Key [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000336] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 3719, 3719);
      Node node1 = Node.newNumber((double) 4, 98, 55);
      node0.getProp(52);
      node0.isContinue();
      node0.getLength();
      node0.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      node0.getBooleanProp(4);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node node2 = new Node(30);
      Node node3 = new Node(38, node2, node1, node1, 8388608, (-2063));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.isCall();
      node3.isOnlyModifiesArgumentsCall();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.collect.EmptyImmutableBiMap");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1161.718662);
      node0.getDirectives();
      Node node1 = new Node((-429), node0, node0, 26, 155);
      node1.isOnlyModifiesThisCall();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.useSourceInfoFromForTree(node2);
      node1.checkTreeEquals(node2);
      node1.getType();
      node1.mayMutateArguments();
      node0.isIf();
      node2.isIn();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3711);
      Node node1 = new Node(147, node0);
      node1.srcrefTree(node0);
      node1.isSetterDef();
      node0.isNumber();
      node0.hasOneChild();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.isWith();
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      node0.putBooleanProp(3719, true);
      Node node1 = new Node(37);
      node1.isGetElem();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isFunction();
      node2.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(124);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(3711, nodeArray0, 32, 51);
      node0.clonePropsFrom(node1);
      Node.newNumber((-2414.3));
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.getProp(48);
      node0.getSideEffectFlags();
      node0.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(31, node1);
      node1.getQualifiedName();
      node2.isObjectLit();
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString((-3507), "{", 133, 1244);
      Node node1 = new Node(33, node0);
      node1.getQualifiedName();
      node1.clonePropsFrom(node0);
      node1.isFromExterns();
      node1.isLabelName();
      node0.setString("%^iG)");
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.isWith();
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      node0.putBooleanProp(3719, true);
      Node node1 = new Node(37);
      node1.isGetElem();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isFunction();
      node2.cloneTree();
      node2.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = new Node(43, node0);
      node1.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node0);
      node0.getSourceOffset();
      node0.removeFirstChild();
      node1.isThis();
      node0.isDelProp();
      Node node2 = Node.newNumber((double) 48, (-676), 47);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString("collection too large");
      node0.getQualifiedName();
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(1, ",%+W/dU");
      node0.siblings();
      Node node2 = new Node(105, node1);
      node2.srcrefTree(node1);
      Node node3 = Node.newString("collection too large");
      node2.isEquivalentToTyped(node3);
      node0.isDebugger();
      // Undeclared exception!
      try { 
        node1.setDouble(38.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = Node.newString(133, "P,a~`C?#;XU:c_JG!", 56, 52);
      node0.getQualifiedName();
      node1.isTypeOf();
      node0.isInstanceOf();
      Node node2 = new Node(51, node1);
      node2.isEquivalentToTyped(node1);
      Node.newNumber((double) 57);
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString(3000, "0)dlu4d*", 3000, 3000);
      Node node1 = Node.newString(55, "0)dlu4d*", 2, 4095);
      Node node2 = new Node((-662), node1);
      node2.isNoSideEffectsCall();
      node0.getString();
      node2.addChildBefore(node0, node1);
      node0.isObjectLit();
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString(103, "d~j", (-2790), (-2790));
      Node node1 = node0.getLastSibling();
      node0.checkTreeEquals(node1);
      Node.newNumber(0.22271503576304538, 4095, 52);
      Node node2 = node0.copyInformationFrom(node1);
      node2.toString();
      node1.isLabelName();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      Node node1 = new Node(105);
      node0.putIntProp(49, 112);
      node1.toStringTree();
      Node node2 = Node.newString(2984, "");
      node2.siblings();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("collection too large");
      node0.getQualifiedName();
      node0.isBlock();
      Node node1 = Node.newString(1, ",%+W/dU");
      node0.siblings();
      node1.type = 48;
      Node node2 = new Node(105, node1);
      node2.isVoid();
      node2.toString();
      node0.getBooleanProp(46);
      node2.isInc();
      node0.isDo();
      Node node3 = null;
      try {
        node3 = new Node(57, node1, node2, node2, 4, 309);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      Node node1 = Node.newString("JUSB", 1, (-1));
      node0.copyInformationFrom(node1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isLocalResultCall();
      node0.getAncestors();
      try { 
        node0.setDouble(49);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EXPR_RESULT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      node0.getQualifiedName();
      node0.setSourceFileForTesting((String) null);
      Node node1 = new Node(43, node0);
      node1.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node0);
      node0.getSourceOffset();
      node1.getBooleanProp(31);
      node0.isDelProp();
      node0.isReturn();
      node1.isIf();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString(62, "0)dlu4d*", 3000, 3000);
      Node node1 = new Node(3000, node0, node0, node0, node0);
      Node node2 = new Node(43, node1);
      node0.isQuotedString();
      node2.isNoSideEffectsCall();
      node0.getString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.removeChildren();
      node2.isTrue();
      node2.getQualifiedName();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString((-3507), "{", 133, 1244);
      Node node1 = new Node(33, node0);
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      Node node1 = new Node(40, node0, node0, 31, 46);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setLength(2);
      Node node3 = new Node(47, node1, node2);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node3.isFunction();
      node3.getBooleanProp(1775);
      Node node5 = Node.newNumber(1161.718662);
      node4.isEquivalentTo(node5);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = new Node(3733, 3733, 3733);
      Node node1 = new Node(43, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isVar();
      node2.getInputId();
      node1.isFunction();
      node2.isEquivalentTo(node1, true, false, false);
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      String string0 = "=l5Yk@7Wu(iR\\58V'";
      Node node0 = Node.newString("=l5Yk@7Wu(iR\u00058V'");
      node0.setQuotedString();
      Node node1 = new Node(38, node0);
      node0.isVoid();
      node1.toString();
      // Undeclared exception!
      try { 
        node1.setString("=l5Yk@7Wu(iR\u00058V'");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3707);
      Node node1 = new Node(108, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.cloneNode();
      Node node3 = node2.copyInformationFrom(node1);
      node1.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAnd();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(103, "d~j", (-2790), (-2790));
      Node node1 = node0.getLastSibling();
      node0.checkTreeEquals(node1);
      Node.newNumber(0.22271503576304538, 4095, 49);
      Node node2 = node0.copyInformationFrom(node1);
      node2.toString();
      node2.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newNumber((double) 30, 53, 2979);
      // Undeclared exception!
      try { 
        node3.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      node0.putBooleanProp(2, false);
      Node node1 = new Node(52, node0, 47, 1);
      node1.isGetElem();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isFunction();
      node2.isEquivalentTo(node1, false, true, true);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(155);
      node0.isEquivalentTo(node0, true, true, false);
      Node node1 = new Node(112, 153, (-3071));
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceEncodedPositionForTree(49);
      Node node1 = new Node(31);
      node1.isGetElem();
      Node node2 = new Node(42, 1, 1073741823);
      node2.copyInformationFromForTree(node0);
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node((-2408), 947, 3730);
      Node node1 = new Node(15, node0, node0, node0);
      node0.setSourceEncodedPosition(52);
      Node node2 = Node.newString(1297, "com.google.javascript.rhino.jstype.JSType$1", 48, 4095);
      node2.isNoSideEffectsCall();
      node0.addChildToFront(node1);
      Node node3 = node1.getFirstChild();
      Node node4 = node3.removeFirstChild();
      node1.isLocalResultCall();
      try { 
        node4.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 754, 113);
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = new Node(30);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString(133, "{", 133, 1244);
      Node node1 = new Node(38, node0);
      node1.putIntProp(466, 38);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 466
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3719, 3719, 3719);
      Node node1 = Node.newNumber((double) 4, 49, 55);
      node0.isContinue();
      node0.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      node0.getBooleanProp(4);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      Node node2 = new Node(38, node1, node1, node1, 0, (-2063));
      node2.useSourceInfoIfMissingFrom(node0);
      node0.isReturn();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node(3733, 3733, 3733);
      Node node1 = new Node(49, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node1.isBreak();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("0)dlu4d*");
      Node node1 = Node.newNumber(1.0);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(703);
      Node node3 = new Node(51, node1, node1, node2);
      Node.newString("com.google.javascript.rhino.jstype.NoResolvedType");
      Node node4 = node3.cloneNode();
      node4.isScript();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newNumber(602.443632896241);
      node0.getJSDocInfo();
      Node node1 = new Node(32);
      Node node2 = new Node(31, node0, node0, node1, node0);
      Node node3 = Node.newNumber(0.5, 48, (-308));
      node3.isLocalResultCall();
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isFunction();
      node4.toString();
      node2.isGetElem();
      node0.siblings();
      node2.isAdd();
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = new Node(3733, 3733, 3733);
      Node node1 = new Node((-2756));
      Node node2 = new Node(46, node1, node0, node0, node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = node3.removeChildAfter(node0);
      node4.isQualifiedName();
      // Undeclared exception!
      try { 
        node4.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("4", 52, 52);
      node0.getQualifiedName();
      Node node1 = new Node(114, node0, node0, node0, 0, 30);
      Node node2 = node1.srcrefTree(node0);
      node2.isEquivalentTo(node1);
      node1.getSideEffectFlags();
      node0.siblings();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString(133, "", 133, 133);
      node0.getQualifiedName();
      node0.setSourceFileForTesting((String) null);
      Node node1 = new Node(43, node0);
      node0.isEmpty();
      node1.clonePropsFrom(node0);
      int int0 = Node.IS_CONSTANT_NAME;
      node1.isIf();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(30);
      node0.toStringTree();
      Node node1 = Node.newString(54, "NEW\n");
      node0.isNot();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.getLastSibling();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString(118, "", 118, 118);
      node0.isWith();
      node0.isEmpty();
      node0.isLabel();
      node0.isNull();
      node0.isString();
      node0.putBooleanProp(3719, true);
      Node node1 = new Node(37);
      node1.clonePropsFrom(node0);
      node1.isGetElem();
      node1.detachChildren();
      node1.isFunction();
      node1.isEquivalentTo(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }
}
