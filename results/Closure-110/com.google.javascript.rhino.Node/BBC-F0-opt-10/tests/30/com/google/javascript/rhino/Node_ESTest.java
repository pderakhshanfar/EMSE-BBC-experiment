/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 20:30:39 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(86, 1211, 1211);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(35, 0, 35);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(35, node0);
      node0.detachFromParent();
      node0.isContinue();
      node1.isWith();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isBlock();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(153);
      Node node1 = Node.newNumber((double) 51, 54, 52);
      nodeArray0[0] = node0;
      node0.isStringKey();
      node1.isAnd();
      node0.getLastSibling();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(35);
      node0.getQualifiedName();
      Node node1 = Node.newString("US}s");
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(2568);
      Node node1 = new Node(31, node0, node0, 0, 11);
      node0.srcrefTree(node1);
      node0.isBlock();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(114);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(32, 15, 15);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newNumber((double) 1);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(37);
      node0.isEquivalentToTyped(node0);
      node0.isArrayLit();
      Node node1 = Node.newString(52, "'[k_4Qt]ecU$|]5", 301, 0);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber((double) 124);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(918);
      node1.isBreak();
      Node node2 = new Node(51, node0, node1, node1, 918, 42);
      node2.isThis();
      node0.isStringKey();
      node2.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isWith();
      Node node1 = new Node(52, node0, node0, node0, 12, 0);
      Node node2 = node1.getLastChild();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(287);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got CATCH
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(4, node0, node0, node0, node0, 57, 15);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Node node2 = node1.getAncestor(0);
      Node node3 = new Node(1083, node2, 2, 31);
      node0.getLength();
      node3.isScript();
      Node node4 = null;
      try {
        node4 = new Node(39, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(63);
      node0.isVar();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString("", 148, 108);
      Node node1 = new Node(148, node0, node0);
      node1.getAncestor(57);
      Node node2 = node1.cloneTree();
      // Undeclared exception!
      try { 
        node2.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node.mergeLineCharNo(658, 658);
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(41, (-2931), 300);
      nodeArray0[0] = node0;
      Node node1 = new Node(658, nodeArray0);
      node0.mayMutateArguments();
      node0.getChildCount();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString(115, "sB0mp_t^t", 115, 115);
      node0.isBreak();
      Node node1 = new Node(31, node0, node0, node0, 40, 43);
      node0.isWhile();
      node1.isInc();
      node1.isSetterDef();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(153);
      Node.newNumber((double) 51, 54, 52);
      nodeArray0[0] = node0;
      node0.cloneTree();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.isOnlyModifiesArgumentsCall();
      node0.isEmpty();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/1s.7j5%)a~G");
      Node node2 = Node.newNumber((double) 1, 2, 48);
      node1.isLabel();
      node0.isVarArgs();
      node1.useSourceInfoFromForTree(node0);
      node1.isWith();
      node2.isNE();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber(253.94751429146098);
      Node node1 = new Node(32);
      node1.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.useSourceInfoFrom(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isVarArgs();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 15, 0);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.removeProp(57);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(43);
      node0.isBreak();
      node0.isIf();
      node0.isSwitch();
      Node node1 = Node.newNumber(115.0, 1, 40);
      node1.type = 2297;
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString("x QesHsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "x QesHsY@I_8`M");
      node0.isContinue();
      Node node2 = new Node(52, node1, node0, 2, 40);
      node1.isCase();
      Node node3 = new Node(81, node2);
      node3.isNot();
      node3.isCase();
      node0.isIn();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(1129);
      Node node1 = new Node(54);
      Node node2 = new Node(13, node0, node1, node1, 57, 54);
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      Node node0 = Node.newString("com.google.common.collect.Sets$1", 13, 64);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseAllType();
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(77);
      StringWriter stringWriter0 = new StringWriter(42);
      Node node1 = new Node(101, node0, node0);
      node1.isNot();
      node1.isAnd();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(114);
      node0.cloneTree();
      node0.getStaticSourceFile();
      node0.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4);
      Node node1 = new Node(4, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      node1.isOnlyModifiesThisCall();
      node0.setVarArgs(false);
      node0.isOnlyModifiesThisCall();
      node0.addSuppression("[ZsGQjxmu>");
      Node node2 = Node.newNumber(2276.438682813);
      node0.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString(103, "The new child node has siblings.");
      node0.children();
      node0.isCatch();
      node0.isOr();
      Node node1 = new Node(51);
      node0.isDo();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = Node.newString(52, "");
      node0.hasChild(node1);
      node1.isEmpty();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber((double) 124);
      node0.isOnlyModifiesThisCall();
      Node.newString(4095, "ufc-Hr5+[,$z3RRY");
      node0.toString();
      Node node1 = Node.newString(153, "reflected_object");
      node0.isGetProp();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(126);
      StringWriter stringWriter0 = new StringWriter(739);
      Node node1 = new Node(48, node0);
      Node node2 = new Node(8);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.clonePropsFrom(node2);
      Node node3 = null;
      try {
        node3 = new Node(15, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber((-1817.4924666));
      Node node1 = new Node((-2367), node0, node0, node0, 51, 132);
      Node node2 = new Node(108, node1);
      node2.isSwitch();
      node2.srcrefTree(node0);
      node2.hasChild(node0);
      node2.isEmpty();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(126);
      node0.detachChildren();
      node0.isBreak();
      node0.isScript();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.copyInformationFromForTree(node1);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(3347);
      node0.addChildrenToBack(node0);
      node0.isFunction();
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      Node node1 = new Node(31, node0, node0, node0, 47, 37);
      node1.getLastChild();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = Node.newNumber(86.0, 56, 931);
      Node node2 = new Node(1, node1, node1);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch1 = node2.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals(node_NodeMismatch1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(1871.8873181680626);
      node0.toString();
      Node node1 = Node.newString("NUMBER 1871.8873181680626");
      node0.setLength((-4229));
      Node node2 = new Node(115, node0, 55, 51);
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.addChildrenAfter(node1, node0);
      node3.getLength();
      node3.setSourceFileForTesting("COLON");
      node3.isWith();
      node1.isQualifiedName();
      node2.isNew();
      node1.isCast();
      node0.checkTreeEquals(node2);
      node1.isAdd();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString((-1424), "en`1");
      Node node1 = new Node((-1424), node0, node0, node0, 51, 147);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      node0.putProp((-3264), node1);
      priorityQueue0.iterator();
      Node node2 = new Node(113);
      node2.isDo();
      node1.isDebugger();
      node1.isCast();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString(154, "?kG|@+d;^9`S}", (-405), 117);
      node0.hasChildren();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node((-1185), node0, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.removeProp(43);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString(103, ".R)te87&Sb2S3#,", 103, 103);
      node0.isContinue();
      node0.isQualifiedName();
      Node node1 = new Node(38, node0, node0, 29, (-1494));
      node0.isCase();
      Node node2 = new Node(54, node1);
      node0.isNot();
      node2.isCase();
      node1.isIn();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(103);
      node0.getAncestors();
      StringWriter stringWriter0 = new StringWriter(4095);
      Node node1 = new Node(1590, node0, node0);
      node0.isNot();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isAnd();
      node0.isDec();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node((-2956));
      Node node1 = node0.cloneTree();
      node1.removeChildren();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(42, node0, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)58;
      byteArray0[0] = (byte)0;
      Node node0 = new Node(2837, (byte)58, 2837);
      node0.setLength((-2274));
      Node node1 = new Node((-2750), node0, 2, 700);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getLength();
      node1.setSourceFileForTesting("COLON");
      node2.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<TemplateType> linkedList0 = new LinkedList<TemplateType>();
      Iterator<TemplateType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isQualifiedName();
      node0.isNew();
      node3.isCast();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2837
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-423));
      Node node1 = new Node(38, node0, node0, 306654252, 921);
      Node node2 = node1.copyInformationFromForTree(node0);
      int int0 = Node.OPT_ARG_NAME;
      node0.setSourceFileForTesting((String) null);
      Object object0 = new Object();
      node2.putProp((-1299), "rk");
      Node node3 = Node.newString(4095, "v%z:> SPP5'g");
      node3.isHook();
      Node node4 = node1.srcrefTree(node3);
      node4.isLocalResultCall();
      node3.isQuotedString();
      node0.isCatch();
      Node node5 = Node.newString("zKYE?", 0, 1);
      node5.getSourceOffset();
      node1.isInstanceOf();
      Node node6 = new Node(42, 636, 0);
      node1.getBooleanProp(4255);
      node2.isSetterDef();
      Node node7 = Node.newString((-2058), "NOT_NULL", 4, 35);
      // Undeclared exception!
      try { 
        node7.setSideEffectFlags(921);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2058
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString("x QesHsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "x QesHsY@I_8`M");
      node0.isContinue();
      node0.setWasEmptyNode(false);
      Node node2 = new Node(52, node1, node0, 2, 40);
      node1.isCase();
      Node node3 = new Node(115, node2);
      node3.copyInformationFrom(node0);
      node3.isNot();
      node3.isCase();
      node0.isIn();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString(21, "com.google.common.base.Joiner$MapJoiner", 155, 21);
      Node node1 = new Node(21, node0, 1, (-2600));
      Node node2 = new Node(155, node1, node1);
      Node node3 = node2.cloneNode();
      node1.mayMutateGlobalStateOrThrow();
      Node node4 = new Node((-391), node2, node2, 1951, (-2553));
      node1.isOptionalArg();
      Node node5 = node4.removeChildren();
      node3.isSetterDef();
      node5.isUnscopedQualifiedName();
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      Node node2 = node0.srcref(node1);
      Node node3 = Node.newString(50, "CharMatcher.forPredicate(");
      Node node4 = new Node(105, node1, 1186, 56);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node5 = new Node(37, nodeArray0, 4095, 40);
      node4.copyInformationFrom(node5);
      Node.newString("CharMatcher.forPredicate(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node4.isOptionalArg();
      node0.putIntProp((-13), 2);
      node0.isFor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CharMatcher.forPredicate(");
      node4.isIf();
      node2.setLineno(49);
      node3.isAssignAdd();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.isIn();
      node0.isBreak();
      node0.isScript();
      node0.isOptionalArg();
      node0.isLabel();
      node0.isWhile();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.toString();
      Node node1 = Node.newString("[g");
      node0.setLength(1610612736);
      Node node2 = new Node(4095, node1, 15, (-1752));
      Node node3 = node0.srcrefTree(node2);
      Node node4 = node1.copyInformationFromForTree(node2);
      node0.getLength();
      node2.setSourceFileForTesting("|6m4!iAyo>)");
      node2.isWith();
      node4.isQualifiedName();
      node1.isNew();
      node1.isCast();
      node0.checkTreeEquals(node1);
      node2.isDefaultCase();
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node1, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = new Node(35);
      Node node1 = node0.copyInformationFromForTree(node0);
      int int0 = Node.OPT_ARG_NAME;
      node0.setSourceFileForTesting("rk");
      Object object0 = new Object();
      node0.putProp(1, object0);
      Node.newString(54, "rk");
      node1.isHook();
      Node node2 = node1.srcrefTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isVoid();
      node0.isCatch();
      node0.getChildCount();
      Node node1 = Node.newString(46, "com.google.common.base.CharMatcher$4");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.detachChildren();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(124);
      StringWriter stringWriter0 = new StringWriter(42);
      Node node1 = new Node(102, node0, node0);
      Node node2 = new Node(203);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setLineno(0);
      node1.setJSDocInfo(jSDocInfo0);
      node1.getQualifiedName();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString(115, "new child has existing parent");
      node0.putIntProp(41, (-2674));
      node0.isNE();
      // Undeclared exception!
      try { 
        node0.setDouble((-1517.35337));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 41
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(45, "+;K:q", 2392, 4);
      node0.isBreak();
      Node node1 = new Node(115, node0, 437, (-2891));
      node0.isFor();
      node0.isEquivalentTo(node1, false, true, false);
      node1.cloneNode();
      Node.mergeLineCharNo((-2891), 57);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(1864);
      Node node1 = Node.newString("com.google.javascript.rhino.SourcePosition");
      Node node2 = new Node(33, node0, node0, node0, node1, (-1067), 46);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(37, 3069, 3069);
      Node node1 = new Node(32);
      node1.isDelProp();
      Node node2 = Node.newString(36, "<invalid>");
      node2.isAnd();
      node0.isDec();
      node1.isGetterDef();
      node1.setLineno(4);
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(30, node0, node0, node0, node0);
      node0.isBreak();
      Node node2 = new Node(150, node1, 48, 48);
      node1.isAssign();
      node0.isTrue();
      node2.isStringKey();
      node2.removeChildren();
      node2.removeChildren();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 120);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(51, node0, node0, node0, node0, 39, 42);
      Node node2 = node1.srcref(node0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString(115, "String node not created with Node.newString", (-3446), 1073741824);
      node0.isBreak();
      Node node1 = new Node(115, node0, 53, 2578);
      node0.isFor();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = null;
      try {
        node2 = new Node(36, node0, node0, 0, 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(1028.854);
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node((-2498), (-256), 86);
      Node node2 = Node.newString(122, "OR", 153, 27591);
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = Node.newString((-4096), "x QesHsY@I_8`M");
      node4.setLength(442);
      node0.isName();
      node4.isUnscopedQualifiedName();
      node4.detachChildren();
      node3.isDebugger();
      node4.isAssign();
      node0.setSourceFileForTesting("e");
      node0.checkTreeEquals(node2);
      Node node5 = node0.copyInformationFrom(node1);
      node1.isLabelName();
      node5.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("haC$IrD^O");
      node0.isBreak();
      Node node1 = new Node((-1059), node0);
      Node node2 = new Node(Integer.MAX_VALUE, node1, 2475, 0);
      node1.isFor();
      node2.isEquivalentTo(node0, false, false, true);
      Node node3 = node1.cloneNode();
      node3.useSourceInfoIfMissingFrom(node2);
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((double) 86, 86, 2462);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      node2.checkTreeEquals(node1);
      node1.isWhile();
      node0.isBreak();
      node0.putBooleanProp(46, false);
      node0.putIntProp(46, 57);
      node0.checkTreeEquals(node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(37, 37, 37);
      Node node1 = new Node((-889), 2, 115);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newNumber((double) 54);
      Node node3 = new Node(12, node0, node1, node2, 57, (-629));
      node3.isAdd();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isNoSideEffectsCall();
      node0.getAncestors();
      Node node1 = new Node(49, node0, node0, 48, 57);
      Node node2 = node1.cloneNode();
      node0.isBreak();
      node0.isThis();
      node2.isWhile();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(41, node0, node0, node0, node0);
      node0.isNE();
      node1.getIntProp(4095);
      node1.isExprResult();
      node0.isBlock();
      node1.isComma();
      Node node2 = node1.cloneNode();
      node2.addSuppression("rbnz0HhrnlA1OTQ*<S@");
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      Node node1 = new Node(52);
      Node node2 = new Node(48, node1);
      Node node3 = new Node(54, node0, node2, node0, 53, 30);
      node2.isNE();
      node2.getIntProp(40);
      node3.setLength(30);
      node0.isName();
      node3.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isDebugger();
      node1.isAssign();
      node0.checkTreeEquals(node1);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      String string0 = "C~jfX+Qn^>1mC]P87";
      Node node0 = Node.newString("C~jfX+Qn^>1mC]P87");
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(0, (-2494), 36);
      Node node2 = Node.newString(4, "~Kf6", 3, 1332);
      node0.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newString(38, "com.google.common.base.CharMatcher");
      node2.setLength(55);
      node1.isName();
      node3.isUnscopedQualifiedName();
      node2.detachChildren();
      node2.isDebugger();
      node1.isAssign();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString(98, "@ g?2#/");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(31, node0);
      node1.getLength();
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-1671));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got HOOK
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString(103, "The new child node has siblings.");
      node0.children();
      Node node1 = new Node(42, node0, node0, (-214), 3233);
      node0.isIn();
      node1.putIntProp(54, 8);
      node0.setIsSyntheticBlock(false);
      Node node2 = new Node(112, node1, 1966, 62);
      node0.isFor();
      node1.isEquivalentTo(node2, false, false, true);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      Node node2 = new Node(55, node1, node1, node1, 2, 105);
      node0.isAdd();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(41, node0, node0, node0, node0);
      node0.isBreak();
      node0.checkTreeEqualsImpl(node1);
      node1.clonePropsFrom(node0);
      node1.isSetterDef();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x QesHAsY@I_8`M");
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(43, 15, 0);
      Node node2 = Node.newString(2, "x QesHAsY@I_8`M", 38, 37);
      node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      Node node4 = new Node(1423, node2, node0, node2, 1, 711);
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString(122, "The new child node has siblings.");
      node0.children();
      Node node1 = Node.newNumber(1670.75819887185);
      node0.toString();
      Node node2 = Node.newString("VOID The new child node has siblings.");
      Node node3 = new Node(51, node0, 204852, 46);
      node3.copyInformationFromForTree(node2);
      node3.getLength();
      node1.setSourceFileForTesting("@.7v");
      node3.isWith();
      node2.isQualifiedName();
      node2.isNew();
      node0.isNot();
      Node.newNumber((-1.0), 26, 50);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(3517);
      StringWriter stringWriter0 = new StringWriter(42);
      node0.isEquivalentTo(node0);
      Node node1 = new Node(102, node0, node0);
      Node node2 = new Node(54, node1);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newNumber(253.94751429146098);
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.getJsDocBuilderForNode();
      node1.isUnscopedQualifiedName();
      node0.isDelProp();
      node1.isFromExterns();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 166, 51);
      node0.isSwitch();
      int int0 = Node.IS_CONSTANT_NAME;
      Node node2 = Node.newString("Object#Element", (-703), 2);
      Node node3 = new Node(43, node1, 0, 40);
      node1.checkTreeEqualsImpl(node3);
      node3.srcrefTree(node2);
      node0.isAdd();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(23, 46, (-3798));
      Node node1 = new Node((-3798), node0, 2, 4058);
      Node node2 = Node.newString(52, "length", 133, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = node0.getAncestor(1);
      node3.isEquivalentTo(node1, false, false, false);
      Node node4 = new Node(42, node1, 42, 43);
      node4.addChildrenToBack(node2);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.setIsSyntheticBlock(false);
      node0.isWith();
      StringWriter stringWriter0 = new StringWriter(42);
      node0.isFromExterns();
      Node node1 = new Node(110, node0, node0);
      node1.isNot();
      node1.isAnd();
      node1.isDec();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K\"dtP");
      node0.isWhile();
      node0.isBreak();
      node1.putIntProp(50, 40);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1129
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("GLOBAL_THIS", 52, 52);
      node0.getLastChild();
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), 42, 43);
      Node node2 = new Node(38, node0, node0, node1, 137, 4095);
      node1.isEquivalentToShallow(node2);
      node1.isName();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.getChildBefore(node1);
      node2.removeChildAfter(node3);
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = new Node(35);
      Node node1 = new Node(32, node0, node0, 57, 47);
      Node node2 = node0.copyInformationFromForTree(node1);
      int int0 = Node.OPT_ARG_NAME;
      node0.setSourceFileForTesting("rk");
      Object object0 = new Object();
      node0.putProp(1, object0);
      Node.newString(54, "rk");
      node2.isHook();
      Node node3 = node2.srcrefTree(node0);
      node0.mayMutateArguments();
      node0.isQuotedString();
      node0.isDefaultCase();
      node3.isOr();
      node2.isDebugger();
      node0.isTypeOf();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("x QesHsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node0.isContinue();
      Node node2 = Node.newNumber((double) 1, 48, 39);
      Node node3 = new Node(52, node1, node2, 2, 40);
      node0.cloneTree();
      node1.isCase();
      Node node4 = new Node(115, node3);
      node4.cloneTree();
      node4.isNot();
      node4.isCase();
      node3.removeChildren();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(130);
      node0.isLabelName();
      node0.isCase();
      Node node1 = node0.cloneNode();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EXPR_RESULT is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      node0.isIn();
      node1.putIntProp(43, 309);
      Node node2 = new Node(117, node1, 114, 30);
      node2.srcrefTree(node0);
      node2.isFor();
      node1.isEquivalentTo(node2, false, false, false);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3069, 3069, 3069);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(53, "new child has existing parent");
      node1.isContinue();
      Node.newNumber((double) 31, 47, 63);
      Node node2 = new Node(102, node0, node1, 1, 592);
      Node node3 = node2.cloneTree();
      node2.isCase();
      Node node4 = new Node(1024, node3);
      Node node5 = new Node(990);
      node5.isNot();
      node2.isCase();
      node5.isDo();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(37, 3107, 3107);
      Node node1 = new Node(42, node0);
      node1.isDelProp();
      node0.isInc();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(105);
      node0.getInputId();
      node0.setInputId((InputId) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      node0.getDouble();
      node0.getDirectives();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(48, node0, node0, node0, 31, 93);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.setLength(130);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = new Node(40, node0, 15, 15);
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = Node.newString(0, "x QesHAsY@I_8`M");
      node4.setLength(39);
      node4.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node3.isExprResult();
      node2.useSourceInfoFrom(node0);
      node1.isAssign();
      node1.isTypeOf();
      node0.isQualifiedName();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(52, 52, 127);
      node0.toString();
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.getLength();
      node0.setSourceFileForTesting("reflected_object");
      node0.getSourceOffset();
      node1.isSyntheticBlock();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.srcrefTree(node0);
      node2.isExprResult();
      node0.wasEmptyNode();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("\\R)te87&Sb2S3#,", 153, 153);
      Node.newNumber((double) 51, 54, 1137);
      nodeArray0[0] = node0;
      Node node1 = new Node(153, nodeArray0, 46, 40);
      node1.cloneNode();
      node0.isTypeOf();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "Z2MP";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z2MP");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("G8/q>|qG");
      Node node1 = new Node(1567, node0);
      Node node2 = node1.getLastSibling();
      node2.getDirectives();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node.extractCharno((-2814));
      // Undeclared exception!
      try { 
        node3.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node0.isBreak();
      node1.getJsDocBuilderForNode();
      node1.isTrue();
      node0.getChangeTime();
      node1.putIntProp(57, (-1990));
      node0.checkTreeEquals(node1);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(43, 3455, 56);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-32);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAdd();
      Node node1 = new Node(4, node0);
      node1.isReturn();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      StringWriter stringWriter0 = new StringWriter(42);
      Node node1 = new Node(1, 124, 2);
      node0.useSourceInfoIfMissingFrom(node1);
      try { 
        node0.setString("not a StringNode");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EMPTY 124 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      node0.getDirectives();
      node0.isNoSideEffectsCall();
      node0.getAncestors();
      Node node1 = new Node((-1558), node0, node0, 26, 973);
      node1.getStaticSourceFile();
      node0.putIntProp(49, 50);
      node0.isQuotedString();
      node0.isFor();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.getDirectives();
      node0.isComma();
      node0.isName();
      node0.isWhile();
      Node node1 = new Node(31, node0);
      node1.detachChildren();
      node1.isDebugger();
      node1.isAssign();
      node0.isTypeOf();
      node0.isQualifiedName();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(23, 46, (-3798));
      Node node1 = Node.newString("!.@yWcf1", 0, 37);
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node((-3798), node0, 2, 4058);
      Node.newString(52, "length", 133, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = node0.getAncestor(1);
      Node node4 = new Node(42, node2, 42, 43);
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(35, 35, 33);
      Node node1 = new Node(33, node0, node0);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setVarArgs(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node2 = new Node(4, node0, 53, 4);
      node2.isSyntheticBlock();
      node0.getLength();
      node1.checkTreeEquals(node0);
      node2.getQualifiedName();
      node2.getFirstChild();
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = locale0.stripExtensions();
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      node1.setDirectives(set0);
      node1.isArrayLit();
      node2.isThis();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETELEM
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.isExprResult();
      node0.isBreak();
      node0.isHook();
      Node node1 = new Node(1723, node0, node0, node0, node0, 37, 43);
      Node node2 = node0.srcrefTree(node1);
      node2.mayMutateArguments();
      node1.isQuotedString();
      Node node3 = null;
      try {
        node3 = new Node(50, node2, node0, node2, node0, 43, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(37, 37, 37);
      node0.isNoSideEffectsCall();
      node0.getAncestors();
      Node node1 = new Node(41, node0, node0, 48, 57);
      node1.getStaticSourceFile();
      node1.putIntProp(31, 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isQuotedString();
      node0.isFor();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(3517, 3517, 3517);
      StringWriter stringWriter0 = new StringWriter(42);
      Node node1 = new Node(115, node0);
      Node node2 = node1.removeChildren();
      node2.getStaticSourceFile();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      StringWriter stringWriter0 = new StringWriter(42);
      node0.isFromExterns();
      Node node1 = new Node(102, node0, node0);
      node0.useSourceInfoFrom(node1);
      node1.isNot();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      node0.detachChildren();
      node0.isExprResult();
      node0.isBreak();
      node0.isIn();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
      try {
        node1 = new Node(225, nodeArray0, 5127, (-702));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = Node.newString(2, "x QesHAsY@I_8`M", 154, 37);
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      node1.cloneTree();
      node2.isCase();
      Node node4 = new Node(15, node2);
      node3.isNot();
      node2.isCase();
      node3.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      node0.getIntProp(16384);
      node1.isWhile();
      node0.isBreak();
      node0.isTrue();
      node1.putIntProp(47, (-975));
      Node node2 = new Node(42, 1, 55);
      node1.cloneTree();
      node0.setLength(2);
      node1.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isCast();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("haC$IrD^O");
      node0.hasMoreThanOneChild();
      node0.getIntProp(2994);
      Node node1 = new Node(31, node0, node0);
      // Undeclared exception!
      try { 
        node1.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-3915), "Rxo6e&=l]z@`u%:0R");
      Node node1 = new Node(37, node0);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newString(2147483645, "Rxo6e&=l]z@`u%:0R", (-4099), (-2683));
      node2.setSourceFileForTesting("Rxo6e&=l]z@`u%:0R");
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      Node node3 = null;
      try {
        node3 = new Node((-431), nodeArray0, 48, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isWith();
      String string0 = "Rxo6\\e&=l]z@`u%:0R";
      Node node1 = Node.newString(51, "4,Gg7");
      Node node2 = new Node(8, node1);
      node0.copyInformationFromForTree(node2);
      Node node3 = Node.newString(40, "com.google.javascript.rhino.jstype.NoResolvedType", 3609, 30);
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35, 35, 35);
      node0.toString();
      node0.setVarArgs(true);
      node0.getLength();
      node0.isThis();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.checkTreeEquals(node0);
      node0.cloneTree();
      node0.detachChildren();
      node0.isEmpty();
      node0.isAdd();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("x QesHsY@I_8`M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t=");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node0.isContinue();
      Node node2 = Node.newNumber((double) 1, 48, 39);
      Node node3 = new Node(52, node1, node2, 2, 40);
      node0.cloneTree();
      node1.isCase();
      Node node4 = new Node(115, node3);
      node4.isNot();
      node3.isTypeOf();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = new Node(1, 43, 0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.getLength();
      Node node3 = new Node((-5742), node0, node2, 4095, 4095);
      node1.getSourceOffset();
      node2.isSyntheticBlock();
      node3.useSourceInfoFromForTree(node0);
      Node.newNumber(39.0, 38, 12);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      Node node2 = new Node(752);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("C=0;@");
      node0.isVarArgs();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("t5?GU'Z", true);
      node0.getString();
      node0.putProp(3045, simpleSourceFile0);
      node0.isWith();
      node0.isFunction();
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(3045);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(125, "com.google.javascript.rhino.jstype.JSType");
      Node node1 = Node.newString(56, "com.google.javascript.rhino.jstype.JSType");
      Node node2 = new Node(125, node0, node0, node0, 46, (-949));
      node2.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) node2;
      objectArray0[1] = (Object) node1;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("com.google.javascript.rhino.jstype.JSType", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property com.google.javascript.rhino.jstype.JSType
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = new Node(85);
      Node node1 = node0.cloneNode();
      node1.isWhile();
      node1.isVoid();
      node1.isExprResult();
      node0.isBlock();
      node0.isComma();
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(43);
      Node node1 = new Node(2604, 0, 3963);
      Node node2 = Node.newString(43, "", 4, 2588);
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = Node.newString((-6371), "");
      node0.setLength(2632);
      node3.isName();
      node4.isUnscopedQualifiedName();
      node2.detachChildren();
      node4.isEmpty();
      node2.isEquivalentToTyped(node3);
      node1.isEquivalentToTyped(node0);
      node0.isGetterDef();
      node1.isNot();
      node2.checkTreeTypeAwareEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString(49, "NOT_NULL");
      node0.isContinue();
      node0.toString();
      node0.getQualifiedName();
      node0.isNot();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(47);
      node1.copyInformationFromForTree(node0);
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(37, 37, 37);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isEquivalentToTyped(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(29, 53, 54);
      node1.getInputId();
      node1.setInputId((InputId) null);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node1.setChangeTime(52);
      try { 
        node1.setDouble(70.936200755944);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEG 53 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(37, 37, 37);
      node0.isEquivalentToTyped(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.isOptionalArg();
      node0.putIntProp(37, 37);
      node0.isNumber();
      try { 
        node0.setDouble(42.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL 37 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000337] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp(49, false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = Node.newString(2, "x QesHAsY@I_8`M", 154, 37);
      node1.getLength();
      node0.setSourceFileForTesting("x QesHAsY@I_8`M");
      node0.getSourceOffset();
      node1.isSyntheticBlock();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      Node.newNumber(0.5, 52, 37);
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString(49, "NOT_NULL");
      node0.isContinue();
      node0.toString();
      node0.getQualifiedName();
      node0.isNot();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(47);
      node1.useSourceInfoFrom(node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isLabelName();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = new Node(83, 43, 57);
      Node node2 = new Node((-1418), 3226, 112);
      Node node3 = Node.newString(16, "|(f~1)d", 4194304, 39);
      Node node4 = node1.setJSDocInfo((JSDocInfo) null);
      Node node5 = Node.newString(12, "prev is not a child of this node.");
      node3.setLength((-1120));
      node5.isName();
      node1.isUnscopedQualifiedName();
      node5.detachChildren();
      node4.isEmpty();
      node0.isEquivalentToTyped(node2);
      node5.isEquivalentToTyped(node0);
      node1.isGetterDef();
      node3.isNot();
      node2.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      node0.isWhile();
      node0.isReturn();
      node0.isExprResult();
      node0.isBlock();
      node0.isComma();
      Node node1 = new Node(42, node0, node0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(121, 121, 121);
      Node node1 = new Node(0, node0, node0, 49, 4124);
      node1.isOptionalArg();
      Node node2 = node1.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.getJSType();
      Node node3 = new Node(43);
      node0.isDec();
      Node node4 = new Node(16384);
      node3.copyInformationFromForTree(node0);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = new Node(47, node0, node0, 114, 15);
      node1.copyInformationFromForTree(node0);
      int int0 = Node.OPT_ARG_NAME;
      node1.setSourceFileForTesting("String node not created with Node.newString");
      Node.newString(16, ")i.]V>J=g");
      Node node2 = new Node(52, node1);
      node2.isHook();
      node1.srcrefTree(node2);
      node1.mayMutateArguments();
      node0.isQuotedString();
      node0.isCatch();
      node0.getSourceOffset();
      node1.isInstanceOf();
      Node node3 = new Node((-94), 15, (-1275));
      node2.isGetElem();
      node1.isIf();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = new Node(2, node0, node0, 12, 1833);
      Node node2 = node0.copyInformationFromForTree(node1);
      int int0 = Node.OPT_ARG_NAME;
      node0.setSourceFileForTesting("w,PUJJ'.CZggsdyY;1$");
      Node node3 = Node.newString(55, "GETELEM");
      node0.isHook();
      Node node4 = node1.srcrefTree(node3);
      node3.mayMutateArguments();
      node0.isQuotedString();
      node4.isCatch();
      node3.getSourceOffset();
      node2.isInstanceOf();
      Node node5 = new Node(154, (-240), 50);
      node0.isGetElem();
      node3.isIf();
      node0.isArrayLit();
      node2.useSourceInfoFrom(node4);
      Node.newString("GETELEM", (-335), 51);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.isBreak();
      node0.isVar();
      node0.hasMoreThanOneChild();
      node0.getIntProp(2994);
      Node node1 = new Node((-2163), node0, node0);
      node1.clonePropsFrom(node0);
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(121, 121, 121);
      node0.detachChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(50, node0, node0, node0, node0, 38, 42);
      node1.isQuotedString();
      int int0 = Node.IS_CONSTANT_NAME;
      node0.getQualifiedName();
      node0.isStringKey();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString(30, "5xDCgmONf#cxt4$");
      node0.toStringTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-463));
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString((-2467), "NEW 5xDCgmONf#cxt4$\n");
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node0.isVarArgs();
      node1.srcref(node0);
      node1.setLength(31);
      node3.isOnlyModifiesArgumentsCall();
      node2.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 166, 51);
      Node node2 = node1.cloneNode();
      node0.isWhile();
      node0.isTrue();
      node1.isExprResult();
      node1.isBlock();
      node1.isComma();
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      StringWriter stringWriter0 = new StringWriter(42);
      node0.isFromExterns();
      node0.isQualifiedName();
      Node node1 = node0.getLastSibling();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)112;
      byteArray0[2] = (byte)112;
      byteArray0[5] = (byte)58;
      Node node0 = Node.newNumber((double) (byte)115, 17, 1838);
      Node node1 = new Node(46, node0, node0, node0, 1838, 57);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node1;
      Node node2 = new Node(0);
      Node node3 = new Node(114, node1, node1, 53, 2);
      node3.copyInformationFromForTree(node1);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(8, "Rxo6e&=l]z@`u%:0R");
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.getLength();
      Node node3 = Node.newString(113, "Rxo6e&=l]z@`u%:0R", 47, 4095);
      node3.setSourceFileForTesting("Rxo6e&=l]z@`u%:0R");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1032);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got EMPTY
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node((-321), 103, 1032);
      Node node1 = new Node((-321), node0);
      node1.setLineno(57);
      node1.setType(103);
      node0.setSourceFileForTesting("x QsHAs@_8j$c`M");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.copyInformationFromForTree(node1);
      node0.removeChildren();
      Node.mergeLineCharNo(57, (-1170));
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      Node node3 = new Node(4, node1, 53, 4);
      node3.clonePropsFrom(node1);
      node3.getLength();
      Node node4 = new Node(54, 1, 13);
      node4.isNew();
      node2.isNot();
      node4.isScript();
      try { 
        node2.setDouble(2.261176);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GETELEM [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      Node node2 = Node.newString(53, "length", 41, 86);
      node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newString(2726, "negative size: ");
      int int0 = 36;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      nodeArray0[5] = node2;
      Node node4 = null;
      try {
        node4 = new Node(15, node0, node3, 11, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(124);
      node0.isWith();
      Node node1 = Node.newString(8, "Rxo6e&=l]z@`u%:0R");
      Node node2 = new Node(48, node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      node2.getLength();
      Node node4 = Node.newString(113, "Rxo6e&=l]z@`u%:0R", 47, 4095);
      node4.setSourceFileForTesting("Rxo6e&=l]z@`u%:0R");
      node3.getSourceOffset();
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node0.isSyntheticBlock();
      node4.useSourceInfoFromForTree(node1);
      Node.newNumber((-1.0), 381, 8);
      node3.isNot();
      node1.isAnd();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3944, 0);
      Node node2 = Node.newString(2, "x QesHAsY@I_8`M", 154, 37);
      node1.copyInformationFromForTree(node0);
      node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node3.isNumber();
      try { 
        node1.setDouble(1235.2134);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING_KEY is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      node0.isBreak();
      node0.isWith();
      Node node2 = new Node(1024, node0);
      node1.isCast();
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(2023, "", 37, 2023);
      Node node1 = new Node(57, node0, node0);
      node0.addChildAfter(node1, (Node) null);
      Node node2 = null;
      try {
        node2 = new Node(48, node1, 696, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString("haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3096));
      node1.toString();
      node1.isOptionalArg();
      node0.getDirectives();
      node1.putIntProp(43, 309);
      Node node2 = node1.cloneNode();
      node0.isWith();
      node0.isNew();
      try { 
        node2.setDouble(550.863447387);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString(")xAM,UKY[#YgrF}");
      Node node1 = new Node(43, 72, 8);
      node1.checkTreeEquals(node0);
      node1.getQualifiedName();
      node1.isArrayLit();
      node1.isThis();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(110, node0, node0, 50, (-3112));
      node1.isOptionalArg();
      node0.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getJSType();
      Node node2 = new Node(31);
      node1.isDec();
      Node node3 = new Node(16);
      node1.copyInformationFromForTree(node3);
      node2.isRegExp();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(3347);
      node0.addChildrenToBack(node0);
      node0.getChildBefore((Node) null);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isString();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3096));
      node1.toString();
      node1.isOptionalArg();
      node0.isLocalResultCall();
      node1.putIntProp(43, 309);
      Node node2 = node1.cloneNode();
      node0.isWith();
      node0.isNew();
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("sB0mp_t^t");
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("sB0mp_t^t", false);
      node0.isComma();
      Node node1 = new Node(1, node0, node0, 31, 53);
      Node node2 = new Node(29, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.putIntProp(56, 4);
      Node node3 = node2.cloneNode();
      node3.isWhile();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      Node node3 = new Node(4, node1, 53, 4);
      node3.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("I@v?};&X");
      Node node4 = new Node(57);
      node0.isDec();
      node1.isDebugger();
      Node node5 = Node.newString(79, "I@v?};&X", (-1536), 3);
      node5.isTrue();
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString("haC$IrD^O");
      Node node1 = new Node(102, node0, node0, 50, (-3076));
      node1.toString();
      node1.isOptionalArg();
      node1.putIntProp(43, 309);
      Node node2 = node1.cloneNode();
      node2.isWhile();
      Node.newString(47, "haC$IrD^O", 53, 48);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.isOptionalArg();
      node0.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getJSType();
      Node node2 = new Node(31);
      node1.isDec();
      Node node3 = new Node(16);
      node1.copyInformationFromForTree(node3);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, 52);
      node1.toString();
      node1.isOptionalArg();
      node1.useSourceInfoFrom(node0);
      node1.putIntProp(43, 309);
      Node node2 = new Node(117, node1, 114, 30);
      node2.getIntProp((-1069));
      node2.isFor();
      node1.isEquivalentTo(node2, false, false, false);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(37, 3069, 3069);
      Node node1 = new Node(32);
      node1.isDelProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("    ");
      Node node2 = new Node(2);
      Node node3 = Node.newString(64, "Object#Key");
      node3.isDec();
      node3.isDebugger();
      Node node4 = Node.newString((-3112), "    ", (-1182), 1);
      node4.isTrue();
      node2.isReturn();
      Node node5 = node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = "'";
      Node node0 = Node.newString(154, "'");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isNoSideEffectsCall();
      node0.isEquivalentTo(node0);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("x QesHsY@I_8`M");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.putBooleanProp(38, true);
      node0.detachChildren();
      Node node1 = Node.newString(4194304, "x QesHsY@I_8`M", 29, 45);
      node1.isWhile();
      node1.isStringKey();
      node0.isSyntheticBlock();
      Node node2 = new Node(105, 1995, 50);
      Node node3 = node1.cloneTree();
      node2.setLength((-4731));
      node1.isName();
      node2.getJsDocBuilderForNode();
      node1.isUnscopedQualifiedName();
      node3.addSuppression("x QesHsY@I_8`M");
      node2.detachChildren();
      node1.isCast();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-2623));
      Node node1 = new Node(85, node0, node0, 8, 96);
      node1.toString();
      node1.getQualifiedName();
      node1.isNot();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(52);
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = new Node(1);
      node2.srcref(node1);
      node1.setLength(39);
      node0.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node1.isCast();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString(818, "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList", (-1513), 818);
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(113, (-160), 1140);
      node1.cloneTree();
      Node node2 = Node.newString(3278, "Qvu>|8F:h26j9jP^<");
      node1.setLength(54);
      node1.isExprResult();
      node2.isUnscopedQualifiedName();
      node2.detachChildren();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      Node node2 = new Node(2, node1);
      Node node3 = Node.newNumber((double) 38, 2, 2);
      node2.isReturn();
      node1.isRegExp();
      node0.isAdd();
      // Undeclared exception!
      try { 
        node2.removeChild(node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.getJSType();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.setString("FUNCTION <invalid>");
      node1.isAdd();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.isContinue();
      node0.toString();
      node0.getQualifiedName();
      Node node1 = new Node(1139, node0, node0);
      node1.isNot();
      node1.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(39);
      Node node3 = new Node(35);
      node2.copyInformationFromForTree(node3);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\\R)te87&Sb2S3#,");
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node1.isOptionalArg();
      node1.putIntProp(43, 309);
      Node node2 = Node.newNumber((double) 53, 52, 105);
      node2.isNot();
      node1.isAnd();
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isEmpty();
      node1.isCast();
      node1.isNull();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("com.google.common.base.Joiner$MapJoiner");
      node0.getDirectives();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(32, node0, node0, node0, node0, 154, (-111));
      node0.addChildToBack(node1);
      node1.getIndexOfChild(node0);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString("WCTo+d~dI2<");
      node0.putBooleanProp(1477, false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isSyntheticBlock();
      Node node1 = new Node(37, (-68), 30);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(2, "@:d,D2E+yYD");
      node0.setLength(32);
      node3.isName();
      node0.isUnscopedQualifiedName();
      node2.isEquivalentToTyped(node1);
      node2.isEquivalentToTyped(node1);
      node3.isGetterDef();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      node1.addChildToFront(node3);
      node0.isComma();
      node2.isAdd();
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.isExprResult();
      node0.isGetElem();
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getJSType();
      Node node1 = new Node(4095);
      node1.isDec();
      Node node2 = Node.newNumber((-1017.558139436765), 335, 55);
      node0.isExprResult();
      node0.isBlock();
      node0.isAdd();
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString(49, "NOT_NULL");
      node0.isContinue();
      node0.toString();
      node0.getQualifiedName();
      node0.isNot();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(47);
      node1.copyInformationFromForTree(node0);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      Node node3 = new Node(4, node1, 53, 4);
      node3.isSyntheticBlock();
      node3.getLength();
      node3.wasEmptyNode();
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node0.checkTreeEquals(node3);
      node2.detachChildren();
      node2.cloneNode();
      node0.isWhile();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      Node node3 = new Node(42);
      node3.isSyntheticBlock();
      node1.getLength();
      node1.wasEmptyNode();
      node0.checkTreeEqualsImpl(node2);
      node2.checkTreeEquals(node0);
      node3.detachChildren();
      node0.isEmpty();
      node3.isAdd();
      int int0 = Node.IS_CONSTANT_NAME;
      node3.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.setLength(63);
      node1.setVarArgs(true);
      Node node2 = new Node(4, node0, 53, 4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GETELEM");
      node2.isSyntheticBlock();
      node2.getLength();
      node2.wasEmptyNode();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeEquals(node2);
      node1.detachChildren();
      node0.isEmpty();
      node2.getChangeTime();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isReturn();
      node0.isTry();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.getSourceOffset();
      node1.setSourceFileForTesting((String) null);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      node1.checkTreeEquals(node0);
      node1.putIntProp(37, (-590));
      Node node2 = node1.cloneNode();
      node2.isWhile();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getLength();
      node0.setSourceFileForTesting("rk");
      Node node3 = Node.newString("rk");
      node3.isSyntheticBlock();
      node3.getLength();
      node2.srcrefTree(node0);
      node0.mayMutateArguments();
      node0.isQuotedString();
      node3.isCatch();
      node1.getSourceOffset();
      node2.isInstanceOf();
      Node node4 = new Node(56, node2, node2, node1);
      node2.isGetElem();
      node2.isReturn();
      node4.isArrayLit();
      node4.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      node0.isOptionalArg();
      Node node1 = new Node(37, node0, 2, 49);
      node1.isSyntheticBlock();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newNumber(1.0, 53, 113);
      node2.isNot();
      node3.isAnd();
      node0.getJSType();
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = Node.newString(56, "NUMBER 2.261176 35");
      node1.isContinue();
      Node node2 = new Node(42, 2, 56);
      Node node3 = new Node(1, node2, node0, 4, 55);
      node2.cloneTree();
      node3.isCase();
      Node node4 = null;
      try {
        node4 = new Node((-881), node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)112;
      byteArray0[2] = (byte)115;
      byteArray0[5] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) (byte)115, 50, 1838);
      Node node1 = new Node(46, node0, node0, node0, 1838, 57);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[1] = node1;
      node1.isEquivalentTo(node1, true, true, true);
      Node.newNumber((double) 50);
      nodeArray0[3] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      node1.isEquivalentTo(node1, true, true, false);
      node0.siblings();
      Node node2 = null;
      try {
        node2 = new Node(46, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<TemplateType> vector0 = new Vector<TemplateType>();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>(vector0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      arrayList0.removeIf(predicate1);
      Node node1 = new Node(646, node0, node0, 40, 3116);
      Node node2 = new Node(111, node1, (-1145), 448);
      // Undeclared exception!
      try { 
        node2.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(0, node1, node0);
      node2.setSourceEncodedPosition(57);
      node2.isWhile();
      node0.isFunction();
      node0.isSyntheticBlock();
      Node node3 = new Node(754, 48, 49);
      Node node4 = node2.cloneTree();
      Node node5 = Node.newString(38, "W+,<O");
      node0.setLength(50);
      node1.isName();
      node4.isUnscopedQualifiedName();
      node0.isEquivalentToTyped(node4);
      node5.isEquivalentToTyped(node3);
      Node node6 = Node.newString("no next sibling.");
      node6.isGetterDef();
      node4.addChildToFront(node2);
      node4.isComma();
      Node node7 = Node.newString("@:d,D2E+yYD");
      node7.isAdd();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 124, 53);
      node0.isCatch();
      node0.isSyntheticBlock();
      Node node1 = new Node(800, (-2491), 39);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(36, "Q");
      node2.setLength(800);
      node3.isName();
      Node node4 = new Node((-35), nodeArray0, 43, 57);
      node4.isUnscopedQualifiedName();
      Node node5 = Node.newString("Q", 12, 2277);
      node5.detachChildren();
      node4.isEmpty();
      node1.isCast();
      node5.isNull();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      Node node3 = new Node(4, node1, 53, 4);
      node3.isSyntheticBlock();
      node3.siblings();
      node1.getLength();
      node1.wasEmptyNode();
      node3.cloneNode();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.checkTreeEquals(node0);
      node2.isNew();
      node2.getQualifiedName();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      jSTypeRegistry1.getType("BANG");
      Node node1 = new Node(98);
      jSTypeRegistry1.unregisterPropertyOnType("=W9SE-zFtNG1F_!s,O", (JSType) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not declared as a type name");
      node1.isDec();
      node0.isDebugger();
      node1.isCatch();
      node1.isTrue();
      node1.isAssign();
      node1.getQualifiedName();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(0, node1, node0);
      node2.setSourceEncodedPosition(57);
      Node node3 = node0.detachFromParent();
      node2.isOnlyModifiesArgumentsCall();
      node2.useSourceInfoIfMissingFrom(node1);
      Node.newString((-4219), "");
      node2.addChildToFront(node3);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = null;
      try {
        node4 = new Node(16, node1, node3, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WHfOt/");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry1.getType("Object#Key");
      Node node0 = new Node(6469);
      node0.isDec();
      node0.isDebugger();
      String string0 = "sB0mp_t^t";
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createEnumType("sB0mp_t^t", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      Node node2 = new Node(2, node1);
      node1.cloneNode();
      node1.isWhile();
      node2.getFirstChild();
      node0.getJSDocInfo();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.isExprResult();
      node0.isBreak();
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.getType("BANG");
      Node node1 = new Node(4095);
      node1.isDec();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BANG");
      node0.isDebugger();
      node1.isTrue();
      Node.newNumber((-1017.558139436765), 335, 55);
      node0.isExprResult();
      node0.isBlock();
      node1.addChildToFront(node0);
      node1.getChildAtIndex((-1302));
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 86, 86, 2462);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      node2.checkTreeEquals(node1);
      node1.isWhile();
      node0.isBreak();
      node0.isTrue();
      node0.putIntProp(46, 57);
      Node.newNumber((double) 4, 38, 2);
      node0.checkTreeEquals(node1);
      node1.isUnscopedQualifiedName();
      Node node3 = Node.newString("s[PYh? X}LM ");
      node3.isLabelName();
      node2.isCast();
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(32, (-1839), (-1839));
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(32, "");
      Node node3 = Node.newString(16777216, "ZInG8qPX|z|~+ExKT", 51, 516222);
      node3.setLength(52);
      node1.isName();
      node1.isUnscopedQualifiedName();
      node3.isEmpty();
      node2.isEquivalentToTyped(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      JSType.toMaybeTemplateType((JSType) objectType0);
      jSTypeArray0[0] = (JSType) null;
      Node node4 = new Node(108, node2, node0, node1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("f;3-dExPunL%86^{M", node4, jSTypeArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      jSTypeRegistry1.getType("BANG");
      Node node1 = new Node(98);
      jSTypeRegistry1.unregisterPropertyOnType("=W9SE-zFtNG1F_!s,O", (JSType) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Not declared as a type name");
      node0.useSourceInfoFromForTree(node1);
      node1.srcrefTree(node0);
      node0.isExprResult();
      node0.isVarArgs();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.isBreak();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node0.isEmpty();
      node2.isEquivalentToTyped(node3);
      node0.isEquivalentToTyped(node1);
      node0.isGetterDef();
      node0.isAnd();
      node3.setString("'OXPmRMBDdSB");
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node1.isOptionalArg();
      node1.putIntProp(43, 309);
      Node node2 = node1.cloneNode();
      node2.isWhile();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("Rq", 49, 5125);
      node0.setIsSyntheticBlock(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(49, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = new Node((-545), node1, 2, (-4096));
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("com.google.javascript.rhino.Node$AbstractPropListItem", node2, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      node0.setJSType(enumElementType0);
      node1.useSourceInfoIfMissingFrom(node0);
      try { 
        node1.setString("unexpected prop id ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW 49 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 124, 53);
      node0.isCatch();
      node0.isIf();
      node0.isBreak();
      Node node1 = new Node(16, node0, node0, node0, 40, 124);
      Node node2 = node0.detachFromParent();
      node1.isNew();
      node0.getQualifiedName();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 124, 53);
      node0.isCatch();
      node0.isIf();
      node0.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isAssign();
      Node node1 = new Node(4095);
      Node node2 = node0.srcrefTree(node1);
      node2.isExprResult();
      node0.isVarArgs();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      Node node2 = Node.newNumber(0.7, 155, 105);
      Node node3 = new Node(48, node2, node0, 31, 160);
      Node node4 = node0.cloneTree();
      node1.isCase();
      Node node5 = new Node(1, node4, node3, 1024, 110);
      Node node6 = new Node(3483, node5);
      node6.isNot();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(105);
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString("WCTo+d~dI2<");
      node0.putBooleanProp(1477, false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(37, (-68), 30);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(2, "@:d,D2E+yYD");
      node0.setLength(32);
      node3.isName();
      node0.isUnscopedQualifiedName();
      node2.isEmpty();
      node2.isEquivalentToTyped(node1);
      node2.isEquivalentToTyped(node1);
      node3.isGetterDef();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node((-1), nodeArray0, 32, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 124, 124);
      node0.isVar();
      node0.isWith();
      node0.isArrayLit();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(0, node1, node0);
      node2.setSourceEncodedPosition(57);
      Node node3 = node0.detachFromParent();
      node2.isOnlyModifiesArgumentsCall();
      node3.getStaticSourceFile();
      node0.isComma();
      node0.isEquivalentTo(node2, false, false, false);
      node2.isSyntheticBlock();
      Node node4 = node0.useSourceInfoFromForTree(node2);
      Node node5 = node1.srcrefTree(node2);
      node1.isExprResult();
      node5.isVarArgs();
      Node node6 = new Node(34, node4, node4, node3, node2, 1, 8233);
      node6.isAssignAdd();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node((-2083), 3963, 0);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(1, node2, 51, 8287);
      node3.isFor();
      node1.isEquivalentToTyped(node0);
      Node node4 = node1.clonePropsFrom(node2);
      Node node5 = new Node(55, node4, node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node5, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node((-2982));
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isLocalResultCall();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(492, node0);
      node1.setLineno(55);
      Node node2 = node1.removeChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node((-569));
      node0.isDelProp();
      node0.isInc();
      Node node1 = Node.newNumber((-985.7574023759221), 83, 1211);
      node1.isExprResult();
      node1.isBlock();
      node1.addChildToFront(node0);
      node0.copyInformationFromForTree(node1);
      node0.removeProp(2);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)115;
      byteArray0[5] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) (byte)115, 50, 1838);
      Node node1 = new Node(46, node0, node0, node0, 1838, 57);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      node1.isEquivalentTo(node1, true, true, true);
      Node node2 = Node.newNumber((double) 50);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      node0.siblings();
      Node node3 = null;
      try {
        node3 = new Node(46, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(26, "new child has existing parent");
      Node node1 = Node.newString("new child has existing parent", 2480, 41);
      node1.isContinue();
      Node.newNumber(0.5, (-2944), 39);
      Node.newNumber((double) 55, 39, 53);
      Node node2 = node0.cloneTree();
      node1.isCase();
      Node node3 = new Node(321, node2);
      node0.isNot();
      node1.isCase();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(86, 86, 86);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.putBooleanProp((-1156), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 48, 54);
      node1.cloneTree();
      Node node2 = Node.newString(698, "Object#Key");
      node1.setLength(871);
      node2.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Unknown class name");
      jSTypeArray0[1] = (JSType) templateType0;
      JSType jSType1 = modificationVisitor0.caseObjectType(templateType0);
      jSTypeArray0[2] = jSType1;
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node3.isUnscopedQualifiedName();
      node3.detachChildren();
      node1.isEmpty();
      node0.isCast();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.isExprResult();
      node0.isBreak();
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.getType("BANG");
      Node node1 = new Node(4095);
      node1.isDec();
      node0.isDebugger();
      node1.isTrue();
      node1.setSourceEncodedPositionForTree(49);
      Node node2 = node0.cloneNode();
      node2.isCast();
      node1.isWith();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 4, 4095);
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      Node node3 = Node.newNumber((-1017.558139436765), 1167, 3010);
      Node.newNumber((double) 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isLabelName();
      node2.copyInformationFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = new Node(83, 43, 57);
      node1.setWasEmptyNode(true);
      int int0 = Node.REFLECTED_OBJECT;
      node1.isSyntheticBlock();
      node0.useSourceInfoFromForTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.addSuppression("~Kf6");
      node0.setSourceFileForTesting("");
      Node node1 = Node.newString("Object#Key");
      node0.wasEmptyNode();
      node1.checkTreeEqualsImpl(node0);
      node1.isLocalResultCall();
      Node node2 = new Node(105, node0, node1, node0, node1, 12, (-1744));
      node2.checkTreeEquals(node0);
      node1.isAdd();
      node2.isQuotedString();
      node2.setSourceEncodedPositionForTree(29);
      node0.isScript();
      Node node3 = new Node(4095);
      Node node4 = node0.useSourceInfoIfMissingFrom(node2);
      node4.isComma();
      node0.isCast();
      node4.detachFromParent();
      node3.children();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString((-252), "Wa`Vk7zo]CW|Ss#5", (-252), (-252));
      node0.getBooleanProp((-261));
      node0.putProp((-2641), "Wa`Vk7zo]CW|Ss#5");
      node0.getJsDocBuilderForNode();
      node0.isQuotedString();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)21;
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte)23;
      byteArray0[5] = (byte)77;
      byteArray0[6] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setSourceEncodedPositionForTree(378);
      node0.getLineno();
      node0.isNoSideEffectsCall();
      node0.setType(0);
      // Undeclared exception!
      try { 
        node0.setDouble((-1050.068));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 86, 86, 2462);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      node2.checkTreeEquals(node1);
      node1.isWhile();
      node0.isBreak();
      node0.isTrue();
      Node.newNumber((double) 57, 51, 4095);
      node1.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, templateType1);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      jSTypeArray0[0] = (JSType) enumType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[1] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSTypeArray0[0]);
      jSTypeArray0[2] = jSType1;
      TemplateType templateType2 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[3] = (JSType) templateType2;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFromTypeNodes(node0, ":=Fo|TDmx", templateType1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node in type expression: NUMBER 86.0 86
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      node0.getLength();
      node0.wasEmptyNode();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(19);
      Node node1 = new Node(19, node0, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.getQualifiedName();
      Node node2 = node1.getLastChild();
      node2.getChangeTime();
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RSH is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.setSourceEncodedPosition(57);
      Node node3 = node0.detachFromParent();
      node3.getString();
      node0.getSourceFileName();
      node3.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node0.isSetterDef();
      node3.isFunction();
      node0.isStringKey();
      node1.isNE();
      node1.setIsSyntheticBlock(false);
      node2.isVarArgs();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = Node.newNumber((double) 47);
      Node node2 = new Node(2);
      Node node3 = new Node(37, node0, node2, 64, 85);
      Node node4 = Node.newNumber(1.0, 56, 1758);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.getJsDocBuilderForNode();
      node3.getBooleanProp(51);
      node1.isUnscopedQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node4.isExprResult();
      node0.copyInformationFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node1.isOptionalArg();
      node1.putIntProp(43, 309);
      Node node2 = new Node(117, node1, 114, 30);
      node2.isFor();
      node0.isIf();
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(115, "-$(?#](A2uqaZH+/0j", 154, 154);
      node0.detachChildren();
      Node node1 = Node.newString("WHfOt/");
      Node node2 = new Node(42, node0, node1);
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node.newString(15, "new child has existing parent");
      node0.isContinue();
      Node node1 = Node.newNumber((double) 37, 46, 37);
      Node node2 = new Node(30, node0, node0, 962, 8);
      node2.cloneTree();
      node0.isCase();
      Node node3 = Node.newString(53, "new child has existing parent", 15, 29);
      Node node4 = new Node(47, node3);
      node0.isNot();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(52, 52, 127);
      node0.toString();
      Node node1 = Node.newString("rk");
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getLength();
      node1.setSourceFileForTesting("reflected_object");
      node1.getSourceOffset();
      node2.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 12, (-2056), 56);
      Node node4 = node2.useSourceInfoFromForTree(node3);
      node2.srcrefTree(node3);
      node4.isExprResult();
      node0.wasEmptyNode();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.isBreak();
      node1.isTrue();
      Node.newNumber((double) 0, 4095, 39);
      node1.checkTreeEquals(node0);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(37, 3069, 37);
      Node node1 = new Node(1, node0, (-1056), (-1669));
      Node node2 = Node.newString(1160, "lengt;", 8, 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString("lengt;", 2, 29);
      node0.getLength();
      Node node3 = Node.newString(54, "lengt;", 2501, 151);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = new Node(38, node3, (-131), 1397);
      Node node5 = new Node(30, node4, node4, 111, 0);
      node1.addChildrenToBack(node5);
      Node.newNumber(4032.49310916619);
      node1.isNull();
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.detachChildren();
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node((-1401), node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node1.setString(",J7#@fOX");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1401
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(86, 86, 86);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((double) 37);
      node1.isCast();
      node0.putIntProp(47, 43);
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      node1.isNumber();
      Node node2 = new Node(86, node0, node0, 48, 57);
      node0.isStringKey();
      Node node3 = new Node((-1225), node2);
      node3.isOnlyModifiesArgumentsCall();
      node0.isGetProp();
      node0.isCast();
      node2.useSourceInfoFrom(node1);
      node0.isCase();
      try { 
        node2.setDouble((-266.256));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString(131, "@ g?2#/");
      Node node1 = Node.newString("\n\nTree2:\n");
      Node node2 = new Node(159, node1, node0);
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber(247.47341, 154, 154);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((-1.0));
      Node node2 = node1.cloneTree();
      node0.getSourceFileName();
      node0.getQualifiedName();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.mayMutateArguments();
      node0.toString();
      node1.setDouble(57);
      Node.extractLineno(648);
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.toString();
      Node node1 = Node.newString("GETELEM");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setVarArgs(true);
      node0.isSetterDef();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(113, nodeArray0, 36, 0);
      node2.copyInformationFrom(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node4 = Node.newString(1, "rk", 875, 50);
      node4.detachChildren();
      Node node5 = new Node((-90), node3, node3, (-1590), 152);
      int int0 = (-6587);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      // Undeclared exception!
      try { 
        ImmutableList.copyOf((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(117, node0, node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      Node node2 = new Node(112);
      node1.getStaticSourceFile();
      node2.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isOptionalArg();
      node2.isAssignAdd();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 186, 4095);
      node1.isEquivalentToShallow(node2);
      node1.getIntProp(83);
      node0.isNoSideEffectsCall();
      node1.checkTreeEquals(node0);
      node1.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      node2.isGetProp();
      node2.isCast();
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 186, 4095);
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      Node node3 = new Node(43, 2, 43);
      Node node4 = node3.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(890);
      node3.isString();
      Node node5 = new Node(1, 38, 37);
      node5.isEquivalentToTyped(node0);
      node4.isGetterDef();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = node0.cloneTree();
      node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isEmpty();
      node2.isEquivalentToTyped(node3);
      node2.isEquivalentToTyped(node0);
      node1.isGetterDef();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      int int0 = Node.DIRECT_EVAL;
      Node node2 = Node.newString(2157, "L!}/GPfrm!hoz(y|");
      Node node3 = new Node(46, node2, node1, node0, 38, (-2207));
      node2.addChildToFront(node3);
      int int1 = Node.SIDE_EFFECT_FLAGS;
      node3.isWhile();
      node3.isAssign();
      node0.isAssignAdd();
      node3.isVoid();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("+*,<");
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node2.getProp(4095);
      node0.hasOneChild();
      node1.setIsSyntheticBlock(false);
      node1.isNew();
      node1.getDirectives();
      node1.isAdd();
      node2.isQuotedString();
      Node node3 = new Node((-214), 3093, 1);
      node3.cloneTree();
      node3.isObjectLit();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString("='G!8vCMt6{uh");
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      node0.getStaticSourceFile();
      node0.isComma();
      Node node1 = new Node(49, node0, node0, 57, (-729));
      node1.isEquivalentToTyped(node0);
      node1.isBreak();
      node1.isNew();
      node0.isObjectLit();
      node1.copyInformationFrom(node0);
      node0.isEmpty();
      node0.isDelProp();
      node0.getStaticSourceFile();
      int int0 = Node.IS_CONSTANT_NAME;
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(1.0, (-1590), (-3764));
      Node node1 = new Node(56);
      Node node2 = new Node(37, node0, node1, node1, (-2962), 29);
      node1.isEquivalentToShallow(node2);
      node2.isNoSideEffectsCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = Node.newNumber((double) 1167, (-1286), (-2056));
      Node node4 = node2.cloneTree();
      node4.setSourceFileForTesting("Object#Element");
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(131);
      node4.isString();
      node0.getQualifiedName();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = Node.DIRECT_EVAL;
      Node node0 = new Node(86);
      node0.isAnd();
      node0.hasChild((Node) null);
      node0.detachChildren();
      node0.isQuotedString();
      node0.isEmpty();
      Node node1 = Node.newNumber(1914.6389939608412, 30, 464);
      node1.isIn();
      node0.isVarArgs();
      node0.useSourceInfoFromForTree(node1);
      node0.isThrow();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      Node node2 = new Node(112);
      node1.getStaticSourceFile();
      node2.isFunction();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node2, node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((-715.1533202294));
      node0.getDirectives();
      Node node1 = new Node(54, node0, node0, node0, 36, 0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isUnscopedQualifiedName();
      Node node2 = node1.copyInformationFrom(node0);
      node1.detachChildren();
      node2.isEmpty();
      Node node3 = new Node(153, node2, node2, node0);
      node0.isGetElem();
      node2.isReturn();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.getDirectives();
      node0.isStringKey();
      Node node1 = Node.newNumber(253.94751429146098);
      Node node2 = new Node(32);
      Node node3 = new Node(12, node0, node2, 4, 55);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(50);
      node2.isUnscopedQualifiedName();
      node1.isDelProp();
      node3.isReturn();
      node2.isTry();
      node1.cloneNode();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 186, 4095);
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      Node node3 = Node.newNumber((-1017.558139436765), 1167, 3010);
      node3.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(890);
      node3.isString();
      // Undeclared exception!
      try { 
        node2.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 186 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte) (-34);
      byteArray0[6] = (byte)53;
      byteArray0[7] = (byte) (-74);
      byteArray0[8] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isDebugger();
      Node node2 = Node.newString(52, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isAnd();
      node1.hasChild(node2);
      node0.detachChildren();
      node0.isLabel();
      node2.isIn();
      node2.isVarArgs();
      node1.useSourceInfoFromForTree(node0);
      node2.isThrow();
      node0.getLineno();
      Node.newString("u}A");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35, 35, 35);
      node0.toString();
      Node node1 = Node.newString("GETELEM 35");
      Node node2 = node0.copyInformationFromForTree(node1);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.setSourceFileForTesting("rk");
      Node node3 = Node.newString("rk");
      node2.getSourceOffset();
      node3.isSyntheticBlock();
      node3.getLength();
      Node node4 = node0.useSourceInfoFromForTree(node3);
      Node node5 = node2.srcrefTree(node0);
      node2.isExprResult();
      node5.wasEmptyNode();
      node4.isThrow();
      node2.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(86, 86, 86);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("89}V<+");
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((double) 37);
      node1.isCast();
      node0.putIntProp(47, 43);
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      node1.isNumber();
      Node node2 = new Node(3231, node0, node0, 48, 57);
      node0.isFunction();
      node0.isStringKey();
      node1.isSyntheticBlock();
      try { 
        node0.setString("r)b~]+*i7Ky1k#");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN 86 [is_dispatcher: com.google.javascript.rhino.Node$IntPropListItem@0000000671] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString((-3651), "");
      node0.isContinue();
      Node node1 = Node.newNumber((double) (-3651), 2462, 95);
      Node node2 = new Node(33, node1, node0, 42, 56);
      Node node3 = node2.cloneTree();
      node1.isUnscopedQualifiedName();
      Node node4 = new Node(87855567, node2);
      Node.newString("");
      node3.isEquivalentTo(node4, false, false, false);
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.removeProp(574);
      node0.isOnlyModifiesArgumentsCall();
      node0.getStaticSourceFile();
      node0.setString("4$!3B ");
      node0.detachChildren();
      Node node1 = new Node((-2136), node0, node0, node0, node0);
      node1.isQuotedString();
      node1.isEmpty();
      Node node2 = Node.newNumber((double) 57, 30, 108);
      node0.isLabel();
      node1.isIn();
      node2.isVarArgs();
      node1.useSourceInfoFromForTree(node2);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(37, node0, (-3124), 46);
      node0.isFor();
      node1.isIf();
      node1.setSideEffectFlags(38);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(124, "-$(?#](A2uqaZH+/0j", 154, 154);
      node0.detachChildren();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.isWhile();
      node0.isSetterDef();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(36, nodeArray0, 2816, 46);
      Node node2 = node0.copyInformationFrom(node1);
      node2.detachChildren();
      node2.isEmpty();
      Node node3 = new Node(57, node2, node0, node0);
      node0.isGetElem();
      node0.checkTreeEqualsImpl(node2);
      node1.isReturn();
      node0.isAssignAdd();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Element");
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isAssignAdd();
      node0.isThis();
      node0.isReturn();
      node0.isTry();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber(0.5, 86, 783);
      Node node1 = Node.newString(16, "Object#Element");
      Node node2 = new Node(30, node0, node1, node1);
      Node node3 = new Node(31, node2);
      node1.toString();
      Node node4 = Node.newString("G@.7v");
      node1.copyInformationFromForTree(node3);
      Node node5 = node3.useSourceInfoIfMissingFrom(node1);
      node3.isDec();
      node4.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.checkTreeTypeAwareEqualsImpl(node5);
      node3.isComma();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 16, 0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node3.isVarArgs();
      node1.isSwitch();
      Node node4 = node1.cloneNode();
      node3.isThrow();
      Node node5 = new Node(57, node2, node2);
      // Undeclared exception!
      try { 
        node4.checkTreeEquals(node5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString(126, "");
      node0.detachChildren();
      node0.isExprResult();
      node0.wasEmptyNode();
      node0.isThrow();
      node0.isDo();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node1.isOptionalArg();
      node1.putIntProp(43, 309);
      Node node2 = new Node(117, node1, 114, 30);
      node2.isFor();
      node0.isIf();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(unionType0).toString();
      jSTypeRegistry0.getType("Unknown class name");
      node0.isDec();
      node0.isDebugger();
      Node node1 = Node.newNumber(3069.0, 220, 53);
      node0.isOr();
      node1.setWasEmptyNode(false);
      Node node2 = new Node(1, node1, node1, node1, node0);
      node2.isCast();
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = (JSType) unionType0;
      jSTypeArray0[3] = (JSType) unionType0;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.replaceChild(node1, node3);
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 86, 86, 2462);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      Node node3 = Node.newString("G@.7v");
      Node node4 = node2.copyInformationFromForTree(node3);
      Node node5 = node3.useSourceInfoIfMissingFrom(node1);
      node1.copyInformationFrom(node5);
      node2.hasChild(node5);
      node4.useSourceInfoIfMissingFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node1.isComma();
      node2.getChangeTime();
      node4.getNext();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(1930, 35, 609);
      Node node1 = new Node(49, node0, 16, 30);
      node1.getLength();
      Node node2 = Node.newString(48, "length", 0, 13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("!0 pr`4", node2, jSType0);
      enumType0.getImplicitPrototype();
      EnumType enumType1 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, enumType0);
      ArrayDeque<TemplateType> arrayDeque0 = new ArrayDeque<TemplateType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayDeque0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn(immutableList0).when(unionType0).getAlternates();
      templateTypeMapReplacer0.caseUnionType(unionType0);
      enumType0.resolve(simpleErrorReporter1, enumType1);
      node1.isIn();
      node1.isVarArgs();
      node0.useSourceInfoFromForTree(node2);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newNumber((-2042.7940801216));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(47, nodeArray0);
      Node node2 = node0.srcrefTree(node1);
      node2.wasEmptyNode();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@.7v");
      node1.setLineno(302);
      node2.setWasEmptyNode(false);
      node0.addChildrenToFront(node2);
      // Undeclared exception!
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      node0.getStaticSourceFile();
      node0.isComma();
      Node node1 = new Node(16, node0, node0, node0, 50, 29);
      node0.isQualifiedName();
      node1.isEquivalentTo(node0, true, false, false);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      node0.getDirectives();
      node0.isCatch();
      Node.newString(4, "k", 120, 42);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.getAncestor(15);
      node0.getLength();
      Node node1 = new Node(55, node0, (-2700), (-2054));
      Node node2 = Node.newString("Object#Key");
      // Undeclared exception!
      try { 
        node2.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(112, 47, (-1274));
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(15, "@.7v");
      node0.setLength(1);
      node3.isName();
      node0.isUnscopedQualifiedName();
      node3.detachChildren();
      node0.isEmpty();
      node1.isEquivalentToTyped(node0);
      Node node4 = new Node(32, node2, node0, 53, 48);
      node3.isEquivalentToTyped(node4);
      node3.isGetterDef();
      node4.isNot();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString((-3079), "com.google.common.collect.ImmutableList$SubList", (-3079), (-3079));
      node0.isRegExp();
      node0.isAdd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 1);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isEquivalentToTyped(node0);
      node0.putIntProp(4095, 395);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, false, true, true);
      node1.isAdd();
      node0.mayMutateArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isThrow();
      node1.isTypeOf();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-444));
      node0.isVarArgs();
      Node node1 = new Node((-1117), node0, node0, 32, (-1117));
      Node node2 = node1.srcref(node0);
      node1.isVarArgs();
      node1.isQualifiedName();
      node1.setLength(14);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(3598);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.isBreak();
      node1.isTrue();
      Node node2 = Node.newNumber((double) 0, 4095, 39);
      node1.isArrayLit();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node((-1850), node0, node0);
      node0.setSourceEncodedPosition(32);
      Node node2 = node0.detachFromParent();
      Node node3 = Node.newString(2, "'OXPmRMBDdSB");
      node3.isOnlyModifiesArgumentsCall();
      node2.getStaticSourceFile();
      node0.isComma();
      node3.isEquivalentTo(node2, true, false, true);
      node0.getBooleanProp(36);
      node3.isUnscopedQualifiedName();
      Node node4 = node1.copyInformationFrom(node2);
      node4.detachChildren();
      Node node5 = new Node(53, node1, node3, node0, node1, 48, 1838);
      node5.isEmpty();
      Node node6 = Node.newNumber((double) 29, 2147483645, 51);
      Node node7 = null;
      try {
        node7 = new Node(37, node3, node1, node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 1);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = Node.newNumber(778.498334434, 40, 1);
      node1.isEquivalentToTyped(node0);
      node2.putIntProp(4095, 395);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isEquivalentTo(node2, false, true, true);
      node2.isAdd();
      node0.mayMutateArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.hasChildren();
      node0.isThrow();
      node1.isTypeOf();
      node0.isNot();
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = Node.DIRECT_EVAL;
      int int1 = Node.IS_CONSTANT_NAME;
      Node node0 = Node.newNumber((double) 86);
      Node node1 = new Node(49, node0, node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      node0.isDec();
      node0.isDebugger();
      Node node1 = Node.newNumber(3069.0, 220, 53);
      node0.isOr();
      node1.setWasEmptyNode(false);
      Node node2 = new Node(1, node1, node1, node1, node0);
      node2.useSourceInfoFrom(node1);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCast();
      node0.putIntProp(54, 32);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isNumber();
      Node node1 = new Node(124, node0, node0, 516, 15);
      node0.isFunction();
      node0.isStringKey();
      node0.isRegExp();
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000337] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(32, (-1665), (-1));
      Node node3 = node2.cloneNode();
      node2.isWhile();
      node3.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 137, 4095);
      node0.isEquivalentToShallow(node1);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.getChildBefore(node0);
      Node node2 = new Node(37);
      node0.isCast();
      node0.cloneNode();
      node0.isCall();
      node2.isCall();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = new Node(42, node0, node0, node0);
      node0.isContinue();
      Node node2 = Node.newNumber((double) 1, 1898, (-1454));
      Node node3 = new Node(52, node1, node2, 2, 40);
      node2.isEquivalentToTyped(node0);
      int int0 = Node.OPT_ARG_NAME;
      node0.isStringKey();
      node0.children();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 86, 86, 2462);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      Node node3 = Node.newString("G@.7v");
      Node node4 = node2.copyInformationFromForTree(node3);
      Node node5 = node3.useSourceInfoIfMissingFrom(node1);
      node2.hasChild(node5);
      node4.useSourceInfoIfMissingFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node1.isComma();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(1104);
      Node node1 = new Node(40, node0, node0, node0, node0, 44, 30);
      Node node2 = new Node(29, node1, 36, 53);
      node1.putIntProp(42, 46);
      node2.getJsDocBuilderForNode();
      Node node3 = Node.newString("NEG");
      Node node4 = new Node(53, node3);
      node2.isDebugger();
      node0.isOnlyModifiesArgumentsCall();
      Node node5 = new Node(108);
      node5.isIf();
      node5.isStringKey();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node1 = Node.newString(50, "", 38, 40);
      Node node2 = new Node(119, node0, node1, node1, node0);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString("g");
      node0.isString();
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      Node node1 = node0.cloneTree();
      node1.isContinue();
      node1.getLength();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      Iterator<TemplateType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isDo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node2.isOnlyModifiesThisCall();
      node1.isAssignAdd();
      node0.isGetterDef();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING g [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("In(");
      node0.putBooleanProp((-1667), true);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(49, 4095, 12);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(1646, "In(");
      node1.setLength(32768);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isName();
      node3.getSourceOffset();
      node1.isUnscopedQualifiedName();
      node1.detachChildren();
      node1.isEmpty();
      node0.isEquivalentToTyped(node3);
      node2.isEquivalentToTyped(node3);
      node1.isGetterDef();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString(3347, "rk");
      Node node1 = new Node(3347, node0, node0, node0, 47, (-103));
      node1.isEquivalentTo(node0, false, true, false);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      node0.getStaticSourceFile();
      node0.isStringKey();
      Node node1 = Node.newNumber((-1897.872804));
      Node node2 = new Node(86, node1, node1, 2, (-170));
      node2.getBooleanProp(1);
      node2.isUnscopedQualifiedName();
      node2.detachChildren();
      node2.isAssign();
      node1.isAssignAdd();
      node2.isVoid();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      nodeArray0[7] = node2;
      nodeArray0[8] = node1;
      Node node3 = null;
      try {
        node3 = new Node(37, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("Q", 2400, 2400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      Node node1 = node0.cloneTree();
      node1.isContinue();
      node1.getLength();
      node0.isQuotedString();
      node1.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      Iterator<TemplateType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isDo();
      node2.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node2.isOnlyModifiesThisCall();
      Node node3 = new Node(124);
      node3.isCast();
      node_SideEffectFlags0.areAllFlagsSet();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 86, 86, 2437);
      Node node1 = new Node(86, node0, node0, node0);
      Node node2 = new Node(86, node1);
      node2.toString();
      Node node3 = Node.newString("G@.7v");
      Node node4 = node2.copyInformationFromForTree(node3);
      node3.getLength();
      node2.setSourceFileForTesting("");
      Node node5 = Node.newString("G@.7v");
      node2.isSyntheticBlock();
      node0.getLength();
      node1.checkTreeEqualsImpl(node0);
      Node node6 = node5.useSourceInfoFromForTree(node2);
      Node node7 = node2.srcrefTree(node4);
      node0.mayMutateArguments();
      node4.isQuotedString();
      node3.isCatch();
      node6.getSourceOffset();
      node7.isEquivalentToShallow(node6);
      Node node8 = null;
      try {
        node8 = new Node(2, node0, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "FUNCTION_PROTOTYPE");
      node0.getDirectives();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node2 = new Node(0);
      Node node3 = node2.cloneNode();
      int int0 = Node.DIRECT_EVAL;
      Node node4 = Node.newString(31, "FUNCTION_PROTOTYPE", 2, 122);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.checkTreeEquals(node1);
      node3.isWhile();
      node4.isBreak();
      node2.cloneTree();
      Node.newString("Object#Element");
      Node node5 = Node.newNumber((double) 54, 49, 49);
      // Undeclared exception!
      try { 
        node5.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      node0.getStaticSourceFile();
      node0.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      node0.isVarArgs();
      node0.getProp(110);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      node0.getDirectives();
      Node node1 = new Node(120, node0, node0, node0, 31, 93);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.clonePropsFrom(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("'OXPmRMBDdSB", true);
      node_NodeMismatch0.equals(simpleSourceFile0);
      Node.newNumber((double) 38, 44, 50);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3963);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(2893);
      Node[] nodeArray0 = new Node[2];
      Node node1 = Node.newString("jsdoc_inifo");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(31, nodeArray0);
      node2.cloneNode();
      node1.addChildToFront(node2);
      int int0 = Node.DIRECT_EVAL;
      Node node3 = null;
      try {
        node3 = new Node(47, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      Iterator<TemplateType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isDo();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node((-3798), node0);
      Node node3 = new Node((-346), node2, (-1986), 1);
      node2.removeChildren();
      node1.mayMutateArguments();
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -346
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      node0.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.isOnlyModifiesArgumentsCall();
      node0.isEmpty();
      Node.newNumber((double) 1, 2, 48);
      node1.isLabel();
      node0.isVarArgs();
      node1.useSourceInfoFromForTree(node0);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      Node node4 = new Node(31, node1, node2, node0, node0, 16, 2417);
      node4.setIsSyntheticBlock(false);
      node2.isCall();
      node4.isGetterDef();
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.isContinue();
      Node node1 = Node.newNumber((-195.0), 46, 4095);
      Node node2 = new Node(4, node1, node0, 54, 8);
      node0.isEquivalentToTyped(node1);
      node2.cloneTree();
      node1.isCase();
      Node node3 = null;
      try {
        node3 = new Node((-664), node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      node1.putIntProp(29, (-1814));
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isReturn();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node1.addSuppression("x QesHAsY@I_8`M");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      boolean boolean0 = false;
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newNumber((-143.3766932), 3345, (-317));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x QesHAsY@I_8`M");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(2.261176, 35, 35);
      Node node1 = node0.cloneNode();
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node0.isWhile();
      Node node2 = node0.cloneNode();
      node0.isBreak();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTrue();
      node1.isBlock();
      node2.addChildToFront(node1);
      node1.isScript();
      node2.getType();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = node0.srcref(node0);
      Node node2 = Node.newString(50, "CharMatcher.forPredicate(");
      node0.setIsSyntheticBlock(true);
      node1.isEquivalentToTyped(node2);
      node2.setString("?jKn`)");
      node2.mayMutateArguments();
      Node node3 = new Node(49, 56, 2400);
      node3.checkTreeEquals(node1);
      Node.newNumber((double) 2, 43, 37);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node0.isEmpty();
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isNew();
      Node node2 = new Node(32);
      node0.isCast();
      Node node3 = new Node(40, node2, 149, 69);
      node3.cloneNode();
      node3.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("rk", (-1147), 2);
      Node node1 = new Node(547, node0, node0, 1, 2861);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      Node node2 = new Node(1690, node0);
      Node node3 = new Node(36, node1, node1, node2);
      Node node4 = node2.clonePropsFrom(node1);
      node4.getJsDocBuilderForNode();
      node2.isBreak();
      Node node5 = null;
      try {
        node5 = new Node(2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.putBooleanProp((-1836), true);
      node0.getBooleanProp((-1836));
      node0.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isEmpty();
      node0.isGetElem();
      Node node1 = new Node((-1), node0, node0, (-688), 39);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = Node.newString(448, "W+,<O", 130, (-517));
      node1.detachChildren();
      node2.isWhile();
      node1.isSetterDef();
      node2.isNull();
      node1.isEmpty();
      int int0 = Node.IS_CONSTANT_NAME;
      node2.isNew();
      node2.isAdd();
      Node node3 = new Node(125);
      node0.isCast();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.isFunction();
      Node node1 = new Node(83, (-2720), 57);
      node1.setWasEmptyNode(true);
      Node node2 = new Node(47, node0, node0, 42, 48);
      Node node3 = new Node(159);
      node0.isEquivalentToTyped(node3);
      node2.cloneTree();
      node2.isCase();
      Node node4 = new Node(820, node2);
      node3.isNot();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      Node node2 = node0.srcref(node1);
      Node node3 = Node.newString(50, "CharMatcher.forPredicate(");
      Node node4 = new Node(105, node1, 1186, 56);
      Node.newString("CharMatcher.forPredicate(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node4.isOptionalArg();
      node0.putIntProp((-13), 2);
      node0.isFor();
      node4.isIf();
      node2.setLineno(49);
      node3.isAssignAdd();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(51, 46, 2147483645);
      node0.isInc();
      node0.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      // Undeclared exception!
      try { 
        node1.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getAncestor(1);
      node1.getLength();
      Node node3 = new Node(42, node1, 42, 43);
      node3.addChildrenToBack(node2);
      node0.getLength();
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("var_args_name", (-1557), 102);
      Node node1 = new Node(102, node0, node0, node0, 36, 1);
      node0.getInputId();
      node1.setInputId((InputId) null);
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node0.isSwitch();
      node0.addChildToFront(node2);
      node1.getJSType();
      node0.isDo();
      node1.addSuppression("var_args_name");
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isSyntheticBlock();
      Node node1 = new Node(154, 3963, 0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(0, "x QesHAsY@I_8`M");
      node3.setLength(39);
      node3.isName();
      node1.getBooleanProp(36);
      node2.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.isEmpty();
      node1.isGetElem();
      node2.isEquivalentToTyped(node0);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 166, (-1301));
      node0.isSwitch();
      StringWriter stringWriter0 = new StringWriter(36);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.putIntProp(93, 93);
      int int0 = Node.DECR_FLAG;
      node0.isStringKey();
      node0.children();
      Node node2 = Node.newNumber((double) 39, (-666), 8);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      node0.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = node0.srcref(node0);
      Node node2 = Node.newString(50, "CharMatcher.forPredicate(");
      node0.setIsSyntheticBlock(true);
      node1.isEquivalentToTyped(node2);
      node2.setString("?jKn`)");
      node2.mayMutateArguments();
      node2.hasChildren();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(39, 57, 37);
      node2.setWasEmptyNode(true);
      node2.isGetterDef();
      node2.hasOneChild();
      node0.isSetterDef();
      Node node3 = new Node(4095, node1, node1, 4, 39);
      node0.isFunction();
      node3.isStringKey();
      node3.isSyntheticBlock();
      node1.useSourceInfoFrom(node2);
      node0.setIsSyntheticBlock(false);
      node2.isCall();
      node1.isGetterDef();
      node0.getJsDocBuilderForNode();
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isAssignAdd();
      node0.isThis();
      node0.isReturn();
      node0.isTry();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      Node node2 = Node.newNumber((double) 55, 0, (-946));
      node0.isNot();
      node0.isCase();
      node1.isLocalResultCall();
      Node node3 = Node.newNumber((double) 4095);
      Node node4 = new Node(2023, node1, node2, node2, node3, (-539), 57);
      node4.isAnd();
      Node node5 = null;
      try {
        node5 = new Node(49, node4, node1, node0, node1, 40, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node0 = Node.newString((-4096), "Object#Element", 33, 1294);
      jSTypeRegistry0.identifyNonNullableName("second new child has existing parent");
      node0.getInputId();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x QesHAsY@I_8`M");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(2.261176, 35, 122879);
      Node node1 = new Node(47);
      Node node2 = node0.cloneNode();
      int int0 = Node.DIRECT_EVAL;
      node2.checkTreeEquals(node0);
      node1.isWhile();
      node1.cloneNode();
      node0.isBreak();
      node0.isTrue();
      Node.newNumber((double) 55, 4095, 40);
      node1.isExprResult();
      node0.checkTreeEquals(node2);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber(1871.8873181680626);
      node0.toString();
      Node node1 = Node.newString("NUMBER 1871.8873181680626");
      Node node2 = new Node(115, node0, 55, 51);
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.getLength();
      node3.setSourceFileForTesting("COLON");
      Node node4 = Node.newString("zK;");
      node0.isSyntheticBlock();
      node4.getLength();
      Node node5 = Node.newString("Object#Element", 32, 1);
      Node node6 = new Node((-559), node1, (-919), 0);
      node5.checkTreeEqualsImpl(node6);
      node1.checkTreeEquals(node0);
      Node node7 = node5.useSourceInfoFromForTree(node0);
      node6.srcrefTree(node7);
      node0.mayMutateArguments();
      node7.isQuotedString();
      node0.isCatch();
      node0.isEquivalentToShallow(node7);
      Node node8 = null;
      try {
        node8 = new Node(2, node0, node5, node7);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.setOptionalArg(false);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      Node node1 = new Node(39);
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node1.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractLineno(124);
      Node node0 = Node.newString("-$(?#](A2uqaZH+/0j", 498, 102);
      Node node1 = new Node(951, node0, node0, (-1045), 38);
      node1.isFalse();
      node1.isTypeOf();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node1.getLastSibling();
      node2.isCast();
      node2.putIntProp(2, 2);
      Node.newNumber((double) 39, 32, 2661);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 951
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(124, "-$(?#](A2uqaZH+/0j", 154, 154);
      Node node1 = new Node(48, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.getJsDocBuilderForNode();
      node0.isBreak();
      Node node3 = new Node((-1377), node1);
      node2.getAncestor(1488);
      node3.useSourceInfoIfMissingFromForTree(node1);
      node2.setString("-!i@\"7pD0,Ku_[c");
      Node.extractLineno(31);
      node3.mayMutateArguments();
      node1.isEquivalentTo(node2, true, true, true);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(124, "-$(?#](A2uqaZH+/0j", 154, 154);
      Node node1 = new Node(48, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.getJsDocBuilderForNode();
      node0.isBreak();
      Node node3 = new Node((-1377), node1);
      node3.srcrefTree(node2);
      node2.getAncestor(1488);
      node2.setString("-!i@\"7pD0,Ku_[c");
      Node.extractLineno(31);
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(43);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.isBreak();
      node1.isTrue();
      Node.newNumber((double) 0, 4095, 39);
      node0.isBlock();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node((-4239));
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.SLASH_V;
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4239
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      node0.getInputId();
      node0.putProp(157, (Object) null);
      Node node1 = new Node(38, node0, node0, node0, 166, (-1301));
      node0.isSwitch();
      node1.isEquivalentTo(node0, false, false, true);
      node0.setWasEmptyNode(false);
      node0.isIn();
      Node node2 = null;
      try {
        node2 = new Node(39, node1, node0, node0, 43, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.addSuppression("Object#Key");
      node0.setSourceFileForTesting("Object#Element");
      Node node1 = Node.newString("\\R)te87&Sb2S3#,");
      node1.isSyntheticBlock();
      node0.getLength();
      node0.wasEmptyNode();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("Object#Element", 1646, 53);
      node2.checkTreeEquals(node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString("x QesHAsY@I_8`M", 4095, 36);
      StringWriter stringWriter0 = new StringWriter(47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node3.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node1.isOnlyModifiesArgumentsCall();
      node2.getProp(4095);
      node0.hasOneChild();
      node0.isSetterDef();
      node1.isQualifiedName();
      node2.isFunction();
      node1.setIsSyntheticBlock(false);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node0.isVarArgs();
      node2.getQualifiedName();
      node1.isLabelName();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs+<Y@I_8`");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node1.getStaticSourceFile();
      Node node2 = Node.newNumber((double) 54, 1322, 36);
      node1.isEquivalentToTyped(node2);
      node2.putIntProp(57, 55);
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.isAdd();
      node2.mayMutateArguments();
      node0.hasChildren();
      node0.isThrow();
      node0.isOr();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.isBreak();
      node1.isTrue();
      Node.newNumber((double) 0, 4095, 39);
      node0.isExprResult();
      node1.checkTreeEquals(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.isFunction();
      Node node1 = new Node(83, (-2720), 57);
      node1.setWasEmptyNode(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.checkTreeEquals(node0);
      node1.isQuotedString();
      node1.removeProp(1786);
      node0.isInc();
      Node.newNumber((-1517.35337));
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 1);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = Node.newNumber(778.498334434, 40, 1);
      node1.isEquivalentToTyped(node0);
      node2.putIntProp(4095, 395);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.isAdd();
      node0.mayMutateArguments();
      node2.hasChildren();
      node0.isThrow();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Element");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<p+|7L0PBE");
      Node.extractLineno(120);
      Node node0 = new Node(0, 295, 101);
      Node node1 = new Node(906, node0);
      Node node2 = node0.srcref(node1);
      String string0 = "*{";
      Node node3 = Node.newString((-1078), "*{", 4095, (-453));
      node0.addChildrenToBack(node3);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString(126, "");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      Node node1 = new Node(52, 1073741824, 49);
      Node node2 = node0.cloneTree();
      node1.setLength((-1688));
      node2.isCase();
      Node node3 = new Node(57, 47, 49);
      Node node4 = new Node(57, node3);
      node0.isNot();
      node4.isCase();
      node2.isContinue();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "");
      node1.putBooleanProp((-1310), false);
      node0.isAssign();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node_NodeMismatch0.equals(simpleSourceFile0);
      node1.isFor();
      Node node2 = null;
      try {
        node2 = new Node(52, node0, (Node) null, node0, (Node) null, 15, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 1);
      node1.copyInformationFrom(node0);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = Node.newNumber(778.498334434, 40, 1);
      node1.isEquivalentToTyped(node0);
      node2.putIntProp(4095, 395);
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isAdd();
      node0.isQuotedString();
      node0.getInputId();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.addSuppression("Object#Key");
      node0.setSourceFileForTesting("Object#Element");
      Node node1 = Node.newString("\\R)te87&Sb2S3#,");
      node1.isSyntheticBlock();
      node0.getLength();
      node0.wasEmptyNode();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newString("Object#Element", 1646, 53);
      node2.checkTreeEquals(node0);
      Node node3 = Node.newString(42, "In(", 4, (-1590));
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node3.mayMutateArguments();
      node3.isQuotedString();
      node4.isCatch();
      node2.isEmpty();
      Node node5 = Node.newString("|5i|'J jPd", 53, 48);
      Node node6 = new Node(1, node0, node0, node5);
      Node node7 = Node.newString(83, "Object#Key", (-1497), 2);
      node7.isGetElem();
      node1.isReturn();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(1930, 35, 609);
      Node node1 = new Node(49, node0, 16, 30);
      node1.getLength();
      Node node2 = new Node((-381), node1, node1, node1, (-1928), 57);
      node1.isEquivalentToShallow(node0);
      node2.isName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node2.copyInformationFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      node2.isSwitch();
      node1.isEmpty();
      node2.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesThisCall();
      node3.isCase();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      node1.isNumber();
      int int0 = (-211);
      Node node2 = new Node(49, node1, node1, 48, (-211));
      node1.isFunction();
      node0.isStringKey();
      node1.isSyntheticBlock();
      try { 
        node2.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      node1.putIntProp(29, (-1814));
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isReturn();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.useSourceInfoFrom(node0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      Node node1 = new Node((-536870912), nodeArray0);
      node1.getSourcePosition();
      node0.checkTreeEquals(node0);
      node0.isInc();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node.newNumber(0.0, 54, 56);
      Node node1 = Node.newString("");
      Node node2 = new Node(4, node0, node1, node1, 56, 949);
      Node node3 = Node.newString("", 41, 4095);
      node3.isEquivalentToShallow(node2);
      node1.isNoSideEffectsCall();
      node3.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isOnlyModifiesThisCall();
      node0.isWith();
      Node node1 = new Node((-2704), (-3567), 43);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2704
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString("EQUALS");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getQualifiedName();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(8, node0, node0, node1, 1, 54);
      node2.removeChild(node1);
      node2.isCall();
      Node node3 = null;
      try {
        node3 = new Node((-1419), node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("Q", 2400, 2400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      Node node1 = node0.cloneTree();
      node1.isContinue();
      node1.getLength();
      node0.isQuotedString();
      node1.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      Node node2 = Node.newString("Q");
      Node node3 = Node.newNumber((double) 2, 56, 2);
      node0.addChildrenToBack(node3);
      Node node4 = Node.newString(32, "Object#Element", 93, 4095);
      node4.setCharno((-381));
      node0.isVarArgs();
      node2.mayMutateArguments();
      node0.hasChildren();
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node2 = new Node(39, 57, 37);
      Node node3 = Node.newNumber((double) 4095);
      Node node4 = new Node(4095, node1, node0, (-1291), 0);
      node0.isEquivalentTo(node2, true, true, false);
      node1.getBooleanProp(56);
      node3.isUnscopedQualifiedName();
      node2.detachChildren();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node4.isAssignAdd();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      Node node3 = Node.newString(126, "k4;U,B|iY/FUvqKPp1?");
      node3.isAssign();
      node0.isAnd();
      node0.hasChild(node3);
      node1.detachChildren();
      node0.isOnlyModifiesArgumentsCall();
      node0.isEmpty();
      Node node4 = Node.newNumber(1758.05148853, 300, 30);
      node1.isLabel();
      node3.isIn();
      node4.isVarArgs();
      node2.useSourceInfoFromForTree(node0);
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 166, (-1301));
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 968, 40);
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), false);
      node0.getBooleanProp(4095);
      node1.setWasEmptyNode(false);
      node1.isEmpty();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node0.putIntProp(2, 2023);
      int int0 = Node.DECR_FLAG;
      node1.isStringKey();
      node0.children();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((double) (-1590), 21, 48);
      Node node1 = new Node(285);
      Node node2 = new Node(93, node1, node1, node0, 124, (-324));
      node1.isEquivalentToShallow(node2);
      node2.isNoSideEffectsCall();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(1);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(98, node0, node1, node1, node1);
      node2.isOnlyModifiesArgumentsCall();
      node2.isSwitch();
      node2.cloneTree();
      Node.newString(36, "ox");
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString(126, "");
      node0.putBooleanProp((-1310), false);
      node0.detachChildren();
      node0.isLabel();
      node0.isWhile();
      Node node1 = Node.newString("", 1, 37);
      node1.isAssign();
      node1.isAssignAdd();
      Node node2 = Node.newString("");
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 16, (-1301));
      node1.isEquivalentToShallow(node2);
      node2.isName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNumber();
      Node node3 = null;
      try {
        node3 = new Node(57, node0, node2, 36, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(50, node0, node0, 52, 30);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Node node2 = node1.getAncestor(0);
      Node node3 = new Node(1083, node2, 429, 52);
      node0.getLength();
      node3.isScript();
      Node node4 = null;
      try {
        node4 = new Node(39, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "");
      node1.putBooleanProp((-1310), false);
      node0.isAssign();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.detachChildren();
      node1.isNull();
      node0.isEmpty();
      node0.isDelProp();
      node1.getStaticSourceFile();
      int int0 = Node.IS_CONSTANT_NAME;
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(23, 46, 15);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getAncestor(1);
      Node node2 = new Node(42, node1, 42, 43);
      node0.getLength();
      node2.isIn();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      Node node1 = new Node((-536870912), nodeArray0);
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = Node.newString(83, "L!}/GPfrm!hoz(y|");
      nodeArray0[5] = node2;
      nodeArray0[6] = node2;
      nodeArray0[7] = node1;
      node0.addChildToFront(node0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isWhile();
      node1.isAssign();
      node0.isAssignAdd();
      node1.isVoid();
      node0.addChildBefore(node2, node0);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString("sB0mp_t^t");
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      node0.getStaticSourceFile();
      node0.isComma();
      Node node1 = new Node(57, node0, node0, 38, (-1850));
      node0.isEquivalentToTyped(node1);
      node1.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNew();
      node1.isObjectLit();
      node0.isNull();
      node1.isEmpty();
      node0.isDelProp();
      node1.getStaticSourceFile();
      int int0 = Node.IS_CONSTANT_NAME;
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node(1186);
      Node node1 = new Node(2908, node0, node0, node0, node0, 53, 126);
      Node node2 = new Node(1104, node1, (-3367), 46);
      node2.putIntProp(2, 38);
      node0.getQualifiedName();
      node1.getJsDocBuilderForNode();
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = new Node(108, node3);
      node4.isDebugger();
      Node node5 = new Node(15);
      node5.isOnlyModifiesArgumentsCall();
      node5.isIf();
      node1.isStringKey();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(39, node0, 21, 29);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 3528, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Node node3 = node2.getAncestor(0);
      Node node4 = new Node(1083, node3, 410, 52);
      node0.getLength();
      node4.isScript();
      Node node5 = null;
      try {
        node5 = new Node(39, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(0, 48, 119);
      node1.setWasEmptyNode(true);
      node0.isGetterDef();
      node0.hasOneChild();
      node1.isSetterDef();
      Node node2 = new Node(52, 37, 154);
      Node node3 = node2.cloneNode();
      node0.getSourcePosition();
      node3.isWhile();
      node0.isInc();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString("Q", 2400, 2400);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      Node node1 = node0.cloneTree();
      node1.isContinue();
      node1.getLength();
      node0.isQuotedString();
      node1.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      Iterator<TemplateType> iterator0 = priorityQueue0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isDo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node2.isOnlyModifiesThisCall();
      Node node3 = new Node(0, node2, 611, 31);
      node1.removeChildren();
      node3.mayMutateArguments();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString(1457, "DELPROP", 1457, 1457);
      node0.setVarArgs(true);
      Node node1 = new Node(1457, node0);
      node1.getChildCount();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition((-16));
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("x QesHAs.@I_8`M", false);
      Node node1 = new Node(39, node0, node0, node0, node0, 47, 47);
      node0.checkTreeEqualsImpl(node0);
      node0.setString("x QesHAs.@I_8`M");
      node1.putIntProp(54, 39);
      Node.newNumber((double) 1);
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      node0.getStaticSourceFile();
      node0.isComma();
      Node node1 = Node.newNumber((-1897.872804));
      Node node2 = new Node(86, node1, node1, 2, (-170));
      node0.isEquivalentTo(node2, false, true, false);
      node2.getBooleanProp(1);
      node2.isUnscopedQualifiedName();
      node0.copyInformationFrom(node1);
      node2.detachChildren();
      node2.isEmpty();
      Node node3 = new Node((-5129), node2, node2, node2);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node((-593), node0);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "");
      node1.putBooleanProp((-1310), false);
      node0.isAssign();
      node1.isParamList();
      node0.hasChild(node1);
      node1.detachChildren();
      Node.newString(54, "", (-1310), 32);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(51);
      Node node2 = node1.cloneNode();
      node1.addChildToFront(node2);
      int int0 = Node.DIRECT_EVAL;
      Node node3 = Node.newString("\n\nSubtree2: ");
      node1.checkTreeEquals(node3);
      node0.isWhile();
      node0.isBreak();
      node3.isTrue();
      Node node4 = Node.newNumber((-3018.098378456787), 40, (-1590));
      node4.isFromExterns();
      node3.isBlock();
      node3.addChildToFront(node0);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.removeChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      // Undeclared exception!
      try { 
        node1.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4062);
      Node node2 = node0.getLastSibling();
      node0.isCast();
      node1.putIntProp(64, 56);
      Node node3 = Node.newNumber((double) 40, 4, 54);
      node3.setVarArgs(true);
      Node node4 = null;
      try {
        node4 = new Node(106, node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 16, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node(1186);
      Node node1 = new Node(2908, node0, node0, node0, node0, 53, 126);
      Node node2 = new Node(1104, node1, (-3367), 46);
      node2.putIntProp(2, 38);
      node1.getJsDocBuilderForNode();
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = new Node(108, node3);
      node4.isDebugger();
      Node node5 = new Node(15);
      try { 
        node5.setDouble(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCall();
      node0.isWith();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isScript();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCall();
      node0.isWith();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, 56);
      node1.isEquivalentToShallow(node2);
      node1.isFor();
      node2.addSuppression("com.google.javascript.rhino.Node$AncestorIterable$1");
      Node node3 = Node.newString("com.google.javascript.rhino.Node$AncestorIterable$1");
      node0.addChildrenToBack(node3);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.Node$AncestorIterable$1", true);
      node2.useSourceInfoIfMissingFrom(node3);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString("Q", 2400, 2400);
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      Node node1 = node0.cloneTree();
      node1.isContinue();
      node1.getLength();
      node0.isQuotedString();
      node1.children();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(408);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.setString("Object#Element");
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isCall();
      node0.isWith();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isAssignAdd();
      node0.isThis();
      node0.getNext();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
      node0.getSourcePosition();
      node1.checkTreeEquals(node0);
      node1.isWhile();
      Node node2 = null;
      try {
        node2 = new Node(924, node1, node1, node1, node0, 16, 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      node0.isCast();
      node0.putIntProp(55, 846);
      Node node1 = new Node(124);
      node0.checkTreeEqualsImpl(node1);
      try { 
        node0.setString("v6EPt?P:'eq{'");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000672] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(38, node0, node0, node0, 166, (-1301));
      node0.isSwitch();
      node1.isEquivalentTo(node0, false, false, true);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.setWasEmptyNode(false);
      node0.isIn();
      node1.isDec();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 36, 53);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node1.detachChildren();
      node2.isEmpty();
      Node node3 = new Node(53, node0, node0, node2);
      node0.isGetElem();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      Node node0 = new Node(1186);
      Node node1 = new Node(2908, node0, node0, node0, node0, 53, 126);
      Node node2 = new Node(1104, node1, (-3367), 46);
      node2.putIntProp(2, 38);
      node1.getJsDocBuilderForNode();
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = new Node(108, node3);
      node4.isDebugger();
      node3.isOnlyModifiesArgumentsCall();
      node1.isQuotedString();
      node0.getInputId();
      node1.isInstanceOf();
      node2.putProp(43, node1);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition((-16));
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      Node node1 = new Node(57, 49, 536870885);
      Node.newString(30, "k~;Mpb#MZTV~Swx|7oF");
      // Undeclared exception!
      try { 
        node1.setDouble((-1.0));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 36, 53);
      node0.isFromExterns();
      node0.isNoSideEffectsCall();
      node0.isGetterDef();
      Node node1 = new Node(37, 53, 3345);
      Node node2 = node1.cloneNode();
      node0.addChildToFront(node2);
      node0.getSourcePosition();
      node1.checkTreeEquals(node0);
      node1.isWhile();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString(33, "S`", 77, 30);
      Node node1 = new Node(337, node0, node0, node0, node0, 23, 12);
      // Undeclared exception!
      try { 
        node1.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 337
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node2 = Node.newString(52, "");
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node2);
      node0.detachChildren();
      node2.isOnlyModifiesArgumentsCall();
      node2.isEmpty();
      Node node3 = Node.newNumber((double) 39, 51, 32);
      node3.isLabel();
      node3.getLength();
      node2.isIn();
      node1.srcrefTree(node2);
      node2.isVarArgs();
      Node node4 = node1.useSourceInfoFromForTree(node3);
      node4.toStringTree();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, 50, (-3112));
      node1.toString();
      node0.setSourceEncodedPosition(271);
      node0.putIntProp(2, 2023);
      int int0 = Node.DECR_FLAG;
      node1.isStringKey();
      node0.children();
      node0.isOr();
      Node.extractLineno((-2982));
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node(1186);
      Node node1 = new Node(2908, node0, node0, node0, node0, 53, 126);
      Node node2 = new Node(1105, node1, (-3367), 46);
      node2.putIntProp(2, 38);
      node1.getJsDocBuilderForNode();
      Node node3 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = new Node(108, node3);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      Node node3 = node0.getLastSibling();
      node3.isCast();
      Node node4 = Node.newString(1124, "7oh.g[4TCJ2", 57, 39);
      node4.putIntProp(2, 287);
      Node.newNumber(52.0, 15, 8287);
      Node node5 = null;
      try {
        node5 = new Node(31, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("Q", 2400, 2400);
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      Node node1 = Node.newString("Y@lYp%q%g7|j)35");
      Node node2 = new Node(52, node0, node0, node0, node1);
      node0.addChildrenToBack(node2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("trxJi='`HEMjk|(P", false);
      node2.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setString("Q");
      node1.isLabel();
      node2.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1393);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.addSuppression((String) null);
      node0.isComma();
      Node node1 = Node.newNumber(2398.8201801573855, 2, 1771);
      Node node2 = new Node(1086, node1, node1, 37, 50);
      node2.isEquivalentToTyped(node1);
      node2.cloneTree();
      node1.isEmpty();
      node1.putProp(54, "S:");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage((String) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node1.addSuppression("Object#Key");
      node1.isComma();
      Node node2 = Node.newNumber((double) 1, 1898, (-1454));
      Node node3 = new Node(52, node1, node2, 322, 40);
      node2.isEquivalentToTyped(node0);
      node3.cloneTree();
      node2.isEmpty();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("S:", false);
      node2.putProp(1186, simpleSourceFile0);
      node3.isOnlyModifiesThisCall();
      node1.isCase();
      Node node4 = new Node(115, node3);
      node4.srcref(node1);
      node4.isNot();
      node4.isCase();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "");
      node1.putBooleanProp((-1310), false);
      node0.isAssign();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.detachChildren();
      node0.isEmpty();
      node1.isIf();
      node1.setLineno(48);
      Node node2 = Node.newString("");
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(0, 48, 119);
      node1.setWasEmptyNode(true);
      node0.isGetterDef();
      node0.hasOneChild();
      node1.isSetterDef();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = node1.copyInformationFrom(node2);
      node2.detachChildren();
      node3.isEmpty();
      Node node4 = new Node(42, node3, node2, node1);
      node0.isReturn();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      node0.isDec();
      arrayList0.add((JSType) null);
      arrayList0.spliterator();
      Node node1 = Node.newString(1758, "\n\nTree2:\n");
      node0.isEquivalentToShallow(node1);
      node1.mayMutateArguments();
      node1.isTry();
      node1.getBooleanProp(55);
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString(124, "", 124, 124);
      Node node1 = Node.newNumber(2653.20318792);
      Node node2 = node0.clonePropsFrom(node1);
      node1.getJsDocBuilderForNode();
      node1.isBreak();
      Node node3 = new Node((-1656), node2);
      node0.getAncestor(1);
      Node node4 = Node.newNumber((-1517.35337), 49, 46);
      Node node5 = new Node(102, node4, 30, 112);
      node5.getLength();
      node3.isIn();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(29, "");
      Node node2 = node0.copyInformationFrom(node1);
      node0.isRegExp();
      node2.isIf();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.toString();
      node2.setChangeTime(51);
      node2.isEquivalentTo(node0, false, false, true);
      node1.getInputId();
      node1.toString();
      node0.getSourcePosition();
      node2.putIntProp(2, 910);
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAdd();
      node1.isQuotedString();
      node2.getInputId();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isOnlyModifiesThisCall();
      node0.isWith();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isAssignAdd();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isCatch();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(32, node1, node0, node0, node0, 40, 56);
      node1.addChildToFront(node2);
      node1.getSourcePosition();
      // Undeclared exception!
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      int int0 = 48;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 48, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString((-472), "", 35, 35);
      Node node1 = new Node(1353, node0, node0, 3528, 1947);
      node1.getJSType();
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node2 = Node.newString(52, "");
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node2);
      node0.detachChildren();
      node2.isOnlyModifiesArgumentsCall();
      node2.isEmpty();
      Node node3 = Node.newNumber((double) 39, 51, 32);
      node3.isLabel();
      node3.getLength();
      node2.isIn();
      node2.isVarArgs();
      node1.useSourceInfoFromForTree(node3);
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = Node.newString(83, "L!}/GPfrm!hoz(y|");
      nodeArray0[5] = node2;
      nodeArray0[6] = node2;
      node2.toString();
      node0.detachChildren();
      node0.isEmpty();
      Node.newString((-1332), "x QesHAsY@I_8`M");
      Node node3 = new Node(40, node1, node0, node1);
      node1.isGetElem();
      node2.isReturn();
      Node node4 = Node.newString(30, "L!}/GPfrm!hoz(y|", 52, 4095);
      node4.isNew();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(2.261176, 35, 122879);
      node0.toString();
      Node node1 = Node.newString("NUMBER 2.261176 35");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getLength();
      node2.setVarArgs(true);
      node0.setSourceFileForTesting("rk");
      Node node3 = Node.newString("rk");
      node3.isSyntheticBlock();
      node3.getLength();
      node3.wasEmptyNode();
      node0.checkTreeEqualsImpl(node3);
      node0.checkTreeEquals(node3);
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node0.mayMutateArguments();
      node4.isQuotedString();
      node3.isCatch();
      node4.removeProp(31);
      node0.isInc();
      Node node5 = Node.newNumber((double) 47);
      Node node6 = Node.newString("v");
      Node node7 = new Node(31, node6, node6, node2, node2);
      // Undeclared exception!
      try { 
        node7.removeChildAfter(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      node0.getStaticSourceFile();
      node0.isComma();
      Node node1 = new Node((-597), node0, node0, 1, 2);
      node1.isEquivalentToTyped(node0);
      node1.isBreak();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNew();
      node0.isObjectLit();
      node0.isNull();
      node0.isEmpty();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(102);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 102
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(124, nodeArray0, 36, 53);
      node0.isFromExterns();
      node0.isVar();
      node0.isGetterDef();
      node0.isQualifiedName();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node((-927), node0, node0, 120, 53);
      node1.getInputId();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(39, node0, 21, 29);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 3528, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      Node node3 = node2.getAncestor(0);
      Node node4 = Node.newNumber(1308.12322477209);
      Node node5 = new Node(1083, node3, 410, 52);
      node0.getLength();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isDebugger();
      node3.isIf();
      node0.getProp((-341));
      node4.getCharno();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isOnlyModifiesThisCall();
      node0.isWith();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node1 = new Node(12, node0, node0, 38, (-1691));
      node1.isAssignAdd();
      node1.getProp(53);
      Node.newNumber((-3362.3457849));
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(39, node0, 21, 29);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 3528, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getObjectIndexKey();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      Node node3 = node2.getAncestor(0);
      Node node4 = new Node(1083, node3, 410, 52);
      node0.getLength();
      Node node5 = Node.newString(43, "DEFAULT_CASE", (-2119), 11);
      node5.getInputId();
      node3.getLineno();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node0.isFunction();
      Node node2 = Node.newString(1919, "");
      Node node3 = new Node(1, node2, node2, node1, 40, 46);
      Node node4 = node2.useSourceInfoFromForTree(node3);
      node3.isContinue();
      Node node5 = node4.srcref(node3);
      node5.isEquivalentToShallow(node0);
      node0.setLength(132);
      node4.isOnlyModifiesArgumentsCall();
      node4.isInc();
      node0.isAssignAdd();
      node5.isVoid();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.toString(false, false, false);
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 968, (-1407));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node0.detachChildren();
      node1.isEmpty();
      node1.isGetElem();
      node1.isEquivalentToTyped(node1);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(126, "");
      node1.putBooleanProp((-1310), false);
      node0.isAssign();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.detachChildren();
      node0.isEmpty();
      node1.isLabel();
      node1.isOnlyModifiesArgumentsCall();
      node1.isBreak();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newNumber((-3363.233243679326), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber(2199.888);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getAncestors();
      Node node2 = new Node(3069, node0, node0, 968, (-1412));
      node0.isEquivalentToShallow(node0);
      node2.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node2.isUnscopedQualifiedName();
      node2.hasChild(node0);
      node0.detachChildren();
      node2.isEmpty();
      node2.isGetElem();
      node2.isEquivalentToTyped(node2);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      node1.setVarArgs(false);
      Node node2 = node0.srcref(node1);
      Node.newString(50, "CharMatcher.forPredicate(");
      Node node3 = new Node(105, node1, 1186, (-855));
      Node.newString("CharMatcher.forPredicate(");
      node0.putIntProp(0, 2);
      int int0 = Node.DECR_FLAG;
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node1.isDebugger();
      node3.isIf();
      node2.setLineno(49);
      Node node4 = Node.newString("CharMatcher.forPredicate(");
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      Node node2 = new Node((-597), node1, node1, 1, 2);
      node2.isEquivalentToTyped(node1);
      node0.putIntProp(42, 55);
      node2.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAdd();
      node1.isObjectLit();
      node1.isNull();
      node0.isEmpty();
      node2.isDelProp();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(102);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 102
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      InputId inputId0 = new InputId("");
      inputId0.toString();
      inputId0.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(2.261176, 35, 122879);
      node0.toString();
      Node node1 = Node.newString("NUMBER 2.261176 35");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getLength();
      node0.setSourceFileForTesting("rk");
      Node node3 = Node.newString("rk");
      node3.isSyntheticBlock();
      node3.getLength();
      node3.wasEmptyNode();
      node0.checkTreeEqualsImpl(node3);
      node0.checkTreeEquals(node3);
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node0.mayMutateArguments();
      node4.isQuotedString();
      node3.isCatch();
      node4.removeProp(31);
      node0.isInc();
      Node.newNumber((double) 47);
      node2.getProp((-4665));
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(15, node1, node0, node1);
      node2.setSourceEncodedPosition(57);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isDebugger();
      node1.isSwitch();
      Node node3 = node2.cloneTree();
      node2.isContinue();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.putBooleanProp((-1328), false);
      node0.detachChildren();
      node0.isWhile();
      node0.isSyntheticBlock();
      Node node1 = new Node(155, 3998, 0);
      node0.cloneTree();
      node1.setLength(39);
      node1.isCast();
      node1.isDebugger();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.getType((String) null);
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((double) 30, 2, 42);
      node1.isCast();
      node1.putIntProp(39, 0);
      Node node2 = Node.newNumber((-793.43212), (-2211), 846);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = new Node(1302, node0, node1);
      node2.isTrue();
      SimpleErrorReporter simpleErrorReporter3 = new SimpleErrorReporter();
      node0.isAdd();
      node0.isQuotedString();
      node3.getInputId();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Node node1 = Node.newNumber((double) 40, 56, 8233);
      node0.isCast();
      node1.putIntProp(55, 846);
      Node node2 = Node.newNumber(1743.4867, 12, (-1538));
      Node node3 = new Node((-2567), node1, node2);
      node3.isTrue();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      node3.isAdd();
      node2.isQuotedString();
      node2.getInputId();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node1.addSuppression("Object#Key");
      node1.isComma();
      Node node2 = Node.newNumber((double) 1, 1898, (-1454));
      Node node3 = new Node(52, node1, node2, 322, 40);
      node2.isEquivalentToTyped(node0);
      node3.cloneTree();
      node2.isEmpty();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("S:", false);
      node2.putProp(1186, simpleSourceFile0);
      node3.isOnlyModifiesThisCall();
      node1.isCase();
      Node node4 = new Node(115, node3);
      node4.isNot();
      // Undeclared exception!
      try { 
        node4.addChildToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node2 = Node.newString(52, "d");
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node2);
      node0.detachChildren();
      node2.isEmpty();
      Node node3 = Node.newNumber((double) 39, 51, 32);
      node3.isLabel();
      node1.isOnlyModifiesArgumentsCall();
      node1.isQuotedString();
      node1.getInputId();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isOnlyModifiesArgumentsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      node0.isGetterDef();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0);
      node0.getDirectives();
      Node node1 = new Node(120, node0, node0, node0, 31, 93);
      node1.checkTreeEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.clonePropsFrom(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("'OXPmRMBDdSB", true);
      node_NodeMismatch0.equals(simpleSourceFile0);
      Node.newNumber((double) 38, 44, 50);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "new child has existing parent");
      Node node0 = new Node(35, 35, 35);
      Node node1 = new Node(57, node0, 32, 39);
      node1.getLength();
      Node node2 = Node.newString(56, "DEFAULT_CASE", 38, 32);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.checkTreeEqualsImpl(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      node0.getProp(47);
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node0.isFunction();
      Node node2 = Node.newString(1919, "");
      Node node3 = new Node(1, node2, node2, node1, 40, 46);
      Node node4 = node2.useSourceInfoFromForTree(node3);
      node0.isVarArgs();
      Node node5 = node4.srcref(node3);
      node5.isEquivalentToShallow(node0);
      node0.setLength(132);
      node4.isOnlyModifiesArgumentsCall();
      node4.isInc();
      node0.removeFirstChild();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString("", 3069, 3069);
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("");
      Node node1 = Node.newString("trxJi='`HEMjk|(P");
      node0.addChildrenToBack(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/5!Ca!Z?g)'GwL", true);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      String string0 = "`;n?hD0-l&N)99";
      Node node3 = null;
      try {
        node3 = new Node(15, node2, node1, node2, (-842), 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      Node node1 = Node.newString((-38), "Object#Key", 36, 122);
      node1.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      node1.isFunction();
      Node node2 = new Node(4095, (-515), (-1445));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("5", true);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(47);
      node1.setVarArgs(false);
      Node node2 = node1.srcref(node0);
      Node.newString(50, "'OXPmRMBDdSB");
      Node node3 = new Node(102, node1, 54, 53);
      Node node4 = Node.newString("] PM@wyq{c}0");
      node4.putIntProp(29, 49);
      int int0 = Node.DECR_FLAG;
      node1.getJsDocBuilderForNode();
      node3.isDebugger();
      node2.isIf();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isCatch();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isEmpty();
      node0.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isFalse();
      Node node1 = new Node(939, node0, node0, 50, 16);
      node1.isTypeOf();
      node1.isSetterDef();
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString(2201, "", 1, 1);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString((-1384), "\"+[*!+/F{U^_w_#=$");
      Node node1 = Node.newString(4095, "\"+[*!+/F{U^_w_#=$", (-1590), 47);
      node1.setSourceEncodedPosition(1029);
      node1.mayMutateGlobalStateOrThrow();
      node1.putProp((-1384), "\"+[*!+/F{U^_w_#=$");
      node1.isNoSideEffectsCall();
      node0.isVoid();
      node0.addChildToBack(node1);
      Node.extractCharno(30);
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(39, node0, 21, 29);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 3528, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      Node node3 = node2.getAncestor(0);
      Node.newString(52, "Named type with empty name component", 42, 49);
      Node node4 = new Node((-700), node3, node3, node2, 103, 230);
      node4.isSyntheticBlock();
      node3.getLength();
      Node node5 = new Node(1854);
      node5.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isSwitch();
      node1.isEmpty();
      node2.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      node3.isOnlyModifiesArgumentsCall();
      node3.isOnlyModifiesThisCall();
      Node node4 = Node.newString((-680), "\"Z9G[x", 83, (-2241));
      node4.isCase();
      Node node5 = Node.newString(2774, "ga[/9;$H75F{3Eeq9", 57, 17);
      node5.isNot();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString(30, "5xDCgmONf#cxt4$");
      node0.toStringTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString((-2467), "NEW 5xDCgmONf#cxt4$\n");
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node0.isVarArgs();
      node1.srcref(node0);
      node1.setLength(31);
      node3.isOnlyModifiesArgumentsCall();
      node2.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString("'OXPmRMBDdSB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node2 = Node.newString(52, "d");
      node0.putBooleanProp(1962, true);
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node2);
      node0.detachChildren();
      node2.isEmpty();
      Node node3 = Node.newNumber((double) 39, 51, 32);
      node3.isLabel();
      node1.isOnlyModifiesArgumentsCall();
      Node.newNumber(416.82112, 8, 37);
      node3.isBlock();
      node3.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(29, "");
      Node node2 = node0.copyInformationFrom(node1);
      node0.isRegExp();
      node2.isIf();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.toString();
      node2.setChangeTime(51);
      node2.isEquivalentTo(node0, false, false, true);
      node1.getInputId();
      node1.toString();
      node0.getSourcePosition();
      node2.isEquivalentTo(node0, false, true, false);
      node2.checkTreeEquals(node0);
      node0.removeChildren();
      node2.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = Node.newString((-2917), "!", 30, 308);
      Node node3 = new Node(4, node1, node2);
      node3.isEquivalentTo(node2, true, true, false);
      node1.setWasEmptyNode(false);
      node2.isOnlyModifiesThisCall();
      Node node4 = new Node(4, node3, 118, 755);
      node1.setLineno(12);
      Node node5 = node3.removeChildren();
      node5.isWith();
      Node node6 = Node.newString("Object#Element", 49, 825);
      node6.isNew();
      Node node7 = node3.setJSDocInfo((JSDocInfo) null);
      node7.getJSDocInfo();
      node3.getChangeTime();
      node3.isHook();
      node7.getLength();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newString(15, "com.google.javascript.rhino.JSDocInfo$1");
      Node node2 = new Node(943, node1, 3001, 48);
      node0.siblings();
      node2.getLength();
      Node node3 = Node.newString(4276, "length", 53, 583);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = Node.newNumber((-3362.3457849), 39, 2969);
      node0.isEquivalentToTyped(node2);
      node0.putIntProp(42, 3528);
      node3.isBreak();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node3.isAdd();
      node0.isQuotedString();
      node3.getInputId();
      node2.isArrayLit();
      // Undeclared exception!
      try { 
        node2.addChildAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = Node.newString(83, "L!}/GPfrm!hoz(y|");
      nodeArray0[5] = node2;
      Node node3 = Node.newString("G!Ua-B|_", 37, 57);
      node3.isNew();
      node2.getJSDocInfo();
      Node node4 = Node.newString(4, "L!}/GPfrm!hoz(y|");
      node4.getChangeTime();
      node0.isHook();
      Node node5 = new Node(2, node0, node0, node1, 8, 4);
      node5.getLength();
      node5.removeChildAfter(node0);
      node5.getJsDocBuilderForNode();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      node0.isDec();
      node0.isDefaultCase();
      arrayList0.spliterator();
      node0.removeProp(1);
      Node node1 = Node.newNumber((double) 2, 102, 43);
      node1.isOr();
      node0.setWasEmptyNode(false);
      Node node2 = new Node(39, node1, node0, node1, node0);
      node2.setLineno((-1917));
      node2.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString("v*@v*V~t^{oHE^=LvXS");
      Node node1 = new Node(5884);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isThis();
      node2.hasOneChild();
      node2.hasOneChild();
      node1.isSetterDef();
      Node node3 = new Node(2534, node0, node2, (-505), 52);
      node3.isFunction();
      node0.isStringKey();
      node1.isSyntheticBlock();
      node1.setIsSyntheticBlock(true);
      node1.isVarArgs();
      node2.isGetterDef();
      Node node4 = null;
      try {
        node4 = new Node(403, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      Node node1 = new Node((-1177), 48, 119);
      node1.setWasEmptyNode(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node1.isSetterDef();
      Node node2 = new Node(1180, node1, 21, 43);
      node2.getLength();
      Node.newString(48, "Object#Element", 1, 48);
      node2.isVarArgs();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isCatch();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(arrayList0);
      node0.isFor();
      node0.isDec();
      Node node1 = null;
      try {
        node1 = new Node(13, (Node) null, node0, (Node) null, node0, 0, 42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.isSwitch();
      // Undeclared exception!
      try { 
        Node.newString((-3599), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("second new child has existing sibling", true);
      node0.setStaticSourceFile(simpleSourceFile1);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(110, node0, 37, 40);
      node0.setLineno(118);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isSwitch();
      node1.isEmpty();
      node2.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesThisCall();
      node3.isCase();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.toString(false, false, true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing sibling", true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("second new child has existing sibling", true);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(39);
      node0.appendStringTree(charArrayWriter0);
      node0.setStaticSourceFile(simpleSourceFile1);
      Node node1 = Node.newString(54, "L!}/GPfrm!hoz(y|");
      node1.addChildToFront(node0);
      Node node2 = null;
      try {
        node2 = new Node(123, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      String string0 = "J\"AY\\gz0";
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      Node node1 = new Node(4095, node0);
      node1.putIntProp(48, 118);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = null;
      try {
        node2 = new Node((-958), node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node1.addSuppression("Object#Key");
      node1.isComma();
      Node node2 = Node.newNumber((double) 1, 1898, (-1454));
      Node node3 = new Node(52, node1, node2, 322, 40);
      node2.isEquivalentToTyped(node0);
      Node node4 = node3.cloneTree();
      node2.isEmpty();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("S:", false);
      node2.putProp(1186, simpleSourceFile0);
      node0.isOnlyModifiesArgumentsCall();
      node4.isOnlyModifiesThisCall();
      node3.isCase();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node(39, node0, 21, 29);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 3528, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      Node node3 = node2.getAncestor(0);
      Node node4 = new Node(1083, node3, 410, 52);
      node0.getLength();
      Node node5 = Node.newString(43, "DEFAULT_CASE", (-2119), 11);
      node5.isVarArgs();
      node3.isString();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      jSTypeRegistry0.getNativeType(jSTypeNative0);
      node0.isLocalResultCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Not declared as a type name", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isOnlyModifiesThisCall();
      node0.setLineno(57);
      node0.removeChildren();
      node0.addChildrenAfter(node0, (Node) null);
      // Undeclared exception!
      try { 
        node0.setSourceEncodedPositionForTree(node0.SIDE_EFFECTS_FLAGS_MASK);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = Node.newString(83, "L!}/GPfrm!hoz(y|");
      nodeArray0[5] = node2;
      nodeArray0[6] = node1;
      nodeArray0[7] = node1;
      node0.addChildToFront(node0);
      node0.getAncestor(1534);
      Node.newString(1, "^", (-1097), (-3227));
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isWhile();
      node1.isAssign();
      node0.isAssignAdd();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      Node node1 = new Node((-1177), 48, 119);
      node1.setWasEmptyNode(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node1.isSetterDef();
      Node node2 = new Node(56, node0, node0, 751619276, 2982);
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      node1.isVarArgs();
      node2.isGetterDef();
      node1.getJsDocBuilderForNode();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newString(3009, "input_id");
      node0.putIntProp(55, 55);
      node0.isNull();
      node0.isExprResult();
      node0.getIntProp(64);
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1129);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      Node node1 = new Node(309, node0, node0, node0);
      node1.isFunction();
      Node node2 = new Node(31, 16, 4095);
      boolean boolean0 = true;
      Node node3 = null;
      try {
        node3 = new Node(57, node0, node1, 103, 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString(116, "", (-614), (-1382));
      node0.putProp((-2796), "");
      Node node1 = new Node(31, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.getLastChild();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -2796
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString("v*@v*V~t^{oHE^=LvXS");
      Node node1 = new Node(5884);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isThis();
      node2.hasOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = Node.newString(38, "", 122, 2);
      node3.isSwitch();
      node1.cloneTree();
      node2.isEmpty();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v*@v*V~t^{oHE^=LvXS", false);
      node3.putProp(39, simpleSourceFile0);
      node2.isOnlyModifiesArgumentsCall();
      node3.isOnlyModifiesThisCall();
      node1.isCase();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      Node.newString((-11), "3A<?Xp^=Z>P%KCW");
      // Undeclared exception!
      try { 
        node2.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildBefore(node1);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString(309, "E*C\"jPCj{~");
      Node node4 = new Node(35, node2, node3, 111, 309);
      node4.hasOneChild();
      node1.isSetterDef();
      int int0 = 2815;
      Node node5 = null;
      try {
        node5 = new Node(2, node0, node1, node0, node2, 30, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      node2.isSwitch();
      node1.setWasEmptyNode(true);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("length", node2, jSType0);
      ObjectType objectType0 = enumType0.getImplicitPrototype();
      simpleErrorReporter0.warning("MOD", "Not declared as a type name", 54, 1);
      jSTypeRegistry0.createEnumType("length", node1, objectType0);
      Node node3 = node0.srcref(node2);
      node0.setLineno(39);
      node2.removeChildren();
      node3.isComma();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter((Node) null, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      jSTypeRegistry0.getNativeType(jSTypeNative0);
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(1, node0, node0, 1388, 1);
      node1.isEquivalentToShallow(node0);
      node1.putBooleanProp(55, true);
      Node node2 = null;
      try {
        node2 = new Node((-669), node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      node0.getAncestor(30);
      Node node2 = new Node(42, node1, 42, 43);
      node0.getLength();
      node2.isIn();
      node2.isVarArgs();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString(3009, "input_id");
      node0.putIntProp(55, 55);
      node0.isHook();
      node0.isExprResult();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(36, nodeArray0, 609, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(1930, 35, 609);
      Node node1 = new Node(49, node0, 16, 30);
      node1.getLength();
      Node node2 = Node.newString(48, "length", 0, 13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("!0 pr`4", node2, jSType0);
      enumType0.getImplicitPrototype();
      jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, enumType0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(86);
      Node node1 = node0.cloneNode();
      node0.setLineno(46);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.addChildToFront(node0);
      int int0 = Node.DIRECT_EVAL;
      node1.checkTreeEquals(node0);
      Node node2 = new Node(2, node1);
      Node node3 = Node.newNumber((double) 38, 2, 2);
      node3.isNot();
      node1.isAnd();
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node((-1301), (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      node0.isCatch();
      node0.isDefaultCase();
      arrayList0.spliterator();
      node0.removeProp(1);
      Node node1 = Node.newNumber((double) 2, 102, 43);
      node1.isOr();
      node0.setWasEmptyNode(false);
      Node node2 = Node.newString(56, "QerbDHb0C(Nd", 56, 46);
      node2.setLineno((-1917));
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      int int0 = 23;
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(36, "length");
      Node node3 = new Node(57, node2, node2, node1);
      node0.isVarArgs();
      Node node4 = node0.srcref(node3);
      node3.setLength(2);
      node0.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = null;
      try {
        node5 = new Node(2620, node4, node1, node2, 46, 272);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      Node node2 = Node.newNumber((-1897.0));
      node2.cloneTree();
      node2.isAssign();
      node0.isOnlyModifiesArgumentsCall();
      node2.detachChildren();
      node0.isEmpty();
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = null;
      try {
        node3 = new Node(1, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition(0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      Node node1 = new Node(57, 49, 536870912);
      node1.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node0.isSetterDef();
      node1.isLocalResultCall();
      Node node2 = new Node(2568, node0, node1, 11, 1);
      node1.isFunction();
      node1.isStringKey();
      node0.isSyntheticBlock();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node1.isGetterDef();
      node0.getJsDocBuilderForNode();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = Node.newString("x QesHAsY@I_8`M");
      node1.mayMutateArguments();
      node0.setSourceFileForTesting("");
      node1.isVoid();
      Node node2 = Node.newString("URI_ERROR_FUNCTION_TYPE");
      node1.removeProp(49);
      Node.newString(8, "RV+F.s");
      node1.isSetterDef();
      node0.isFromExterns();
      Node node3 = Node.newNumber((double) 4);
      node3.isArrayLit();
      Node node4 = Node.newString(152, "", 15, 35);
      Node node5 = new Node(30, node4, node3, node3, 1, 50);
      node2.getLength();
      node4.getStaticSourceFile();
      try { 
        node5.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW 1 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      Node node2 = new Node((-597), node1, node1, 1, 2);
      node2.isEquivalentToTyped(node1);
      node0.putIntProp(42, 55);
      node2.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAdd();
      node1.isQuotedString();
      node1.getInputId();
      node1.isEmpty();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -3362.3457849 37 [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4062);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = Node.newNumber((double) 0, 1, 112);
      node3.isEquivalentToTyped(node2);
      node3.putIntProp((-1227), 32);
      node0.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isAdd();
      node3.isQuotedString();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[1] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = Node.newString(83, "L!}/GPfrm!hoz(y|");
      nodeArray0[5] = node2;
      nodeArray0[6] = node1;
      nodeArray0[7] = node2;
      // Undeclared exception!
      try { 
        node0.addChildToFront(nodeArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition(0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      Node node1 = new Node(57, 49, 536870912);
      node1.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node0.isSetterDef();
      Node node2 = new Node(2568, node0, node1, 11, 1);
      node1.isFunction();
      node1.isStringKey();
      node0.isSyntheticBlock();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node1.isGetterDef();
      node0.getJsDocBuilderForNode();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNumber();
      Node node3 = null;
      try {
        node3 = new Node(57, node0, node2, 36, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(64);
      Node node1 = new Node(3089, node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      Node node2 = Node.newString(118, "PJ9*ayqHP!A`j&[H");
      int int0 = 1415;
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.putBooleanProp(20, false);
      node0.setIsSyntheticBlock(false);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-1396), node0, 56, 1);
      node1.getLength();
      Node.newString(30, "length", 57, 40);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      node0.toString();
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      node1.getAncestor(1816);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node3 = new Node(38, node2, 31, 1162);
      node0.getLength();
      node2.isIn();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString(3009, "input_id");
      node0.putIntProp(16, 16);
      node0.isNull();
      node0.isExprResult();
      node0.getIntProp(64);
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1129);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3009
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString("EQUALS");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("EQUALS");
      node0.isGetProp();
      node0.isCall();
      Node.extractLineno(15);
      node0.isFalse();
      node0.isTypeOf();
      node0.isSetterDef();
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(0, node1, node0);
      node2.setSourceEncodedPosition(57);
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[12];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("G\"}|;[", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.detachChildren();
      node0.isEmpty();
      node0.isGetElem();
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.isGetterDef();
      node0.children();
      node0.isGetProp();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node0.isFunction();
      Node node2 = new Node(83, (-2720), (-1062));
      node1.isFromExterns();
      node2.cloneNode();
      node1.addChildToFront(node0);
      node2.getSourcePosition();
      node1.checkTreeEquals(node0);
      node2.isWhile();
      node1.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(57, 37, 51);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0);
      immutableList0.reverse();
      node0.getSourceFileName();
      node1.setWasEmptyNode(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(154, 37, 32);
      node2.isFromExterns();
      Node node3 = node0.cloneNode();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      nodeArray0[2] = node3;
      Node node4 = null;
      try {
        node4 = new Node(2, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString("v*@v*V~t^{oHE^=LvXS");
      node0.setCharno(30);
      Node node1 = new Node(5884);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isThis();
      node2.hasOneChild();
      Node node3 = Node.newString((-24), "v*@v*V~t^{oHE^=LvXS");
      node3.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      Node node1 = Node.newString("trxJi='`HEMjk|(P");
      node1.addChildrenToBack(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("^}A{TJ!|B(Y", false);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.setString("jVN-nBc");
      Node node3 = null;
      try {
        node3 = new Node(1, node1, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(64);
      Node node1 = new Node(3089, node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      Node node2 = Node.newString(118, "PJ9*ayqHP!A`j&[H");
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1415, nodeArray0, 54, 52);
      node0.isEquivalentTo(node1, false, true, false);
      node2.setWasEmptyNode(true);
      node3.isOr();
      node1.setLineno(9);
      Node node4 = node1.removeChildren();
      node4.isWith();
      node3.isNew();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      Node node1 = Node.newString("trxJi='`HEMjk|(P");
      node0.putIntProp(16, 8199);
      node1.addChildrenToBack(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("^}A{TJ!|B(Y", false);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.setString("jVN-nBc");
      node0.putIntProp(29, 2);
      Node node3 = Node.newNumber(0.5);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("i4vkqA[");
      node1.isCatch();
      node0.isDefaultCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      arrayList0.spliterator();
      node0.removeProp(611);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.javascript.rhino.Node$AncestorIterable$1");
      node_NodeMismatch0.equals(templateType0);
      node1.isFor();
      node0.setDouble(49);
      node0.getBooleanProp(97);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = new Node(92);
      node0.setSourceEncodedPosition(789);
      int int0 = 332;
      Node[] nodeArray0 = new Node[4];
      Node node1 = new Node(102, node0, 2, 122);
      node1.setChangeTime(2628);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node2 = null;
      try {
        node2 = new Node(53, nodeArray0, 92, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node1.isOnlyModifiesArgumentsCall();
      node2.getProp(4095);
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node2.getQualifiedName();
      node1.isLabelName();
      node2.isCall();
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString("NiFy2V([4%>l<");
      node0.putIntProp((-152), 31);
      int int0 = Node.DECR_FLAG;
      node0.isEquivalentToShallow(node0);
      node0.getJsDocBuilderForNode();
      node0.isDebugger();
      node0.isIf();
      node0.getProp(1);
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      node1.isEmpty();
      node1.isLabel();
      node0.isOnlyModifiesArgumentsCall();
      node1.isBreak();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      Node node2 = new Node((-597), node1, node1, 1, 2);
      node2.isEquivalentToTyped(node1);
      node0.putIntProp(42, 55);
      node2.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAdd();
      node1.isQuotedString();
      node1.getInputId();
      node2.setOptionalArg(false);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node1.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(49, nodeArray0);
      node_NodeMismatch0.equals(node3);
      node3.isFor();
      try { 
        node3.setDouble(49);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      jSTypeRegistry0.getType("Unknown class name");
      node0.isCatch();
      node0.isDefaultCase();
      arrayList0.spliterator();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(arrayList0);
      node0.isFor();
      try { 
        node0.setDouble((-601.01516));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[12];
      Node node0 = Node.newString((-536870912), "J\"AYgz0");
      nodeArray0[0] = node0;
      Node node1 = new Node(18, node0, node0, (-1660), 12);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1590), 43);
      Node node2 = new Node(38, node0, node0, node1, 137, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isSwitch();
      node1.setWasEmptyNode(true);
      node2.setLineno(0);
      Node node3 = node2.removeChildren();
      node2.isWith();
      node0.isDo();
      node1.isSwitch();
      node1.isExprResult();
      node0.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node.mergeLineCharNo(4544, 4544);
      Node node0 = Node.newNumber((double) 4544);
      Node node1 = new Node(4544, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(43);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 43
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node0.isFunction();
      node0.hasOneChild();
      Node node2 = Node.newString((-2539), "", 54, 403);
      node2.isSetterDef();
      Node node3 = new Node(2, node2, node2, 40, 11);
      Node node4 = new Node((-1660), node3, node0, node1);
      node4.isFunction();
      node1.isStringKey();
      node2.getString();
      Node node5 = Node.newNumber((-2806.22), (-841), 33);
      node2.isNE();
      node5.setIsSyntheticBlock(true);
      node5.isVarArgs();
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(57, 37, 51);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0);
      immutableList0.reverse();
      node0.getSourceFileName();
      node1.setWasEmptyNode(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(154, 37, 32);
      node2.isFromExterns();
      Node node3 = node0.cloneNode();
      node3.addChildToFront(node0);
      node1.getSourcePosition();
      node0.isWhile();
      node0.isAssign();
      node2.isAssignAdd();
      node3.isVoid();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = Node.newString("W+,<O");
      Node node2 = new Node(0, node1, node0);
      node2.setSourceEncodedPosition(57);
      Node node3 = node0.detachFromParent();
      node2.isOnlyModifiesArgumentsCall();
      node3.getStaticSourceFile();
      node0.isComma();
      node0.isEquivalentTo(node2, false, false, false);
      node0.getBooleanProp(47);
      node2.isUnscopedQualifiedName();
      node2.hasChild(node3);
      node3.detachChildren();
      node2.isEmpty();
      Node node4 = new Node(37, node3, node2, node2);
      node4.isGetElem();
      node3.isEquivalentToTyped(node2);
      node2.isReturn();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      node0.isDec();
      node0.isSwitch();
      Node node1 = new Node(1, 48, 40);
      node1.getLength();
      node0.isQuotedString();
      node0.children();
      node0.getDirectives();
      node1.setDirectives((Set<String>) null);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-1804));
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-1804));
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      // Undeclared exception!
      try { 
        node1.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString(30, "5xDCgmONf#cxt4$");
      node0.toStringTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isEquivalentTo(node1);
      Node.newString((-2467), "NEW 5xDCgmONf#cxt4$\n");
      Node node2 = new Node(30, node0, node0, node0);
      node2.isVarArgs();
      Node node3 = node2.srcref(node0);
      node2.setLength(31);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node2);
      node4.getBooleanProp(1466);
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(50, node0, 4095, 57);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node node2 = Node.newString(1427, "PJ9*ayqHP!A`j&[H");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(50, nodeArray0, 1593, 16);
      node2.isEquivalentTo(node1, false, true, true);
      node1.setWasEmptyNode(true);
      node2.isOr();
      node0.setLineno(47);
      Node node4 = node1.removeChildren();
      node4.isWith();
      node4.isNew();
      Node node5 = Node.newNumber((double) 51);
      node5.getLength();
      node5.isWith();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node1.isSwitch();
      node2.isEquivalentTo(node0, false, false, true);
      node1.removeChildren();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("5|V);QVIP", 64, 64);
      node0.getInputId();
      node0.setString("com.google.javascript.rhino.Node$AncestorIterable");
      node0.isFor();
      node0.setLineno(2778);
      node0.getSideEffectFlags();
      node0.getChangeTime();
      node0.getIntProp(83);
      String string0 = "missing prop: ";
      Node.newString("missing prop: ");
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[12];
      Node node0 = Node.newString((-536870912), "J\"AYgz0");
      nodeArray0[0] = node0;
      Node node1 = new Node(18, node0, node0, (-1660), 12);
      node1.isNE();
      node0.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.getDirectives();
      node0.getType();
      node0.getStaticSourceFile();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition(0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      Node node1 = new Node(57, 49, 536870912);
      node1.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node0.isSetterDef();
      Node node2 = new Node(2568, node0, node1, 11, 1);
      node1.isFunction();
      node1.isStringKey();
      Node node3 = Node.newNumber((double) 4095, 57, (-1786));
      Node node4 = null;
      try {
        node4 = new Node(170, node3, node2, node1, 47, Integer.MAX_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.mayMutateArguments();
      node0.setSourceFileForTesting("com.google.common.collect.UnmodifiableListIterator");
      node0.isVoid();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node1.removeProp(2609);
      node0.isSetterDef();
      node0.isFromExterns();
      node1.isArrayLit();
      Node node2 = Node.newString(39, "com.google.common.collect.UnmodifiableListIterator", 13, 4046);
      node2.isNE();
      node0.setIsSyntheticBlock(false);
      node2.isVarArgs();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node1.isOnlyModifiesArgumentsCall();
      node2.siblings();
      node2.getProp(4095);
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node2.getQualifiedName();
      node1.isLabelName();
      BufferedWriter bufferedWriter0 = null;
      try {
        bufferedWriter0 = new BufferedWriter((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isDebugger();
      node1.isSwitch();
      node2.setChangeTime(2986);
      node2.isEquivalentTo(node0, false, false, true);
      node1.isOptionalArg();
      node1.setWasEmptyNode(false);
      node2.isOnlyModifiesThisCall();
      node0.setLineno(148);
      node1.removeChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("com.google.common.base.Joiner$2", "com.google.common.base.Joiner$2", 2242, 1854);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newNumber(1.0, 120, (-1));
      node0.setIsSyntheticBlock(true);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(55, nodeArray0);
      Node node3 = new Node(46, node2, node2, node0, node0, 38, 31);
      node0.isObjectLit();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node((-2046), (-643), (-643));
      // Undeclared exception!
      try { 
        node0.getAncestor((-3787));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn(arrayList0).when(unionType0).getAlternates();
      templateTypeMapReplacer0.caseVoidType();
      JSType jSType0 = templateTypeMapReplacer0.caseUnionType(unionType0);
      arrayList0.add(jSType0);
      node0.isCatch();
      node0.isObjectLit();
      node0.isParamList();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.mayMutateArguments();
      node0.setSourceFileForTesting("com.google.common.collect.UnmodifiableListIterator");
      node0.isVoid();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.isVarArgs();
      node0.setWasEmptyNode(true);
      node1.isEquivalentToShallow(node0);
      node0.hasOneChild();
      node0.putBooleanProp(53, true);
      node1.setIsSyntheticBlock(true);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.isEquivalentToTyped(node2);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node3.setString("jVN-nBc");
      node2.putIntProp(53, (-2694));
      Node.newNumber((double) 12);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp((-196));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -196
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = new Node((-2753));
      node0.setVarArgs(true);
      Node node1 = Node.newString(1949, "");
      Node node2 = node1.srcref(node0);
      Node node3 = Node.newString(13, "t@,Nt~");
      node0.isSetterDef();
      Node node4 = new Node(4937, node3, node2, 21, (-3078));
      node3.isFunction();
      node1.isStringKey();
      Node.newNumber((-3362.3457849), 49, 2);
      node4.isNE();
      node0.setIsSyntheticBlock(true);
      node1.isVarArgs();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = Node.newString("x QesHAsY@I_8`M");
      node1.mayMutateArguments();
      node0.setSourceFileForTesting("");
      node1.isVoid();
      Node node2 = Node.newString("URI_ERROR_FUNCTION_TYPE");
      node1.removeProp(49);
      node1.isSetterDef();
      node0.isFromExterns();
      Node node3 = Node.newNumber((double) 4);
      node3.isArrayLit();
      Node node4 = Node.newString(152, "", 15, 35);
      Node node5 = new Node(30, node4, node3, node3, 1, 50);
      node2.getLength();
      node5.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(50, node0, 4095, 57);
      node1.isOnlyModifiesArgumentsCall();
      node1.isSwitch();
      Node node2 = Node.newString(1427, "PJ9*ayqHP!A`j&[H");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(50, nodeArray0, 1593, 16);
      node2.isEquivalentTo(node1, false, true, true);
      node1.setWasEmptyNode(true);
      node2.isOr();
      node0.setLineno(47);
      Node node4 = node1.removeChildren();
      node4.isWith();
      node4.isNew();
      Node node5 = Node.newNumber((double) 51);
      node5.isWith();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(2, node0, 30, 46);
      node0.copyInformationFrom(node1);
      node0.isRegExp();
      node0.isTry();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      jSTypeRegistry0.getNativeType(jSTypeNative0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing sibling", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("com.google.javascript.rhino.Node", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.detachChildren();
      node0.getBooleanProp(12);
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(" #e1Tl|3`Hk#2$E0YD");
      node1.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(22, node0, node0);
      node1.copyInformationFromForTree(node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node2.getString();
      node0.getSourceFileName();
      node2.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      node0.isStringKey();
      node1.isNE();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[12];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      node0.putBooleanProp(57, false);
      node0.putBooleanProp((-1225), false);
      node0.getBooleanProp((-811));
      Node node1 = new Node(1978, node0, node0, node0, node0);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J\"AYgz0", false);
      Node.newString(12, "", (-2694), 2032);
      node1.isVarArgs();
      node0.mayMutateArguments();
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.mayMutateArguments();
      node0.setSourceFileForTesting("com.google.common.collect.UnmodifiableListIterator");
      node0.isVoid();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.isVarArgs();
      node0.setWasEmptyNode(true);
      node1.isEquivalentToShallow(node0);
      node0.hasOneChild();
      node1.isSetterDef();
      Node node2 = new Node(57, node0, node0, 119, 51);
      node0.isFunction();
      node1.isStringKey();
      Node node3 = Node.newNumber((-1.0), 83, 56);
      node0.isNE();
      node0.setIsSyntheticBlock(true);
      node3.isVarArgs();
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      node0.isFunction();
      Node node2 = new Node(83, (-2720), (-1062));
      node1.isFromExterns();
      node2.cloneNode();
      node1.addChildToFront(node0);
      node2.getSourcePosition();
      node2.isWhile();
      node1.isAssign();
      node2.isAssignAdd();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      node0.getAncestor(2);
      Node node1 = new Node((-3787), node0, 2, 40);
      node0.getLength();
      node0.isIn();
      node0.isVarArgs();
      // Undeclared exception!
      try { 
        node1.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = new Node((-2753));
      node0.setVarArgs(false);
      Node node1 = Node.newString(1949, "");
      Node node2 = new Node(51, node0, 42, 31);
      Node node3 = Node.newString(13, "t@,Nt~");
      node1.getAncestor(51);
      node0.putBooleanProp(16, false);
      node3.setIsSyntheticBlock(false);
      Node node4 = node1.useSourceInfoIfMissingFrom(node2);
      node0.getIntProp((-4050));
      node3.isEquivalentToTyped(node0);
      Node node5 = node3.useSourceInfoIfMissingFrom(node4);
      node5.checkTreeTypeAwareEqualsImpl(node4);
      try { 
        node2.setString("jVN-nBc");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN 42 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      jSTypeRegistry0.getNativeType(jSTypeNative0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing sibling", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(116, node0, 4095, 30);
      node0.setLineno(57);
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3069, 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newString(1455, "", 1455, 1455);
      Node node1 = new Node(30, node0);
      Node node2 = node0.cloneNode();
      node2.addChildToFront(node1);
      node2.getSourcePosition();
      node1.isWhile();
      node2.isAssign();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.mayMutateArguments();
      node0.setSourceFileForTesting("com.google.common.collect.UnmodifiableListIterator");
      node0.isVoid();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node1.removeProp(2609);
      node0.isSetterDef();
      node0.isFromExterns();
      node1.isArrayLit();
      Node node2 = Node.newString(39, "com.google.common.collect.UnmodifiableListIterator", 13, 4046);
      Node node3 = new Node(29, node0, node1, node0, 29, 57);
      node2.getLength();
      node3.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node((-2753));
      node0.setVarArgs(false);
      Node node1 = Node.newString(31, "");
      Node node2 = Node.newString(13, "t@,Nt~");
      node0.putBooleanProp(16, false);
      node2.setIsSyntheticBlock(false);
      Node node3 = node1.useSourceInfoIfMissingFrom(node1);
      node2.isEquivalentToTyped(node0);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      // Undeclared exception!
      try { 
        node0.setString("jVN-nBc");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2753
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString(0, "Qp=AOp7Aj");
      node0.putProp(101, "W+,<O");
      node0.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.isQualifiedName();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[2] = node0;
      nodeArray0[1] = node2;
      Node node3 = null;
      try {
        node3 = new Node(16, node1, node2, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_PROTOTYPE;
      JSTypeNative jSTypeNative1 = JSTypeNative.NULL_VOID;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing sibling", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.canTestForShallowEqualityWith(jSType0);
      node0.setJSType(objectType0);
      node0.getInputId();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      node0.getAncestor(30);
      Node node2 = null;
      try {
        node2 = new Node(26, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isEquivalentTo(node1, false, false, true);
      node0.setWasEmptyNode(true);
      node2.isOnlyModifiesThisCall();
      Node node3 = new Node((-1), node2, 47, (-3819));
      node1.setLineno(52);
      node1.removeChildren();
      node1.isWith();
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      node1.isEmpty();
      node1.isGetElem();
      node1.isEquivalentToTyped(node1);
      node1.isWith();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      Node.newString(51, "@1~Qr>tPI:9HRqO");
      node1.putBooleanProp(56, false);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node3 = null;
      try {
        node3 = new Node(56, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("not a StringNode", 697, (-1660));
      Node node1 = new Node(697, node0, node0, node0, node0);
      Node node2 = new Node(154, node1, node1);
      Node node3 = new Node(46, node2, 8, 12);
      node3.children();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(105, node0, node0, (-19), (-3112));
      node1.toString();
      node0.putIntProp(2, 2023);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(153);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 153
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = Node.newString(1, "new child has existing parent");
      node1.addSuppression("Object#Key");
      node1.isAssign();
      node1.isOnlyModifiesArgumentsCall();
      node0.detachChildren();
      node1.isEmpty();
      node1.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString(1455, "", 1455, 1455);
      Node node1 = new Node(30, node0);
      node1.isArrayLit();
      Node.newString(42, "COLON", 43, 30);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(51);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isEquivalentTo(node0);
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.hasChild(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.detachChildren();
      node1.isEmpty();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInc();
      Node node2 = node1.removeFirstChild();
      node2.getDirectives();
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isNoSideEffectsCall();
      node2.getChildBefore(node1);
      StringWriter stringWriter0 = new StringWriter(786);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("synthetic", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isQualifiedName();
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.STRING_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.U2U_FUNCTION_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.RANGE_ERROR_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSTypeNative jSTypeNative6 = JSTypeNative.NUMBER_VALUE_OR_OBJECT_TYPE;
      jSTypeNativeArray0[6] = jSTypeNative6;
      JSTypeNative jSTypeNative7 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[7] = jSTypeNative7;
      JSType jSType0 = jSTypeRegistry1.createUnionType(jSTypeNativeArray0);
      linkedList0.add(jSType0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(55, nodeArray0);
      Node node3 = new Node(46, node2, node2, node0, node0, 38, 31);
      node0.isObjectLit();
      Node node4 = Node.newString(57, "Object#Key", 4095, 46);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node4, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[12];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      node0.putBooleanProp(57, false);
      node0.putBooleanProp((-1225), false);
      node0.getBooleanProp((-811));
      Node node1 = new Node(1978, node0, node0, node0, node0);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("J\"AYgz0", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.detachChildren();
      node0.isEmpty();
      node1.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInc();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      Node.newNumber((double) 37);
      node1.isEmpty();
      node0.isLabel();
      Node node2 = null;
      try {
        node2 = new Node(4095, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      boolean boolean0 = false;
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString((-567), "mb3aE-jwyw:/g[o", (-567), 101);
      Node node1 = Node.newNumber((double) 4);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getStaticSourceFile();
      node2.getJsDocBuilderForNode();
      node0.isBreak();
      Node node3 = new Node(47, node2);
      node3.putBooleanProp(98, true);
      node2.setIsSyntheticBlock(true);
      node0.isEquivalentToTyped(node2);
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node4.setString("Unexpected node in type expression: ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 98
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node((-4478), (-4478), (-4478));
      node0.getSideEffectFlags();
      node0.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) simpleErrorReporter0;
      objectArray0[2] = (Object) node0;
      objectArray0[3] = (Object) node0;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      String string0 = "";
      int int0 = 1455;
      Node node0 = null;
      try {
        node0 = new Node(1455, (Node) null, 1455, (-5742));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseUnknownType();
      node0.getAncestor(30);
      Node node2 = new Node(42, node1, 42, 43);
      node0.getLength();
      node2.isIn();
      node2.isVarArgs();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString((-536870912), "J\"AYgz0");
      node0.getChildAtIndex((-809));
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(57, 37, 51);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      ImmutableList.of(templateType0, templateType0, templateType0, templateType0);
      node1.isSwitch();
      Node node2 = new Node(40, node1, node1);
      Node node3 = null;
      try {
        node3 = new Node(1383, node1, node2, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4058);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearSideEffectFlags();
      int int0 = (-3329);
      // Undeclared exception!
      try { 
        Node.newString((-2151), (String) null, (-3329), (-3329));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newNumber((-2746.1426479019));
      Node node0 = Node.newNumber((double) 52, 4095, 1383);
      Node node1 = Node.newNumber(0.0, 113, 1383);
      Node node2 = new Node(15, node0, node0, node1, 2311, 49);
      node0.isEquivalentToShallow(node1);
      node0.isDebugger();
      node2.isSwitch();
      node1.isEquivalentTo(node2, true, true, false);
      node2.setWasEmptyNode(false);
      node2.isOnlyModifiesThisCall();
      Node node3 = new Node(4095, node2, (-223), 12);
      node2.setLineno(56);
      node0.removeChildren();
      node1.isWith();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isQualifiedName();
      Node node2 = Node.newString(1, "new child has existing parent");
      node2.putBooleanProp(48, false);
      node2.isAssign();
      node0.isUnscopedQualifiedName();
      node1.hasChild(node2);
      node0.detachChildren();
      node2.isEmpty();
      node1.isLabel();
      node2.isOnlyModifiesArgumentsCall();
      node0.isBreak();
      node2.addChildToFront(node1);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString((-567), "mb3aE-jwyw:/g[o", (-567), 101);
      Node node1 = Node.newNumber((double) 4);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getStaticSourceFile();
      node2.getJsDocBuilderForNode();
      node0.isBreak();
      Node node3 = Node.newString(54, "mb3aE-jwyw:/g[o");
      node3.putBooleanProp(98, true);
      node2.setIsSyntheticBlock(true);
      node0.isEquivalentToTyped(node2);
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node4.setString("W=VtQ8U");
      Node node5 = new Node((-567), node0, 1529, 32);
      node3.getLength();
      Node.newString(83, "n}9L[", 49, 15);
      node4.isVarArgs();
      Node.newNumber(0.0, 2, 42);
      node4.isNot();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition(0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node0.isSetterDef();
      node0.isFunction();
      Node node1 = new Node(57, 49, 536870912);
      node1.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node0.isSetterDef();
      Node node2 = new Node(2568, node0, node1, 11, 1);
      node1.isFunction();
      node1.isStringKey();
      Node.newNumber((double) 4095, 57, (-1786));
      node0.isNE();
      node2.setIsSyntheticBlock(true);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(3532, (-536870912), 10);
      Node node1 = new Node(2806, node0, (-1600), 153);
      node0.getLength();
      Node node2 = Node.newString((-350), "XOBVbh5g@", 9, 2538);
      node0.isVarArgs();
      node1.isSwitch();
      Node node3 = node2.cloneNode();
      node3.isNoSideEffectsCall();
      node2.isNoSideEffectsCall();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = Node.newString("J\"AYgz0", 39, 2);
      Node node2 = Node.newString(55, "");
      node2.putBooleanProp(31, true);
      node1.isAssign();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.detachChildren();
      Node.newNumber((double) 37);
      node0.isEmpty();
      Node node3 = Node.newString((-4034), "J\"AYgz0");
      node3.isLabel();
      Node node4 = new Node(40, node3, node3);
      node0.isOnlyModifiesArgumentsCall();
      node0.isBreak();
      node4.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(2193, node0, node0, node0);
      node1.setSourceEncodedPosition(54);
      node0.detachFromParent();
      node0.getSourceFileName();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      int int0 = 2272;
      Node node0 = Node.newString("J 3JuXc<!q", 306654252, 306654252);
      Node node1 = new Node(2272, node0, node0, node0);
      int int1 = 461845907;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      String string0 = "";
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Element");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newNumber(29.0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Q2ppubOR=p3jsN5");
      InputId inputId0 = new InputId("The new child node already has a parent.");
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getDouble();
      node_FileLevelJsDocBuilder0.append("InputId: The new child node already has a parent.");
      node_FileLevelJsDocBuilder0.append("RNup0sj1?UPE,");
      inputId0.toString();
      Node node1 = new Node(50, node0, node0, node0);
      node1.setIsSyntheticBlock(true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.documentAuthor("");
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
      node1.getChildBefore(node0);
      Node node2 = null;
      try {
        node2 = new Node((-2757), node0, node1, 8, 522);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.detachChildren();
      node1.isEmpty();
      node1.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInc();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.getSourceOffset();
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.addChildrenToFront(node0);
      Node.extractLineno(2193);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      Node node2 = new Node((-597), node1, node1, 1, 2);
      node0.putIntProp(42, 55);
      node2.isBreak();
      node1.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isDebugger();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isEquivalentTo(node1, false, true, false);
      node0.setWasEmptyNode(true);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(12, node0, (-2025), 4095);
      node1.setLineno(51);
      Node node3 = node2.removeChildren();
      node1.isWith();
      Node node4 = Node.newString("Object#Key", 112, 57);
      node4.isNew();
      node3.setJSDocInfo((JSDocInfo) null);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = new Node(46, 10, 1);
      Node node2 = new Node(38, node1, 48, 2295);
      node2.getLength();
      Node node3 = Node.newString(153, "XOBVbh5g@", 2, 51);
      node1.isVarArgs();
      node3.isSwitch();
      node1.cloneNode();
      node3.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node1.isOnlyModifiesArgumentsCall();
      node2.getProp(4095);
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
      node2.getQualifiedName();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = new Node(3792, 3792, 3792);
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node node1 = Node.newString("free_call", (-2163), 40);
      Node node2 = node1.srcref(node0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      node2.getString();
      node1.detachChildren();
      node1.getInputId();
      node2.setType(30);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node1.isOnlyModifiesArgumentsCall();
      node2.setWasEmptyNode(false);
      Node node3 = new Node(4, node0, node1, 1, 0);
      node2.getStaticSourceFile();
      node0.isComma();
      node0.putBooleanProp(12, false);
      node3.isAssign();
      node1.isUnscopedQualifiedName();
      node0.hasChild(node1);
      node1.isEmpty();
      node1.isLabel();
      Node node4 = null;
      try {
        node4 = new Node(47, (Node[]) null, 9, 658);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node0.isEquivalentToShallow(node0);
      node1.putBooleanProp((-1836), true);
      node0.getBooleanProp(4095);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      node1.isEmpty();
      node1.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = new Node(9, node0, node0, node0, 49, 42);
      node1.isQualifiedName();
      node1.isFor();
      node0.isEmpty();
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node1.hasOneChild();
      Node node2 = Node.newString(2927, "");
      node2.getJsDocBuilderForNode();
      node0.getLastChild();
      node0.getNext();
      Node node3 = node2.copyInformationFromForTree(node0);
      node1.addChildrenToFront(node3);
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      node0.getSourceOffset();
      Node node1 = new Node(50, node0, node0);
      node0.isEquivalentToShallow(node1);
      Node node2 = Node.newString("", 586, 1463);
      node0.getJSDocInfo();
      Node node3 = Node.newString("");
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString(1129, "haC$IrD^O");
      Node node1 = new Node(120, node0, node0, (-19), (-3128));
      node1.toString();
      node0.putIntProp(2, 2023);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(153);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 153
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.addChildrenToFront(node0);
      Node.extractLineno(2193);
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node1.detachChildren();
      node1.addChildToBack(node0);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(47);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      boolean boolean0 = false;
      node1.setVarArgs(false);
      node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.copyInformationFromForTree(node0);
      String string0 = "InputId: ";
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("InputId: ", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property InputId: 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(3792, 3792, 3792);
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node node1 = Node.newString("", (-2163), 40);
      Node node2 = node1.srcref(node0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      node2.getString();
      node1.detachChildren();
      node1.getInputId();
      node2.setType(30);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      String string0 = "";
      Node node0 = Node.newString((-2151), "", (-2151), (-3329));
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[4] = node0;
      Node node1 = null;
      try {
        node1 = new Node(116, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = Node.newNumber((-1517.35337), (-1593), 43);
      Node node2 = new Node(38, node0, node0, node1, 166, (-1301));
      node1.isEquivalentToShallow(node2);
      node0.isDebugger();
      node1.isSwitch();
      node2.isEquivalentTo(node0, false, false, true);
      node1.setWasEmptyNode(false);
      node2.isOnlyModifiesThisCall();
      Node node3 = null;
      try {
        node3 = new Node(48, node1, 47, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      node1.putBooleanProp((-1836), true);
      node0.isAssign();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      node1.isEmpty();
      node0.isLabel();
      node0.isOnlyModifiesArgumentsCall();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = new Node(9, node0, node0, node0, 49, 42);
      node1.isQualifiedName();
      node1.isFor();
      node0.isEmpty();
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node1.hasOneChild();
      Node node2 = Node.newString(2927, "");
      node2.getJsDocBuilderForNode();
      node2.isEquivalentToShallow(node1);
      Node node3 = Node.newString("", 53, 248);
      node2.getJSDocInfo();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      Node node1 = new Node((-536870912), nodeArray0);
      Node node2 = Node.newNumber((double) 31, 30, 219);
      node2.hasChild(node1);
      Node node3 = new Node(40, node1, 30, 8);
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      int int0 = (-567);
      String string0 = "mb3aE-jwyw:/g[o";
      Node node0 = Node.newString((-567), "mb3aE-jwyw:/g[o", (-567), 101);
      Node node1 = Node.newNumber((double) 4);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getStaticSourceFile();
      node2.getJsDocBuilderForNode();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.copyInformationFromForTree(node0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node1.isOnlyModifiesArgumentsCall();
      node2.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      Node node3 = Node.newString("W+,<O", (-55), 114);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(57, 37, 51);
      Node node2 = new Node((-2037), node1, 15, 12);
      node1.getLength();
      node2.isIn();
      node1.isVarArgs();
      node0.getSourcePosition();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-6653), (-6653), (-6653));
      Node node1 = new Node((-6653), node0, node0, node0, node0, 4095, 615);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      int int0 = (-567);
      String string0 = "mb3aE-jwyw:/g[o";
      Node node0 = Node.newString((-567), "mb3aE-jwyw:/g[o", (-567), 101);
      Node node1 = Node.newNumber((double) 4);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getStaticSourceFile();
      node2.getJsDocBuilderForNode();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newNumber((-3362.3457849), 37, 2);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesThisCall();
      node0.getJsDocBuilderForNode();
      node0.getAncestors();
      Node node1 = new Node(3069, node0, node0, 973, (-1396));
      node1.getStaticSourceFile();
      node1.isComma();
      node1.putBooleanProp((-1836), true);
      node0.isAssign();
      node1.isUnscopedQualifiedName();
      node1.hasChild(node0);
      node0.detachChildren();
      node1.isEmpty();
      node0.isLabel();
      node0.isOnlyModifiesArgumentsCall();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(55, nodeArray0);
      Node node3 = Node.newNumber((-760.79810620307), 54, 782527);
      Node node4 = new Node(46, node2, node2, node0, node3, 38, 31);
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(124, "-$(?#](A2uqaZH+/0j", 154, 154);
      node0.detachChildren();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.isWhile();
      node0.isSetterDef();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(36, nodeArray0, 51, 46);
      Node node2 = node0.copyInformationFrom(node1);
      node2.detachChildren();
      Node node3 = new Node(57, node2, node0, node0);
      node0.isGetElem();
      node0.checkTreeEqualsImpl(node2);
      node1.isReturn();
      node3.getIndexOfChild(node0);
      node0.isAssignAdd();
      node3.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.mayMutateArguments();
      node0.setSourceFileForTesting("com.google.common.collect.UnmodifiableListIterator");
      node0.isVoid();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableListIterator");
      node0.isVarArgs();
      node0.isFromExterns();
      Node node2 = node0.cloneNode();
      node2.addChildToFront(node0);
      node1.getSourcePosition();
      node0.isWhile();
      node0.isAssign();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      Node node1 = new Node(0, 48, 119);
      node1.setWasEmptyNode(true);
      node0.isGetterDef();
      node0.hasOneChild();
      node1.isSetterDef();
      Node node2 = new Node(56, node0, node0, 751619276, 2982);
      node0.isFunction();
      node0.isStringKey();
      node0.isSyntheticBlock();
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) null, "gqQyz_L[VfXy]", "C.=e749P", 112, 40);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("4YJK)", node1, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      enumType1.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getPropertyNode("gqQyz_L[VfXy]");
      node1.getIndexOfChild(node0);
      node1.isAssignAdd();
      node2.putProp(51, arrayList0);
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseUnknownType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("length", node2, jSType0);
      ObjectType objectType0 = enumType0.getImplicitPrototype();
      jSTypeRegistry0.createEnumType("length", node1, objectType0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      int int0 = 105;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(35, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(3684, 139, 3684);
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3684
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      Node node1 = Node.newString("trxJi='`HEMjk|(P");
      node1.addChildrenToBack(node0);
      Node node2 = Node.newString(16, "Q", 18, 48);
      node2.isVarArgs();
      node0.mayMutateArguments();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newNumber(29.0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      InputId inputId0 = new InputId("The new child node already has a parent.");
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getDouble();
      node_FileLevelJsDocBuilder0.append("InputId: The new child node already has a parent.");
      node_FileLevelJsDocBuilder0.append("RNup0sj1?UPE,");
      inputId0.toString();
      int int0 = 49;
      String string0 = "Node has existing properties.";
      Node node1 = new Node(50, node0, node0, node0);
      node1.setIsSyntheticBlock(true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.documentAuthor("");
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
      Node node2 = null;
      try {
        node2 = new Node((-2757), node0, node1, 8, 522);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node1 = new Node(37, node0, node0, 6, 46);
      int int0 = 132;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      Node node2 = null;
      try {
        node2 = new Node((-329), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node.extractLineno(3121914);
      Node node0 = new Node(3121914, 3121914, (-1654));
      Node node1 = new Node(762, node0, node0, node0, 1691, 973);
      Node node2 = null;
      try {
        node2 = new Node(762, node1, node0, node1, node1, 47, 103);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      String string0 = "x QesHA\\s.@I_8`M";
      Node node0 = Node.newString("x QesHAs.@I_8`M");
      node0.setSourceEncodedPosition(0);
      node0.getSourceFileName();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isSetterDef();
      node0.isFunction();
      node0.isStringKey();
      node0.isNE();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      node0.isIn();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      int int0 = 3618;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(139);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2400
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString((-243), "]Wj_vLwm67U");
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(818);
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      boolean boolean0 = false;
      node1.setVarArgs(false);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newNumber(2626.0226011134505, 191, 191);
      Node node1 = new Node((-2866), node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      node1.isEquivalentTo(node0, false, false, true);
      Node.newString("k8SN");
      Node node2 = null;
      try {
        node2 = new Node(1, node1, node0, (-2474), 1173);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(38, node0, node0, node0, 49, 42);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 49 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = new Node(9, node0, node0, node0, 49, 42);
      node1.isFor();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node1.hasOneChild();
      Node node2 = Node.newString(2927, "");
      node2.isEquivalentToShallow(node1);
      Node node3 = Node.newString("", 53, 248);
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newNumber(2626.0226011134505, 191, 191);
      Node node1 = new Node((-2866), node0, node0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2866
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node.newString(52, "length", 116, 42);
      node1.isVarArgs();
      node0.isSwitch();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newNumber(2626.0226011134505, 191, 191);
      Node node1 = new Node(43, node0, node0, node0, 4, 51);
      node0.isEquivalentToShallow(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      node1.isEquivalentTo(node0, false, false, true);
      node1.setWasEmptyNode(true);
      node1.isOnlyModifiesThisCall();
      node1.setLineno(0);
      node0.removeChildren();
      node0.isWith();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isQualifiedName();
      Node node2 = new Node((-3250), node1, node0, (-396), 55);
      node0.putIntProp(40, (-396));
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("W+,<O");
      JSType[] jSTypeArray0 = new JSType[1];
      Node node1 = new Node(0, node0, node0);
      node1.setSourceEncodedPosition(57);
      Node node2 = node0.detachFromParent();
      node0.getSourceFileName();
      node2.setWasEmptyNode(false);
      node1.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
      node0.isSetterDef();
      node2.isFunction();
      node0.isStringKey();
      node1.isNE();
      node1.setIsSyntheticBlock(false);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      Node node1 = Node.newString(3731, "x QesHAsY@I_8`M");
      node1.isUnscopedQualifiedName();
      node1.setQuotedString();
      node0.addSuppression("x QesHAsY@I_8`M");
      node0.getSourceOffset();
      node0.getLastChild();
      node1.getNext();
      Node node2 = null;
      Node node3 = null;
      try {
        node3 = new Node(57, (Node) null, (Node) null, (Node) null, 8, 49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString(30, "5xDCgmONf#cxt4$");
      node0.toStringTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString((-2467), "NEW 5xDCgmONf#cxt4$\n");
      node0.useSourceInfoFromForTree(node2);
      Node node3 = new Node(30, node0, node0, node0);
      node3.isVarArgs();
      node3.srcref(node0);
      node3.setLength(31);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node3);
      node4.getBooleanProp(1466);
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node.mergeLineCharNo((-2320), (-2320));
      Node node0 = new Node(0, 0, (-1));
      Node node1 = Node.newString("");
      node0.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString("x QesHAsY@I_8`M");
      node0.setSourceEncodedPosition(0);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      int int0 = (-78);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-78), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString(1032, "NoObject");
      Node node1 = new Node(0, node0);
      node0.setLineno(48);
      node1.isFromExterns();
      node0.isQuotedString();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = null;
      try {
        node3 = new Node((-825), node0, node2, node1, 985, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = new Node(3684, 139, 3684);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3684
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString("var_args_name");
      node0.wasEmptyNode();
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(10);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 10
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString("v*@v*V~t^{oHE^=LvXS");
      Node.newNumber((double) 47);
      Node node1 = new Node(5884);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isThis();
      node2.hasOneChild();
      Node node3 = Node.newString(0, "");
      node3.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)58;
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte)112;
      byteArray0[2] = (byte)112;
      Node node0 = new Node((byte)0, (byte)112, (byte)112);
      Node node1 = new Node((byte)112, node0, node0, node0, 50, 4095);
      node0.isEquivalentTo(node1, false, false, true);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      arrayList0.iterator();
      node0.getDirectives();
      node0.isCatch();
      node0.isDefaultCase();
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      arrayList0.iterator();
      node0.getDirectives();
      node0.setDirectives((Set<String>) null);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 801, 801);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      String string0 = "]Wj_vLwm67U";
      Node node0 = Node.newString((-243), "]Wj_vLwm67U");
      nodeArray0[0] = node0;
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(642, node0, node0, node0, node0, 0, 0);
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node((-243), nodeArray0, 0, (-201));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node node1 = Node.newNumber((double) 49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.getBooleanProp(0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      String string0 = null;
      int int0 = 44;
      Node[] nodeArray0 = new Node[7];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString(2400, "Q");
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.addSuppression("^}A{TJ!|B(Y");
      node0.getSourceOffset();
      node0.getLastChild();
      node0.getNext();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.valueOf();
      String string0 = "Object";
      Node node0 = Node.newString("Object");
      node0.isCatch();
      Node node1 = Node.newString("Object", 12, (-2344));
      node1.srcrefTree(node0);
      Node node2 = new Node(15, node1, node0, 8233, 3731);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(2888, 0, 0);
      Node node1 = new Node((-478), node0, node0, 0, 47);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isQuotedString();
      node0.removeProp(0);
      node_NodeMismatch0.equals((Object) null);
      node1.getInputId();
      node0.isDec();
      node1.isSwitch();
      node1.getLength();
      node0.isQuotedString();
      node0.children();
      node1.getDirectives();
      node1.setDirectives((Set<String>) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2114);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      // Undeclared exception!
      try { 
        node0.setString("}.)Y;&3dg^vV-5g)wd");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2888
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      int int0 = (-907);
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node1.setSourceEncodedPositionForTree(node0.DIRECT_EVAL);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newNumber(29.0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      InputId inputId0 = new InputId("The new child node already has a parent.");
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getDouble();
      node_FileLevelJsDocBuilder0.append("InputId: The new child node already has a parent.");
      node_FileLevelJsDocBuilder0.append("RNup0sj1?UPE,");
      inputId0.toString();
      int int0 = 49;
      String string0 = "Node has existing properties.";
      Node node1 = new Node(50, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.documentAuthor("");
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
      Node node2 = null;
      try {
        node2 = new Node((-2757), node0, node1, 8, 522);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newNumber(2626.0226011134505, 191, 191);
      Node node1 = new Node((-2866), node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isSwitch();
      node1.isEquivalentTo(node0, false, false, true);
      node1.setWasEmptyNode(true);
      node1.isOnlyModifiesThisCall();
      node1.setLineno(0);
      node0.removeChildren();
      node0.isWith();
      boolean boolean0 = node1.isNew();
      assertEquals(0, node1.getSourcePosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      nodeArray0[0] = null;
      Node node0 = Node.newNumber((-1.0));
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-728), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("J\"AYgz0", (-536870912), (-536870912));
      nodeArray0[0] = node0;
      Node node1 = new Node((-536870912), nodeArray0);
      Node node2 = null;
      try {
        node2 = new Node(28, node1, node1, node0, node0, 53, (-146));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      int int0 = (-1667);
      Node node0 = Node.newString((-1667), "Qvu>|8F:h26j9jP^<", 301, 818);
      Node node1 = new Node(4095);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node(1228);
      node0.setLength(3024);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.useSourceInfoFrom(node1);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node(23, 46, 0);
      Node node1 = new Node((-3798), node0, 2, 4058);
      node0.getLength();
      Node node2 = Node.newString(52, "length", 116, 42);
      assertEquals(475178, node2.getSourcePosition());
      assertTrue(node2.isInstanceOf());
      
      node1.isVarArgs();
      assertEquals((-3798), node1.getType());
      assertEquals(12250, node1.getSourcePosition());
      
      boolean boolean0 = node0.mayMutateArguments();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newNumber((-1517.35337));
      Node node1 = new Node(55);
      node1.setVarArgs(false);
      Node node2 = node0.srcref(node1);
      Node node3 = Node.newString(50, "CharMatcher.forPredicate(");
      node0.putBooleanProp(48, false);
      node1.setIsSyntheticBlock(false);
      node1.useSourceInfoIfMissingFrom(node0);
      node2.isEquivalentToTyped(node3);
      Node node4 = node0.useSourceInfoIfMissingFrom(node1);
      try { 
        node4.setString("?jKn`)");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1517.35337 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString(13, "");
      Node node1 = new Node(2456, node0, node0, (-396), (-1057));
      node1.getDirectives();
      assertEquals(13, node0.getType());
      assertEquals(2456, node1.getType());
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newString(1455, "9d!.g[KH&P$_jXf6cd", 1455, 1455);
      Node node1 = new Node(30, node0);
      node1.isFromExterns();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(1859);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null, 572, (-101));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(1529);
      Node node1 = new Node(0, node0, 39, 597);
      boolean boolean0 = true;
      node1.useSourceInfoIfMissingFromForTree(node0);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString((-2050), "com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node node1 = new Node(0, node0, 43, 177);
      Node node2 = Node.newString("CharMatcher.ANY", 1012, (-67));
      Node node3 = new Node((-2050), node1, node1, node1, node2, 4, 51);
      node3.isQualifiedName();
      assertEquals(0, node1.getType());
      assertEquals(176305, node1.getSourcePosition());
      assertEquals(2, node3.getChildCount());
      assertEquals((-2050), node3.getType());
      assertEquals(16435, node3.getSourcePosition());
      assertEquals((-2050), node0.getType());
      assertEquals((-1), node2.getCharno());
      assertEquals(40, node2.getType());
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQualifiedName();
      Node node1 = new Node(37, node0, node0, 6, 46);
      node1.putIntProp(12, 57);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node(21);
      Node node1 = new Node(21, node0, node0, node0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.Node$AncestorIterable", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      int int0 = (-1507);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-1507), (Node) null, (Node) null, 1762, 1762);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "5xDCgmONf#cxt4$");
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      int int0 = (-2151);
      Node node0 = Node.newString((-2151), "", (-2151), (-3329));
      int int1 = (-303);
      int int2 = 1903;
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1903);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1903
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node0 = null;
      try {
        node0 = new Node(0, (Node[]) null, 2, 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = new Node(9);
      Node node1 = new Node(9, node0, node0, node0, 49, 42);
      node1.isFor();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got BITOR
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newNumber((-1121.9125), 762, 762);
      node0.getStaticSourceFile();
      node0.toString();
      node0.children();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(3618);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString("uzZLz", 0, 0);
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, node0, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      ImmutableList.of((JSType) templateType0, jSType0, jSType0, jSType0, jSType0, (JSType) templateType0, jSType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.overwriteDeclaredType("Not declared as a type name", templateType0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2001);
      node_SideEffectFlags0.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString("", 2810, 2810);
      assertEquals(2810, node0.getLineno());
      
      node0.setSourceEncodedPositionForTree(2810);
      Node node1 = new Node(2810, node0, node0);
      node1.getFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(85);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
  }
}
