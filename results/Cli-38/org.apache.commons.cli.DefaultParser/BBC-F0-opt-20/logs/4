* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-20
* Going to generate test cases for class: org.apache.commons.cli.DefaultParser
* Starting Client-0
* Connecting to master process on port 14968
* Analyzing classpath: 
  - subjects/buggy-versions/Cli-38/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.cli.DefaultParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1064
* Using seed 3912029532
* Starting evolution
bbc usage percentage is: 20%
* Initial Number of Goals in DynaMOSA = 270 / 1064
[MASTER] 16:36:20.124 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 16:37:19.218 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
[MASTER] 16:43:29.966 [logback-2] ERROR TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
* Search finished after 601s and 5676 generations, 2655985 statements, best individual has fitness: 256.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 189
* Number of covered goals: 162
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 80%
* Total number of goals: 173
* Number of covered goals: 138
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 73%
* Total number of goals: 509
* Number of covered goals: 374
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 8
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 173
* Number of covered goals: 138
* Generated 40 tests with total length 307
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 29%
* Compiling and checking tests
[MASTER] 16:46:15.665 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:15.731 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:15.795 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:15.849 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:15.909 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:15.980 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.093 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.154 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.264 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.375 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.422 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.472 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.515 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.561 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.615 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.662 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.714 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.756 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.841 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.891 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.938 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:16.988 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.067 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.104 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.143 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.184 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.297 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.340 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.379 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.414 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.451 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.492 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.536 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.571 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.618 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:17.834 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:46:18.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DefaultParser_ESTest' to results/Cli-38/org.apache.commons.cli.DefaultParser/BBC-F0-opt-20/tests/4
* Done!

* Computation finished
