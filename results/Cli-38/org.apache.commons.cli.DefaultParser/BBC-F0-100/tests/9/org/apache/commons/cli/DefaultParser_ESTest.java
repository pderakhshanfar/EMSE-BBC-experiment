/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 21:20:08 GMT 2021
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultParser_ESTest extends DefaultParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("7", "-7HF[");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-7HF[";
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.parse(options0, stringArray0, true);
      defaultParser0.handleConcatenatedOptions("-7HF[");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      defaultParser0.handleConcatenatedOptions("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP5YZda4R50r&n\"";
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--=iP5YZda4R50r&n\"", true, (String) null);
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, ",)c^+YMw0eGcK+2H", true, ",)c^+YMw0eGcK+2H");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      try { 
        defaultParser0.parse(options1, stringArray0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Ambiguous option: '--'  (could be: '--=iP5YZda4R50r&n\"', ',)c^+YMw0eGcK+2H')
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-=9j)NJQ3";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iPZdq4R,r{p&O\"";
      Options options1 = options0.addOption("hj", "--=iPZdq4R,r{p&O\"", true, "--=iPZdq4R,r{p&O\"");
      DefaultParser defaultParser0 = new DefaultParser();
      options1.addRequiredOption("hj", "-y:Sy)9b_<D", true, "Unrecognized option: ");
      Properties properties0 = new Properties();
      try { 
        defaultParser0.parse(options1, stringArray0, properties0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Ambiguous option: '--'  (could be: '--=iPZdq4R,r{p&O\"', '-y:Sy)9b_<D')
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-=iPZda4R50r{&\"";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, properties0, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ", vZim";
      stringArray0[1] = ", vZim";
      stringArray0[2] = ", vZim";
      Object object0 = new Object();
      properties0.put(object0, object0);
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, properties0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("java.util.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Options options0 = new Options();
      Properties properties0 = new Properties();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-7t=F[";
      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: -7t=F[
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-=iPZda4R50r{&\"";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[3];
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        defaultParser0.parse((Options) null, stringArray0, properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "gvY9XEXjm!#_W";
      stringArray0[2] = "org.apache.commons.cli.Options";
      stringArray0[3] = "*Lp&gPZhgyYTc3F";
      stringArray0[4] = "'&>okt\"LZ";
      stringArray0[5] = "=";
      stringArray0[6] = "zWCobH}  CU#";
      Properties properties0 = new Properties();
      Object object0 = new Object();
      properties0.put(object0, object0);
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, properties0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("java.util.Properties", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP5YZda4R50r&n\"";
      DefaultParser defaultParser0 = new DefaultParser();
      options0.addOption("", "--=iP5YZda4R50r&n\"", true, "--=iP5YZda4R50r&n\"");
      options0.addRequiredOption("", "1", true, "/");
      try { 
        defaultParser0.parse(options0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Ambiguous option: '--'  (could be: '--=iP5YZda4R50r&n\"', '1')
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-=F[";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[0];
      defaultParser0.parse(options0, stringArray0, (Properties) null);
      try { 
        defaultParser0.handleConcatenatedOptions("-, vZim");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: -, vZim
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
      try { 
        defaultParser0.handleConcatenatedOptions("' contains an illegal ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      CommandLine commandLine0 = defaultParser0.parse(options0, (String[]) null, properties0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option((String) null, (String) null, false, "---Y");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options1 = options0.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        defaultParser0.parse(options1, stringArray0, (Properties) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP5YZda4R50r&n\"";
      DefaultParser defaultParser0 = new DefaultParser();
      options0.addRequiredOption("", "1", true, "/");
      defaultParser0.parse(options0, stringArray0);
      defaultParser0.handleConcatenatedOptions("--");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP7YZda5R50r&n<";
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addRequiredOption("6n7sINInyQ4", " ;:@0OSY8{)<5k{", true, "U]y:dl;s");
      OptionGroup optionGroup0 = new OptionGroup();
      optionGroup0.setRequired(true);
      Option option0 = new Option("6n7sINInyQ4", "0VbgegI%");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      options1.addOptionGroup(optionGroup1);
      CommandLine commandLine0 = defaultParser0.parse(options1, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      Options options1 = options0.addRequiredOption("6n7sINInyQ4", " ;:@0OSY8{)<5k{", true, "U]y:dl;s");
      OptionGroup optionGroup0 = new OptionGroup();
      Option option0 = new Option("6n7sINInyQ4", "0VbgegI%");
      OptionGroup optionGroup1 = optionGroup0.addOption(option0);
      Options options2 = options1.addOptionGroup(optionGroup1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "U]y:dl;s";
      stringArray0[1] = "--=iP7YZda5R50r&n<";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("7", (String) null, false, "-7=F[");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "7";
      stringArray0[1] = "-7=F[";
      try { 
        defaultParser0.parse(options1, stringArray0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: -7=F[
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("7", "-7=F[", true, "-7=F[");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-7=F[";
      DefaultParser defaultParser0 = new DefaultParser();
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options options0 = new Options();
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-t=F[";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("F3", "F3", false, "F3");
      DefaultParser defaultParser0 = new DefaultParser();
      options1.addRequiredOption("F3", "-K", true, "7");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "F3";
      stringArray0[1] = "F3";
      stringArray0[2] = "-F3cO";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("F3", "F3", false, "F3");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "F3";
      stringArray0[1] = "F3";
      stringArray0[2] = "-F3cO";
      try { 
        defaultParser0.parse(options1, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: -F3cO
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-=";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, (Properties) null, true);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP7YZda5R50r&n<";
      options0.addOption((String) null, "[A", false, "--=iP7YZda5R50r&n<");
      DefaultParser defaultParser0 = new DefaultParser();
      try { 
        defaultParser0.parse(options0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: --=iP7YZda5R50r&n<
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iPZdq4R,r{p&O\"";
      Options options1 = options0.addOption("hj", "--=iPZdq4R,r{p&O\"", true, "--=iPZdq4R,r{p&O\"");
      DefaultParser defaultParser0 = new DefaultParser();
      Options options2 = options1.addRequiredOption("hj", "-y:Sy)9b_<D", true, "Unrecognized option: ");
      Properties properties0 = new Properties();
      try { 
        defaultParser0.parse(options2, stringArray0, properties0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Ambiguous option: '--'  (could be: '--=iPZdq4R,r{p&O\"', '-y:Sy)9b_<D')
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "---Y";
      try { 
        defaultParser0.parse(options0, stringArray0, (Properties) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: ---Y
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("7", "-7F[", true, "-7F[");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "7";
      stringArray0[1] = "-7";
      stringArray0[2] = "-7F[";
      stringArray0[3] = "---7";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("F3", "F3", true, "F3");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-F3";
      stringArray0[1] = "-F3cL=O";
      DefaultParser defaultParser0 = new DefaultParser();
      try { 
        defaultParser0.parse(options1, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: -F3cL=O
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("F3O", "F3O", true, "F3O");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "F3O";
      stringArray0[1] = "F3O";
      stringArray0[2] = "-F3";
      stringArray0[3] = "-7]t=an";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options1, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("F3O", "F3O", true, "F3O");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-F3";
      stringArray0[1] = "-";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "yes";
      stringArray0[1] = "5^Iy\"`Sf ;u{+y,v";
      stringArray0[2] = "-";
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Properties properties0 = new Properties();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ", vZim";
      stringArray0[1] = "--";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0, properties0, false);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--=iP7YZda5R50r&n<";
      DefaultParser defaultParser0 = new DefaultParser();
      options0.addRequiredOption("", ".%X", true, "");
      defaultParser0.parse(options0, stringArray0);
      defaultParser0.handleConcatenatedOptions("--=iP7YZda5R50r&n<");
      defaultParser0.handleConcatenatedOptions("--=iP7YZda5R50r&n<");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption("F3O", "F3O", true, "F3O");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-F3";
      stringArray0[1] = "-F3";
      try { 
        defaultParser0.parse(options1, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing argument for option: F3O
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultParser defaultParser0 = new DefaultParser();
      Options options0 = new Options();
      options0.addRequiredOption("c2", "N'?k-Ec,TVJc a", false, (String) null);
      String[] stringArray0 = new String[0];
      try { 
        defaultParser0.parse(options0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing required option: c2
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-7HF[";
      DefaultParser defaultParser0 = new DefaultParser();
      Properties properties0 = new Properties();
      properties0.setProperty("'CL8|yt=7j5", "*Lp&gPZhgyYTc3F");
      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Default option wasn't defined
         //
         verifyException("org.apache.commons.cli.DefaultParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Options options0 = new Options();
      options0.addRequiredOption("F3O", "F3O", true, "F3O");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",)c^+#Mw0eGcK+2SH";
      stringArray0[1] = ",)c^+#Mw0eGcK+2SH";
      stringArray0[2] = ",)c^+#Mw0eGcK+2SH";
      stringArray0[3] = ",)c^+#Mw0eGcK+2SH";
      stringArray0[4] = ",)c^+#Mw0eGcK+2SH";
      stringArray0[5] = "-F3";
      stringArray0[6] = "-7";
      stringArray0[7] = "-F3";
      stringArray0[8] = "F3O";
      CommandLine commandLine0 = defaultParser0.parse(options0, stringArray0);
      assertNotNull(commandLine0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Options options0 = new Options();
      options0.addOption("7", "-7F[", true, "-7F[");
      DefaultParser defaultParser0 = new DefaultParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-7F[";
      stringArray0[1] = "-7F[";
      stringArray0[2] = "-7";
      stringArray0[3] = "-7";
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        defaultParser0.parse(options0, stringArray0, properties0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
