* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.jfree.chart.util.ShapeList
* Starting Client-0
* Connecting to master process on port 7156
* Analyzing classpath: 
  - subjects/buggy-versions/Chart-6/build
  - subjects/buggy-versions/Chart-6/lib/servlet.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.util.ShapeList
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 159
* Using seed 2592261674
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 49 / 159
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: Line 134: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: Line 160: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: Line 133: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: Line 136: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: Line 135: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: Line 162: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: Line 161: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.equals(Ljava/lang/Object;)Z: I4 Branch 1 IF_ACMPNE L105 - false: 158,0,0| Number of FF evals: 261
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: I16 Branch 5 IF_ICMPGE L162 - true: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: I21 Branch 3 IF_ICMPGE L136 - true: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: Line 169: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: Line 147: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.writeObject(Ljava/io/ObjectOutputStream;)V: I21 Branch 3 IF_ICMPGE L136 - false: 993898,931057,0| Number of FF evals: 499879
Number of times BBC is called, activated, and useful for org.jfree.chart.util.ShapeList.readObject(Ljava/io/ObjectInputStream;)V: I16 Branch 5 IF_ICMPGE L162 - false: 993898,931057,0| Number of FF evals: 499879
* Search finished after 601s and 10082 generations, 1829033 statements, best individual has fitness: 102.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 29
* Number of covered goals: 12
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 15%
* Total number of goals: 78
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 17
* Number of covered goals: 9
* Generated 8 tests with total length 25
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
[MASTER] 11:18:11.586 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:11.662 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:11.741 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:11.789 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:11.917 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:11.971 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:12.022 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:12.075 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:12.177 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:18:12.254 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'ShapeList_ESTest' to results/Chart-6/org.jfree.chart.util.ShapeList/BBC-F0-100/tests/23
* Done!

* Computation finished
