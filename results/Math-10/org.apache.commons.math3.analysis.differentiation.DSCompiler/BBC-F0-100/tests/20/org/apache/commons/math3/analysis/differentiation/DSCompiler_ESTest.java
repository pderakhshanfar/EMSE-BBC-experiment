/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 02:24:14 GMT 2021
 */

package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1;
      dSCompiler0.getOrder();
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, (-1875), doubleArray0, (-978));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1875
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getPartialDerivativeOrders(0);
      double[] doubleArray1 = null;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan((double[]) null, (-1), doubleArray2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = Integer.MAX_VALUE;
      int int1 = 253;
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(Integer.MAX_VALUE, 253);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.log10(doubleArray0, 2, doubleArray0, 829);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 829
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = 36;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 36);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 36;
      doubleArray0[1] = (double) 36;
      doubleArray0[2] = (double) 36;
      doubleArray0[3] = (double) 0;
      int int1 = 719;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, 719);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 719
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-4.776104368314602E-8);
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray1, 0, doubleArray0, (-2550));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2550
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 1, (double[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1426);
      dSCompiler0.getFreeParameters();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1426;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 1426;
      // Undeclared exception!
      dSCompiler1.tan(doubleArray0, 0, doubleArray0, 2748);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1035.42437744069);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 80);
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 0, doubleArray0, 80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 80
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 1, doubleArray0, 1, doubleArray0, 3748);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray0[4] = (double) 2;
      dSCompiler0.acos(doubleArray0, 2, doubleArray0, 0);
      dSCompiler0.tan(doubleArray0, 2, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, (-2319), doubleArray0, 0, doubleArray1, (-594));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2319
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.getPartialDerivativeOrders(922);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 922
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      dSCompiler0.acos(doubleArray0, 2, doubleArray0, 0);
      int int1 = 664;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray1, (-594), doubleArray1, 2, doubleArray0, 664);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -594
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[8];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray1[7] = (-74.14);
      dSCompiler1.acos(doubleArray1, 2, doubleArray1, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray1, 2, doubleArray0, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 1611, doubleArray0, 27);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1611
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1204);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1035.42437744069);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      double double0 = (-1035.42437744069);
      doubleArray0[0] = (-1035.42437744069);
      int int1 = 3;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) (-1957);
      doubleArray1[1] = (double) 3;
      doubleArray1[2] = (double) (-1957);
      doubleArray1[3] = (double) (-1957);
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) (-1957);
      doubleArray1[6] = (-1035.42437744069);
      doubleArray1[7] = (double) (-1957);
      doubleArray1[8] = (double) (-1957);
      dSCompiler0.taylor(doubleArray1, 0, doubleArray1);
      int int2 = 711;
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler((-307), 711);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      dSCompiler0.asinh(doubleArray0, 2, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.tan((double[]) null, (-140), doubleArray0, (-140));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler.getCompiler(2, 2);
      dSCompiler0.pow(doubleArray1, 2, 1.0487601931965087E175, doubleArray1, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray0, (-786), doubleArray0, doubleArray1, 95);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 95
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1035.42437744069);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getFreeParameters();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) (-1306);
      dSCompiler0.add(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(635, (-718));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 793);
      dSCompiler0.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      int int2 = 2066;
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = (double) 0;
      doubleArray0[1] = (double) 34;
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 1);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2066;
      doubleArray0[5] = (double) 0;
      int int3 = 4;
      double double0 = 1485.4939;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, (-1), doubleArray0, (-458), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -458
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 793);
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 793);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 793
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = (double) 2;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        dSCompiler0.tanh((double[]) null, 2573, doubleArray1, 2573);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.getFreeParameters();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler1.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = (double) 2;
      int int2 = 55;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, (-465), 2, doubleArray0, 55);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -465
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1098);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 358.657237;
      DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      dSCompiler0.atan2(doubleArray0, 0, doubleArray1, 0, doubleArray0, 1098);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2, 2);
      int int0 = 3;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 3;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) (-1957);
      // Undeclared exception!
      try { 
        dSCompiler1.cosh(doubleArray1, 0, doubleArray2, (-1957));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1957
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[2] = (double) 1;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 1;
      dSCompiler0.linearCombination(0.0, doubleArray0, 1, (double) 0, doubleArray0, 1, 0.0, doubleArray0, 0, 0.0, doubleArray0, 0, doubleArray1, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 767);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1035.42437744069);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.add(doubleArray0, 0, doubleArray0, (-1306), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1306
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2, 2);
      int int1 = (-1957);
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 3;
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 3;
      doubleArray2[3] = (double) (-1957);
      doubleArray2[4] = (double) (-1957);
      doubleArray2[5] = (double) (-1957);
      doubleArray2[6] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler1.sin(doubleArray0, 2, doubleArray2, 1026);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1026
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2, 2);
      int int1 = (-1957);
      int int2 = 3;
      // Undeclared exception!
      try { 
        dSCompiler1.divide(doubleArray0, 2, doubleArray1, 2, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = 659;
      // Undeclared exception!
      try { 
        dSCompiler0.atanh((double[]) null, 0, (double[]) null, 659);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 0, doubleArray0, 280);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 280
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) (-1294);
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) (-1294);
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 2;
      doubleArray2[6] = (double) (-1294);
      doubleArray2[7] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 2, doubleArray1, 0, doubleArray2, (-1294));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1294
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 1858);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1858
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 34);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 34;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 34;
      doubleArray0[3] = (double) 34;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 34;
      doubleArray0[6] = (double) 34;
      doubleArray0[7] = 1053.4985733214028;
      doubleArray0[8] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 55);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 55
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1481;
      doubleArray0[1] = (double) 2599;
      doubleArray0[2] = (double) 1481;
      doubleArray0[3] = (double) 2599;
      doubleArray0[4] = (double) 1481;
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray0, 15, (double[]) null, doubleArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(3827, 0);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3,827
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      int int1 = 34;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 34;
      // Undeclared exception!
      try { 
        dSCompiler1.sin(doubleArray0, 0, doubleArray0, 34);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      int int1 = (-368);
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      double double0 = 1382.69769676685;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 2.800552834259E-8;
      doubleArray1[1] = 1382.69769676685;
      doubleArray1[2] = (double) (-368);
      doubleArray1[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) (-368), doubleArray1, (-368), 0.0, doubleArray0, (-368), doubleArray1, (-368));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -368
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[7];
      int int1 = 793;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 793, doubleArray0, 793);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 793
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.acos((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      int int1 = (-16);
      double[] doubleArray1 = new double[6];
      int int2 = 3;
      // Undeclared exception!
      try { 
        dSCompiler0.asin((double[]) null, 29, doubleArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 0;
      int int1 = 188;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 188);
      int int2 = 1;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 188;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 0, doubleArray1, 188);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 188
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = null;
      int int2 = 2213;
      // Undeclared exception!
      try { 
        dSCompiler0.multiply((double[]) null, 14, (double[]) null, 2213, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 1209, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1209
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 0;
      dSCompiler0.getFreeParameters();
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 0;
      dSCompiler0.getFreeParameters();
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(0, (-343));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 35;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(35, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 35;
      doubleArray0[1] = (double) 35;
      int int1 = 489;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 489;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 489;
      doubleArray1[5] = 2.0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray1, 1, doubleArray0, 0, doubleArray0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[3] = 0.0;
      doubleArray1[5] = (double) 0;
      int int0 = 125;
      // Undeclared exception!
      DSCompiler.getCompiler(3831, 31);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 0, doubleArray1, (-368));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -368
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.checkCompatibility((DSCompiler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray1, 6, 0, doubleArray0, 110);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 110
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 0;
      int int1 = 16;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 16);
      double[] doubleArray0 = null;
      int int2 = 12;
      // Undeclared exception!
      try { 
        dSCompiler0.exp((double[]) null, 16, (double[]) null, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      int int0 = dSCompiler0.getSize();
      assertEquals(1, int0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = (double) 0;
      doubleArray0[1] = (double) 34;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2225;
      doubleArray1[1] = (double) 2225;
      doubleArray1[2] = (double) 2225;
      doubleArray1[3] = (double) 0;
      dSCompiler1.pow(doubleArray1, 0, 982.593669, doubleArray1, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.subtract((double[]) null, 2225, (double[]) null, 0, doubleArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      int int0 = 5;
      dSCompiler0.acos(doubleArray0, 5, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, 1012, (double) 1012, doubleArray0, 1, (double) 1012, doubleArray0, 1, doubleArray0, 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1012
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2, 2);
      dSCompiler1.taylor(doubleArray0, 3, doubleArray0);
      // Undeclared exception!
      try { 
        dSCompiler1.expm1(doubleArray1, 62, doubleArray1, (-1957));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 62
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 483);
      double double0 = 1382.69769676685;
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 483, (double[]) null, 0, (double) 483, (double[]) null, 483, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      int int1 = 0;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, 0, doubleArray1, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int0 = 4;
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(2.0, (double[]) null, (-980), 0.0, (double[]) null, (-795), (double) 3807, (double[]) null, 3069, (double[]) null, (-795));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = (double) 0;
      doubleArray0[1] = (double) 34;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2066;
      doubleArray0[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler1.pow(doubleArray0, 0, doubleArray0, (-1294), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1294
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 24);
      double[] doubleArray0 = new double[7];
      // Undeclared exception!
      try { 
        dSCompiler0.atan2((double[]) null, 24, (double[]) null, 24, (double[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 0, (double[]) null, 0, (double[]) null, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 1609, doubleArray0, 317);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1609
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int2 = 263;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh((double[]) null, 33, (double[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, (-4162), doubleArray0, 0, doubleArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4162
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[1] = (-1314.13082617);
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      doubleArray1[7] = (double) 0;
      DSCompiler.getCompiler(0, 0);
      dSCompiler0.atan(doubleArray1, 0, doubleArray1, 0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1456.6937128476;
      dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
      doubleArray1[1] = (double) 2;
      DSCompiler.getCompiler(2, 2);
      int int2 = (-1957);
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, (-1957), doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1957
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1456.6937128476;
      int int2 = 317;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 317);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 317
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) (-1323);
      doubleArray0[2] = (double) (-1323);
      dSCompiler0.log10(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) (-1323);
      doubleArray1[1] = (double) 45;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) (-1323);
      doubleArray1[4] = (double) 45;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 2, doubleArray0, (-1323), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1323
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      DSCompiler.getCompiler(45, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(742, 0);
      dSCompiler1.rootN(doubleArray0, 1, 1, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.tan((double[]) null, 1219, (double[]) null, 242);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 0;
      dSCompiler0.getFreeParameters();
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
      int int1 = (-343);
      double[] doubleArray1 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, (-343), (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.sin((double[]) null, 0, doubleArray1, 134);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int1 = 793;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 793, doubleArray0, 793);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 793
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      int int2 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      DSCompiler.getCompiler(0, 47);
      // Undeclared exception!
      try { 
        dSCompiler0.taylor((double[]) null, 0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 4);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      doubleArray1[6] = (double) 4;
      int int0 = 1481;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray1, 3, (double[]) null, 1481);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.divide((double[]) null, 1, (double[]) null, 0, doubleArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) (-1323);
      doubleArray0[2] = (double) (-1323);
      dSCompiler0.log10(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) (-1323);
      doubleArray1[1] = (double) 45;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (double) (-1323);
      doubleArray1[4] = (double) 45;
      dSCompiler0.compose(doubleArray1, 2, doubleArray1, doubleArray1, 0);
      dSCompiler0.getOrder();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[5];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 793);
      dSCompiler1.subtract(doubleArray1, 0, doubleArray1, 0, doubleArray1, 0);
      // Undeclared exception!
      try { 
        dSCompiler1.log10(doubleArray1, 3223, doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3223
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[4];
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 0, 3, doubleArray1, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = (double) 0;
      doubleArray0[1] = (double) 34;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2066;
      doubleArray0[5] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-204.0);
      doubleArray1[1] = (double) 3807;
      doubleArray1[2] = (double) 2066;
      doubleArray1[3] = (double) 34;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 34;
      dSCompiler1.linearCombination(1485.4939, doubleArray0, 0, (double) 1, doubleArray0, 0, (-204.0), doubleArray1, 4, doubleArray1, 4);
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray1, 0, doubleArray1, (-3279));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3279
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 0;
      int int1 = 653;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 653);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 653;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray2, 653, (double[]) null, 653);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 653
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      int int1 = (-807);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) (-807);
      doubleArray1[3] = (double) 0;
      int int2 = 2225;
      int int3 = 1;
      dSCompiler0.pow(doubleArray1, 0, (-2462.439838966616), doubleArray0, 1);
      int int4 = 3426;
      int int5 = 976;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 33, doubleArray0, 33, doubleArray0, 976);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      int int0 = (-2211);
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, (-1556), doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 3244, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3244
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[4];
      int int1 = 2;
      dSCompiler0.cos(doubleArray0, 2, doubleArray0, 0);
      double[] doubleArray1 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh((double[]) null, 0, (double[]) null, 19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 0.0;
      doubleArray2[5] = (double) 0;
      double[] doubleArray3 = new double[4];
      doubleArray3[0] = 0.0;
      doubleArray3[1] = (double) 1350;
      doubleArray3[2] = (double) 0;
      doubleArray3[3] = 0.0;
      dSCompiler0.asinh(doubleArray3, 0, doubleArray2, 0);
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (double) 0;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = 1.976524624939355E-8;
      doubleArray4[4] = (double) 179;
      doubleArray4[5] = (double) 1350;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = 1.976524624939355E-8;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray3, 179, doubleArray4, 3, doubleArray5, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 179
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      int[] intArray0 = new int[9];
      intArray0[0] = 5532;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (-819);
      intArray0[7] = 0;
      intArray0[8] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, (-176), doubleArray0, (-176));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -176
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 0.0;
      doubleArray2[5] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1350, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray2, 3, doubleArray2, 1350);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1350
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[6] = (double) 0;
      doubleArray0[1] = (double) 34;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2066;
      doubleArray0[5] = (double) 0;
      int int0 = 3807;
      // Undeclared exception!
      try { 
        dSCompiler1.asinh(doubleArray0, 4, doubleArray0, 3807);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3807
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getSize();
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 3787.601376646625;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      dSCompiler1.expm1(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[0];
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 726.0565031876602;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 31;
      doubleArray2[3] = 4.413745413236018E-197;
      doubleArray2[4] = (double) 31;
      doubleArray2[5] = (double) 34;
      doubleArray2[6] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(0.0, doubleArray1, 31, (double) 31, doubleArray1, 1, (double) 31, doubleArray1, 2052, (double) 34, doubleArray2, 248, doubleArray2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray1, 0, (double[]) null, 1435);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 19, doubleArray0, 1406);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = (-904);
      int int2 = (-2737);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) (-904);
      doubleArray1[1] = (double) (-2737);
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) (-2737);
      doubleArray1[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log((double[]) null, (-2737), doubleArray1, 891);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      int int0 = 1;
      dSCompiler0.acosh(doubleArray1, 8, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray1, 1, doubleArray1, 1827);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1827
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int2 = (-904);
      // Undeclared exception!
      try { 
        dSCompiler0.log10((double[]) null, (-904), (double[]) null, (-2737));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[9];
      dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2);
      double double0 = 0.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1456.6937128476;
      doubleArray1[1] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray1, 0, doubleArray1, 2740);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2740
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 34);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 34
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int0 = (-1);
      int int1 = 2225;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, (-1), (-3347.1), (double[]) null, (-926));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray1, 388);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 388
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(480, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 480;
      doubleArray0[1] = (double) 480;
      doubleArray0[2] = (double) 480;
      double double0 = 0.6038248538970947;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 709, 480, doubleArray0, 1118);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 709
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[3];
      int int0 = (-1772);
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 3216, 0, doubleArray0, 1233);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3216
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 0;
      int int1 = 3249;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.cos((double[]) null, 0, (double[]) null, 613);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[3];
      int int1 = 848;
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, 0, doubleArray0, (-1791));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1791
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-64.831449);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      int[] intArray0 = new int[0];
      dSCompiler0.getOrder();
      dSCompiler0.getSize();
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-1.0);
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (-64.831449);
      doubleArray1[4] = (-64.831449);
      doubleArray1[5] = (double) 0;
      int int1 = 267;
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray1, 267, doubleArray0, 0, doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 267
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int0 = 563;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(45, 0);
      DSCompiler.getCompiler(563, 0);
      int int1 = 24;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, (-1360));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1360
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = 0;
      int int2 = 1;
      int int3 = 388;
      int int4 = (-1);
      // Undeclared exception!
      try { 
        dSCompiler0.acosh((double[]) null, 388, (double[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      int int1 = 2;
      dSCompiler0.cos(doubleArray0, 2, doubleArray0, 0);
      int int2 = 17;
      int int3 = 259;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 259, (double[]) null, 2787, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 259
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[4];
      dSCompiler0.cos(doubleArray0, 2, doubleArray0, 0);
      int int1 = 3229;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder((double[]) null, 2, (double[]) null, 3229, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = 1.676081191364984E71;
      dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[5];
      int int1 = 793;
      int int2 = (-175);
      // Undeclared exception!
      try { 
        dSCompiler0.log10(doubleArray0, (-1987), doubleArray1, (-474));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1987
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 1824;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1824, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1824;
      doubleArray0[2] = (double) 1824;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1824;
      // Undeclared exception!
      try { 
        dSCompiler0.multiply(doubleArray0, 1309, doubleArray0, 0, doubleArray0, (-371));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1309
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = 1824;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1824, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1824;
      doubleArray0[2] = (double) 1824;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, (-1), doubleArray0, (-2329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) (-807);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) (-807);
      doubleArray1[5] = (double) (-807);
      doubleArray1[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray1, 0, (double) 0, doubleArray1, 2225);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2225
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = 0;
      int int1 = 18;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 18);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 18;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 18;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 18;
      doubleArray0[5] = (double) 18;
      doubleArray0[6] = (double) 18;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 18;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 18;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 18;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 1125, doubleArray1, 360);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1125
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 0;
      int int1 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 2, doubleArray0, 2287);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = 1.676081191364984E71;
      dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[5];
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 793);
      // Undeclared exception!
      try { 
        dSCompiler1.cos(doubleArray1, 1380, doubleArray1, 1380);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1380
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      int int0 = (-2211);
      int int1 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray0, 0, doubleArray0, (-1556), doubleArray0, 3224);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3224
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2003, 0);
      double[] doubleArray2 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 500, doubleArray0, 2003, (double[]) null, 4082);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 3, (double[]) null, 1481);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      int int1 = 0;
      int int2 = 5;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 5, doubleArray0, 5, doubleArray0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int2 = (-1);
      double[] doubleArray1 = new double[7];
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray1, 3247, (double[]) null, 997);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3247
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(531.2356, (double[]) null, (-1955), 531.2356, (double[]) null, (-1), (double) (-1955), (double[]) null, 1111, 2276.97, (double[]) null, (-1955), (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.getFreeParameters();
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 480;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(480, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 480;
      doubleArray0[1] = (double) 480;
      doubleArray0[2] = (double) 480;
      double double0 = 0.6038248538970947;
      doubleArray0[3] = 0.6038248538970947;
      int[] intArray0 = new int[1];
      intArray0[0] = 480;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1 != 480
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 0;
      int int1 = 18;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 18);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 18;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 18;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 18;
      doubleArray0[5] = (double) 18;
      doubleArray0[6] = (double) 18;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 18;
      int int2 = (-807);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 18, 18.0, doubleArray0, (-807));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[3];
      int int1 = (-1791);
      // Undeclared exception!
      try { 
        dSCompiler0.taylor(doubleArray0, 3, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int2 = (-1);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) (-1);
      doubleArray2[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray2, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      int int0 = 1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray2, 3, doubleArray1, 793);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 793
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 793);
      dSCompiler0.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      int int2 = 316;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(316, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 316;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 316;
      doubleArray0[4] = (double) 316;
      doubleArray0[5] = (double) 316;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.taylor(doubleArray0, 771, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 771
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = 0;
      int int1 = 2045;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2045);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2045;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (-4.135121057126514E24);
      doubleArray0[4] = (double) 2045;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 2045;
      dSCompiler0.taylor(doubleArray1, 0, doubleArray1);
      doubleArray0[5] = 376.513472;
      doubleArray0[6] = (double) 2045;
      doubleArray0[7] = (double) 0;
      int int2 = 4351;
      int int3 = 2388;
      // Undeclared exception!
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2388);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.linearCombination(1382.69769676685, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, (-2313));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2313
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = 3249;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 3249;
      // Undeclared exception!
      try { 
        dSCompiler0.cos(doubleArray0, 421, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 421
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      assertNotNull(dSCompiler0);
      assertEquals(3249, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[3];
      dSCompiler0.cos(doubleArray0, 2, doubleArray0, 0);
      assertEquals(3, doubleArray0.length);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3249, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      // Undeclared exception!
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 752);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[0];
      int int0 = dSCompiler0.getFreeParameters();
      assertEquals(0, int0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, (-1426), doubleArray0, 409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1426
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertNotNull(dSCompiler0);
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[3];
      double double0 = 1.820141955326842E-7;
      int int1 = 857;
      double double1 = 3.3058299602856804E-8;
      int int2 = (-1791);
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, 3, doubleArray0, 857);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      double[] doubleArray0 = null;
      int int2 = (-1);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      int int3 = 0;
      doubleArray1[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray1, 1, 0, (double[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      double[] doubleArray1 = new double[6];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      double double0 = dSCompiler0.taylor(doubleArray1, 0, doubleArray1);
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(6, doubleArray1.length);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      int int1 = 2003;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2003, 0);
      assertFalse(dSCompiler1.equals((Object)dSCompiler0));
      assertNotNull(dSCompiler1);
      assertNotSame(dSCompiler1, dSCompiler0);
      assertEquals(0, dSCompiler1.getOrder());
      assertEquals(1, dSCompiler1.getSize());
      assertEquals(2003, dSCompiler1.getFreeParameters());
      
      // Undeclared exception!
      try { 
        dSCompiler1.getPartialDerivativeIndex((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = 3.141592653589793;
      doubleArray1[3] = (double) 0;
      int[] intArray0 = new int[0];
      int int0 = dSCompiler0.getPartialDerivativeIndex(intArray0);
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
      assertEquals(0, int0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      int int1 = dSCompiler0.getSize();
      assertFalse(int1 == int0);
      assertEquals(1, int1);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      // Undeclared exception!
      DSCompiler.getCompiler(1077, 2066);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getFreeParameters());
      assertEquals(2, dSCompiler0.getSize());
      assertEquals(1, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray0, 2599, doubleArray0, doubleArray0, 1481);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1481
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertNotNull(dSCompiler0);
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      
      int int1 = dSCompiler0.getFreeParameters();
      assertTrue(int1 == int0);
      assertEquals(3, int1);
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      double[] doubleArray1 = new double[9];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) 3;
      doubleArray1[2] = (double) 3;
      doubleArray1[3] = (double) 3;
      doubleArray1[4] = (double) 3;
      doubleArray1[5] = (double) 3;
      doubleArray1[6] = (double) 3;
      doubleArray1[7] = (double) 3;
      doubleArray1[8] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray0, 3, doubleArray1, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = 3.141592653589793;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 0, doubleArray1, 2491);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2491
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3249);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(3249, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 3249;
      dSCompiler0.cos(doubleArray0, 2, doubleArray0, 0);
      assertEquals(3, doubleArray0.length);
      assertArrayEquals(new double[] {1.0, 3249.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(3249, dSCompiler0.getOrder());
      
      doubleArray0[2] = 2961.578891087607;
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, (-2813), doubleArray0, 1067);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2813
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 480;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(480, 0);
      assertNotNull(dSCompiler0);
      assertEquals(480, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 480;
      doubleArray0[1] = (double) 480;
      doubleArray0[2] = (double) 480;
      doubleArray0[3] = 0.6038248538970947;
      doubleArray0[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 480, doubleArray0, 188, doubleArray0, 188);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 480
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      double[] doubleArray1 = new double[6];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, 0.0, doubleArray1, 0, 1.820141955326842E-7, doubleArray0, 0, (double) 0, doubleArray1, 0, doubleArray1, 0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(5, doubleArray0.length);
      assertEquals(6, doubleArray1.length);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray2 = new double[1];
      assertFalse(doubleArray2.equals((Object)doubleArray0));
      assertFalse(doubleArray2.equals((Object)doubleArray1));
      
      doubleArray2[0] = (double) 0;
      double[] doubleArray3 = new double[3];
      assertFalse(doubleArray3.equals((Object)doubleArray1));
      assertFalse(doubleArray3.equals((Object)doubleArray0));
      assertFalse(doubleArray3.equals((Object)doubleArray2));
      
      doubleArray3[0] = (double) 209;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.subtract(doubleArray2, 209, doubleArray3, 0, doubleArray2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 209
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      assertNotNull(dSCompiler0);
      assertEquals(2, dSCompiler0.getSize());
      assertEquals(1, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[0];
      int int1 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[0];
      int int2 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 2331, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertNotNull(dSCompiler0);
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(20, dSCompiler0.getSize());
      
      int int0 = dSCompiler0.getFreeParameters();
      assertEquals(3, int0);
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(3, dSCompiler0.getOrder());
      assertEquals(20, dSCompiler0.getSize());
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (-303.31359);
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 3, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      int int0 = 0;
      int int1 = 2286;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2286);
      assertNotNull(dSCompiler0);
      assertEquals(2286, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2286;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((-3.141592653589793), doubleArray0, (-389), 2286.0, doubleArray0, 171, (double) (-389), doubleArray0, 1068, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -389
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = null;
      int int2 = (-1);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      int int3 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray1, 0, doubleArray1, (-1), doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 80;
          // Undeclared exception!
          DSCompiler.getCompiler(80, 80);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[6];
      double double0 = (-64.831449);
      doubleArray0[0] = (-64.831449);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      int int1 = 1;
      int int2 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 1, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.linearCombination(1382.69769676685, doubleArray0, 0, (double) 0, doubleArray0, 0, doubleArray0, 0);
      assertEquals(6, doubleArray0.length);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      int int1 = 2892;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 2892, doubleArray0, (-2313));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2892
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      int int1 = 666;
      int int2 = 1520;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(2.3093822298965837E116, doubleArray0, 666, 0.0, doubleArray0, 1520, doubleArray0, 666);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 666
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      int int0 = 0;
      int int1 = 2045;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2045);
      assertNotNull(dSCompiler0);
      assertEquals(2045, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 2045;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (-4.135121057126514E24);
      doubleArray0[4] = (double) 2045;
      doubleArray0[5] = 376.513472;
      doubleArray0[6] = (double) 2045;
      doubleArray0[7] = (double) 0;
      int int2 = 4351;
      int int3 = 2388;
      // Undeclared exception!
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2388);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = 251;
      // Undeclared exception!
      DSCompiler.getCompiler(251, 251);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1824, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(1824, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1824;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1824;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 1824;
      doubleArray0[5] = (double) 1824;
      doubleArray0[6] = (double) 1824;
      doubleArray0[7] = (double) 1824;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, (-1096), 1824.0, doubleArray0, (-1), 1824.0, doubleArray0, (-1), (double) (-1), doubleArray0, 2, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1096
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      int int0 = 1174;
      // Undeclared exception!
      DSCompiler.getCompiler(1174, 1174);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 1481, doubleArray0, 1481);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1481
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = (-5208);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(1107, (-5208));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int int0 = 1493;
      int int1 = 914;
      // Undeclared exception!
      DSCompiler.getCompiler(1493, 914);
  }
}
