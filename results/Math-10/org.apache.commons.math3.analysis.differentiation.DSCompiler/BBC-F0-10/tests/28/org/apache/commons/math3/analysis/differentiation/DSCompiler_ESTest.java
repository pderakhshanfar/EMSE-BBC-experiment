/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 02:52:19 GMT 2021
 */

package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[7];
      dSCompiler0.atan2(doubleArray1, 0, doubleArray1, 0, doubleArray1, 0);
      dSCompiler0.sinh(doubleArray1, 0, doubleArray1, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray1, 802, 2, doubleArray0, (-265));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 802
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[3];
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 2, doubleArray0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 0;
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, 3.141592653589793, doubleArray0, 0, doubleArray1, 0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (-2042.2972759807);
      doubleArray0[4] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray1, 0, doubleArray1, 677, (double[]) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      double[] doubleArray0 = new double[12];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      dSCompiler0.getPartialDerivativeOrders(3);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 3;
      doubleArray1[1] = (double) 3;
      doubleArray1[2] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray1, 2, doubleArray0, 2, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int int0 = 0;
          int int1 = 0;
          DSCompiler.getCompiler(0, 0);
          double[] doubleArray0 = new double[8];
          DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 117);
          // Undeclared exception!
          try { 
            dSCompiler0.asin(doubleArray0, 0, doubleArray0, 117);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
          
          } catch(ArrayIndexOutOfBoundsException e) {
             //
             // 117
             //
             verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.cos((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler1.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler1.getFreeParameters();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[3];
      dSCompiler0.remainder(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);
      dSCompiler0.taylor(doubleArray0, 1, doubleArray0);
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 1, doubleArray0, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DSCompiler.getCompiler(3, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 33);
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, 33);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = 0;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      dSCompiler0.linearCombination((-7.724219106106896E111), doubleArray0, 0, (double) 33, doubleArray0, 0, 0.0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray0, 2, doubleArray0, 2, doubleArray0, 33);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 3, (double) 0, doubleArray0, (-2556));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2556
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      double[] doubleArray0 = null;
      int int0 = 820;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(820, 0);
      int int1 = 1062;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1((double[]) null, 0, (double[]) null, 1062);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh((double[]) null, 0, (double[]) null, 870);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-2791.0);
      doubleArray0[1] = (-5458.79);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 2.0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 0, doubleArray0, 1070);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1070
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 4510.4923;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = 509.5218336;
      doubleArray0[5] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray0, 22, doubleArray0, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 23
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[11];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[2] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      int int2 = (-25);
      // Undeclared exception!
      DSCompiler.getCompiler(4274, 4274);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (-427.70035789204456);
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 1;
      dSCompiler0.tanh(doubleArray1, 1, doubleArray0, 1);
      int int0 = 3;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray1, 3, doubleArray1, 3, doubleArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 17);
      // Undeclared exception!
      try { 
        dSCompiler0.compose((double[]) null, 69, (double[]) null, (double[]) null, 1665);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[2] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);
      dSCompiler0.compose(doubleArray0, 10, doubleArray0, doubleArray0, 1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 0;
      int int1 = 0;
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      int int2 = Integer.MAX_VALUE;
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(0, Integer.MAX_VALUE);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 3432);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 3432;
      doubleArray0[1] = (double) 3432;
      doubleArray0[2] = (-427.70035789204456);
      doubleArray0[3] = (double) 3432;
      doubleArray0[4] = (-427.70035789204456);
      doubleArray0[5] = (-427.70035789204456);
      doubleArray0[6] = (double) 0;
      int int0 = (-2525);
      // Undeclared exception!
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, (-2525));
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 1627);
      try { 
        dSCompiler1.checkCompatibility(dSCompiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,627 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      int int0 = 0;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      int int1 = 32;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray1, 32, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 7;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 3, doubleArray0, 3);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 693, 22, doubleArray0, (-1712));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 693
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (-427.70035789204456);
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = (double) 1;
      dSCompiler0.tanh(doubleArray1, 1, doubleArray0, 1);
      doubleArray0[1] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 1, (-1193.05825785), doubleArray0, 25);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      dSCompiler0.linearCombination((double) 1, doubleArray0, 1, (double) 1, doubleArray0, 1, doubleArray0, 1);
      dSCompiler0.cosh(doubleArray0, 1, doubleArray0, 1);
      doubleArray0[0] = (double) 1;
      dSCompiler0.linearCombination(1.0, doubleArray0, 1, 593.34, doubleArray0, 1, (double) 1, doubleArray0, 1, (-2915.9903150020637), doubleArray0, 1, doubleArray0, 1);
      dSCompiler0.log1p(doubleArray0, 1, doubleArray0, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 630);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 630
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      doubleArray0[2] = (double) 0;
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler1.subtract(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.cos(doubleArray0, 0, doubleArray0, (-944));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -944
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      double[] doubleArray1 = null;
      int int1 = 1133;
      // Undeclared exception!
      try { 
        dSCompiler0.atan((double[]) null, 299, (double[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-2915.9903150020637);
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      int int1 = (-945);
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) (-945);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(1.2250985436706623E-9, (double[]) null, 0, (double) 0, (double[]) null, (-1), 1.2250985436706623E-9, (double[]) null, 2712, 0.0, doubleArray1, (-945), doubleArray2, 2712);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.taylor((double[]) null, 3, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 1);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.log((double[]) null, 36, (double[]) null, 522);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 3, doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int1 = 2664;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 2664);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2,664
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 4510.4923;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = 509.5218336;
      doubleArray0[5] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 3, doubleArray0, 476);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 476
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
      int int1 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 25, doubleArray0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 1.586013579247616E15;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      dSCompiler0.linearCombination(0.0, doubleArray0, 0, (double) 987, doubleArray0, 0, (double) 0, doubleArray1, 0, (-0.3926990816987242), doubleArray1, 0, doubleArray0, 0);
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (-0.3926990816987242);
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = (double) 987;
      doubleArray2[5] = (double) 987;
      doubleArray2[6] = (-2791.0);
      doubleArray2[7] = (double) 36;
      int int1 = (-1784);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray2, (-1784), doubleArray0, 1965);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1784
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 3;
      doubleArray0[7] = (double) 3;
      int int1 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cos(doubleArray0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int1 = 0;
      double[] doubleArray0 = null;
      int int2 = 9;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh((double[]) null, 8, doubleArray1, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[2] = (double) 1;
      doubleArray0[1] = (double) 1;
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
      int int0 = 5200;
      // Undeclared exception!
      try { 
        dSCompiler0.subtract(doubleArray0, 0, doubleArray0, 978, doubleArray0, 437);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 978
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      int int1 = 65;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 65;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 65;
      doubleArray1[4] = (-0.3926990816987242);
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 0, doubleArray1, 81);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 81
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DSCompiler.getCompiler(0, 3327);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-3.517594695450786E-279);
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (-1.0);
      doubleArray1[4] = (double) 790;
      doubleArray1[5] = 1.0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 413, (-1975), doubleArray1, 1464);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      DSCompiler.getCompiler(1965, 0);
      dSCompiler0.getOrder();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 13);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 13;
      doubleArray0[1] = (double) 13;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 13;
      doubleArray0[4] = (double) 13;
      doubleArray0[5] = (double) 13;
      doubleArray0[6] = (double) 0;
      int int2 = 1027;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 1027);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1027
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.getPartialDerivativeIndex((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      int int1 = (-213);
      // Undeclared exception!
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, (-213));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 2951);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2951
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 1965;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      int int1 = (-3754);
      // Undeclared exception!
      dSCompiler0.asinh(doubleArray0, 0, doubleArray0, (-3754));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = (-908);
      int int2 = 503;
      int int3 = 4577;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p((double[]) null, 0, (double[]) null, 4577);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 110);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 69;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 110;
      doubleArray0[4] = (double) 69;
      doubleArray0[5] = (double) 110;
      doubleArray0[6] = (-775.6644);
      doubleArray0[7] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 69
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int0 = 2;
      dSCompiler0.log1p(doubleArray0, 2, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.acosh((double[]) null, 2, doubleArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      int int2 = 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.checkCompatibility((DSCompiler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1965;
      int[] intArray0 = new int[0];
      dSCompiler0.getPartialDerivativeIndex(intArray0);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler((-1), 17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int0 = 7;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int0 = 2;
      dSCompiler0.log1p(doubleArray0, 2, doubleArray0, 0);
      int int1 = 17;
      int int2 = 22;
      // Undeclared exception!
      try { 
        dSCompiler0.cos(doubleArray0, 2, doubleArray0, 17);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      dSCompiler0.remainder(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);
      // Undeclared exception!
      DSCompiler.getCompiler(25, 25);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1243.0410436);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-1243.0410436);
      doubleArray0[3] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (-1243.0410436);
      doubleArray1[2] = (-1243.0410436);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 4116;
      doubleArray1[5] = (-1243.0410436);
      doubleArray1[6] = (double) 4116;
      doubleArray1[7] = (double) 0;
      dSCompiler0.add(doubleArray0, 0, doubleArray0, 0, doubleArray1, 0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1243.0410436);
      doubleArray0[1] = (double) 0;
      dSCompiler0.rootN(doubleArray0, 3, 3, doubleArray0, 3);
      DSCompiler.getCompiler(2174, 0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
      int int0 = (-908);
      int int1 = 503;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 503, doubleArray0, (-908));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 503
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      int int1 = 0;
      double double0 = (-1243.0410436);
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      int int2 = 0;
      dSCompiler0.linearCombination((double) 1, doubleArray0, 1, (double) 0, doubleArray0, 0, doubleArray0, 0);
      int int3 = 0;
      dSCompiler0.log(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 2243, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2243
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-1243.0410436);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-1243.0410436);
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (-838.5018);
      doubleArray0[5] = (double) 0;
      int int2 = 368;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 368);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 368
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-1127.67);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (-1127.67);
      doubleArray0[3] = (-2791.0);
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (-1127.67);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((-1127.67), doubleArray0, 349, 0.0, doubleArray0, 808, doubleArray0, 5692);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 349
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int2 = 0;
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, 987, 4.9056283164780554E-120, doubleArray0, 987, (-1.0), doubleArray0, 0, 0.0, doubleArray0, (-2809), doubleArray0, (-2809));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 987
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      dSCompiler0.pow(doubleArray0, 0, 528, doubleArray0, 1);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 0, doubleArray0, 31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int0 = 25;
      int int1 = 25;
      double[] doubleArray0 = null;
      int int2 = 3843;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 3843;
      doubleArray1[2] = (double) 25;
      doubleArray1[3] = (double) 25;
      doubleArray1[4] = (double) 0;
      int int3 = 286;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder((double[]) null, 3843, (double[]) null, 25, doubleArray1, 286);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int2 = 0;
      int int3 = 2;
      double[] doubleArray0 = null;
      int int4 = (-128);
      // Undeclared exception!
      try { 
        dSCompiler0.atanh((double[]) null, 0, (double[]) null, (-128));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 69
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((-2489.664), (double[]) null, 3, (double) 3, (double[]) null, 415, (double) 1555, (double[]) null, (-2675), (double[]) null, (-2675));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      int int1 = 2;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 2, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[25];
      doubleArray0[11] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 3;
      int[] intArray0 = new int[0];
      dSCompiler0.getFreeParameters();
      // Undeclared exception!
      try { 
        dSCompiler0.acos((double[]) null, 3, (double[]) null, 859);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int1 = 0;
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      int int2 = (-501);
      int int3 = (-962);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, (-962), doubleArray0, (-690));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -962
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 3;
      int[] intArray0 = new int[0];
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 1;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 1;
      int int2 = 25;
      int int3 = 25;
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 3, doubleArray0, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 1916;
      doubleArray1[2] = (double) 0;
      double double0 = (-0.3926990816987242);
      // Undeclared exception!
      try { 
        dSCompiler1.linearCombination((double) 0, doubleArray1, 2, (-0.3926990816987242), (double[]) null, 1916, doubleArray1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 467;
      doubleArray1[1] = (double) 467;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 467;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 0, doubleArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 1410);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1410
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = 0;
      int int1 = 467;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      int int2 = 2;
      // Undeclared exception!
      dSCompiler0.atan(doubleArray0, 2, doubleArray0, 35);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      int int1 = 0;
      double double0 = (-1243.0410436);
      dSCompiler0.pow(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      int int2 = 17;
      int int3 = 1357;
      int int4 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 1, doubleArray0, 17, (double) 0, doubleArray0, 1357, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 1;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 3;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (double) 3;
      doubleArray1[2] = (double) 3;
      doubleArray1[3] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 3, doubleArray1, 728);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 728
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      double double0 = 0.0;
      doubleArray0[4] = 0.0;
      dSCompiler0.getSize();
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 0, 12, doubleArray0, (-1315));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1315
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 1, (-895), doubleArray0, (-895));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -895
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 1617.0;
      doubleArray0[3] = 0.0;
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 1569, 378, doubleArray0, 1347);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1569
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      int int0 = 1038;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1038);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 1038;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 29.75313522104423;
      doubleArray0[4] = (double) 1038;
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 1528, (-165.7103458477363), doubleArray0, (-2910));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1528
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 1;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 3, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.getPartialDerivativeOrders(0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(1555, 0);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 1,555
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int0 = 2;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 2, doubleArray0, (-908));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -908
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1965;
      // Undeclared exception!
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 2);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      dSCompiler0.log10(doubleArray0, 0, doubleArray1, 0);
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 3994, doubleArray0, 2026);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3994
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 0;
      int int1 = 467;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 467);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 467
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 0, (double) 0, (double[]) null, 719);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 0;
      int int1 = 467;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 0, 467, doubleArray0, 467);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 467
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 1;
      doubleArray0[8] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.taylor(doubleArray0, 12, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      int int0 = 0;
      int int1 = (-908);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) (-908);
      doubleArray1[1] = (double) 1;
      int int2 = 2332;
      dSCompiler0.cosh(doubleArray0, 0, doubleArray0, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 0, doubleArray1, (-908));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -908
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = 2;
      DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 2, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int0 = 2409;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      int int1 = (-895);
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray0, 2409, doubleArray0, 2409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2409
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      int int1 = 0;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 2, doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-2642.56);
      int int1 = 0;
      int int2 = (-2118);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, (-2118), (-2791.0), doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2118
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, (-586), (double[]) null, (-586), (double[]) null, 2039);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      int int1 = 0;
      int int2 = (-908);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) (-908);
      doubleArray1[1] = (double) 1;
      doubleArray1[2] = 2413.3;
      int int3 = 2332;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray1, 0, doubleArray0, 2332);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2332
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 2);
      dSCompiler0.getOrder();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 0;
      int int1 = 1965;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 1965;
      int int2 = 1027;
      double[] doubleArray1 = new double[7];
      double double0 = 1.0;
      doubleArray1[0] = 1.0;
      doubleArray1[1] = (double) 1027;
      doubleArray1[2] = 1.0315548713040775E-9;
      doubleArray1[3] = (double) 1965;
      doubleArray1[4] = (double) 1965;
      doubleArray1[6] = (double) 0;
      double[] doubleArray2 = null;
      int int3 = (-2596);
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 1027, doubleArray0, (-2596));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1027
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler1.acos((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      double[] doubleArray1 = new double[0];
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log10(doubleArray1, 0, doubleArray2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 0;
      int int1 = 1965;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1965);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1965;
      int int2 = 1027;
      double[] doubleArray1 = new double[7];
      double double0 = 1.0;
      doubleArray1[0] = 1.0;
      doubleArray1[1] = (double) 1027;
      doubleArray1[2] = 1.0315548713040775E-9;
      doubleArray1[3] = (double) 1965;
      doubleArray1[4] = (double) 1965;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.subtract(doubleArray0, 476, doubleArray0, 1027, doubleArray1, 813);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 476
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.multiply((double[]) null, (-1377), (double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.add(doubleArray1, 1318, doubleArray0, 0, doubleArray1, (-2276));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1318
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 467;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, (-1164), doubleArray0, 518);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1164
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 414);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (-687.654058336);
      doubleArray0[2] = (double) 414;
      doubleArray0[3] = (double) 414;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 414;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 704, (-633), (double[]) null, 759);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 704
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.sin((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = 414;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 414);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (-687.654058336);
      doubleArray0[2] = (double) 414;
      int int1 = 74;
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 74, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 74
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) (-760);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) (-760);
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray1, 2);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-760);
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 0;
      intArray0[6] = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.multiply(doubleArray0, 0, doubleArray0, 1194, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1194
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      int int0 = 1539;
      int int1 = 29;
      int int2 = (-3327);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 1539);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1539
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.asin(doubleArray1, 0, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler1.atan(doubleArray1, 2, doubleArray0, 171);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 171
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      int int2 = 0;
      int int3 = (-501);
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 0, doubleArray0, (-501), doubleArray0, 122);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -501
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1183);
      // Undeclared exception!
      try { 
        dSCompiler0.tanh((double[]) null, 138, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      int int2 = (-3869);
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray0, (-3869), doubleArray0, 0, doubleArray0, (-3869));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3869
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, 1275);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1275
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.getPartialDerivativeOrders(3181);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3181
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int1 = 2409;
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, (-895), doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -895
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray1, 0, doubleArray1, 6078);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6078
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-2791.0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, (-3205));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3205
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 35, 1580, doubleArray0, 1075);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 35
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.rootN(doubleArray0, 0, (-760), doubleArray0, 0);
      dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) (-760);
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) (-760);
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray1, 2);
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-760);
      intArray0[3] = 0;
      intArray0[4] = (-1);
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh((double[]) null, 2, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.log10((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[1] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      int int1 = 1329;
      double[] doubleArray1 = null;
      int int2 = 3536;
      int int3 = 1644;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN((double[]) null, 0, 3536, doubleArray0, 1644);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 56, doubleArray0, 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 0;
      int int1 = 414;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 414);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (-687.654058336);
      doubleArray0[2] = (double) 414;
      doubleArray0[3] = (double) 414;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 414;
      // Undeclared exception!
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 1275);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 1;
      dSCompiler0.cos(doubleArray0, 1, doubleArray0, 1);
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      double double0 = (-1984.65);
      int int1 = (-16);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 1, doubleArray0, 1, (-1984.65), doubleArray0, 1, doubleArray0, (-16));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.sin((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      int int1 = 2409;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 2409, doubleArray0, 2409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2409
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 467);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 467;
      doubleArray0[1] = (double) 467;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 467;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 0, doubleArray0, 1555, 5.333371443528904E204, doubleArray0, 315, (double) 1555, doubleArray0, 415, doubleArray0, (-2675));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1555
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray1, 1810, doubleArray0, 1810, doubleArray0, 1810);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1810
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      int int2 = 1329;
      int int3 = (-760);
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 1329, (-760), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1329
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 0;
      int int1 = 876;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 876);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 876;
      doubleArray0[2] = (double) 876;
      doubleArray0[3] = (double) 876;
      doubleArray0[4] = (double) 876;
      doubleArray0[5] = (double) 876;
      doubleArray0[6] = (double) 876;
      doubleArray0[7] = (double) 876;
      doubleArray0[8] = (double) 876;
      int int2 = 712;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 712, doubleArray0, 876);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 712
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1665);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1665, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.526100002923062E263;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1665;
      double[] doubleArray1 = new double[3];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = 1.526100002923062E263;
      dSCompiler0.log(doubleArray0, 0, doubleArray1, 0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(4, doubleArray0.length);
      assertEquals(3, doubleArray1.length);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1665, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {1.526100002923062E263, 0.0, 0.0, 1665.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {606.0025949208641, 0.0, 0.0}, doubleArray1, 0.01);
      
      doubleArray1[1] = 1.526100002923062E263;
      doubleArray1[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 1665, doubleArray1, (-205));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1665
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[8];
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (-3261.59);
      doubleArray1[7] = (double) 0;
      dSCompiler0.acos(doubleArray1, 0, doubleArray0, 0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertFalse(doubleArray1.equals((Object)doubleArray0));
      assertEquals(5, doubleArray0.length);
      assertEquals(8, doubleArray1.length);
      assertNotSame(doubleArray0, doubleArray1);
      assertNotSame(doubleArray1, doubleArray0);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {1.5707963267948966, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (-3261.59), 0.0}, doubleArray1, 0.01);
      
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);
      assertFalse(doubleArray0.equals((Object)doubleArray1));
      assertEquals(5, doubleArray0.length);
      assertNotSame(doubleArray0, doubleArray1);
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertArrayEquals(new double[] {Double.NaN, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 2, doubleArray0, (-612));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -612
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = 139;
      // Undeclared exception!
      DSCompiler.getCompiler(139, 139);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      assertEquals(2, doubleArray0.length);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertArrayEquals(new double[] {Double.NaN, 0.0}, doubleArray0, 0.01);
      
      int int0 = dSCompiler0.getOrder();
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        dSCompiler0.atan2((double[]) null, 0, (double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      int[] intArray0 = dSCompiler0.getPartialDerivativeOrders(0);
      assertNotNull(intArray0);
      assertEquals(0, intArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new int[] {}, intArray0);
      
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, 0, doubleArray0, 2);
      assertEquals(9, doubleArray0.length);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertArrayEquals(new double[] {0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      double[] doubleArray0 = new double[7];
      int int2 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 0, doubleArray0, (-908));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -908
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 755);
      assertNotNull(dSCompiler0);
      assertEquals(1, dSCompiler0.getSize());
      assertEquals(755, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      
      // Undeclared exception!
      try { 
        dSCompiler0.tan((double[]) null, 3, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      assertNotNull(dSCompiler0);
      assertEquals(0, dSCompiler0.getOrder());
      assertEquals(0, dSCompiler0.getFreeParameters());
      assertEquals(1, dSCompiler0.getSize());
      
      // Undeclared exception!
      try { 
        dSCompiler0.asin((double[]) null, 2538, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      assertNotNull(dSCompiler0);
      assertEquals(2, dSCompiler0.getFreeParameters());
      assertEquals(6, dSCompiler0.getSize());
      assertEquals(2, dSCompiler0.getOrder());
      
      double double0 = (-2642.56);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (-2642.56);
      doubleArray0[3] = (double) 2;
      int int1 = 0;
      double double1 = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, (-794), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -794
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      assertNotNull(dSCompiler0);
      assertEquals(3, dSCompiler0.getFreeParameters());
      assertEquals(20, dSCompiler0.getSize());
      assertEquals(3, dSCompiler0.getOrder());
      
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 3;
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (double) 3;
      doubleArray0[6] = (double) 3;
      doubleArray0[7] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray0, 3, doubleArray0, (-2980));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2980
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = (-796);
      int int1 = 572;
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler((-796), 572);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -796
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 1801;
      // Undeclared exception!
      DSCompiler.getCompiler(1801, 1801);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.taylor(doubleArray1, 0, doubleArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }
}
