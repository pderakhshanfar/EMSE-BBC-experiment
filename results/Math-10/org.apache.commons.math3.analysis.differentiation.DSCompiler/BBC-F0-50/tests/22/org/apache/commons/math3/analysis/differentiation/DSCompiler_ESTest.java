/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 02:25:06 GMT 2021
 */

package org.apache.commons.math3.analysis.differentiation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.differentiation.DSCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DSCompiler_ESTest extends DSCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 785);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.6059582233428955;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      // Undeclared exception!
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 785);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = 2349.189;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (-145.06158447048722);
      doubleArray0[7] = (-2759.343);
      doubleArray0[8] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(4, 4);
      // Undeclared exception!
      try { 
        dSCompiler0.tan((double[]) null, 4, (double[]) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 29.141799208641192;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (-2.0);
      doubleArray1[3] = (double) 1;
      doubleArray1[4] = 29.141799208641192;
      doubleArray1[5] = 29.141799208641192;
      doubleArray1[6] = (double) 1;
      doubleArray1[7] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((-2.0), (double[]) null, 0, 881.0, doubleArray1, 1, (double[]) null, (-117));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1499);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 1499;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1499;
      doubleArray0[4] = (double) 1499;
      doubleArray0[5] = 1168.0768996;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      // Undeclared exception!
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(1402, 0);
      // Undeclared exception!
      try { 
        dSCompiler1.sinh((double[]) null, 1402, (double[]) null, 1212);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 11);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-3.066688408174145);
      doubleArray0[1] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 1159);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1159
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      DSCompiler.getCompiler(0, 19);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double double0 = 0.0;
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 3, doubleArray0, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      double[] doubleArray0 = null;
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      // Undeclared exception!
      try { 
        dSCompiler0.log((double[]) null, 3, (double[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 33);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 33);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DSCompiler.getCompiler(1, 1);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      int int0 = (-840);
      // Undeclared exception!
      try { 
        dSCompiler0.remainder((double[]) null, (-840), (double[]) null, 1, (double[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = null;
      int int1 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 1, 1685.167, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.linearCombination((double) 0, doubleArray0, 0, 1780.9554717, doubleArray0, 0, 1780.9554717, doubleArray0, 0, doubleArray0, 0);
      int int0 = 1407;
      // Undeclared exception!
      DSCompiler.getCompiler(1464, 1407);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (-3.066688408174145);
      doubleArray0[3] = (-3.066688408174145);
      doubleArray0[4] = (double) 3;
      doubleArray0[5] = (-3.066688408174145);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 3, doubleArray0, 0);
      int int1 = (-1765);
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, (-1765), doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1765
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      int int1 = 52;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh((double[]) null, 52, (double[]) null, 3975);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray0, 3, doubleArray0, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.compose((double[]) null, 3, doubleArray0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double double0 = 0.0;
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 3, doubleArray0, 24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-3.066688408174145);
      doubleArray0[1] = (-3.066688408174145);
      dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.add(doubleArray0, 30, doubleArray0, 4, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 0);
      int int2 = 2;
      double[] doubleArray0 = null;
      int int3 = (-2268);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) (-2268);
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (double) 1;
      doubleArray1[6] = (double) 2;
      doubleArray1[7] = (double) 2;
      doubleArray1[8] = (double) 1;
      int int4 = 244;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2((double[]) null, 2, (double[]) null, (-2268), doubleArray1, 244);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 3, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      dSCompiler0.getOrder();
      double[] doubleArray0 = new double[17];
      doubleArray0[0] = 18.298605004552165;
      doubleArray0[1] = 18.298605004552165;
      doubleArray0[2] = (double) (-11);
      int[] intArray0 = new int[3];
      intArray0[0] = 3;
      intArray0[1] = (-11);
      intArray0[2] = (-11);
      dSCompiler0.getPartialDerivativeIndex(intArray0);
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 1446, doubleArray0, (-11));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1446
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.remainder(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      int int0 = 55;
      int int1 = 3;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(0.0, doubleArray0, 55, Double.NaN, doubleArray0, 50, (double) 50, doubleArray0, 55, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 55
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getPartialDerivativeOrders(0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 3;
      int int1 = 1112;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1112);
      int int2 = 2;
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 10.0;
      doubleArray0[1] = (double) 3;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = 10.0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 2;
      // Undeclared exception!
      dSCompiler0.acos(doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (double) 1;
      doubleArray0[3] = (double) 1;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1((double[]) null, 1, doubleArray0, 300);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = (-6);
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 3, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = 0.0;
      int int1 = (-2510);
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 3, doubleArray0, (-2510));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2510
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN((double[]) null, 1, 166, (double[]) null, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 1009.96363;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = 0.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1009.96363;
      doubleArray1[1] = 1009.96363;
      doubleArray1[2] = 1009.96363;
      doubleArray1[3] = 1009.96363;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = 0.0;
      dSCompiler0.atan2(doubleArray0, 0, doubleArray1, 0, doubleArray0, 0);
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (double) 0;
      dSCompiler0.pow(doubleArray2, 0, 1.0, doubleArray2, 0);
      dSCompiler0.log1p(doubleArray2, 0, doubleArray2, 0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 3);
      try { 
        dSCompiler1.checkCompatibility(dSCompiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(3, 3);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.subtract(doubleArray0, 1, doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.getFreeParameters();
      dSCompiler0.compose(doubleArray0, 62, doubleArray0, doubleArray0, 1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.pow(doubleArray0, 0, 2624, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2624, 0);
      try { 
        dSCompiler1.checkCompatibility(dSCompiler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2,624 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.taylor((double[]) null, 0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 627);
      int int0 = 43;
      // Undeclared exception!
      dSCompiler0.asin(doubleArray0, 2, doubleArray0, 43);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(3, 3);
      dSCompiler0.checkCompatibility(dSCompiler1);
      dSCompiler1.getSize();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[4] = (double) (-1747);
      doubleArray1[5] = (double) (-1747);
      doubleArray1[6] = (double) (-1747);
      doubleArray0[0] = (double) 0;
      dSCompiler0.subtract(doubleArray0, 0, doubleArray1, 0, doubleArray1, 0);
      dSCompiler0.getFreeParameters();
      // Undeclared exception!
      try { 
        dSCompiler0.compose(doubleArray1, 0, doubleArray0, doubleArray1, (-1747));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1747
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.checkCompatibility((DSCompiler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 3, doubleArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 3, (double) (-6), doubleArray0, 1005);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1005
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[18];
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      doubleArray0[14] = (double) 0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = 532.3247284643904;
      doubleArray2[1] = (double) 0;
      int int1 = 9;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray2, 0, (double[]) null, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      double[] doubleArray0 = new double[16];
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = null;
      int int0 = 1;
      int int1 = 334;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
      dSCompiler0.getFreeParameters();
      double[] doubleArray2 = new double[3];
      doubleArray2[0] = (double) 14;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (double) 485;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(1598.5039, (double[]) null, 13, 10.0, (double[]) null, 334, 0.0, (double[]) null, 2113, 0.0, doubleArray0, 3448, doubleArray2, (-2109));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      int[] intArray0 = new int[0];
      dSCompiler0.getPartialDerivativeIndex(intArray0);
      // Undeclared exception!
      try { 
        dSCompiler0.subtract(doubleArray0, (-449), doubleArray0, (-859), doubleArray0, 1539);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -449
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 0;
      int int1 = 605;
      int int2 = (-449);
      int int3 = (-773);
      int int4 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(6, 3);
      double double0 = 3.141592653589793;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 3.141592653589793;
      doubleArray0[1] = 3.141592653589793;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = 1451.19021128623;
      double double1 = (-753.362699335699);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) (-449);
      doubleArray1[1] = (double) (-449);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, doubleArray0, 16, doubleArray0, 605);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      int int0 = 3;
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.atanh((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int0 = 4;
      dSCompiler0.log1p(doubleArray0, 4, doubleArray0, 0);
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 4);
      double[] doubleArray1 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray0, 4, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = null;
      int int1 = 698;
      // Undeclared exception!
      try { 
        dSCompiler0.divide((double[]) null, 698, (double[]) null, 698, (double[]) null, (-762));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3971, 0);
      int int0 = 0;
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.add((double[]) null, 3748, (double[]) null, 0, (double[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[18];
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      dSCompiler0.pow(doubleArray0, 0, 0.0, doubleArray1, 0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double double0 = 10.0;
      double[] doubleArray0 = new double[8];
      doubleArray0[2] = 10.0;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = 10.0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[16];
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      doubleArray0[7] = 10.0;
      doubleArray0[4] = (double) 1;
      doubleArray0[5] = 10.0;
      dSCompiler0.tan(doubleArray0, 1, doubleArray0, 1);
      int int1 = (-1);
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) (-1);
      doubleArray1[1] = 10.0;
      doubleArray1[2] = (double) 1;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (double) (-1);
      doubleArray1[5] = (double) (-1);
      doubleArray1[6] = (double) 1;
      doubleArray1[7] = 10.0;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray1, 34, doubleArray0, (-343));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = 10.0;
      dSCompiler0.log(doubleArray0, 1, doubleArray0, 1);
      int int1 = (-1831);
      double[] doubleArray1 = null;
      int int2 = 53;
      double[] doubleArray2 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.asin((double[]) null, 53, (double[]) null, (-1831));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 3, doubleArray0, (-2786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2786
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      dSCompiler0.rootN(doubleArray0, 1, (-1), doubleArray0, 1);
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[3] = 10.0;
      dSCompiler0.log(doubleArray0, 1, doubleArray0, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.getPartialDerivativeOrders(331);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 331
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int int0 = 0;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3.141592653589793);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (-3.141592653589793);
      dSCompiler0.asinh(doubleArray1, 0, doubleArray1, 0);
      int int1 = 2;
      int int2 = 2192;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(2192, 0);
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 0;
      double double0 = 3311.693246588957;
      int int3 = 2;
      dSCompiler1.linearCombination(3311.693246588957, doubleArray2, 0, 3311.693246588957, doubleArray1, 0, doubleArray1, 2);
      doubleArray2[1] = (double) 2;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = 2.0;
      doubleArray2[6] = (double) 0;
      int int4 = 68;
      dSCompiler1.divide(doubleArray1, 0, doubleArray2, 68, doubleArray1, 2);
      int int5 = 1;
      // Undeclared exception!
      try { 
        dSCompiler1.asin(doubleArray0, 68, doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2);
      dSCompiler0.log1p(doubleArray0, 0, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = 1670.1497077695603;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = 3.0;
      dSCompiler0.asin(doubleArray1, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int int0 = 0;
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      int int1 = 3;
      dSCompiler0.atanh(doubleArray0, 3, doubleArray0, 0);
      int int2 = 1398;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 3, (double) 3, doubleArray0, 1398);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1398
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) (-1747);
      doubleArray1[4] = (double) (-1747);
      doubleArray1[5] = (double) (-1747);
      doubleArray1[6] = (double) (-1747);
      doubleArray1[7] = (double) (-1747);
      doubleArray1[8] = (double) 0;
      dSCompiler0.subtract(doubleArray0, 0, doubleArray1, 0, doubleArray1, 0);
      int int0 = (-388);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(3, (-388));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double double0 = (-3.141592653589793);
      int int0 = 2;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 0;
      int int1 = 1;
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      int int0 = 2;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double double0 = 0.0;
      double[] doubleArray0 = new double[6];
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 3, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 1765;
      int int1 = 3846;
      // Undeclared exception!
      DSCompiler.getCompiler(1765, 3846);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 3);
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 16, doubleArray0, (-118));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[10];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      dSCompiler0.acos(doubleArray0, 2, doubleArray0, 2);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 2, doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 2769);
      try { 
        dSCompiler0.checkCompatibility(dSCompiler1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2,769
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 2;
      int int1 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray0, 3, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int0 = 4;
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 4);
      dSCompiler0.taylor(doubleArray0, 4, doubleArray0);
      int int1 = 516;
      // Undeclared exception!
      try { 
        dSCompiler0.subtract(doubleArray0, 516, doubleArray0, (-1747), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 516
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double double0 = 10.0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = 10.0;
      doubleArray0[2] = 10.0;
      doubleArray0[3] = (-661.031);
      doubleArray0[4] = 10.0;
      doubleArray0[5] = (double) 1;
      doubleArray0[6] = (double) 1;
      doubleArray0[7] = 10.0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 2, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = 0;
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      int int1 = 494;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 494);
      // Undeclared exception!
      try { 
        dSCompiler0.atanh(doubleArray0, 0, doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      doubleArray0[3] = 10.0;
      doubleArray0[4] = 10.0;
      doubleArray0[5] = 10.0;
      double[] doubleArray1 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.acos((double[]) null, 1, (double[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3.141592653589793);
      int[] intArray0 = new int[4];
      intArray0[2] = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      dSCompiler0.log1p(doubleArray0, 0, doubleArray1, 0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      double[] doubleArray1 = new double[7];
      int int1 = 2;
      int int2 = 89;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray1, 2, doubleArray1, 89);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 89
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      int int1 = 2624;
      double[] doubleArray1 = new double[0];
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 2624;
      intArray0[2] = 2624;
      intArray0[3] = 1;
      // Undeclared exception!
      try { 
        dSCompiler0.atan2(doubleArray0, 2624, doubleArray1, 2624, doubleArray1, (-475));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2624
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 3;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 2;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 3;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 3;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = 0.0;
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, 3, doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      int int1 = (-371);
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 1, (-371), doubleArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      dSCompiler0.taylor(doubleArray0, 1, doubleArray0);
      int int0 = 11;
      int int1 = 610;
      // Undeclared exception!
      DSCompiler.getCompiler(610, 11);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (double) 0;
      dSCompiler0.atanh(doubleArray0, 3, doubleArray0, 0);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 2249, doubleArray0, 2249);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2249
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      int int0 = 23;
      int int1 = 3;
      int int2 = 2810;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2810);
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 0, 10, (double[]) null, 66);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getFreeParameters();
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 5.13345647019085E-10;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 13;
      doubleArray0[3] = (double) 13;
      doubleArray0[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, (-1813));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1813
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      dSCompiler0.add(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      int int1 = 4;
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 4);
      dSCompiler0.cos(doubleArray0, 4, doubleArray0, 4);
      int int2 = 1144;
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 4);
      int int3 = (-151);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) (-151);
      doubleArray1[1] = (double) 4;
      doubleArray1[2] = (double) (-151);
      doubleArray1[3] = (double) (-151);
      doubleArray1[4] = (double) 4;
      // Undeclared exception!
      try { 
        dSCompiler1.rootN(doubleArray0, 0, (-151), doubleArray1, (-2748));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2748
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.log10((double[]) null, 3, (double[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      DSCompiler.getCompiler(2, 2);
      int int1 = 2713;
      double[] doubleArray1 = null;
      int int2 = (-1501);
      // Undeclared exception!
      try { 
        dSCompiler0.log1p((double[]) null, 2, doubleArray0, (-1501));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int int1 = 0;
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3.141592653589793);
      doubleArray0[1] = (double) 0;
      doubleArray0[0] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 2);
      dSCompiler0.acosh(doubleArray0, 2, doubleArray0, 0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.getPartialDerivativeIndex((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray1, 2, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int int0 = 0;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 5.13345647019085E-10;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.acos(doubleArray0, 0, doubleArray0, (-1813));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1813
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2810);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 23;
      doubleArray0[1] = (double) 2810;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 2810;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 2810;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 2, (double[]) null, 2, (double) 0, doubleArray0, (-2346), 3.0, (double[]) null, 9, (double[]) null, 1087);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      double[] doubleArray0 = new double[8];
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      dSCompiler0.exp(doubleArray1, 0, doubleArray0, 0);
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 5 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DSCompiler.getCompiler(2, 2);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      dSCompiler0.getFreeParameters();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      dSCompiler0.log10(doubleArray0, 0, doubleArray0, 4);
      dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, 1551, doubleArray0, 1551);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1551
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      int int1 = 2;
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2);
      int int2 = 23;
      int int3 = (-5198);
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 0, doubleArray0, (-5198));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5198
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      int int0 = 605;
      int int1 = (-449);
      int int2 = (-773);
      double double0 = 3.141592653589793;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, (-449), (-4048.746), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -449
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (-12.823544828285844);
      dSCompiler0.tanh(doubleArray0, 1, doubleArray0, 1);
      int int1 = 913;
      int int2 = 2;
      int int3 = 58;
      double double0 = 332.249439720711;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((-5749.145), doubleArray0, 3, (double) 1, doubleArray0, 913, 2.0, doubleArray0, 3, doubleArray0, 15);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 913
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 2713, 2, doubleArray0, 2713);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2713
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 3;
      doubleArray0[3] = (double) 2;
      doubleArray0[4] = (-1783.19651795166);
      doubleArray0[5] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 1635);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1635
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = 425.1549437;
      doubleArray2[5] = (double) 0;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = 425.1549437;
      doubleArray2[8] = 425.1549437;
      dSCompiler0.rootN(doubleArray2, 0, 0, doubleArray1, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, (-1653), doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1653
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-3.141592653589793);
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      dSCompiler0.sin(doubleArray0, 0, doubleArray0, 2);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      int int1 = 2;
      dSCompiler0.tanh(doubleArray0, 0, doubleArray0, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.acosh(doubleArray0, 23, doubleArray0, (-5198));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 23
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      dSCompiler0.cosh(doubleArray0, 1, doubleArray0, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = (-12.823544828285844);
      dSCompiler0.tanh(doubleArray0, 1, doubleArray0, 1);
      int int0 = 58;
      int int1 = 12;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(1.0, doubleArray0, 2, (double) 913, doubleArray0, 58, 332.249439720711, doubleArray0, 12, 0.7615941559557649, doubleArray0, 45, doubleArray0, 1476);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 58
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 425.1549437;
      doubleArray1[2] = (double) 0;
      dSCompiler0.taylor(doubleArray0, 0, doubleArray1);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.checkCompatibility(dSCompiler1);
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination(0.0, doubleArray0, (-1573), (-623.55431), doubleArray0, 11, doubleArray1, (-740));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1573
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 2;
      DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[1] = (double) 2;
      double[] doubleArray1 = new double[1];
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      doubleArray1[0] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.taylor(doubleArray1, 2, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      int int0 = 0;
      dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);
      int int1 = 2624;
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 0, 2624, doubleArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 2;
      doubleArray1[1] = (double) 2;
      doubleArray1[2] = (double) 2;
      doubleArray1[3] = (double) 2;
      doubleArray1[4] = (double) 2;
      doubleArray1[5] = (double) 2;
      doubleArray1[6] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.log1p(doubleArray0, 2, doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, (-3210), doubleArray0, (-841));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3210
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, (-74), doubleArray0, 0);
      double[] doubleArray1 = new double[6];
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 507.6890051;
      doubleArray2[3] = 1409.4356838465858;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 2827;
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = (double) 1424;
      doubleArray2[8] = (double) 0;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (double) 1424;
      doubleArray3[1] = 507.6890051;
      doubleArray3[2] = 507.6890051;
      doubleArray3[3] = 507.6890051;
      doubleArray3[4] = (-2737.2095497894);
      doubleArray3[5] = (double) 2827;
      doubleArray3[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.add(doubleArray2, 1424, doubleArray3, (-1951), doubleArray1, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1424
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      int int1 = 1069;
      int int2 = (-1548);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, 30, (-1548), doubleArray0, 60);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(577, 0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 577;
      doubleArray0[1] = (double) 330;
      doubleArray0[2] = (double) 330;
      doubleArray0[3] = (double) 577;
      doubleArray0[4] = (double) 330;
      doubleArray0[5] = (double) (-35);
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) (-35);
      // Undeclared exception!
      try { 
        dSCompiler0.multiply(doubleArray0, (-5381), doubleArray0, 3807, doubleArray0, (-5381));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5381
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = (double) 0;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      doubleArray1[6] = (double) 0;
      doubleArray1[7] = (double) 0;
      doubleArray1[8] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler1.rootN(doubleArray1, (-2899), (-2899), doubleArray0, (-2477));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2899
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      int int0 = 0;
      dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);
      int int1 = 2645;
      double[] doubleArray1 = new double[0];
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, (-73), 2645, doubleArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -73
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 0;
      doubleArray1[1] = 425.1549437;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) 0;
      doubleArray1[4] = (double) 0;
      doubleArray1[5] = (double) 0;
      dSCompiler0.log10(doubleArray1, 0, doubleArray0, 0);
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      int int0 = 3;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray0, 3, doubleArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray0, 2, doubleArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) (-3191);
      doubleArray1[1] = (-3.141592653589793);
      doubleArray1[2] = (double) (-3191);
      double[] doubleArray2 = null;
      int int0 = 0;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (-3.141592653589793);
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = (double) (-3191);
      doubleArray3[3] = (double) 0;
      doubleArray3[4] = (double) 1;
      doubleArray3[5] = (double) (-3191);
      // Undeclared exception!
      try { 
        dSCompiler0.pow((double[]) null, 0, doubleArray3, 3799, doubleArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      double double0 = (-3296.6304);
      int int0 = 693;
      double double1 = 2691.1642976809208;
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-3296.6304);
      int int1 = 107;
      double double2 = (-1263.84171040635);
      int int2 = 2490;
      // Undeclared exception!
      try { 
        dSCompiler0.sinh(doubleArray1, (-6107), doubleArray0, (-6107));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6107
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double double0 = 10.0;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.exp(doubleArray0, 3807, doubleArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3807
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      doubleArray0[7] = (double) 0;
      dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 5 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      int int0 = (-74);
      dSCompiler0.divide(doubleArray0, 0, doubleArray0, (-74), doubleArray0, 0);
      double double0 = 507.6890051;
      double double1 = (-1837.167632505954);
      int int1 = 2827;
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (-1837.167632505954);
      doubleArray1[1] = (double) 2827;
      doubleArray1[2] = (-1837.167632505954);
      doubleArray1[3] = (double) 2827;
      doubleArray1[4] = 507.6890051;
      doubleArray1[5] = 507.6890051;
      // Undeclared exception!
      try { 
        dSCompiler0.tanh(doubleArray1, 0, doubleArray0, 2827);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2827
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      // Undeclared exception!
      try { 
        dSCompiler0.sin((double[]) null, 1485, (double[]) null, (-975));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[1];
      int int1 = 0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      dSCompiler0.cos(doubleArray1, 0, doubleArray1, 0);
      dSCompiler0.log(doubleArray2, 0, doubleArray1, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.asinh(doubleArray0, (-1828), doubleArray0, (-1828));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1828
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = 1;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double double0 = 10.0;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      doubleArray0[3] = 10.0;
      doubleArray0[0] = 10.0;
      doubleArray0[5] = 10.0;
      // Undeclared exception!
      try { 
        dSCompiler0.tan(doubleArray0, 1, doubleArray0, 819);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 819
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 0;
      int int1 = 996;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 996);
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 1.7647101734915075E47;
      doubleArray1[1] = (double) 996;
      doubleArray1[2] = (double) (-985);
      doubleArray1[3] = (double) (-985);
      doubleArray1[4] = (-1819.8791698427);
      doubleArray1[5] = 3.0;
      doubleArray1[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.divide(doubleArray0, 0, doubleArray0, (-985), doubleArray1, 996);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 996
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      // Undeclared exception!
      try { 
        dSCompiler0.log10(doubleArray0, 1733, doubleArray0, 1733);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1733
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 1;
      doubleArray0[1] = (double) 1;
      doubleArray0[2] = 10.0;
      doubleArray0[3] = 10.0;
      int int0 = 858;
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 1, doubleArray0, 858);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 858
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 768;
      // Undeclared exception!
      try { 
        dSCompiler0.rootN(doubleArray0, 23, 768, doubleArray1, 23);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 23
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1239);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[6];
      intArray0[0] = 1239;
      intArray0[1] = 0;
      intArray0[2] = 1239;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cos((double[]) null, 0, (double[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      dSCompiler0.exp(doubleArray0, 0, doubleArray0, 0);
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      dSCompiler0.pow(doubleArray1, (-412), 0, doubleArray0, 0);
      dSCompiler0.multiply(doubleArray1, 0, doubleArray0, 0, doubleArray0, 0);
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 0, doubleArray1, 0, doubleArray0, (-412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -412
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = 0;
      int int1 = 3838;
      DSCompiler.getCompiler(0, 3838);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      int int1 = (-1314);
      // Undeclared exception!
      try { 
        dSCompiler0.sin(doubleArray0, (-1314), doubleArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1314
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[1];
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 0;
      dSCompiler0.pow(doubleArray1, 0, doubleArray0, 0, doubleArray2, 0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 0;
      int int1 = 1239;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1239);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[6];
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 1239;
      doubleArray0[1] = (double) 1239;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 1239;
      doubleArray0[4] = 5.402252865260326E-227;
      doubleArray0[5] = (double) 1239;
      doubleArray0[6] = (double) 1239;
      doubleArray0[7] = 5.5737717715868425E-8;
      // Undeclared exception!
      try { 
        dSCompiler0.cos(doubleArray0, 0, doubleArray0, 887);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 887
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) (-3191);
      doubleArray1[1] = (-3.141592653589793);
      doubleArray1[2] = (double) (-3191);
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 1;
      doubleArray2[2] = (-3.141592653589793);
      doubleArray2[3] = (double) 1;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) (-3191), doubleArray0, 1, 0.0, doubleArray1, 0, doubleArray2, (-1573));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1573
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      DSCompiler.getCompiler(3837, 0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      int int1 = 3842;
      // Undeclared exception!
      try { 
        dSCompiler0.log(doubleArray0, 858, doubleArray0, 3842);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 858
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 5 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 1239;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1239);
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        dSCompiler0.atan((double[]) null, (-2734), (double[]) null, (-451));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      int int0 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      int int1 = 0;
      dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 0;
      int int2 = (-412);
      // Undeclared exception!
      try { 
        dSCompiler0.remainder(doubleArray0, 0, doubleArray1, 0, doubleArray0, (-412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -412
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[1];
      int int2 = 0;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) 0;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = (double) 0;
      doubleArray2[3] = (double) 0;
      doubleArray2[4] = (double) 0;
      doubleArray2[5] = (double) 0;
      int int3 = 0;
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray1, 0, doubleArray0, 0, doubleArray2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 1, doubleArray0, (-3191));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3191
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.asin(doubleArray0, 0, doubleArray0, 577);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 577
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 996);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 996;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) 996;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.cosh(doubleArray0, 996, doubleArray0, 996);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 996
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1239);
      dSCompiler0.getOrder();
      int[] intArray0 = new int[6];
      intArray0[0] = 1239;
      intArray0[1] = 0;
      intArray0[2] = 1239;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      try { 
        dSCompiler0.getPartialDerivativeIndex(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 6 != 0
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = 2;
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      int int1 = (-3092);
      // Undeclared exception!
      try { 
        dSCompiler0.pow(doubleArray0, (-3092), doubleArray0, (-3092), doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3092
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 3;
      doubleArray0[1] = (double) 3;
      // Undeclared exception!
      try { 
        dSCompiler0.linearCombination((double) 3, doubleArray0, 0, 990.70519, doubleArray0, 0, (double) 3, doubleArray0, 0, 10.0, doubleArray0, (-3079), doubleArray0, (-447));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3079
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 2;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = (double) 2;
      doubleArray0[3] = 4743.5019894533;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 2;
      // Undeclared exception!
      try { 
        dSCompiler0.expm1(doubleArray0, 3, doubleArray0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = 3296;
      // Undeclared exception!
      DSCompiler.getCompiler(3296, 3296);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (double) 0;
      doubleArray0[3] = (double) 0;
      doubleArray0[4] = (double) 0;
      doubleArray0[5] = (double) 0;
      doubleArray0[6] = (double) 0;
      // Undeclared exception!
      try { 
        dSCompiler0.atan(doubleArray0, 0, doubleArray0, 214);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 214
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = 0;
      int int1 = (-1233);
      // Undeclared exception!
      try { 
        DSCompiler.getCompiler(0, (-1233));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int int0 = 2;
      int int1 = 2359;
      // Undeclared exception!
      DSCompiler.getCompiler(2, 2359);
  }
}
