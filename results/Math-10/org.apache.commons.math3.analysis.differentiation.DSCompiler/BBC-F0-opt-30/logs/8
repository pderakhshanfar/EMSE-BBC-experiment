* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-30
* Going to generate test cases for class: org.apache.commons.math3.analysis.differentiation.DSCompiler
* Starting Client-0
* Connecting to master process on port 9142
* Analyzing classpath: 
  - subjects/buggy-versions/Math-10/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.analysis.differentiation.DSCompiler
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1519
* Using seed 1838153846
* Starting evolution
bbc usage percentage is: 30%
* Initial Number of Goals in DynaMOSA = 366 / 1519
*C1*
*C1*
*C1*
*C2*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
* Search finished after 602s and 157 generations, 60307 statements, best individual has fitness: 162.0
* Minimizing test suite
[MASTER] 00:15:18.622 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 544
* Number of covered goals: 540
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 295
* Number of covered goals: 290
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 80
* Number of covered goals: 80
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 279
* Number of covered goals: 225
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 28
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 295
* Number of covered goals: 284
* Generated 169 tests with total length 2928
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:16:02.391 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.70985% of time used, but only 11/169 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 00:16:20.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:20.583 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:20.869 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:21.117 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:21.277 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:21.438 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:21.714 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:21.880 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:22.983 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:23.175 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:23.402 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:23.555 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:23.752 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:24.062 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:24.222 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:24.430 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:24.632 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:24.927 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:25.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:25.391 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:25.554 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:25.728 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:25.889 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:26.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:26.262 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:26.448 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:26.618 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:26.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.016 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.398 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.539 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.689 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.823 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:27.968 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.116 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.259 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.557 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.694 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.842 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:28.988 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:29.148 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:29.321 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:29.489 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:29.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:29.887 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:30.015 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:30.151 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:30.297 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:30.887 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.085 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.205 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.470 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.593 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.728 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:31.945 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:32.080 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:32.829 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:32.990 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.113 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.231 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.390 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.525 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.669 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:33.930 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.089 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.241 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.432 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.581 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.765 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.934 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:34.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:34.939 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
assertEquals(2, doubleArray0.length);
assertArrayEquals(new double[] {Double.NaN, 0.0}, doubleArray0, 0.01);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

doubleArray0[0] = (double) 0;
dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
assertEquals(2, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertEquals(1, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertNotNull(dSCompiler1);
assertNotSame(dSCompiler1, dSCompiler0);

dSCompiler1.checkCompatibility(dSCompiler0);

[MASTER] 00:16:35.088 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.267 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.374 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.548 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.693 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.808 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:35.952 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.144 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.276 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.464 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.630 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.783 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:36.925 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.064 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.237 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.378 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.520 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:37.879 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.030 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.157 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.158 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:38.158 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.cos(doubleArray0, 0, doubleArray0, 1);

[MASTER] 00:16:38.291 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.292 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:38.292 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) 0;
dSCompiler0.linearCombination((-3.141592653589793), doubleArray0, 0, 2366.056790495, doubleArray0, 0, doubleArray0, 0);
assertEquals(1, doubleArray0.length);
assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());

double[] doubleArray1 = new double[2];
assertFalse(doubleArray1.equals((Object)doubleArray0));

dSCompiler0.acosh(doubleArray1, 0, doubleArray1, 0);
assertEquals(2, doubleArray1.length);
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertArrayEquals(new double[] {Double.NaN, 0.0}, doubleArray1, 0.01);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotSame(doubleArray1, doubleArray0);

doubleArray1[0] = (double) 0;
dSCompiler0.asinh(doubleArray1, 0, doubleArray1, 0);
assertEquals(2, doubleArray1.length);
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertArrayEquals(new double[] {0.0, 0.0}, doubleArray1, 0.01);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotSame(doubleArray1, doubleArray0);

int int0 = 1;
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getSize());
assertNotNull(dSCompiler1);
assertNotSame(dSCompiler1, dSCompiler0);

dSCompiler1.atan(doubleArray1, 1, doubleArray1, (-1002));

[MASTER] 00:16:38.396 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:38.397 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
double[] doubleArray0 = new double[1];
doubleArray0[0] = (double) 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);

[MASTER] 00:16:38.524 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:38.525 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);
assertEquals(2, doubleArray0.length);
assertArrayEquals(new double[] {Double.NaN, 0.0}, doubleArray0, 0.01);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());

doubleArray0[0] = (double) 0;
dSCompiler0.asinh(doubleArray0, 0, doubleArray0, 0);
assertEquals(2, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0}, doubleArray0, 0.01);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());

DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(1, dSCompiler1.getSize());
assertNotNull(dSCompiler1);
assertNotSame(dSCompiler1, dSCompiler0);

dSCompiler1.pow(doubleArray0, 1, 61, doubleArray0, 1);

[MASTER] 00:16:38.640 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:38.774 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.150 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.319 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.487 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.623 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.752 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:39.889 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.010 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.163 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.300 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.637 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:40.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.098 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.235 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:41.236 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[17];
doubleArray0[0] = (double) 0;
int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());

dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());

double[] doubleArray1 = null;
dSCompiler0.log1p(doubleArray0, 1, (double[]) null, (-2829));

[MASTER] 00:16:41.390 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:41.391 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
double[] doubleArray0 = new double[1];
double[] doubleArray1 = new double[2];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

int int2 = 0;
int int3 = 3187;
dSCompiler0.rootN(doubleArray0, 0, 0, doubleArray0, 3187);

[MASTER] 00:16:41.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.708 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:41.840 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.033 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.174 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.304 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.448 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.651 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.848 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.992 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:42.992 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:42.993 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

int int2 = 34;
dSCompiler0.taylor(doubleArray0, 34, doubleArray0);

[MASTER] 00:16:43.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:43.612 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:43.765 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:43.940 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:43.942 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:43.942 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
double[] doubleArray0 = new double[17];
doubleArray0[0] = (double) 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());

double[] doubleArray1 = new double[2];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = 3231.7719820209327;
doubleArray1[1] = (double) 1;
double[] doubleArray2 = new double[6];
assertFalse(doubleArray2.equals((Object)doubleArray0));
assertFalse(doubleArray2.equals((Object)doubleArray1));

doubleArray2[0] = (double) 0;
doubleArray2[1] = (double) 1;
doubleArray2[2] = (double) 0;
doubleArray2[3] = 3231.7719820209327;
doubleArray2[4] = (double) 1;
doubleArray2[5] = 3231.7719820209327;
dSCompiler0.multiply(doubleArray1, 1, doubleArray2, 0, doubleArray0, 0);

[MASTER] 00:16:44.153 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:44.302 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:44.481 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:44.854 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:45.603 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:45.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:45.786 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 00:16:45.786 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 3;
DSCompiler.getCompiler(3, 3);

[MASTER] 00:16:45.940 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.110 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.252 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.383 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:46.384 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[17];
doubleArray0[0] = (double) 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());

dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());

int[] intArray0 = dSCompiler0.getPartialDerivativeOrders(1);
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {1}, intArray0);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(intArray0);


[MASTER] 00:16:46.543 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.666 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:46.826 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:47.297 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:47.299 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:47.299 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[17];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

dSCompiler0.pow(doubleArray0, 1, 2.0, doubleArray0, 0);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());

DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 23);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertEquals(1, dSCompiler1.getSize());
assertEquals(0, dSCompiler1.getFreeParameters());
assertEquals(23, dSCompiler1.getOrder());
assertNotNull(dSCompiler1);
assertNotSame(dSCompiler1, dSCompiler0);

dSCompiler0.checkCompatibility(dSCompiler1);

[MASTER] 00:16:47.472 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:47.617 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:47.618 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:47.619 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[17];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());

dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());

int int0 = dSCompiler0.getOrder();
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, int0);


[MASTER] 00:16:47.760 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:47.891 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:48.018 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:48.148 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:48.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:48.149 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[17];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.pow(doubleArray0, 0, (double) 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

dSCompiler0.asin(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

dSCompiler0.exp(doubleArray0, 0, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
assertEquals(17, doubleArray0.length);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());

dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 67);

[MASTER] 00:16:48.552 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:48.692 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:48.827 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:49.493 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:49.682 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:49.964 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:50.328 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:50.469 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:50.633 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:50.765 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:50.885 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.139 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.275 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.416 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.536 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<1> but was:<2>
[MASTER] 00:16:51.537 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[31];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);
assertEquals(31, doubleArray0.length);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());

int int0 = dSCompiler0.getFreeParameters();
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, int0);


[MASTER] 00:16:51.664 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:51.788 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:52.305 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:52.450 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:16:52.573 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DSCompiler_ESTest' to results/Math-10/org.apache.commons.math3.analysis.differentiation.DSCompiler/BBC-F0-opt-30/tests/8
* Done!

* Computation finished
