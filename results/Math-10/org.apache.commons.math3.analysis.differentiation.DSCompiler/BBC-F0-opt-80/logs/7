* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-80
* Going to generate test cases for class: org.apache.commons.math3.analysis.differentiation.DSCompiler
* Starting Client-0
* Connecting to master process on port 21023
* Analyzing classpath: 
  - subjects/buggy-versions/Math-10/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.analysis.differentiation.DSCompiler
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1519
* Using seed 595966067
* Starting evolution
bbc usage percentage is: 80%
* Initial Number of Goals in DynaMOSA = 366 / 1519
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C1*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
*C2*
* Search finished after 603s and 145 generations, 55781 statements, best individual has fitness: 152.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 00:09:00.759 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 100%
* Total number of goals: 544
* Number of covered goals: 542
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 295
* Number of covered goals: 291
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 77
* Number of covered goals: 77
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 279
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 28
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 295
* Number of covered goals: 286
* Generated 168 tests with total length 3195
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:09:55.026 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8845833333333334% of time used, but only 28/168 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 00:10:14.734 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:15.041 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:15.212 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:15.404 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:15.563 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:16.131 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:16.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:17.347 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:17.669 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:18.115 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:18.416 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:18.591 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:18.752 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:18.904 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.049 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.199 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.338 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.476 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.737 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:19.877 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.001 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.138 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.331 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.539 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.676 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:20.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:21.040 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:21.486 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:21.688 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:21.827 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:21.963 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:22.225 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:22.614 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:22.765 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:22.961 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:23.786 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:23.934 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:24.068 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:24.285 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:24.492 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:24.657 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:24.895 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:25.290 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:25.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:25.541 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:25.673 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:25.902 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:26.130 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:26.267 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:26.403 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:26.757 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:26.897 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:27.006 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:27.272 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:27.508 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:28.293 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:28.475 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:28.699 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:28.875 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:29.039 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:29.211 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:29.325 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:29.448 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:29.622 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.182 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.311 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.470 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.614 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.737 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:30.852 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.026 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.164 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.404 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.643 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.814 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:31.819 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:31.819 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 1;
dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 00:10:31.964 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.147 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.382 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.498 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.499 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:32.499 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 1;
double[] doubleArray1 = new double[2];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 1;
doubleArray1[1] = (double) 1;
dSCompiler0.atanh(doubleArray0, 1, doubleArray1, 1);

[MASTER] 00:10:32.642 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.826 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:32.827 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:32.828 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertNotNull(dSCompiler1);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler1.asin(doubleArray0, 3, doubleArray0, 0);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler0.checkCompatibility(dSCompiler1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertSame(dSCompiler0, dSCompiler1);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler0.sin(doubleArray0, 1, doubleArray0, (-3770));

[MASTER] 00:10:32.988 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:33.267 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:33.405 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:33.595 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:34.149 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:34.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:34.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:34.688 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:34.867 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.201 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.206 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:35.207 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertNotNull(dSCompiler1);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler0.tan(doubleArray0, 1, doubleArray0, 63);

[MASTER] 00:10:35.345 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:35.542 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
int int1 = 3;
dSCompiler0.asin(doubleArray0, 3, doubleArray0, 0);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

int int2 = (-1859);
dSCompiler0.acos(doubleArray0, 3, doubleArray0, (-1859));

[MASTER] 00:10:35.733 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:35.952 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.115 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.116 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:36.117 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, (double) 1, doubleArray0, 1);

[MASTER] 00:10:36.317 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.461 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.462 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:36.463 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.log10(doubleArray0, 1, doubleArray0, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

int int1 = 63;
double[] doubleArray1 = new double[7];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 63;
doubleArray1[1] = (double) 63;
doubleArray1[2] = (double) 63;
doubleArray1[3] = (double) 63;
doubleArray1[4] = (double) 1;
doubleArray1[5] = (double) 63;
doubleArray1[6] = (double) 1;
double[] doubleArray2 = new double[0];
assertFalse(doubleArray2.equals((Object)doubleArray0));
assertFalse(doubleArray2.equals((Object)doubleArray1));

dSCompiler0.exp(doubleArray1, 63, doubleArray2, 63);

[MASTER] 00:10:36.645 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.647 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:36.647 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertNotNull(dSCompiler1);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler1.log(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertSame(dSCompiler1, dSCompiler0);

double double0 = (-3819.852445);
int int0 = (-1109);
int int1 = (-731);
dSCompiler1.linearCombination((-6.985952908805853E76), doubleArray0, (-1109), (-6.985952908805853E76), doubleArray0, 0, 3.0, doubleArray0, 0, (-3819.852445), doubleArray0, (-731), doubleArray0, 0);

[MASTER] 00:10:36.834 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:36.836 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(1, dSCompiler1.getOrder());
assertNotNull(dSCompiler1);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler1.asin(doubleArray0, 3, doubleArray0, 0);
assertEquals(5, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(1, dSCompiler1.getOrder());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertSame(dSCompiler1, dSCompiler0);

dSCompiler0.sin(doubleArray0, 3, doubleArray0, 3);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertSame(dSCompiler0, dSCompiler1);

dSCompiler0.acos((double[]) null, 1908, (double[]) null, (-1708));

[MASTER] 00:10:36.969 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:36.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:36.971 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[4];
doubleArray0[0] = (double) 1;
dSCompiler0.tan(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(4, doubleArray0.length);
assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
doubleArray0[3] = (double) 1;
dSCompiler0.acosh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(4, doubleArray0.length);
assertArrayEquals(new double[] {1.0, 0.0, Double.POSITIVE_INFINITY, 1.0}, doubleArray0, 0.01);

double[] doubleArray1 = new double[9];
assertFalse(doubleArray1.equals((Object)doubleArray0));

dSCompiler0.tan(doubleArray1, 1, doubleArray1, 63);

[MASTER] 00:10:37.145 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:37.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:37.147 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.log10(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

double[] doubleArray1 = new double[8];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 1;
doubleArray1[1] = (double) 1;
doubleArray1[2] = (double) 1;
doubleArray1[3] = (double) 1;
doubleArray1[4] = (double) 1;
doubleArray1[5] = (double) 1;
doubleArray1[6] = (double) 1;
doubleArray1[7] = (double) 1;
dSCompiler0.tanh(doubleArray0, 1, doubleArray1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertFalse(doubleArray0.equals((Object)doubleArray1));
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertEquals(9, doubleArray0.length);
assertEquals(8, doubleArray1.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertArrayEquals(new double[] {1.0, (-1.0), Double.NaN, 1.0, 1.0, 1.0, 1.0, 1.0}, doubleArray1, 0.01);
assertNotSame(doubleArray0, doubleArray1);
assertNotSame(doubleArray1, doubleArray0);

int int1 = 63;
double[] doubleArray2 = new double[7];
assertFalse(doubleArray2.equals((Object)doubleArray0));
assertFalse(doubleArray2.equals((Object)doubleArray1));

dSCompiler0.pow(doubleArray2, 1, doubleArray2, (-3381), doubleArray0, 3);

[MASTER] 00:10:37.295 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:37.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:37.296 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.tanh((double[]) null, 4657, (double[]) null, 1);

[MASTER] 00:10:37.552 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:37.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:37.553 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.remainder(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);

[MASTER] 00:10:37.734 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:37.886 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.028 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:38.028 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
dSCompiler0.atan(doubleArray0, 0, doubleArray0, 777);

[MASTER] 00:10:38.318 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.453 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:38.454 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 1;
int int1 = 2567;
int int2 = 3;
int int3 = 1514;
dSCompiler0.acosh((double[]) null, 1514, (double[]) null, 294);

[MASTER] 00:10:38.608 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.770 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:38.777 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
int int1 = 0;
dSCompiler0.atan(doubleArray0, 0, doubleArray0, 0);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.log(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.pow(doubleArray0, 1, (double) 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(6, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

int int2 = 1416;
dSCompiler0.pow(doubleArray0, 1, doubleArray0, 1416, doubleArray0, (-1191));

[MASTER] 00:10:38.966 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:38.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:38.967 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.cos((double[]) null, 23, (double[]) null, 9);

[MASTER] 00:10:39.162 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:39.346 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:39.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:39.347 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
dSCompiler0.cosh((double[]) null, 1, (double[]) null, 1);

[MASTER] 00:10:39.499 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:39.683 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:39.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:39.684 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
dSCompiler0.log1p(doubleArray0, 1, doubleArray0, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(7, doubleArray0.length);
assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

doubleArray0[1] = (double) 1;
doubleArray0[2] = (-3556.89093590155);
doubleArray0[3] = (double) 1;
doubleArray0[4] = (double) 1;
doubleArray0[5] = (double) 1;
doubleArray0[6] = (double) 1;
int int0 = 1049;
dSCompiler0.asinh(doubleArray0, 1049, doubleArray0, 119);

[MASTER] 00:10:40.367 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:40.507 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:40.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:40.508 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

int[] intArray0 = new int[1];
intArray0[0] = 1;
int int0 = dSCompiler0.getPartialDerivativeIndex(intArray0);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, intArray0.length);
assertEquals(1, int0);
assertArrayEquals(new int[] {1}, intArray0);

double[] doubleArray0 = new double[2];
int int1 = dSCompiler0.getPartialDerivativeIndex(intArray0);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertTrue(int1 == int0);
assertEquals(1, intArray0.length);
assertEquals(1, int1);
assertArrayEquals(new int[] {1}, intArray0);

dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 00:10:40.636 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:40.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:40.636 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
int int1 = 3;
dSCompiler0.log10((double[]) null, 1, (double[]) null, 3);

[MASTER] 00:10:40.828 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:40.974 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:41.111 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:41.279 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:41.280 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:41.280 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
int int1 = 2;
dSCompiler0.divide((double[]) null, 220, (double[]) null, 2, (double[]) null, (-1234));

[MASTER] 00:10:41.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:41.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:41.416 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.log10(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, Double.NEGATIVE_INFINITY, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.tanh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, (-1.0), Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.pow(doubleArray0, 1, doubleArray0, 1, doubleArray0, 3);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, (-1.0), Double.NaN, Double.NaN, Double.NaN, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.acos(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 3.141592653589793, Double.NaN, Double.NaN, Double.NaN, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

int[] intArray0 = dSCompiler0.getPartialDerivativeOrders(1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(intArray0);
assertEquals(1, intArray0.length);
assertArrayEquals(new int[] {1}, intArray0);


[MASTER] 00:10:41.921 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.036 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:42.037 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
int int1 = (-2932);
dSCompiler0.asin((double[]) null, (-2932), (double[]) null, 1);

[MASTER] 00:10:42.172 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.320 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:42.321 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
dSCompiler0.taylor(doubleArray0, 1, doubleArray0);

[MASTER] 00:10:42.477 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.669 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:42.670 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.tanh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(9, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.compose(doubleArray0, 3165, doubleArray0, doubleArray0, 1);

[MASTER] 00:10:42.775 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:42.885 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:43.021 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:43.163 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:43.357 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:43.499 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:43.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:43.504 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
double[] doubleArray1 = null;
int int1 = 3;
int int2 = 1587;
dSCompiler0.atanh((double[]) null, 3, doubleArray0, 1587);

[MASTER] 00:10:44.154 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:44.336 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:44.336 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:44.336 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.taylor((double[]) null, (-64), (double[]) null);

[MASTER] 00:10:44.462 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:44.652 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:44.794 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:44.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:44.795 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

dSCompiler0.atanh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, doubleArray0.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);

int int0 = dSCompiler0.getSize();
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, int0);

int int1 = 0;
double[] doubleArray1 = new double[6];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 2;
doubleArray1[1] = (double) 0;
doubleArray1[2] = (double) 1;
doubleArray1[3] = (double) 0;
doubleArray1[4] = 1.0;
doubleArray1[5] = (double) 2;
dSCompiler0.atan(doubleArray0, 0, doubleArray1, 0);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertFalse(doubleArray0.equals((Object)doubleArray1));
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertEquals(5, doubleArray0.length);
assertEquals(6, doubleArray1.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertArrayEquals(new double[] {0.0, 0.0, 1.0, 0.0, 1.0, 2.0}, doubleArray1, 0.01);
assertNotSame(doubleArray0, doubleArray1);
assertNotSame(doubleArray1, doubleArray0);

dSCompiler0.linearCombination(2378.6, doubleArray1, 1, 0.0, doubleArray0, 2, doubleArray1, 2);

[MASTER] 00:10:44.940 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:45.056 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:46.290 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:46.445 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:46.650 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:46.813 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:46.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:46.815 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
double[] doubleArray1 = new double[7];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 1;
doubleArray1[2] = (double) 1;
doubleArray1[3] = (double) 1;
doubleArray1[4] = (double) 1;
doubleArray1[5] = (double) 1;
doubleArray1[6] = (double) 1;
dSCompiler0.taylor(doubleArray1, 1, doubleArray0);

[MASTER] 00:10:47.007 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:47.008 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:47.009 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[8];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
doubleArray0[3] = 925.05936;
doubleArray0[4] = (double) 1;
doubleArray0[5] = (double) 1;
doubleArray0[6] = (double) 1;
doubleArray0[7] = (double) 1;
dSCompiler0.taylor(doubleArray0, 1, doubleArray0);

[MASTER] 00:10:48.603 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:48.830 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:48.965 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:49.109 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:49.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:49.463 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:49.577 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:49.862 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:50.017 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:50.019 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<5> but was:<2>
[MASTER] 00:10:50.019 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
double[] doubleArray1 = new double[7];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (-1451.5341038504614);
doubleArray1[1] = (double) 0;
doubleArray1[2] = (double) 2;
doubleArray1[3] = (double) 1;
doubleArray1[4] = 3138.0;
doubleArray1[5] = (double) 0;
doubleArray1[6] = (double) 0;
dSCompiler0.linearCombination((-1451.5341038504614), doubleArray1, 0, 0.0, doubleArray0, 2, doubleArray1, 2);
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertFalse(doubleArray0.equals((Object)doubleArray1));
assertFalse(doubleArray1.equals((Object)doubleArray0));
assertEquals(9, doubleArray0.length);
assertEquals(7, doubleArray1.length);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertArrayEquals(new double[] {(-1451.5341038504614), 0.0, 2106951.254640962, 0.0, (-3.058311601261874E9), 0.0, 4.439243589433124E12}, doubleArray1, 0.01);
assertNotSame(doubleArray0, doubleArray1);
assertNotSame(doubleArray1, doubleArray0);

int int0 = dSCompiler0.getOrder();
assertEquals(5, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, int0);


[MASTER] 00:10:50.146 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:50.264 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:50.386 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:50.516 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:51.076 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:51.218 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:10:51.781 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
[MASTER] 00:10:52.330 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing JUnit test case 'DSCompiler_ESTest' to results/Math-10/org.apache.commons.math3.analysis.differentiation.DSCompiler/BBC-F0-opt-80/tests/7
* Done!

* Computation finished
