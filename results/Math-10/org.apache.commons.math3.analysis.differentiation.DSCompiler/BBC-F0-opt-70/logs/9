* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-70
* Going to generate test cases for class: org.apache.commons.math3.analysis.differentiation.DSCompiler
* Starting Client-0
* Connecting to master process on port 19469
* Analyzing classpath: 
  - subjects/buggy-versions/Math-10/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.analysis.differentiation.DSCompiler
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1519
* Using seed 1841609873
* Starting evolution
bbc usage percentage is: 70%
* Initial Number of Goals in DynaMOSA = 366 / 1519
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
* Search finished after 603s and 145 generations, 52417 statements, best individual has fitness: 146.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
[MASTER] 00:17:54.783 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage of criterion LINE: 100%
* Total number of goals: 544
* Number of covered goals: 543
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 295
* Number of covered goals: 293
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 77
* Number of covered goals: 77
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 279
* Number of covered goals: 229
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 61%
* Total number of goals: 28
* Number of covered goals: 17
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 295
* Number of covered goals: 287
* Generated 175 tests with total length 2601
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:18:36.499 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6758333333333333% of time used, but only 24/175 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 00:18:54.637 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:54.885 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:55.024 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:55.206 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:55.669 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:56.240 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:56.377 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:57.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:57.620 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:57.757 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:57.883 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:58.074 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:58.261 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:58.456 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:58.685 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:58.870 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.048 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.201 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.314 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.533 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.679 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:18:59.843 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.011 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.196 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.369 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.542 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.677 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:00.816 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.214 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.401 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.574 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.746 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:01.910 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.055 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.359 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.677 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.835 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.956 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:02.961 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:02.961 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[6];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 0;
doubleArray0[4] = (double) 2;
doubleArray0[5] = (double) 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

int int0 = dSCompiler0.getFreeParameters();
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, int0);

dSCompiler0.log(doubleArray0, (-197), doubleArray0, 6);

[MASTER] 00:19:03.071 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:03.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:03.709 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:03.836 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:03.953 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.124 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.239 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.365 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.625 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.749 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:04.892 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:05.005 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:05.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:05.263 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:05.476 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:06.079 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:06.207 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:06.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:06.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<20>
[MASTER] 00:19:06.323 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 3;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
assertEquals(3, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[19];
doubleArray0[0] = (double) 3;
doubleArray0[1] = (double) 3;
int int1 = 0;
double[] doubleArray1 = null;
int int2 = (-146);
int int3 = 1;
dSCompiler0.tanh((double[]) null, 1, (double[]) null, 0);

[MASTER] 00:19:06.473 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:06.853 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.254 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.355 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.622 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.771 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:07.921 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.081 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.260 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.457 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.601 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:08.909 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.081 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.082 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:09.082 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

int int1 = dSCompiler0.getOrder();
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, int1);
assertTrue(int1 == int0);

double[] doubleArray0 = new double[1];
doubleArray0[0] = 2075.4463745877947;
dSCompiler0.tan(doubleArray0, 2, doubleArray0, 2267);

[MASTER] 00:19:09.227 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.228 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<20>
[MASTER] 00:19:09.228 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 3;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(3, 3);
assertEquals(0, dSCompiler0.getSize());
assertEquals(3, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 3;
doubleArray0[1] = (double) 3;
int int1 = 0;
dSCompiler0.tan(doubleArray0, 0, doubleArray0, 0);

[MASTER] 00:19:09.361 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.506 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.627 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.763 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:09.933 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.076 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.199 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.312 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.446 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.579 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.694 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:10.880 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.008 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.129 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.257 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.258 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:11.258 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
dSCompiler0.pow(doubleArray0, 2, 2, doubleArray0, 2);

[MASTER] 00:19:11.378 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.487 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.597 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:11.911 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.233 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.376 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.490 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:12.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = (double) 2;
doubleArray0[4] = (double) 2;
doubleArray0[5] = (double) 2;
double double0 = dSCompiler0.taylor(doubleArray0, 2, doubleArray0);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0.0, double0, 0.01);
assertArrayEquals(new double[] {2.0, 2.0, 2.0, 0.0, 2.0, 2.0}, doubleArray0, 0.01);
assertEquals(6, doubleArray0.length);


[MASTER] 00:19:12.602 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<33> but was:<37>
[MASTER] 00:19:12.606 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

int int0 = dSCompiler0.getOrder();
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(0, int0);

DSCompiler dSCompiler1 = DSCompiler.getCompiler(36, 1);
assertEquals(36, dSCompiler1.getFreeParameters());
assertEquals(33, dSCompiler1.getSize());
assertEquals(1, dSCompiler1.getOrder());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = 0.0;
doubleArray0[3] = (double) 0;
doubleArray0[4] = (double) 0;
doubleArray0[5] = 3.0;
doubleArray0[6] = 3.0;
dSCompiler1.tanh(doubleArray0, 0, doubleArray0, 3);

[MASTER] 00:19:12.739 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:12.899 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:13.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:13.131 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:13.245 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:13.359 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:13.360 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:13.360 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

int[] intArray0 = new int[2];
intArray0[0] = 2;
intArray0[1] = 2;
dSCompiler0.getPartialDerivativeIndex(intArray0);

[MASTER] 00:19:13.907 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.060 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.167 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.168 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:14.168 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (-977.89806);
dSCompiler0.rootN(doubleArray0, 2, 2, doubleArray0, 2);

[MASTER] 00:19:14.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.448 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.567 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.756 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:14.935 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:15.126 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:15.482 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:15.633 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:15.748 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:15.916 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.034 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.156 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.157 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:16.158 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 0);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

int int0 = 1;
DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(0, dSCompiler1.getSize());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

double[] doubleArray0 = new double[6];
doubleArray0[0] = 3129.272027;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 0;
doubleArray0[3] = (double) 0;
doubleArray0[4] = 0.0;
doubleArray0[5] = (double) 1;
dSCompiler1.tanh(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(0, dSCompiler1.getSize());
assertArrayEquals(new double[] {3129.272027, 0.7615941559557649, 0.0, 0.0, 0.0, 1.0}, doubleArray0, 0.01);
assertEquals(6, doubleArray0.length);
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));

dSCompiler1.log1p(doubleArray0, 1, doubleArray0, 1);
assertEquals(1, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(0, dSCompiler1.getSize());
assertArrayEquals(new double[] {3129.272027, 0.5662191695169728, 0.0, 0.0, 0.0, 1.0}, doubleArray0, 0.01);
assertEquals(6, doubleArray0.length);
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));

dSCompiler1.acosh(doubleArray0, 1918, doubleArray0, 2196);

[MASTER] 00:19:16.280 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.410 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:16.411 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
int int1 = 3976;
int int2 = (-662);
dSCompiler0.pow((double[]) null, 3976, 3976, (double[]) null, (-662));

[MASTER] 00:19:16.562 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.563 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:16.563 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(0, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double double0 = 0.0;
double[] doubleArray0 = new double[6];
double[] doubleArray1 = new double[1];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 0;
int int2 = 178;
dSCompiler0.divide(doubleArray0, 0, doubleArray0, 0, doubleArray1, 178);

[MASTER] 00:19:16.684 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:16.685 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
dSCompiler0.atanh(doubleArray0, 3, doubleArray0, 653);

[MASTER] 00:19:16.797 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.912 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:16.912 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:16.913 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
dSCompiler0.cosh(doubleArray0, 2, doubleArray0, 2);

[MASTER] 00:19:17.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:17.544 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:17.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:17.548 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
doubleArray0[3] = (double) 1;
doubleArray0[4] = (double) 1;
doubleArray0[5] = 1.0;
doubleArray0[6] = (double) 0;
double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertEquals(0.0, double0, 0.01);
assertArrayEquals(new double[] {0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0}, doubleArray0, 0.01);
assertEquals(7, doubleArray0.length);

DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 0);
assertEquals(1, dSCompiler1.getFreeParameters());
assertEquals(0, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getSize());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

DSCompiler.getCompiler(793, 793);

[MASTER] 00:19:17.753 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:17.862 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:17.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:17.863 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 2;
doubleArray0[5] = 2.0;
doubleArray0[6] = (double) 2;
dSCompiler0.tanh(doubleArray0, 2, doubleArray0, 2);

[MASTER] 00:19:17.983 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:17.984 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:17.984 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 0);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0.0, double0, 0.01);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertEquals(6, doubleArray0.length);

DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
assertEquals(1, dSCompiler1.getSize());
assertEquals(0, dSCompiler1.getFreeParameters());
assertEquals(0, dSCompiler1.getOrder());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

DSCompiler dSCompiler2 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler2.getSize());
assertEquals(2, dSCompiler2.getFreeParameters());
assertEquals(2, dSCompiler2.getOrder());
assertNotSame(dSCompiler2, dSCompiler1);
assertNotSame(dSCompiler2, dSCompiler0);
assertFalse(dSCompiler2.equals((Object)dSCompiler1));
assertFalse(dSCompiler2.equals((Object)dSCompiler0));
assertNotNull(dSCompiler2);

dSCompiler2.cos(doubleArray0, 2, doubleArray0, 1220);

[MASTER] 00:19:18.104 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:18.105 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[2];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
dSCompiler0.compose(doubleArray0, 2, doubleArray0, doubleArray0, 2);

[MASTER] 00:19:18.221 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.354 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.493 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.606 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.721 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.721 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:18.721 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
dSCompiler0.atan2(doubleArray0, 0, doubleArray0, 0, doubleArray0, 0);

[MASTER] 00:19:18.845 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.846 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:18.846 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
int int0 = 3;
dSCompiler0.rootN(doubleArray0, 1, 3, doubleArray0, 2366);

[MASTER] 00:19:18.974 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:18.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:18.976 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
int int1 = 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 0);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
double double0 = dSCompiler0.taylor(doubleArray0, 0, doubleArray0);
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getSize());
assertEquals(0.0, double0, 0.01);
assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertEquals(6, doubleArray0.length);

DSCompiler dSCompiler1 = DSCompiler.getCompiler(0, 0);
assertEquals(1, dSCompiler1.getSize());
assertEquals(0, dSCompiler1.getOrder());
assertEquals(0, dSCompiler1.getFreeParameters());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

DSCompiler dSCompiler2 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler2.getFreeParameters());
assertEquals(0, dSCompiler2.getSize());
assertEquals(2, dSCompiler2.getOrder());
assertNotSame(dSCompiler2, dSCompiler1);
assertNotSame(dSCompiler2, dSCompiler0);
assertFalse(dSCompiler2.equals((Object)dSCompiler1));
assertFalse(dSCompiler2.equals((Object)dSCompiler0));
assertNotNull(dSCompiler2);

dSCompiler2.log10(doubleArray0, 0, doubleArray0, (-1361));

[MASTER] 00:19:19.128 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:19.590 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:19.745 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:19.898 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:19.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<3>
[MASTER] 00:19:19.899 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[4];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 199;
doubleArray0[2] = (double) 2;
dSCompiler0.compose(doubleArray0, 32, doubleArray0, doubleArray0, 2);

[MASTER] 00:19:20.004 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:20.005 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
dSCompiler0.log1p(doubleArray0, 2, doubleArray0, 1258);

[MASTER] 00:19:20.113 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:20.114 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = 2673.31214;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 2;
doubleArray0[5] = (double) 2;
doubleArray0[6] = (double) 2;
dSCompiler0.sinh(doubleArray0, 2, doubleArray0, 31);

[MASTER] 00:19:20.262 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:20.263 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(0, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

DSCompiler dSCompiler1 = DSCompiler.getCompiler(1, 0);
assertEquals(1, dSCompiler1.getSize());
assertEquals(0, dSCompiler1.getOrder());
assertEquals(1, dSCompiler1.getFreeParameters());
assertNotSame(dSCompiler1, dSCompiler0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertNotNull(dSCompiler1);

dSCompiler0.checkCompatibility(dSCompiler1);

[MASTER] 00:19:20.407 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:20.408 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
dSCompiler0.remainder(doubleArray0, 2, doubleArray0, 2, doubleArray0, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertArrayEquals(new double[] {0.0, 0.0, Double.NaN, 0.0, 0.0}, doubleArray0, 0.01);
assertEquals(5, doubleArray0.length);

int int1 = (-1997);
dSCompiler0.acosh(doubleArray0, int1, doubleArray0, int0);

[MASTER] 00:19:20.537 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.650 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.791 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:20.958 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.075 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.189 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:21.189 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[4];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = (double) 2;
doubleArray0[3] = 2.2403693199157715;
dSCompiler0.asin(doubleArray0, 2, doubleArray0, 2);

[MASTER] 00:19:21.432 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.555 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.689 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.801 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.900 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:21.901 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:21.901 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 2;
doubleArray0[1] = (double) 2;
doubleArray0[2] = 2.0;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 2;
doubleArray0[3] = (double) 2;
double[] doubleArray1 = new double[5];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 2;
doubleArray1[1] = (double) 2;
doubleArray1[2] = 516.8309173059;
doubleArray1[3] = (double) 2;
doubleArray1[4] = (double) 2;
dSCompiler0.atan(doubleArray0, 2, doubleArray1, 2);

[MASTER] 00:19:22.032 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:22.144 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:22.302 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:22.438 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:22.921 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:23.510 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:23.632 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:23.853 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:24.304 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:24.431 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:24.589 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:24.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<6>
[MASTER] 00:19:24.590 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(2, 2);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

int[] intArray0 = new int[2];
intArray0[0] = 2;
int int0 = dSCompiler0.getPartialDerivativeIndex(intArray0);
assertEquals(0, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(2, dSCompiler0.getFreeParameters());
assertEquals(2, int0);
assertArrayEquals(new int[] {2, 0}, intArray0);
assertEquals(2, intArray0.length);

double[] doubleArray0 = new double[3];
doubleArray0[0] = (double) 0;
doubleArray0[1] = 3.0095696449279785;
doubleArray0[2] = 3.0095696449279785;
dSCompiler0.multiply(doubleArray0, 2, doubleArray0, 1433, doubleArray0, 0);

[MASTER] 00:19:25.035 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:25.208 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:25.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<2>
[MASTER] 00:19:25.208 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[7];
doubleArray0[2] = (double) 1;
double[] doubleArray1 = new double[0];
assertFalse(doubleArray1.equals((Object)doubleArray0));

DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

int[] intArray0 = dSCompiler0.getPartialDerivativeOrders(1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getSize());
assertArrayEquals(new int[] {1}, intArray0);
assertEquals(1, intArray0.length);
assertNotNull(intArray0);


[MASTER] 00:19:25.618 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:25.736 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 00:19:25.856 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'DSCompiler_ESTest' to results/Math-10/org.apache.commons.math3.analysis.differentiation.DSCompiler/BBC-F0-opt-70/tests/9
* Done!

* Computation finished
