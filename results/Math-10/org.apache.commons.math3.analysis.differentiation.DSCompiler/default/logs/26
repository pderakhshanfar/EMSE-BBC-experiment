* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: org.apache.commons.math3.analysis.differentiation.DSCompiler
* Starting Client-0
* Connecting to master process on port 20923
* Analyzing classpath: 
  - subjects/buggy-versions/Math-10/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.analysis.differentiation.DSCompiler
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1519
* Using seed 2184825703
* Starting evolution
* Initial Number of Goals in DynaMOSA = 366 / 1519
Number of times BBC is called in total: 0
* Search finished after 602s and 114 generations, 42667 statements, best individual has fitness: 139.0
* Minimizing test suite
* Going to analyze the coverage criteria
[MASTER] 14:03:38.193 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 544
* Number of covered goals: 542
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 99%
* Total number of goals: 295
* Number of covered goals: 292
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 74
* Number of covered goals: 74
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 279
* Number of covered goals: 228
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 28
* Number of covered goals: 16
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 39
* Number of covered goals: 39
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 295
* Number of covered goals: 287
* Generated 248 tests with total length 2422
* Resulting test suite's coverage: 86% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:04:25.439 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7543333333333333% of time used, but only 4/248 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 14:04:47.393 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:04:47.393 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.asin(doubleArray0, 0, doubleArray0, 0);

[MASTER] 14:04:49.189 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:04:49.190 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 0;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 0;
doubleArray0[5] = (double) 0;
doubleArray0[6] = (double) 2;
double[] doubleArray1 = new double[8];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 0;
dSCompiler0.log1p(doubleArray1, 2, doubleArray0, 0);

[MASTER] 14:04:49.376 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:49.376 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.pow(doubleArray0, 1, 1, doubleArray0, (-212));

[MASTER] 14:04:49.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:49.812 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.pow(doubleArray0, 1, 1, doubleArray0, (-212));

[MASTER] 14:04:50.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<7> but was:<6>
[MASTER] 14:04:50.600 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(5, 1);
assertEquals(7, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(5, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.rootN(doubleArray0, 1, 5, doubleArray0, 1);

[MASTER] 14:04:50.727 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:50.728 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.rootN(doubleArray0, (-212), 1, doubleArray0, (-212));

[MASTER] 14:04:51.928 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:51.928 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[18];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.sinh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:04:52.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:52.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 1.0, doubleArray0, 1);

[MASTER] 14:04:52.148 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:52.148 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[11];
dSCompiler0.sin(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:04:52.273 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:52.274 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.pow(doubleArray0, 1, Double.NaN, doubleArray0, 1);

[MASTER] 14:04:53.372 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:04:53.372 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.divide(doubleArray0, 2077, doubleArray0, 3, doubleArray0, 1);

[MASTER] 14:04:56.836 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 14:04:56.836 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
doubleArray0[0] = (-1475.96153118708);
doubleArray0[1] = (double) 2;
dSCompiler0.tan(doubleArray0, 2, (double[]) null, 2);

[MASTER] 14:04:58.655 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:04:58.656 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
double[] doubleArray1 = new double[9];
doubleArray1[0] = (double) 0;
doubleArray1[1] = 919.7062631523655;
int int1 = 0;
double double0 = 6.865714679174435E-165;
dSCompiler0.sinh(doubleArray1, 0, doubleArray1, 2);

[MASTER] 14:05:00.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:00.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.linearCombination((double) 1, doubleArray0, (-1661), (double) 1, doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:00.656 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:00.656 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[8];
dSCompiler0.taylor(doubleArray0, 735, doubleArray0);

[MASTER] 14:05:01.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:01.026 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 1.0, doubleArray0, 1);

[MASTER] 14:05:01.214 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:01.215 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.remainder(doubleArray0, 1, doubleArray0, 1, doubleArray0, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertArrayEquals(new double[] {0.0, Double.NaN, Double.NaN, Double.NaN, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
assertEquals(7, doubleArray0.length);


[MASTER] 14:05:01.724 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 14:05:01.724 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.log(doubleArray0, 2, (double[]) null, (-838));

[MASTER] 14:05:02.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:02.335 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.compose(doubleArray0, 1, doubleArray0, doubleArray0, 24);

[MASTER] 14:05:02.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:02.619 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[18];
DSCompiler.getCompiler(3, 3);

[MASTER] 14:05:02.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:02.752 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.taylor(doubleArray0, 1, doubleArray0);

[MASTER] 14:05:02.897 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:02.897 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

int int0 = dSCompiler0.getOrder();
assertEquals(1, int0);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());


[MASTER] 14:05:04.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:04.057 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[7];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

dSCompiler0.asinh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:04.218 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:04.218 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 0;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 0;
doubleArray0[5] = (double) 0;
doubleArray0[6] = (double) 2;
double[] doubleArray1 = new double[8];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 0;
doubleArray1[1] = (double) 2;
doubleArray1[2] = (double) 0;
doubleArray1[3] = (double) 2;
doubleArray1[4] = (double) 2;
doubleArray1[5] = (double) 0;
doubleArray1[6] = 0.0;
doubleArray1[7] = (double) 2;
dSCompiler0.acos(doubleArray0, 2, doubleArray1, 2);

[MASTER] 14:05:04.591 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:04.591 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[39];
DSCompiler.getCompiler(4, 4);

[MASTER] 14:05:05.549 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:05.550 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.linearCombination((double) 1, doubleArray0, 1, 1.830322504043579, doubleArray0, 1, (double) 1, doubleArray0, 1, doubleArray0, 21);

[MASTER] 14:05:05.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:05.672 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
double double0 = 1.0;
dSCompiler0.pow(doubleArray0, 1, 1.0, doubleArray0, 1);

[MASTER] 14:05:05.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:05.841 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[1] = (double) 0;
dSCompiler0.acosh(doubleArray0, 0, doubleArray0, 0);

[MASTER] 14:05:06.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:06.255 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[1];
DSCompiler.getCompiler(3, 3);

[MASTER] 14:05:07.143 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:07.143 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(3, 3);

[MASTER] 14:05:08.085 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:08.085 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 0;
doubleArray0[2] = (double) 2;
doubleArray0[3] = (double) 2;
doubleArray0[4] = (double) 0;
doubleArray0[5] = (double) 0;
doubleArray0[6] = (double) 2;
double[] doubleArray1 = new double[8];
assertFalse(doubleArray1.equals((Object)doubleArray0));

dSCompiler0.atanh(doubleArray0, 2, doubleArray1, 2);

[MASTER] 14:05:09.112 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:09.112 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:09.229 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:09.232 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
int int2 = (-212);
double[] doubleArray1 = new double[7];
assertFalse(doubleArray1.equals((Object)doubleArray0));

dSCompiler0.pow(doubleArray1, 1, (-10), doubleArray0, (-212));

[MASTER] 14:05:09.536 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:09.536 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(2, 2);

[MASTER] 14:05:09.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:09.871 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(2, 2);

[MASTER] 14:05:09.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:09.969 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[7];
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

dSCompiler0.add(doubleArray0, (-1362), doubleArray0, (-1362), doubleArray0, 1);

[MASTER] 14:05:10.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:10.091 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:10.225 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:10.225 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
int int1 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 0;
doubleArray0[1] = (double) 0;
DSCompiler dSCompiler1 = DSCompiler.getCompiler(2, 0);
assertFalse(dSCompiler1.equals((Object)dSCompiler0));
assertEquals(2, dSCompiler1.getFreeParameters());
assertEquals(1, dSCompiler1.getSize());
assertEquals(0, dSCompiler1.getOrder());
assertNotNull(dSCompiler1);
assertNotSame(dSCompiler1, dSCompiler0);

dSCompiler1.rootN(doubleArray0, 2, 254, doubleArray0, 2);

[MASTER] 14:05:10.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:10.760 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
dSCompiler0.tan(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:10.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:10.893 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:11.163 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:11.164 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 1.0, doubleArray0, 1);

[MASTER] 14:05:11.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:11.667 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.asin(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:12.287 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:12.288 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:12.405 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:12.405 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.tan(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:12.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:12.519 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);

[MASTER] 14:05:12.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:12.750 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
double double0 = 1.0;
dSCompiler0.pow(doubleArray0, 1, 1.0, doubleArray0, 1);

[MASTER] 14:05:12.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:12.856 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:13.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:13.607 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
doubleArray0[0] = (double) 1;
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:13.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:13.721 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.atanh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:13.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:13.855 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[1] = (double) 1;
dSCompiler0.tanh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:14.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:14.373 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
int int1 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[6] = (double) 1;
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
dSCompiler0.atanh(doubleArray0, 1, doubleArray0, 1);

[MASTER] 14:05:14.980 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:14.980 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 1);
assertEquals(0, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[5];
doubleArray0[0] = 6.184953843236509E-8;
doubleArray0[1] = 698.58855502;
doubleArray0[3] = 2932.93629;
doubleArray0[0] = (double) 109;
dSCompiler0.expm1(doubleArray0, 0, doubleArray0, 0);

[MASTER] 14:05:15.234 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:15.234 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[4];
dSCompiler0.log1p(doubleArray0, 1, doubleArray0, (-898));

[MASTER] 14:05:15.737 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:15.744 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.atan(doubleArray0, (-204), doubleArray0, 1);

[MASTER] 14:05:15.881 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:15.881 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(2, 2);

[MASTER] 14:05:16.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:16.047 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(3, 2);

[MASTER] 14:05:16.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.NullPointerException: null
[MASTER] 14:05:16.237 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 0;
int int1 = 2;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = null;
double[] doubleArray1 = new double[9];
doubleArray1[0] = (double) 0;
doubleArray1[1] = 919.7062631523655;
dSCompiler0.rootN(doubleArray1, 2, 2, (double[]) null, 2);

[MASTER] 14:05:17.477 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:17.477 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:17.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:17.621 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1;
DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
int int1 = 3;
double double0 = (-109.6050548627);
double[] doubleArray1 = new double[7];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = 0.0;
doubleArray1[1] = (double) 1;
doubleArray1[2] = 55.2929542;
doubleArray1[3] = (double) 1;
double[] doubleArray2 = new double[8];
assertFalse(doubleArray2.equals((Object)doubleArray0));
assertFalse(doubleArray2.equals((Object)doubleArray1));

doubleArray2[0] = (double) 1;
doubleArray2[1] = (-109.6050548627);
doubleArray2[2] = 55.2929542;
double[] doubleArray3 = new double[8];
assertFalse(doubleArray3.equals((Object)doubleArray1));
assertFalse(doubleArray3.equals((Object)doubleArray0));
assertFalse(doubleArray3.equals((Object)doubleArray2));

doubleArray3[0] = (double) 1;
doubleArray3[1] = 55.2929542;
doubleArray3[2] = (-109.6050548627);
doubleArray3[3] = 336.4;
doubleArray3[4] = (double) 1;
doubleArray3[5] = (double) 3;
doubleArray3[6] = (double) 3;
doubleArray3[7] = (double) 3;
dSCompiler0.exp(doubleArray0, 3, doubleArray3, 1);

[MASTER] 14:05:17.879 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:17.879 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
dSCompiler0.cosh(doubleArray0, 1, doubleArray0, 34);

[MASTER] 14:05:18.009 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:18.009 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[1] = (double) 1;
dSCompiler0.pow(doubleArray0, 1, 0.0, doubleArray0, 1);

[MASTER] 14:05:18.153 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:18.153 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler.getCompiler(2, 2);

[MASTER] 14:05:18.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:18.878 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[6];
double[] doubleArray1 = new double[8];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (-1475.96153118708);
doubleArray1[1] = (double) 0;
doubleArray1[2] = (double) 0;
doubleArray1[3] = (double) 0;
doubleArray1[4] = (double) 0;
doubleArray1[5] = (double) 2;
doubleArray1[6] = (double) 2;
doubleArray1[7] = (double) 2;
dSCompiler0.tanh(doubleArray0, 2, doubleArray1, 0);

[MASTER] 14:05:19.714 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:19.714 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(1, dSCompiler0.getOrder());
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

dSCompiler0.acosh((double[]) null, 1251, (double[]) null, (-904));

[MASTER] 14:05:19.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:19.954 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getFreeParameters());
assertEquals(1, dSCompiler0.getOrder());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[7];
doubleArray0[1] = (double) 1;
doubleArray0[2] = (double) 1;
double[] doubleArray1 = new double[4];
assertFalse(doubleArray1.equals((Object)doubleArray0));

doubleArray1[0] = (double) 1;
doubleArray1[1] = (double) 1;
doubleArray1[2] = (double) 1;
doubleArray1[3] = (double) 1;
dSCompiler0.atan(doubleArray0, 1, doubleArray1, 0);

[MASTER] 14:05:20.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:20.378 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 2;
DSCompiler.getCompiler(2, 2);

[MASTER] 14:05:20.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3> but was:<2>
[MASTER] 14:05:20.663 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(1, 1);
assertEquals(3, dSCompiler0.getSize());
assertEquals(1, dSCompiler0.getOrder());
assertEquals(1, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

dSCompiler0.atan2((double[]) null, 14, (double[]) null, 14, (double[]) null, (-1209));

[MASTER] 14:05:21.000 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:21.000 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler.getCompiler(3, 3);

[MASTER] 14:05:21.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:05:21.588 [logback-1] WARN  JUnitAnalyzer - Failing test:
 DSCompiler dSCompiler0 = DSCompiler.getCompiler(0, 2);
assertEquals(1, dSCompiler0.getSize());
assertEquals(2, dSCompiler0.getOrder());
assertEquals(0, dSCompiler0.getFreeParameters());
assertNotNull(dSCompiler0);

double[] doubleArray0 = new double[9];
dSCompiler0.sinh(doubleArray0, 0, doubleArray0, 0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 10
* Writing tests to file
* Writing JUnit test case 'DSCompiler_ESTest' to results/Math-10/org.apache.commons.math3.analysis.differentiation.DSCompiler/default/tests/26
* Done!

* Computation finished
