/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 01 15:01:31 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2620L, 2620L, noMoreInteractions0, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(2620L, verificationOverTimeImpl0.getDuration());
      assertEquals(2620L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AtMost atMost0 = new AtMost(925);
      After after0 = new After(1L, 1704L, atMost0);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2775L), 1704L, after0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-2775L), long0);
      assertEquals(1704L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 2135L, noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(2135L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1222L), (-1222L), (VerificationMode) null, false);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1222L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1222L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1435L, 1435L, (VerificationMode) null, true);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 3635L, (VerificationMode) null, true);
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertFalse(boolean0);
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(3635L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 2135L, noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(verificationOverTimeImpl0);
      assertTrue(boolean0);
      assertEquals(2135L, verificationOverTimeImpl0.getDuration());
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timer timer0 = new Timer(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      After after0 = new After((-1255L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(112L, 112L, after0, true);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals(112L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(112L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1978L, (-327L), (VerificationMode) null, false);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl(1978L, 1978L, verificationOverTimeImpl0, false);
      // Undeclared exception!
      verificationOverTimeImpl1.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1978L, (-327L), (VerificationMode) null, false);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals(1978L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-327L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timer timer0 = new Timer(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 2135L, noMoreInteractions0, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(2135L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(10L, (-1L), (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1L), long0);
      assertEquals(10L, verificationOverTimeImpl0.getPollingPeriod());
  }
}
