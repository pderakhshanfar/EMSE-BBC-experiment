/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 12:05:27 GMT 2020
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(884L, (-1L), noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals(884L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Timeout timeout0 = new Timeout((-6143L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-6143L), (-6143L), timeout0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-6143L), long0);
      assertEquals((-6143L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1018L, 1018L, (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(1018L, long0);
      assertEquals(1018L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After((-2650L), atMost0);
      Timer timer0 = new Timer(285L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-533L), (-2650L), after0, true, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-2650L), long0);
      assertEquals((-533L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1740L), (-1740L), (VerificationMode) null, false);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1740L), verificationOverTimeImpl0.getDuration());
      assertEquals((-1740L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-655L), (-655L), (VerificationMode) null, false);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-655L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-655L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(884L, (-1L), noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals(884L, verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After((-2650L), atMost0);
      Timer timer0 = new Timer(285L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-533L), (-2650L), after0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(after0);
      assertEquals((-2650L), verificationOverTimeImpl0.getDuration());
      assertTrue(boolean0);
      assertEquals((-533L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After((-2650L), atMost0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2650L), 0L, after0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
      assertEquals((-2650L), verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      After after0 = new After(2383L, (-12L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-12L), 2383L, after0, false);
      // Undeclared exception!
      verificationOverTimeImpl0.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After((-2650L), atMost0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2650L), 0L, after0, true);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-2650L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(0L, noMoreInteractions0);
      Timer timer0 = new Timer((-3591L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(884L, (-1L), noMoreInteractions0, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals(884L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After((-2650L), atMost0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2650L), 0L, after0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-2650L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(0L, long0);
  }
}
