/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 12:09:42 GMT 2020
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2122L), (-2122L), noMoreInteractions0, true);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl(0L, (-2122L), verificationOverTimeImpl0, true, timer0);
      long long0 = verificationOverTimeImpl1.getPollingPeriod();
      assertEquals(0L, long0);
      assertEquals((-2122L), verificationOverTimeImpl1.getDuration());
      assertEquals((-2122L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      After after0 = new After((-1143L), (-1143L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3010L, 3010L, after0, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(3010L, verificationOverTimeImpl0.getDuration());
      assertEquals(3010L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1139L), 0L, noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1139L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      After after0 = new After(1L, (-4243L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-746L), 2469L, after0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(2469L, long0);
      assertEquals((-746L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-787L), (VerificationMode) null, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-787L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(535L, 535L, noMoreInteractions0, false);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.verification.NoMoreInteractions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-38L), (-38L), noMoreInteractions0, false);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-38L), verificationOverTimeImpl0.getDuration());
      assertEquals((-38L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1139L), 0L, noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
      assertEquals((-1139L), verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-229L), (-2442L), (VerificationMode) null, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertEquals((-2442L), verificationOverTimeImpl0.getDuration());
      assertEquals((-229L), verificationOverTimeImpl0.getPollingPeriod());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(5);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-4954L), (-4954L), atMost0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertFalse(boolean0);
      assertEquals((-4954L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-4954L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timeout timeout0 = new Timeout((-38L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2382L, 2382L, timeout0, true);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals(2382L, verificationOverTimeImpl0.getDuration());
      assertEquals(2382L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timeout timeout0 = new Timeout((-38L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2382L, 2382L, timeout0, false);
      // Undeclared exception!
      verificationOverTimeImpl0.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2122L), (-2122L), noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-2122L), long0);
      assertEquals((-2122L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(980L, 980L, noMoreInteractions0, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(980L, verificationOverTimeImpl0.getDuration());
      assertEquals(980L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1082L), (-1082L), noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1082L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1082L), long0);
  }
}
