/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 12:03:59 GMT 2020
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer((-1L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(513L, 513L, noMoreInteractions0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(513L, verificationOverTimeImpl0.getDuration());
      assertEquals(513L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0, 0, atMost0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timer timer0 = new Timer((-1L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1L, 1L, atMost0, true, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(1L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0, 0, atMost0, true);
      VerificationMode verificationMode0 = verificationOverTimeImpl0.getDelegate();
      assertSame(atMost0, verificationMode0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AtMost atMost0 = new AtMost(10);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(10, 10, atMost0, true);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.verification.AtMost", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-38L), (-38L), (VerificationMode) null, false);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-38L), verificationOverTimeImpl0.getDuration());
      assertEquals((-38L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2446L), 1155L, (VerificationMode) null, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertEquals(1155L, verificationOverTimeImpl0.getDuration());
      assertTrue(boolean0);
      assertEquals((-2446L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2434L), (-2434L), noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals((-2434L), verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
      assertEquals((-2434L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(30);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(30, 30, atMost0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals(30L, verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
      assertEquals(30L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After((-17L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(414L, 414L, after0, true);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals(414L, verificationOverTimeImpl0.getDuration());
      assertEquals(414L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2434L), (-2434L), noMoreInteractions0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-2434L), verificationOverTimeImpl0.getDuration());
      assertEquals((-2434L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Timer timer0 = new Timer((-1956L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), (-1956L), (VerificationMode) null, false, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1956L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After((-2137L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false);
      // Undeclared exception!
      verificationOverTimeImpl0.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Timer timer0 = new Timer((-1956L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), (-1956L), (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1956L), long0);
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
  }
}
