/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 12:03:14 GMT 2020
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AtMost atMost0 = new AtMost(808);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3543L, 3543L, atMost0, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(3543L, verificationOverTimeImpl0.getDuration());
      assertEquals(3543L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timeout timeout0 = new Timeout(0L, (VerificationMode) null);
      After after0 = new After((-974L), 0L, timeout0);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2641L, 2641L, noMoreInteractions0, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(2641L, long0);
      assertEquals(2641L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Timer timer0 = new Timer((-2278L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2495L, 2495L, (VerificationMode) null, true, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(2495L, verificationOverTimeImpl0.getDuration());
      assertEquals(2495L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3694L, 3694L, noMoreInteractions0, false);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.verification.NoMoreInteractions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1936L, 1936L, noMoreInteractions0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals(1936L, verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
      assertEquals(1936L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      After after0 = new After((-2535L), (VerificationMode) null);
      Timer timer0 = new Timer((-388L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-133L), (-388L), after0, false, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(after0);
      assertEquals((-388L), verificationOverTimeImpl0.getDuration());
      assertTrue(boolean0);
      assertEquals((-133L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2648L), (-2648L), (VerificationMode) null, true);
      AtMost atMost0 = new AtMost(4864);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals((-2648L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-2648L), verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3454L, (-1L), noMoreInteractions0, true);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl((-1L), 3454L, verificationOverTimeImpl0, true);
      verificationOverTimeImpl1.verify((VerificationData) null);
      assertEquals(3454L, verificationOverTimeImpl1.getDuration());
      assertEquals((-1L), verificationOverTimeImpl1.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3454L, (-1L), noMoreInteractions0, false);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl((-1L), 3454L, verificationOverTimeImpl0, false);
      // Undeclared exception!
      verificationOverTimeImpl1.verify((VerificationData) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3454L, (-1L), noMoreInteractions0, false);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals(3454L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      After after0 = new After((-2535L), (VerificationMode) null);
      Timer timer0 = new Timer((-388L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-133L), (-388L), after0, false, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-388L), verificationOverTimeImpl0.getDuration());
      assertEquals((-133L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      After after0 = new After((-2535L), (VerificationMode) null);
      Timer timer0 = new Timer((-388L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-133L), (-388L), after0, false, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-133L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-388L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      After after0 = new After((-2535L), (VerificationMode) null);
      Timer timer0 = new Timer((-388L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-133L), (-388L), after0, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-388L), long0);
      assertEquals((-133L), verificationOverTimeImpl0.getPollingPeriod());
  }
}
