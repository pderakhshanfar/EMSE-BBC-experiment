/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 23:37:47 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.MockingProgressImpl;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(0L, noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2117L, (-1L), after0, true);
      Timer timer0 = new Timer(2117L);
      VerificationOverTimeImpl verificationOverTimeImpl1 = new VerificationOverTimeImpl(0L, 0L, verificationOverTimeImpl0, true, timer0);
      verificationOverTimeImpl1.getPollingPeriod();
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
      assertEquals(2117L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-901L), 0L, (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-901L), long0);
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Timer timer0 = new Timer(796L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(796L, 796L, (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(796L, long0);
      assertEquals(796L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      After after0 = new After(5139L, (VerificationMode) null);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, true, timer0);
      VerificationMode verificationMode0 = verificationOverTimeImpl0.getDelegate();
      assertSame(verificationMode0, after0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AtMost atMost0 = new AtMost(3358);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-134L), (-134L), atMost0, true, timer0);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(1L, noMoreInteractions0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<Integer> mockSettingsImpl0 = new MockSettingsImpl<Integer>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      after0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After(0L, noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2117L, (-1L), after0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals(2117L, verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(3358);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      After after0 = new After(0L, 0L, atMost0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false);
      MockingProgressImpl mockingProgressImpl0 = new MockingProgressImpl();
      MockSettingsImpl<String> mockSettingsImpl0 = new MockSettingsImpl<String>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(mockingProgressImpl0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AtMost atMost0 = new AtMost(3358);
      MockingProgressImpl mockingProgressImpl0 = new MockingProgressImpl();
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-134L), (-134L), atMost0, true, timer0);
      MockSettingsImpl<Object> mockSettingsImpl0 = new MockSettingsImpl<Object>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(mockingProgressImpl0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals((-134L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-134L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2744L), (-1L), (VerificationMode) null, true);
      MockSettingsImpl<NoMoreInteractions> mockSettingsImpl0 = new MockSettingsImpl<NoMoreInteractions>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals((-2744L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(567L, 0L, (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(567L, long0);
      assertEquals(0L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Timer timer0 = new Timer(10L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false, timer0);
      VerificationMode verificationMode0 = verificationOverTimeImpl0.getDelegate();
      assertNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2744L), (-1L), (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1L), long0);
      assertEquals((-2744L), verificationOverTimeImpl0.getPollingPeriod());
  }
}
