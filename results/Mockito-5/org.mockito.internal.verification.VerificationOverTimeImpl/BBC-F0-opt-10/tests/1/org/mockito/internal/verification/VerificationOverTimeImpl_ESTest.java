/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 08 07:51:33 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.MockingProgress;
import org.mockito.internal.progress.MockingProgressImpl;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 0L;
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      LinkedList<AtMost> linkedList0 = new LinkedList<AtMost>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      boolean boolean0 = linkedList0.retainAll(linkedList1);
      VerificationMode verificationMode0 = threadSafeMockingProgress0.pullVerificationMode();
      Timer timer0 = new Timer(1327L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(long0, long0, verificationMode0, boolean0, timer0);
      long long1 = verificationOverTimeImpl0.getPollingPeriod();
      assertTrue(long1 == long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Timer timer0 = new Timer(270L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(270L, 270L, (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(270L, long0);
      assertEquals(270L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timer timer0 = new Timer(1425L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-4214L), 0L, (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(0L, long0);
      assertEquals((-4214L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2957L), 4663L, noMoreInteractions0, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-2957L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(4663L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Timeout timeout0 = new Timeout((-1960L), (VerificationMode) null);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1960L), 1083L, timeout0, false);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(1083L, verificationOverTimeImpl0.getDuration());
      assertEquals((-1960L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-2957L), 4663L, noMoreInteractions0, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertFalse(boolean0);
      assertEquals(4663L, verificationOverTimeImpl0.getDuration());
      assertEquals((-2957L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Timer timer0 = new Timer(1443L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-648L), (-648L), (VerificationMode) null, false, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertTrue(boolean0);
      assertEquals((-648L), verificationOverTimeImpl0.getDuration());
      assertEquals((-648L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AtMost atMost0 = new AtMost(394);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(10L, 10L, atMost0, true);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertFalse(boolean0);
      assertEquals(10L, verificationOverTimeImpl0.getDuration());
      assertEquals(10L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer(2023L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(142L, (-4192L), noMoreInteractions0, true, timer0);
      MockSettingsImpl<Integer> mockSettingsImpl0 = new MockSettingsImpl<Integer>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl((MockingProgress) null, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals(142L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-4192L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<Object> mockSettingsImpl0 = new MockSettingsImpl<Object>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      Timer timer0 = new Timer(0L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-874L), (-874L), noMoreInteractions0, false, timer0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockingProgressImpl mockingProgressImpl0 = new MockingProgressImpl();
      Timer timer0 = new Timer(1443L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-648L), (-648L), (VerificationMode) null, false, timer0);
      MockSettingsImpl<AtMost> mockSettingsImpl0 = new MockSettingsImpl<AtMost>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(mockingProgressImpl0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify(verificationDataImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After((-1705L), noMoreInteractions0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<AtMost> mockSettingsImpl0 = new MockSettingsImpl<AtMost>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      after0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Timer timer0 = new Timer(1443L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-648L), (-648L), (VerificationMode) null, false, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-648L), verificationOverTimeImpl0.getDuration());
      assertEquals((-648L), long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Timer timer0 = new Timer(1443L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-648L), (-648L), (VerificationMode) null, false, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-648L), verificationOverTimeImpl0.getDuration());
      assertEquals((-648L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After((-1705L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(1459L, (-1370L), after0, false);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1370L), long0);
      assertEquals(1459L, verificationOverTimeImpl0.getPollingPeriod());
  }
}
