/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 06 14:01:22 GMT 2021
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.Timeout;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, true);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Timeout timeout0 = new Timeout(773L, (VerificationMode) null);
      Timer timer0 = new Timer(773L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(773L, (-3525L), timeout0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-3525L), verificationOverTimeImpl0.getDuration());
      assertEquals(773L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-861L), 0L, atMost0, true);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-861L), verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(3991L, 3991L, (VerificationMode) null, false, (Timer) null);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals(3991L, long0);
      assertEquals(3991L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 1227L, (VerificationMode) null, true);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals(1227L, verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer(475L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, noMoreInteractions0, true, timer0);
      // Undeclared exception!
      try { 
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.verification.NoMoreInteractions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<AtMost> mockSettingsImpl0 = new MockSettingsImpl<AtMost>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      try { 
        atMost0.verify(verificationDataImpl0);
       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      Timer timer0 = new Timer((-1L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1121L), noMoreInteractions0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals((-1121L), verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AtMost atMost0 = new AtMost(1115);
      Timeout timeout0 = new Timeout((-251L), atMost0);
      Timer timer0 = new Timer((-251L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-251L), (-2265L), timeout0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(timeout0);
      assertEquals((-2265L), verificationOverTimeImpl0.getDuration());
      assertEquals((-251L), verificationOverTimeImpl0.getPollingPeriod());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timeout timeout0 = new Timeout(1L, atMost0);
      Timer timer0 = new Timer(647L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1937L), timeout0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1937L), verificationOverTimeImpl0.getDuration());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      long long0 = 10L;
      long long1 = (-2686L);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      VerificationMode verificationMode0 = threadSafeMockingProgress0.pullVerificationMode();
      After after0 = new After(long0, long1, verificationMode0);
      boolean boolean0 = false;
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(long0, long0, after0, boolean0);
      VerificationData verificationData0 = null;
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationData0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<AtMost> mockSettingsImpl0 = new MockSettingsImpl<AtMost>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      Timeout timeout0 = new Timeout(1L, atMost0);
      Timer timer0 = new Timer(647L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1937L), timeout0, true, timer0);
      verificationOverTimeImpl0.verify(verificationDataImpl0);
      assertEquals((-1937L), verificationOverTimeImpl0.getDuration());
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = 10L;
      long long1 = (-2686L);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      VerificationMode verificationMode0 = threadSafeMockingProgress0.pullVerificationMode();
      After after0 = new After(long0, long1, verificationMode0);
      VerificationData verificationData0 = null;
      after0.verify(verificationData0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AtMost atMost0 = new AtMost(1115);
      Timeout timeout0 = new Timeout((-251L), atMost0);
      Timer timer0 = new Timer((-251L));
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-251L), (-2265L), timeout0, true, timer0);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-251L), long0);
      assertEquals((-2265L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timeout timeout0 = new Timeout(1L, atMost0);
      Timer timer0 = new Timer(647L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1937L), timeout0, true, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
      assertEquals((-1937L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AtMost atMost0 = new AtMost(0);
      Timeout timeout0 = new Timeout(1L, atMost0);
      Timer timer0 = new Timer(647L);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1937L), timeout0, true, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-1937L), long0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
  }
}
