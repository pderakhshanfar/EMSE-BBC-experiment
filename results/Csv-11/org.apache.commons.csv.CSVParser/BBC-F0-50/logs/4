* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.apache.commons.csv.CSVParser
* Starting Client-0
* Connecting to master process on port 3230
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-11/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 424
* Using seed 769521719
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 150 / 424
[MASTER] 20:36:14.192 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 20:36:14.193 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Map<K, V> : Type points to itself
* Search finished after 603s and 437 generations, 159635 statements, best individual has fitness: 127.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 103
* Number of covered goals: 89
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 74%
* Total number of goals: 80
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 94%
* Total number of goals: 16
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 64%
* Total number of goals: 90
* Number of covered goals: 58
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 51%
* Total number of goals: 45
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 13
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 74%
* Total number of goals: 80
* Number of covered goals: 59
* Generated 38 tests with total length 160
* Resulting test suite's coverage: 74% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 43%
* Compiling and checking tests
[MASTER] 20:46:09.999 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_21_1629233169963/org/apache/commons/csv/CSVParser_21_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_21_1629233169963/org/apache/commons/csv/CSVParser_21_tmp__ESTest_scaffolding.java]]
[MASTER] 20:46:10.000 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-11/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-11/target/classes
[MASTER] 20:46:10.000 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-11/target/classes
[MASTER] 20:46:10.004 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method getRecords in class org.apache.commons.csv.CSVParser cannot be applied to given types;
  required: T
  found: java.util.Collection<java.lang.Object>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Collection<java.lang.Object>
    upper bound(s): java.util.Collection<org.apache.commons.csv.CSVRecord>: 27
[MASTER] 20:46:10.004 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 20:46:10.005 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_21_1629233169963/org/apache/commons/csv/CSVParser_21_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Aug 17 20:46:09 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.Collection;
12: import org.apache.commons.csv.CSVFormat;
13: import org.apache.commons.csv.CSVParser;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class CSVParser_21_tmp__ESTest extends CSVParser_21_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       CSVFormat cSVFormat0 = CSVFormat.DEFAULT;
24:       CSVParser cSVParser0 = CSVParser.parse("format", cSVFormat0);
25:       // Undeclared exception!
26:       try { 
27:         cSVParser0.getRecords((Collection<Object>) null);
28:         fail("Expecting exception: NullPointerException");
29:       
30:       } catch(NullPointerException e) {
31:          //
32:          // no message in exception (getMessage() returned null)
33:          //
34:          verifyException("org.apache.commons.csv.CSVParser", e);
35:       }
36:   }
37: }
RegularFileObject[/tmp/EvoSuite_21_1629233169963/org/apache/commons/csv/CSVParser_21_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Aug 17 20:46:09 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVParser_21_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVParser"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVParser_21_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.Token",
70:       "org.apache.commons.csv.CSVRecord",
71:       "org.apache.commons.csv.Constants",
72:       "org.apache.commons.csv.Assertions",
73:       "org.apache.commons.csv.CSVParser$2",
74:       "org.apache.commons.csv.CSVParser$1",
75:       "org.apache.commons.csv.CSVFormat",
76:       "org.apache.commons.csv.Quote",
77:       "org.apache.commons.csv.Lexer",
78:       "org.apache.commons.csv.CSVParser",
79:       "org.apache.commons.csv.Token$Type",
80:       "org.apache.commons.csv.CSVPrinter",
81:       "org.apache.commons.csv.ExtendedBufferedReader"
82:     );
83:   } 
84: 
85:   private static void resetClasses() {
86:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVParser_21_tmp__ESTest_scaffolding.class.getClassLoader()); 
87: 
88:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
89:       "org.apache.commons.csv.CSVParser",
90:       "org.apache.commons.csv.CSVParser$1",
91:       "org.apache.commons.csv.Token$Type",
92:       "org.apache.commons.csv.CSVParser$2",
93:       "org.apache.commons.csv.Constants",
94:       "org.apache.commons.csv.CSVFormat",
95:       "org.apache.commons.csv.Token",
96:       "org.apache.commons.csv.Assertions",
97:       "org.apache.commons.csv.Lexer",
98:       "org.apache.commons.csv.ExtendedBufferedReader",
99:       "org.apache.commons.csv.CSVPrinter",
100:       "org.apache.commons.csv.CSVPrinter$1",
101:       "org.apache.commons.csv.CSVRecord",
102:       "org.apache.commons.csv.Quote"
103:     );
104:   }
105: }

[MASTER] 20:46:10.005 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CSVFormat cSVFormat0 = CSVFormat.DEFAULT;
CSVParser cSVParser0 = CSVParser.parse("format", cSVFormat0);
cSVParser0.getRecords((Collection<Object>) null);

[MASTER] 20:46:10.312 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_30_1629233170263/org/apache/commons/csv/CSVParser_30_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_30_1629233170263/org/apache/commons/csv/CSVParser_30_tmp__ESTest_scaffolding.java]]
[MASTER] 20:46:10.312 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-11/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-11/target/classes
[MASTER] 20:46:10.312 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-11/target/classes
[MASTER] 20:46:10.313 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method getRecords in class org.apache.commons.csv.CSVParser cannot be applied to given types;
  required: T
  found: java.util.Collection<java.lang.Object>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Collection<java.lang.Object>
    upper bound(s): java.util.Collection<org.apache.commons.csv.CSVRecord>: 25
[MASTER] 20:46:10.313 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 20:46:10.314 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_30_1629233170263/org/apache/commons/csv/CSVParser_30_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Aug 17 20:46:10 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import java.util.Collection;
11: import org.apache.commons.csv.CSVFormat;
12: import org.apache.commons.csv.CSVParser;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.junit.runner.RunWith;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
18: public class CSVParser_30_tmp__ESTest extends CSVParser_30_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       CSVFormat cSVFormat0 = CSVFormat.MYSQL;
23:       CSVParser cSVParser0 = CSVParser.parse("#9w-pJ2tkgnbxwZ<QW", cSVFormat0);
24:       cSVParser0.nextRecord();
25:       Collection<Object> collection0 = cSVParser0.getRecords((Collection<Object>) null);
26:       assertNull(collection0);
27:   }
28: }
RegularFileObject[/tmp/EvoSuite_30_1629233170263/org/apache/commons/csv/CSVParser_30_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Aug 17 20:46:10 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVParser_30_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVParser"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVParser_30_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.Token",
70:       "org.apache.commons.csv.CSVRecord",
71:       "org.apache.commons.csv.Constants",
72:       "org.apache.commons.csv.Assertions",
73:       "org.apache.commons.csv.CSVParser$2",
74:       "org.apache.commons.csv.CSVParser$1",
75:       "org.apache.commons.csv.CSVFormat",
76:       "org.apache.commons.csv.Quote",
77:       "org.apache.commons.csv.Lexer",
78:       "org.apache.commons.csv.CSVParser",
79:       "org.apache.commons.csv.Token$Type",
80:       "org.apache.commons.csv.CSVPrinter",
81:       "org.apache.commons.csv.ExtendedBufferedReader"
82:     );
83:   } 
84: 
85:   private static void resetClasses() {
86:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVParser_30_tmp__ESTest_scaffolding.class.getClassLoader()); 
87: 
88:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
89:       "org.apache.commons.csv.CSVParser",
90:       "org.apache.commons.csv.CSVParser$1",
91:       "org.apache.commons.csv.Token$Type",
92:       "org.apache.commons.csv.CSVParser$2",
93:       "org.apache.commons.csv.Constants",
94:       "org.apache.commons.csv.CSVFormat",
95:       "org.apache.commons.csv.Token",
96:       "org.apache.commons.csv.Assertions",
97:       "org.apache.commons.csv.Lexer",
98:       "org.apache.commons.csv.ExtendedBufferedReader",
99:       "org.apache.commons.csv.CSVPrinter",
100:       "org.apache.commons.csv.CSVPrinter$1",
101:       "org.apache.commons.csv.CSVRecord",
102:       "org.apache.commons.csv.Quote"
103:     );
104:   }
105: }

[MASTER] 20:46:10.314 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CSVFormat cSVFormat0 = CSVFormat.MYSQL;
CSVParser cSVParser0 = CSVParser.parse("#9w-pJ2tkgnbxwZ<QW", cSVFormat0);
cSVParser0.nextRecord();
Collection<Object> collection0 = cSVParser0.getRecords((Collection<Object>) null);
assertNull(collection0);


[MASTER] 20:46:11.410 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CSVParser_ESTest' to results/Csv-11/org.apache.commons.csv.CSVParser/BBC-F0-50/tests/4
* Done!

* Computation finished
