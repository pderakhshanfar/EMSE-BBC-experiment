* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-60
* Going to generate test cases for class: com.fasterxml.jackson.core.base.GeneratorBase
* Starting Client-0
* Connecting to master process on port 19712
* Analyzing classpath: 
  - subjects/buggy-versions/JacksonCore-18/target/classes
* Finished analyzing classpath
* Generating tests for class com.fasterxml.jackson.core.base.GeneratorBase
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1147
* Using seed 3125731799
* Starting evolution
bbc usage percentage is: 60%
* Initial Number of Goals in DynaMOSA = 759 / 1147
* Search finished after 601s and 2640 generations, 1359810 statements, best individual has fitness: 359.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 79%
* Total number of goals: 112
* Number of covered goals: 89
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 77%
* Total number of goals: 71
* Number of covered goals: 55
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 74%
* Total number of goals: 664
* Number of covered goals: 492
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 54%
* Total number of goals: 171
* Number of covered goals: 92
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 86%
* Total number of goals: 29
* Number of covered goals: 25
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 76%
* Total number of goals: 29
* Number of covered goals: 22
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 77%
* Total number of goals: 71
* Number of covered goals: 55
* Generated 87 tests with total length 555
* Resulting test suite's coverage: 69% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 07:00:43.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:43.288 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:43.602 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:43.898 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:44.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:44.279 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:44.474 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:44.687 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:44.882 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:45.096 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:45.322 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:45.485 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:46.346 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:46.599 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:46.815 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:47.011 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:47.241 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:47.464 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:47.665 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:47.863 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.029 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.425 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.575 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.749 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:48.918 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:49.058 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:49.207 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:49.415 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:49.713 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:49.903 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:00:50.419 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 07:01:01.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.SecurityException: Security manager blocks ("java.lang.RuntimePermission" "writeFileDescriptor")
java.lang.Thread.getStackTrace(Thread.java:1559)
org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
java.io.FileOutputStream.<init>(FileOutputStream.java:245)
org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
com.fasterxml.jackson.core.base.GeneratorBase_164_tmp__ESTest.test0(GeneratorBase_164_tmp__ESTest.java:29)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.lang.reflect.Method.invoke(Method.java:498)
org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:288)
org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:282)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.lang.Thread.run(Thread.java:748)

[MASTER] 07:01:01.609 [logback-1] WARN  JUnitAnalyzer - Failing test:
 BufferRecycler bufferRecycler0 = new BufferRecycler();
IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
FileDescriptor fileDescriptor0 = new FileDescriptor();
MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-2095), (ObjectCodec) null, mockFileOutputStream0);
JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.useDefaultPrettyPrinter();
assertEquals((-2095), jsonGenerator0.getFeatureMask());


* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'GeneratorBase_ESTest' to results/JacksonCore-18/com.fasterxml.jackson.core.base.GeneratorBase/BBC-F0-opt-60/tests/9
* Done!

* Computation finished
