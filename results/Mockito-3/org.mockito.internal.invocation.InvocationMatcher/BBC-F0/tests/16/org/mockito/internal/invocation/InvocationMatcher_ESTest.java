/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 10:42:12 GMT 2020
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.nio.charset.Charset;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.util.MockitoMethodProxy;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.MockitoMethod;
import org.mockito.internal.invocation.realmethod.DefaultRealMethod;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.Location;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, objectArray0, 0, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.hasSameMethod(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, objectArray0, (-5), defaultRealMethod0);
      invocationImpl0.ignoreForVerification();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocation0, invocationImpl0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      Object object0 = new Object();
      InvocationImpl invocationImpl0 = new InvocationImpl(object0, mockitoMethod0, objectArray0, 0, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocation0, invocationImpl0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, objectArray0, 2074, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Invocation invocation0 = invocationMatcher0.getInvocation();
      assertSame(invocation0, invocationImpl0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[12];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 42, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
      try { 
        invocationMatcher1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.reporting.PrintSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[12];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 36, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
      try { 
        invocationMatcher1.getMethod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[15];
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, objectArray0, 36, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
      try { 
        invocationMatcher1.getLocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        InvocationMatcher.createFrom((List<Invocation>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = new InvocationImpl(defaultRealMethod0, mockitoMethod0, objectArray0, (-5), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.captureArgumentsFrom(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null, (List<Matcher>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      Charset charset0 = Charset.defaultCharset();
      InvocationImpl invocationImpl0 = new InvocationImpl(charset0, mockitoMethod0, objectArray0, 2590, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Method method0 = invocationMatcher0.getMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      Vector<Invocation> vector0 = new Vector<Invocation>();
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 1, defaultRealMethod0);
      vector0.add((Invocation) invocationImpl0);
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(vector0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Invocation> vector0 = new Vector<Invocation>();
      List<InvocationMatcher> list0 = InvocationMatcher.createFrom(vector0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null, (Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[2];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 1, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.matches(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[12];
      InvocationImpl invocationImpl0 = new InvocationImpl(mockitoMethod0, mockitoMethod0, objectArray0, 42, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.toString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      Object[] objectArray0 = new Object[15];
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, objectArray0, 36, defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Location location0 = invocationMatcher0.getLocation();
      assertNotNull(location0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, (Object[]) null, (-602), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultRealMethod defaultRealMethod0 = new DefaultRealMethod((MockitoMethodProxy) null);
      MockitoMethod mockitoMethod0 = mock(MockitoMethod.class, new ViolatedAssumptionAnswer());
      doReturn((Method) null).when(mockitoMethod0).getJavaMethod();
      doReturn(false).when(mockitoMethod0).isVarArgs();
      InvocationImpl invocationImpl0 = new InvocationImpl((Object) null, mockitoMethod0, (Object[]) null, (-602), defaultRealMethod0);
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.hasSimilarMethod(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }
}
