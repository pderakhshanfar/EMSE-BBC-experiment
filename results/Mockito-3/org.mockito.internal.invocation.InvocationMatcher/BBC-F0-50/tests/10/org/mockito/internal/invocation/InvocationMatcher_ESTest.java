/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 06:59:17 GMT 2021
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.hamcrest.core.IsInstanceOf;
import org.hamcrest.core.StringContains;
import org.junit.runner.RunWith;
import org.mockito.internal.invocation.InvocationImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.matchers.LocalizedMatcher;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.Location;
import org.mockito.stubbing.Answer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Class<Annotation> class0 = Annotation.class;
      Matcher<Annotation> matcher0 = IsInstanceOf.any(class0);
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher(matcher0);
      localizedMatcher0.getLocation();
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
      try { 
        invocationMatcher1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.reporting.PrintSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      doReturn((Method) null).when(invocationImpl0).getMethod();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.hasSimilarMethod(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      doReturn((Method) null, (Method) null).when(invocationImpl0).getMethod();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.hasSameMethod(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      // Undeclared exception!
      try { 
        invocationMatcher1.getMethod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher((Invocation) null, list0);
      Answer<StringContains> answer0 = (Answer<StringContains>) mock(Answer.class, new ViolatedAssumptionAnswer());
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher1, answer0);
      // Undeclared exception!
      try { 
        stubbedInvocationMatcher0.getLocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        InvocationMatcher.createFrom((List<Invocation>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      // Undeclared exception!
      try { 
        invocationMatcher0.captureArgumentsFrom((Invocation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null, (List<Matcher>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher((Invocation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<InvocationImpl> arrayList0 = new ArrayList<InvocationImpl>();
      ArrayList<Invocation> arrayList1 = new ArrayList<Invocation>(arrayList0);
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationImpl0).getArguments();
      arrayList1.add((Invocation) invocationImpl0);
      // Undeclared exception!
      try { 
        InvocationMatcher.createFrom(arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<InvocationImpl> arrayList0 = new ArrayList<InvocationImpl>();
      ArrayList<Invocation> arrayList1 = new ArrayList<Invocation>(arrayList0);
      InvocationMatcher.createFrom(arrayList1);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) arrayList1;
      InvocationImpl[] invocationImplArray0 = new InvocationImpl[6];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      doReturn(arrayList1, (Object) null).when(invocationImpl0).getMock();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      boolean boolean0 = invocationMatcher0.matches(invocationImpl0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<InvocationImpl> arrayList0 = new ArrayList<InvocationImpl>();
      ArrayList<Invocation> arrayList1 = new ArrayList<Invocation>(arrayList0);
      Object[] objectArray0 = new Object[1];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn((Object[]) null).when(invocationImpl0).getArguments();
      InvocationMatcher invocationMatcher0 = null;
      try {
        invocationMatcher0 = new InvocationMatcher(invocationImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.ArgumentsProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      InvocationImpl invocationImpl0 = mock(InvocationImpl.class, new ViolatedAssumptionAnswer());
      doReturn(objectArray0).when(invocationImpl0).getArguments();
      doReturn((Location) null).when(invocationImpl0).getLocation();
      doReturn((String) null).when(invocationImpl0).toString();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocationImpl0);
      Answer<StringContains> answer0 = (Answer<StringContains>) mock(Answer.class, new ViolatedAssumptionAnswer());
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, answer0);
      Location location0 = stubbedInvocationMatcher0.getLocation();
      assertNull(location0);
  }
}
