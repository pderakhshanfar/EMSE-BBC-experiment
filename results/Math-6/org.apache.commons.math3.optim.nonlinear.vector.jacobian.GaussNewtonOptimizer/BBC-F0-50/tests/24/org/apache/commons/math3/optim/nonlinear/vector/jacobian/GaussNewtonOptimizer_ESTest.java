/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 06:33:40 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.vector.jacobian;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.PointVectorValuePair;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleVectorValueChecker;
import org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GaussNewtonOptimizer_ESTest extends GaussNewtonOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false, (ConvergenceChecker<PointVectorValuePair>) null);
      // Undeclared exception!
      try { 
        gaussNewtonOptimizer0.doOptimize();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimplePointChecker<PointVectorValuePair> simplePointChecker0 = new SimplePointChecker<PointVectorValuePair>((-1342.97), (-1342.97));
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(false, simplePointChecker0);
      // Undeclared exception!
      try { 
        gaussNewtonOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleVectorValueChecker simpleVectorValueChecker0 = new SimpleVectorValueChecker(474.0, 474.0);
      GaussNewtonOptimizer gaussNewtonOptimizer0 = new GaussNewtonOptimizer(simpleVectorValueChecker0);
      assertEquals(0.0, gaussNewtonOptimizer0.getChiSquare(), 0.01);
  }
}
