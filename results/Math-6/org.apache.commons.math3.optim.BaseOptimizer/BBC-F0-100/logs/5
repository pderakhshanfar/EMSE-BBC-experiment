* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.math3.optim.BaseOptimizer
* Starting Client-0
* Connecting to master process on port 19593
* Analyzing classpath: 
  - subjects/buggy-versions/Math-6/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math3.optim.BaseOptimizer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 141
* Using seed 1594840354
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 71 / 141
[MASTER] 01:11:21.769 [logback-2] ERROR TestCluster - Failed to check cache for org.apache.commons.math3.optim.ConvergenceChecker<PAIR> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementIterationCount()V: Line 174: 412462,385421,0| Number of FF evals: 190739
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V: I23 Branch 2 IFEQ L191 - false: 244,0,0| Number of FF evals: 4850
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V: Line 162: 3828,0,0| Number of FF evals: 1912
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(I)V: Line 228: 412462,385421,0| Number of FF evals: 190739
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementIterationCount()V: Line 173: 412462,385421,0| Number of FF evals: 190739
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V: Line 163: 3828,0,0| Number of FF evals: 1912
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(I)V: Line 213: 9065,0,0| Number of FF evals: 4407
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V: root-Branch: 3828,0,0| Number of FF evals: 2096
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.incrementIterationCount()V: root-Branch: 412462,385421,0| Number of FF evals: 190733
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V: I39 Branch 3 IFEQ L195 - true: 68,0,0| Number of FF evals: 105619
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(I)V: root-Branch: 412462,385421,0| Number of FF evals: 190733
Number of times BBC is called, activated, and useful for org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(I)V: root-Branch: 9065,0,0| Number of FF evals: 4514
* Search finished after 604s and 4525 generations, 819381 statements, best individual has fitness: 38.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 30
* Number of covered goals: 27
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 17
* Number of covered goals: 15
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 82%
* Total number of goals: 39
* Number of covered goals: 32
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 31%
* Total number of goals: 16
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 55%
* Total number of goals: 11
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 45%
* Total number of goals: 11
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 17
* Number of covered goals: 15
* Generated 9 tests with total length 32
* Resulting test suite's coverage: 66% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 5%
* Compiling and checking tests
[MASTER] 01:21:32.858 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:33.640 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:34.161 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:34.508 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:35.134 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:35.835 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:36.234 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:36.535 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:37.067 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:37.720 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 01:21:38.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'BaseOptimizer_ESTest' to results/Math-6/org.apache.commons.math3.optim.BaseOptimizer/BBC-F0-100/tests/5
* Done!

* Computation finished
