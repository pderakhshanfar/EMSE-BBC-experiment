/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 19 18:36:30 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.ISAACRandom;
import org.apache.commons.math3.random.MersenneTwister;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(2, 2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2447), (-429), true, (-2447), (-429), well44497a0, false, simplePointChecker0);
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (double) 2;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = new double[7];
      doubleArray1[1] = 0.1;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray1, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[2] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 out of [0, 1.9] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(2, 2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2447), (-429), true, (-2447), (-429), well44497a0, false, simplePointChecker0);
      double[] doubleArray0 = new double[7];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) (-429);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray1, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[2] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double[] doubleArray1 = new double[7];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      MersenneTwister mersenneTwister0 = new MersenneTwister((long) 1155);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0.0, (-3343));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2611, 0.0, false, 1421, 2269, mersenneTwister0, false, simplePointChecker0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 3
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2211, 1448);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 1448, true, 5, 32, (RandomGenerator) null, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      double[] doubleArray0 = new double[2];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(0);
      optimizationDataArray0[5] = (OptimizationData) simpleBounds0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[6] = (OptimizationData) initialGuess0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2
         //
         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2756, 1195.57767106, false, 1, 0, well44497a0, false, (ConvergenceChecker<PointValuePair>) null);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData((OptimizationData[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.BaseOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-5504), (-5504), false, (-5504), (-5504), (RandomGenerator) null, false, (ConvergenceChecker<PointValuePair>) null);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(23);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertEquals(0, doubleArray1.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      MersenneTwister mersenneTwister0 = new MersenneTwister((long) (-3343));
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(4107.26043062, 0.0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(417, 1.3, false, 2145608054, 1155, mersenneTwister0, false, simplePointChecker0);
      double[] doubleArray1 = new double[7];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 7
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-2447));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,447 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = (-1997.360446839623);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,997.36 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(3251.0077328, (-1853));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2, 2, true, (-142), (-1853), well19937c0, true, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(110);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1.0E7, (-2447));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2447), (-2447), false, (-2447), 110, well19937c0, false, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(30, 30);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(30, 30, true, 30, 30, well1024a0, true, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(1099.3282517947, (-559.1528));
      Well44497a well44497a0 = new Well44497a(0L);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-448), (-448), true, (-448), 1517, well44497a0, true, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ISAACRandom iSAACRandom0 = new ISAACRandom();
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-99516416), 1.0E-13, true, 0, 30, iSAACRandom0, false, (ConvergenceChecker<PointValuePair>) null);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertFalse(list0.contains(1.0E-13));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MersenneTwister mersenneTwister0 = new MersenneTwister(3690);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(898.575968, (-1138.9));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(3690, 3690, false, 3690, 3690, mersenneTwister0, true, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(3690);
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(2, optimizationDataArray0.length);
  }
}
