/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 23 15:20:10 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.JDKRandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.random.Well44497b;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2, 2, 4);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 2;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 4;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray1);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(868, 100000.0, true, 330, (-93), jDKRandomGenerator0, false, simpleValueChecker0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      optimizationDataArray0[6] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 4 out of [0, 2] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2728);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1855.5897767140746), 2728);
      double[] doubleArray0 = new double[7];
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2146428776), 897.9856, false, (-2146428776), 2728, well44497a0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(7);
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) initialGuess0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      int[] intArray0 = new int[7];
      Well19937a well19937a0 = new Well19937a(intArray0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(665.2153795711112, (-1673.698), 1325);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(5, 5, false, 30, 30, well19937a0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      double[] doubleArray1 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(0, 0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, (-931.2900373814371), true, 0, 0, jDKRandomGenerator0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(2, optimizationDataArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 1557;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1051.43), (-197.941813054947));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2146721588, 90, true, 2390, 1752, jDKRandomGenerator0, true, simplePointChecker0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,557 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(13, (-2345.594143894));
      Well44497b well44497b0 = new Well44497b((-629));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(13, (-2345.594143894), true, 2146485746, (-629), well44497b0, true, simplePointChecker0);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[4];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1031.28515987924, (-1568));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-431), 1031.28515987924, true, (-1568), (-1568), well1024a0, true, simpleValueChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(1878);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(1878, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertArrayEquals(new double[] {}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(828.8452433228708, 1327, 3478);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(3996, 1304.0, true, 3478, 1327, jDKRandomGenerator0, false, simpleValueChecker0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[6] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[7] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-197.941813054947), (-197.941813054947));
      Well512a well512a0 = new Well512a(1327);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1327, 1327, true, 10, 10, well512a0, true, simplePointChecker0);
      double[] doubleArray1 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 6
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-4953));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4,953 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[2] = (-927.94);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -927.94 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2728);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1855.5897767140746), 2728);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2146428776), 897.9856, false, (-2146428776), 2728, well44497a0, false, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Well512a well512a0 = new Well512a(2585L);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-346), (-737.28), 2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1623), (-346), false, 4, (-4196), well512a0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2728);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1855.5897767140746), 2728);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2146428776), 897.9856, false, (-2146428776), 2728, well44497a0, false, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((long) 2728);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1855.5897767140746), 2728);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2146428776), 897.9856, false, (-2146428776), 2728, well44497a0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(3478);
      JDKRandomGenerator jDKRandomGenerator0 = new JDKRandomGenerator();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(828.8452433228708, 1327, 3478);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(3996, 1304.0, true, 3478, 1327, jDKRandomGenerator0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }
}
