/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 17 09:10:55 GMT 2020
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(2, 0.6471850872039795, 2281);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2, 2, false, 2, 2281, well44497a0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      double[] doubleArray0 = new double[2];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(2);
      optimizationDataArray0[7] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(110, 110.0, 110);
      Well1024a well1024a0 = new Well1024a();
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(110, (-1245.445), false, 5, 32, well1024a0, false, simplePointChecker0);
      double[] doubleArray1 = new double[2];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 3 != 2
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Well512a well512a0 = new Well512a((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-145.554807783643), 0.2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1838, 1838, false, (-1831), 1838, well512a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertNull(cMAESOptimizer0.getGoalType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 99;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      Well1024a well1024a0 = new Well1024a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-110.0), 1.1934680816813702E125);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(3423, 99.0, true, 99, 3423, well1024a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 99 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((long) 99);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(99, 99);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(99, 99, true, 99, 99, well19937c0, true, simpleValueChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData((OptimizationData[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.BaseOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((long) 99);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(99, 99);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(99, 99, true, 99, 99, well19937c0, true, simpleValueChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(99);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(99, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertNotSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (double) 99;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      Well1024a well1024a0 = new Well1024a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(99.0, 99);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(99, 99.0, false, 99, 99, well1024a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[4] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 99 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      double[] doubleArray1 = new double[2];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      Well1024a well1024a0 = new Well1024a();
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(99.0, 1.1934680816813702E125);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(99, 99.0, false, 99, 99, well1024a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 10
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-253));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -253 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1313.8717);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,313.872 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well512a well512a0 = new Well512a((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-145.554807783643), 0.2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1838, 1838, false, (-1831), 1838, well512a0, false, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well512a well512a0 = new Well512a((long) 2053);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2053, 2053);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2053, 2053, true, 2053, 0, well512a0, false, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Well512a well512a0 = new Well512a((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-145.554807783643), 0.2);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1838, 1838, false, (-1831), 1838, well512a0, false, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a((long) 131072);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1000.0, 1.0E-11);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(131072, 131072, true, 131072, (-1), well19937a0, true, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertFalse(list0.contains(1.0E-11));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((long) 66);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(66, 66);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(66, 66, false, 66, 66, well19937c0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[1];
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(66);
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }
}
