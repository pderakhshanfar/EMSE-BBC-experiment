/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 09:54:26 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.RandomAdaptor;
import org.apache.commons.math3.random.Well19937a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497a;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(8, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      double[] doubleArray0 = new double[8];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) initialGuess0;
      optimizationDataArray0[6] = (OptimizationData) simpleBounds0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(8, optimizationDataArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(10);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(10, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 10.0, false, 10, 10, well19937c0, false, simplePointChecker0);
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = new double[5];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 5
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-2357));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2,357 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0.3, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData((OptimizationData[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.BaseOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Well512a well512a0 = new Well512a(590L);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-370.555389200665), (-370.555389200665));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2045222521, (-7.225259028588793E-93), true, (-2146420010), 339, well512a0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      double[] doubleArray0 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(271);
      optimizationDataArray0[2] = (OptimizationData) simpleBounds0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 271 != 6
         //
         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0.3, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(8);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a((long) 2450);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2450, 1426);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2450, 706.71946292, false, 1426, 1426, well19937a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 706.71946292;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[5] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[7] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 706.719 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(8, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      double[] doubleArray0 = new double[8];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      SimpleBounds simpleBounds0 = SimpleBounds.unbounded(8);
      optimizationDataArray0[6] = (OptimizationData) simpleBounds0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[7] = (OptimizationData) initialGuess0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(8, optimizationDataArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(10);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(10, 10);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 10, false, 10, 10, well19937c0, true, simplePointChecker0);
      double[] doubleArray0 = new double[1];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[2];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      optimizationDataArray0[4] = (OptimizationData) initialGuess0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 1
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Well19937a well19937a0 = new Well19937a((long) 2450);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2450, 1426);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2450, 706.71946292, false, 1426, 1426, well19937a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      double[] doubleArray0 = new double[2];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[5] = (OptimizationData) initialGuess0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-4482.5);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -4,482.5 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0.3, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(8, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertFalse(list0.contains(3181.14));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(8, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Well512a well512a0 = new Well512a();
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1297, 1160.4584606569445, true, 1297, 1297, well512a0, true, (ConvergenceChecker<PointValuePair>) null);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[0];
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a((-2797));
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-2797), (-2797));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, 0, 0, well44497a0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(8);
      RandomAdaptor randomAdaptor0 = new RandomAdaptor(well19937c0);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(0.3, 0.006);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(10, 3181.14, false, 10, 10, randomAdaptor0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[1];
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(Integer.MAX_VALUE);
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertNull(cMAESOptimizer0.getGoalType());
  }
}
