/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 19:26:13 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well512a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(1799);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1892.8011, 1799);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, (-2143926402), 1042, well19937c0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[8];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 8
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-212));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -212 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a(2423);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(0.0, 6.283185307179586);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, Double.POSITIVE_INFINITY, false, 0, 2423, well1024a0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[2];
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(0, 1496);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, 1496, 0, well19937c0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[0];
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray1, doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      optimizationDataArray0[6] = (OptimizationData) simpleBounds0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.optim.BaseMultivariateOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a(17);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(963, (-4704.9441865), 17);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(963, 963, false, 963, 963, well1024a0, false, simpleValueChecker0);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(3357, 1496);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, 1496, 3357, well19937c0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[3];
      doubleArray0[2] = (double) 1496;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,496 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((int[]) null);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(3357, 1496);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, false, 1496, 3357, well19937c0, false, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[3];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[4] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      Well512a well512a0 = new Well512a(1073741824L);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(9.081571104550255E191, (-1415.0));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1082), 2649, false, (-1949), 1069, well512a0, true, simplePointChecker0);
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[6];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertNull(cMAESOptimizer0.getGoalType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(1511);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1511, 1511);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1511, 1511, false, 1511, 1511, well19937c0, false, simpleValueChecker0);
      double[] doubleArray0 = new double[3];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      double[] doubleArray1 = new double[9];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      optimizationDataArray0[3] = (OptimizationData) initialGuess0;
      optimizationDataArray0[5] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 9 != 3
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(26);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-2521), (-1.0), 26);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2521), 0.0, true, 2432, (-1451), (RandomGenerator) null, true, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[2] = (-1791.1);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1,791.1 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertNotSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well512a well512a0 = new Well512a((-1686L));
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-1415.0), 0.0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, (-2052.0), true, 0, 137, well512a0, false, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[8];
      Well512a well512a0 = new Well512a(intArray0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(2294.5412234, 0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 0, true, 0, 28, well512a0, false, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertFalse(list0.contains(2294.5412234));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>((-2521), (-1.0), 26);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-2521), 0.0, true, 2432, (-1451), (RandomGenerator) null, true, simplePointChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c(0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-44.553370215), 219.0, 224);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(219, 219.0, true, 219, 0, well19937c0, true, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(26);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(26, int0);
  }
}
