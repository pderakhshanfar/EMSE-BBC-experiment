/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 20:44:34 GMT 2021
 */

package org.apache.commons.math3.optim.nonlinear.scalar.noderiv;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.optim.ConvergenceChecker;
import org.apache.commons.math3.optim.InitialGuess;
import org.apache.commons.math3.optim.OptimizationData;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.optim.SimpleBounds;
import org.apache.commons.math3.optim.SimplePointChecker;
import org.apache.commons.math3.optim.SimpleValueChecker;
import org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer;
import org.apache.commons.math3.random.MersenneTwister;
import org.apache.commons.math3.random.RandomGenerator;
import org.apache.commons.math3.random.Well1024a;
import org.apache.commons.math3.random.Well19937c;
import org.apache.commons.math3.random.Well44497a;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CMAESOptimizer_ESTest extends CMAESOptimizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[1];
      MersenneTwister mersenneTwister0 = new MersenneTwister(intArray0);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(1.725039737424264E-18, (-2525.35875499));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(1823, 2297.0469500625154, true, 930, 930, mersenneTwister0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-2525.35875499);
      double[] doubleArray1 = new double[1];
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray1);
      optimizationDataArray0[0] = (OptimizationData) simpleBounds0;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray1);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(1775);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(468.3142526508119, 1.8307188599677033E-8, 16);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2140844115, 1039.2414, true, (-1284), 1775, well44497a0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
      assertEquals(9, optimizationDataArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a();
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1234), 2370.3816, false, 495, 650, well44497a0, true, (ConvergenceChecker<PointValuePair>) null);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[1];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) initialGuess0;
      double[] doubleArray1 = new double[2];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 2 != 1
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(4312, 1.0E-12, false, 0, 0, (RandomGenerator) null, false, (ConvergenceChecker<PointValuePair>) null);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[9];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_Sigma0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.parseOptimizationData(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(81);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer((-1), (-1), true, 120, (-1), well44497a0, true, (ConvergenceChecker<PointValuePair>) null);
      // Undeclared exception!
      try { 
        cMAESOptimizer0.doOptimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      double[] doubleArray1 = cMAESOptimizer_Sigma0.getSigma();
      assertNotSame(doubleArray1, doubleArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Well1024a well1024a0 = new Well1024a(205);
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(2370.3816, 0.0, 14);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(20, 20, false, 1033, 14, well1024a0, false, simplePointChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[5];
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = (double) 20;
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
      optimizationDataArray0[1] = (OptimizationData) cMAESOptimizer_Sigma0;
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      optimizationDataArray0[2] = (OptimizationData) initialGuess0;
      SimpleBounds simpleBounds0 = new SimpleBounds(doubleArray0, doubleArray0);
      optimizationDataArray0[3] = (OptimizationData) simpleBounds0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 20 out of [0, 0] range
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      InitialGuess initialGuess0 = new InitialGuess(doubleArray0);
      Well44497a well44497a0 = new Well44497a(3198L);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker((-153.0), 1.880755298741952E-9);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(16, 0L, true, 16, 282, well44497a0, true, simpleValueChecker0);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[7];
      optimizationDataArray0[0] = (OptimizationData) initialGuess0;
      double[] doubleArray1 = new double[0];
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray1);
      optimizationDataArray0[3] = (OptimizationData) cMAESOptimizer_Sigma0;
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(4312, 1.0E-12, false, 0, 0, (RandomGenerator) null, false, (ConvergenceChecker<PointValuePair>) null);
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(32);
      OptimizationData[] optimizationDataArray0 = new OptimizationData[3];
      optimizationDataArray0[0] = (OptimizationData) cMAESOptimizer_PopulationSize0;
      // Undeclared exception!
      try { 
        cMAESOptimizer0.optimize(optimizationDataArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = null;
      try {
        cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize((-913));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -913 is smaller than, or equal to, the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = (double) (-426);
      CMAESOptimizer.Sigma cMAESOptimizer_Sigma0 = null;
      try {
        cMAESOptimizer_Sigma0 = new CMAESOptimizer.Sigma(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -426 is smaller than the minimum (0)
         //
         verifyException("org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(1775);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(468.3142526508119, 1.8307188599677033E-8, 16);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2140844115, 1039.2414, true, (-1284), 1775, well44497a0, true, simpleValueChecker0);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsMeanHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Well44497a well44497a0 = new Well44497a(1775);
      SimpleValueChecker simpleValueChecker0 = new SimpleValueChecker(468.3142526508119, 1.8307188599677033E-8, 16);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(2140844115, 1039.2414, true, (-1284), 1775, well44497a0, true, simpleValueChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsFitnessHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Well19937c well19937c0 = new Well19937c((long) 1820);
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(204, 10.0, true, 1, 1820, well19937c0, true, (ConvergenceChecker<PointValuePair>) null);
      List<RealMatrix> list0 = cMAESOptimizer0.getStatisticsDHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MersenneTwister mersenneTwister0 = new MersenneTwister();
      SimplePointChecker<PointValuePair> simplePointChecker0 = new SimplePointChecker<PointValuePair>(372.692667839, (-3539.57013502));
      CMAESOptimizer cMAESOptimizer0 = new CMAESOptimizer(0, 372.692667839, true, 0, 10, mersenneTwister0, false, simplePointChecker0);
      List<Double> list0 = cMAESOptimizer0.getStatisticsSigmaHistory();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CMAESOptimizer.PopulationSize cMAESOptimizer_PopulationSize0 = new CMAESOptimizer.PopulationSize(32);
      int int0 = cMAESOptimizer_PopulationSize0.getPopulationSize();
      assertEquals(32, int0);
  }
}
