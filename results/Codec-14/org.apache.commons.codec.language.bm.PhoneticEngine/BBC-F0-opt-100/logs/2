* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-100
* Going to generate test cases for class: org.apache.commons.codec.language.bm.PhoneticEngine
* Starting Client-0
* Connecting to master process on port 19612
* Analyzing classpath: 
  - subjects/buggy-versions/Codec-14/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.codec.language.bm.PhoneticEngine
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 554
* Using seed 2629177044
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 156 / 554
[MASTER] 10:54:00.917 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 10:54:00.918 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 10:57:07.304 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
* Search finished after 601s and 5401 generations, 1521113 statements, best individual has fitness: 481.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 20%
* Total number of goals: 156
* Number of covered goals: 31
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 17%
* Total number of goals: 84
* Number of covered goals: 14
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 9%
* Total number of goals: 179
* Number of covered goals: 17
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 0%
* Total number of goals: 17
* Number of covered goals: 0
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 41%
* Total number of goals: 17
* Number of covered goals: 7
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 29%
* Total number of goals: 17
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 15%
* Total number of goals: 84
* Number of covered goals: 13
* Generated 9 tests with total length 36
* Resulting test suite's coverage: 15% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 2%
* Compiling and checking tests
[MASTER] 11:04:04.469 [logback-2] ERROR ClassStateSupport - Could not initialize org.apache.commons.codec.language.bm.Rule: null
[MASTER] 11:04:04.494 [logback-2] ERROR ClassStateSupport - Could not initialize org.apache.commons.codec.language.bm.Lang: Could not initialize class org.apache.commons.codec.language.bm.Languages
[MASTER] 11:04:04.495 [logback-2] ERROR ClassStateSupport - Could not initialize org.apache.commons.codec.language.bm.Languages: Could not initialize class org.apache.commons.codec.language.bm.Languages
[MASTER] 11:04:04.504 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.apache.commons.codec.language.bm.Languages
[MASTER] 11:04:04.504 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.apache.commons.codec.language.bm.Lang
[MASTER] 11:04:04.505 [logback-2] ERROR ClassResetter - java.lang.NoClassDefFoundError: Could not initialize class org.apache.commons.codec.language.bm.Rule
[MASTER] 11:04:04.507 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:04.626 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:04.711 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:04.799 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:04.882 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:04.976 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:05.112 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:05.180 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:05.252 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:05.521 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 11:04:05.653 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'PhoneticEngine_ESTest' to results/Codec-14/org.apache.commons.codec.language.bm.PhoneticEngine/BBC-F0-opt-100/tests/2
* Done!

* Computation finished
