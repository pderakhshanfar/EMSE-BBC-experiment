* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0
* Going to generate test cases for class: org.apache.commons.csv.CSVFormat
* Starting Client-0
* Connecting to master process on port 18431
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-15/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVFormat
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 3008
* Using seed 2122062828
* Starting evolution
* Initial Number of Goals in DynaMOSA = 1645 / 3008
[MASTER] 06:13:00.677 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - CurrentThread has not been set!
[MASTER] 06:13:00.679 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI Reaper,5,system]
 -> java.lang.Object.wait(Native Method)
 -> java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 -> java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 -> sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:351)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.682 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI TCP Connection(3)-127.0.0.1,5,RMI Runtime]
 -> java.lang.Thread.dumpThreads(Native Method)
 -> java.lang.Thread.getAllStackTraces(Thread.java:1610)
 -> org.evosuite.testcase.execution.ExecutionTracer.isThreadNeqCurrentThread(ExecutionTracer.java:214)
 -> org.evosuite.testcase.execution.ExecutionTracer.returnValue(ExecutionTracer.java:311)
 -> org.apache.commons.csv.CSVFormat.toStringArray(CSVFormat.java:1347)
 -> org.apache.commons.csv.CSVFormat.<init>(CSVFormat.java:644)
 -> org.apache.commons.csv.CSVFormat.<clinit>(CSVFormat.java)
 -> org.apache.commons.csv.CSVFormat$Predefined.<clinit>(CSVFormat.java)
 -> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 -> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 -> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 -> java.lang.reflect.Method.invoke(Method.java:498)
 -> java.lang.Class.getEnumConstantsShared(Class.java:3320)
 -> java.lang.Class.getEnumConstants(Class.java:3297)
 -> org.evosuite.testcase.statements.EnumPrimitiveStatement.readObject(EnumPrimitiveStatement.java:264)
 -> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 -> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 -> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 -> java.lang.reflect.Method.invoke(Method.java:498)
 -> java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2295)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> java.util.ArrayList.readObject(ArrayList.java:799)
 -> sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
 -> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 -> java.lang.reflect.Method.invoke(Method.java:498)
 -> java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2295)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2404)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2328)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2404)
 -> java.io.ObjectInputStream.defaultReadObject(ObjectInputStream.java:632)
 -> org.evosuite.testcase.DefaultTestCase.readObject(DefaultTestCase.java:1103)
 -> sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 -> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
 -> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 -> java.lang.reflect.Method.invoke(Method.java:498)
 -> java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2295)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2404)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2328)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> java.util.ArrayList.readObject(ArrayList.java:799)
 -> sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
 -> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
 -> java.lang.reflect.Method.invoke(Method.java:498)
 -> java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1184)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2295)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2404)
 -> java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2328)
 -> java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2186)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1666)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> sun.rmi.server.UnicastRef.unmarshalValue(UnicastRef.java:327)
 -> sun.rmi.server.UnicastServerRef.unmarshalParametersUnchecked(UnicastServerRef.java:629)
 -> sun.rmi.server.UnicastServerRef.unmarshalParameters(UnicastServerRef.java:617)
 -> sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:338)
 -> sun.rmi.transport.Transport$1.run(Transport.java:200)
 -> sun.rmi.transport.Transport$1.run(Transport.java:197)
 -> java.security.AccessController.doPrivileged(Native Method)
 -> sun.rmi.transport.Transport.serviceCall(Transport.java:196)
 -> sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$18/1437055767.run(Unknown Source)
 -> java.security.AccessController.doPrivileged(Native Method)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.682 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[GC Daemon,2,system]
 -> java.lang.Object.wait(Native Method)
 -> sun.misc.GC$Daemon.run(GC.java:117)

[MASTER] 06:13:00.682 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[Thread-3,5,main]
 -> java.io.FileInputStream.readBytes(Native Method)
 -> java.io.FileInputStream.read(FileInputStream.java:255)
 -> java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 -> sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 -> sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 -> sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 -> java.io.InputStreamReader.read(InputStreamReader.java:184)
 -> java.io.BufferedReader.fill(BufferedReader.java:161)
 -> java.io.BufferedReader.read(BufferedReader.java:182)
 -> org.evosuite.utils.ExternalProcessGroupHandler$4.run(ExternalProcessGroupHandler.java:523)

[MASTER] 06:13:00.682 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[process reaper,10,system]
 -> java.lang.UNIXProcess.waitForProcessExit(Native Method)
 -> java.lang.UNIXProcess.lambda$initStreams$3(UNIXProcess.java:289)
 -> java.lang.UNIXProcess$$Lambda$14/764577347.run(Unknown Source)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.683 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[pool-3-thread-3,5,main]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2758)
 -> java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:3065)
 -> java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:3075)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1617)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:152)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:143)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.683 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[pool-2-thread-1,5,main]
 -> java.net.PlainSocketImpl.socketAccept(Native Method)
 -> java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 -> java.net.ServerSocket.implAccept(ServerSocket.java:560)
 -> java.net.ServerSocket.accept(ServerSocket.java:528)
 -> org.evosuite.utils.LoggingUtils$1.call(LoggingUtils.java:141)
 -> org.evosuite.utils.LoggingUtils$1.call(LoggingUtils.java:137)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.683 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI TCP Connection(2)-127.0.0.1,5,RMI Runtime]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.FilterInputStream.read(FilterInputStream.java:83)
 -> sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:555)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$18/1437055767.run(Unknown Source)
 -> java.security.AccessController.doPrivileged(Native Method)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.683 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI RenewClean-[127.0.0.1:18432],5,system]
 -> java.lang.Object.wait(Native Method)
 -> java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 -> sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:563)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.683 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI TCP Accept-17375,5,system]
 -> java.net.PlainSocketImpl.socketAccept(Native Method)
 -> java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 -> java.net.ServerSocket.implAccept(ServerSocket.java:560)
 -> java.net.ServerSocket.accept(ServerSocket.java:528)
 -> sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:405)
 -> sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:377)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI Scheduler(0),5,system]
 -> sun.misc.Unsafe.park(Native Method)
 -> java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 -> java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 -> java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[Reference Handler,10,system]
 -> java.lang.Object.wait(Native Method)
 -> java.lang.Object.wait(Object.java:502)
 -> java.lang.ref.Reference.tryHandlePending(Reference.java:191)
 -> java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[Thread-2,5,main]
 -> java.io.FileInputStream.readBytes(Native Method)
 -> java.io.FileInputStream.read(FileInputStream.java:255)
 -> java.io.BufferedInputStream.read1(BufferedInputStream.java:284)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:345)
 -> sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
 -> sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
 -> sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
 -> java.io.InputStreamReader.read(InputStreamReader.java:184)
 -> java.io.BufferedReader.fill(BufferedReader.java:161)
 -> java.io.BufferedReader.read(BufferedReader.java:182)
 -> org.evosuite.utils.ExternalProcessGroupHandler$3.run(ExternalProcessGroupHandler.java:482)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[pool-3-thread-1,5,main]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2758)
 -> java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:3065)
 -> java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:3075)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1617)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:152)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:143)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[Finalizer,8,system]
 -> java.lang.Object.wait(Native Method)
 -> java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 -> java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)
 -> java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216)

[MASTER] 06:13:00.684 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[pool-3-thread-2,5,main]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2758)
 -> java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:3065)
 -> java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:3075)
 -> java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1617)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:502)
 -> java.io.ObjectInputStream.readObject(ObjectInputStream.java:460)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:152)
 -> org.evosuite.utils.LoggingUtils$1$1.call(LoggingUtils.java:143)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[logback-1,5,main]
 -> java.lang.Thread.sleep(Native Method)
 -> ch.qos.logback.core.net.DefaultSocketConnector.call(DefaultSocketConnector.java:73)
 -> ch.qos.logback.core.net.AbstractSocketAppender.socketConnectionCouldBeEstablished(AbstractSocketAppender.java:209)
 -> ch.qos.logback.core.net.AbstractSocketAppender.connectSocketAndDispatchEvents(AbstractSocketAppender.java:189)
 -> ch.qos.logback.core.net.AbstractSocketAppender.access$000(AbstractSocketAppender.java:44)
 -> ch.qos.logback.core.net.AbstractSocketAppender$1.run(AbstractSocketAppender.java:150)
 -> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[Signal Dispatcher,9,system]

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI TCP Connection(1)-172.17.0.2,5,RMI Runtime]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.FilterInputStream.read(FilterInputStream.java:83)
 -> sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:555)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$18/1437055767.run(Unknown Source)
 -> java.security.AccessController.doPrivileged(Native Method)
 -> sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[RMI TCP Accept-18431,5,system]
 -> java.net.PlainSocketImpl.socketAccept(Native Method)
 -> java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:409)
 -> java.net.ServerSocket.implAccept(ServerSocket.java:560)
 -> java.net.ServerSocket.accept(ServerSocket.java:528)
 -> sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:405)
 -> sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:377)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[logback-3,5,main]
 -> java.lang.Thread.sleep(Native Method)
 -> ch.qos.logback.core.net.DefaultSocketConnector.call(DefaultSocketConnector.java:73)
 -> ch.qos.logback.core.net.AbstractSocketAppender.socketConnectionCouldBeEstablished(AbstractSocketAppender.java:209)
 -> ch.qos.logback.core.net.AbstractSocketAppender.connectSocketAndDispatchEvents(AbstractSocketAppender.java:189)
 -> ch.qos.logback.core.net.AbstractSocketAppender.access$000(AbstractSocketAppender.java:44)
 -> ch.qos.logback.core.net.AbstractSocketAppender$1.run(AbstractSocketAppender.java:150)
 -> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[logback-2,5,main]
 -> java.lang.Thread.sleep(Native Method)
 -> ch.qos.logback.core.net.DefaultSocketConnector.call(DefaultSocketConnector.java:73)
 -> ch.qos.logback.core.net.AbstractSocketAppender.socketConnectionCouldBeEstablished(AbstractSocketAppender.java:209)
 -> ch.qos.logback.core.net.AbstractSocketAppender.connectSocketAndDispatchEvents(AbstractSocketAppender.java:189)
 -> ch.qos.logback.core.net.AbstractSocketAppender.access$000(AbstractSocketAppender.java:44)
 -> ch.qos.logback.core.net.AbstractSocketAppender$1.run(AbstractSocketAppender.java:150)
 -> java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 -> java.util.concurrent.FutureTask.run(FutureTask.java:266)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 -> java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 -> java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 -> java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 -> java.lang.Thread.run(Thread.java:748)

[MASTER] 06:13:00.685 [RMI TCP Connection(3)-127.0.0.1] ERROR ExecutionTracer - Thread: Thread[main,5,main]
 -> java.net.SocketInputStream.socketRead0(Native Method)
 -> java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 -> java.net.SocketInputStream.read(SocketInputStream.java:171)
 -> java.net.SocketInputStream.read(SocketInputStream.java:141)
 -> java.io.BufferedInputStream.fill(BufferedInputStream.java:246)
 -> java.io.BufferedInputStream.read(BufferedInputStream.java:265)
 -> java.io.DataInputStream.readByte(DataInputStream.java:265)
 -> sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:240)
 -> sun.rmi.server.UnicastRef.invoke(UnicastRef.java:164)
 -> java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:235)
 -> java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:180)
 -> com.sun.proxy.$Proxy7.waitUntilFinished(Unknown Source)
 -> org.evosuite.utils.ExternalProcessGroupHandler.waitForResult(ExternalProcessGroupHandler.java:694)
 -> org.evosuite.executionmode.TestGeneration.generateTests(TestGeneration.java:515)
 -> org.evosuite.executionmode.TestGeneration.executeTestGeneration(TestGeneration.java:80)
 -> org.evosuite.EvoSuite.parseCommandLine(EvoSuite.java:349)
 -> org.evosuite.EvoSuite.main(EvoSuite.java:115)

* Search finished after 305s and 253 generations, 145232 statements, best individual has fitness: 193.0
* Minimizing test suite
[MASTER] 06:19:06.796 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 344
* Number of covered goals: 332
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 338
* Number of covered goals: 323
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 27
* Number of covered goals: 27
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 96%
* Total number of goals: 929
* Number of covered goals: 895
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 91%
* Total number of goals: 923
* Number of covered goals: 843
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 68
* Number of covered goals: 68
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 68
* Number of covered goals: 67
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 338
* Number of covered goals: 314
* Generated 268 tests with total length 5341
* Resulting test suite's coverage: 90% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 06:20:01.283 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7678166666666667% of time used, but only 5/268 tests minimized), falling back to using all assertions
[MASTER] 06:20:15.539 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 9%
* Compiling and checking tests
[MASTER] 06:20:36.313 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_36_1605594035066/org/apache/commons/csv/CSVFormat_36_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_36_1605594035066/org/apache/commons/csv/CSVFormat_36_tmp__ESTest_scaffolding.java]]
[MASTER] 06:20:36.313 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-15/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-15/target/classes
[MASTER] 06:20:36.313 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-15/target/classes
[MASTER] 06:20:36.336 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   variable cSVFormat_Predefined1
  location: class org.apache.commons.csv.CSVFormat_36_tmp__ESTest: 2533
[MASTER] 06:20:36.343 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_36_1605594035066/org/apache/commons/csv/CSVFormat_36_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Nov 17 06:20:35 GMT 2020
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.OutputStream;
12: import java.io.PrintStream;
13: import java.nio.charset.Charset;
14: import java.nio.file.Path;
15: import org.apache.commons.csv.CSVFormat;
16: import org.evosuite.runtime.EvoRunner;
17: import org.evosuite.runtime.EvoRunnerParameters;
18: import org.evosuite.runtime.mock.java.io.MockFile;
19: import org.evosuite.runtime.mock.java.io.MockPrintStream;
20: import org.junit.runner.RunWith;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
23: public class CSVFormat_36_tmp__ESTest extends CSVFormat_36_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;
28:       assertNotNull(cSVFormat0);
29:       assertFalse(cSVFormat0.getAutoFlush());
30:       assertNull(cSVFormat0.getCommentMarker());
31:       assertNull(cSVFormat0.getQuoteMode());
32:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
33:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
34:       assertTrue(cSVFormat0.isQuoteCharacterSet());
35:       assertEquals('|', cSVFormat0.getDelimiter());
36:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
37:       assertFalse(cSVFormat0.getSkipHeaderRecord());
38:       assertEquals("\n", cSVFormat0.getRecordSeparator());
39:       assertFalse(cSVFormat0.getTrailingDelimiter());
40:       assertFalse(cSVFormat0.isCommentMarkerSet());
41:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
42:       assertNull(cSVFormat0.getNullString());
43:       assertFalse(cSVFormat0.isNullStringSet());
44:       assertFalse(cSVFormat0.getTrim());
45:       assertTrue(cSVFormat0.isEscapeCharacterSet());
46:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
47:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
48:       
49:       CSVFormat cSVFormat1 = cSVFormat0.withRecordSeparator((String) null);
50:       assertNotNull(cSVFormat1);
51:       assertNotSame(cSVFormat0, cSVFormat1);
52:       assertNotSame(cSVFormat1, cSVFormat0);
53:       assertFalse(cSVFormat0.getAutoFlush());
54:       assertNull(cSVFormat0.getCommentMarker());
55:       assertNull(cSVFormat0.getQuoteMode());
56:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
57:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
58:       assertTrue(cSVFormat0.isQuoteCharacterSet());
59:       assertEquals('|', cSVFormat0.getDelimiter());
60:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
61:       assertFalse(cSVFormat0.getSkipHeaderRecord());
62:       assertEquals("\n", cSVFormat0.getRecordSeparator());
63:       assertFalse(cSVFormat0.getTrailingDelimiter());
64:       assertFalse(cSVFormat0.isCommentMarkerSet());
65:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
66:       assertNull(cSVFormat0.getNullString());
67:       assertFalse(cSVFormat0.isNullStringSet());
68:       assertFalse(cSVFormat0.getTrim());
69:       assertTrue(cSVFormat0.isEscapeCharacterSet());
70:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
71:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
72:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
73:       assertFalse(cSVFormat1.getTrim());
74:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
75:       assertNull(cSVFormat1.getRecordSeparator());
76:       assertNull(cSVFormat1.getQuoteMode());
77:       assertFalse(cSVFormat1.isCommentMarkerSet());
78:       assertNull(cSVFormat1.getCommentMarker());
79:       assertFalse(cSVFormat1.getSkipHeaderRecord());
80:       assertEquals('|', cSVFormat1.getDelimiter());
81:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
82:       assertTrue(cSVFormat1.isQuoteCharacterSet());
83:       assertFalse(cSVFormat1.isNullStringSet());
84:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
85:       assertTrue(cSVFormat1.isEscapeCharacterSet());
86:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
87:       assertFalse(cSVFormat1.getTrailingDelimiter());
88:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
89:       assertNull(cSVFormat1.getNullString());
90:       assertFalse(cSVFormat1.getAutoFlush());
91:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
92:       
93:       CSVFormat cSVFormat2 = cSVFormat1.withTrim(false);
94:       assertNotNull(cSVFormat2);
95:       assertNotSame(cSVFormat0, cSVFormat1);
96:       assertNotSame(cSVFormat0, cSVFormat2);
97:       assertNotSame(cSVFormat1, cSVFormat0);
98:       assertNotSame(cSVFormat1, cSVFormat2);
99:       assertNotSame(cSVFormat2, cSVFormat1);
100:       assertNotSame(cSVFormat2, cSVFormat0);
101:       assertFalse(cSVFormat0.getAutoFlush());
102:       assertNull(cSVFormat0.getCommentMarker());
103:       assertNull(cSVFormat0.getQuoteMode());
104:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
105:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
106:       assertTrue(cSVFormat0.isQuoteCharacterSet());
107:       assertEquals('|', cSVFormat0.getDelimiter());
108:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
109:       assertFalse(cSVFormat0.getSkipHeaderRecord());
110:       assertEquals("\n", cSVFormat0.getRecordSeparator());
111:       assertFalse(cSVFormat0.getTrailingDelimiter());
112:       assertFalse(cSVFormat0.isCommentMarkerSet());
113:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
114:       assertNull(cSVFormat0.getNullString());
115:       assertFalse(cSVFormat0.isNullStringSet());
116:       assertFalse(cSVFormat0.getTrim());
117:       assertTrue(cSVFormat0.isEscapeCharacterSet());
118:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
119:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
120:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
121:       assertFalse(cSVFormat1.getTrim());
122:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
123:       assertNull(cSVFormat1.getRecordSeparator());
124:       assertNull(cSVFormat1.getQuoteMode());
125:       assertFalse(cSVFormat1.isCommentMarkerSet());
126:       assertNull(cSVFormat1.getCommentMarker());
127:       assertFalse(cSVFormat1.getSkipHeaderRecord());
128:       assertEquals('|', cSVFormat1.getDelimiter());
129:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
130:       assertTrue(cSVFormat1.isQuoteCharacterSet());
131:       assertFalse(cSVFormat1.isNullStringSet());
132:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
133:       assertTrue(cSVFormat1.isEscapeCharacterSet());
134:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
135:       assertFalse(cSVFormat1.getTrailingDelimiter());
136:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
137:       assertNull(cSVFormat1.getNullString());
138:       assertFalse(cSVFormat1.getAutoFlush());
139:       assertFalse(cSVFormat2.getSkipHeaderRecord());
140:       assertNull(cSVFormat2.getCommentMarker());
141:       assertTrue(cSVFormat2.isEscapeCharacterSet());
142:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
143:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
144:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
145:       assertNull(cSVFormat2.getQuoteMode());
146:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
147:       assertNull(cSVFormat2.getNullString());
148:       assertFalse(cSVFormat2.isNullStringSet());
149:       assertFalse(cSVFormat2.getTrim());
150:       assertFalse(cSVFormat2.getAutoFlush());
151:       assertFalse(cSVFormat2.getTrailingDelimiter());
152:       assertFalse(cSVFormat2.isCommentMarkerSet());
153:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
154:       assertNull(cSVFormat2.getRecordSeparator());
155:       assertEquals('|', cSVFormat2.getDelimiter());
156:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
157:       assertTrue(cSVFormat2.isQuoteCharacterSet());
158:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
159:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
160:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
161:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
162:       
163:       CSVFormat cSVFormat3 = cSVFormat2.withCommentMarker('\'');
164:       assertNotNull(cSVFormat3);
165:       assertNotSame(cSVFormat0, cSVFormat1);
166:       assertNotSame(cSVFormat0, cSVFormat3);
167:       assertNotSame(cSVFormat0, cSVFormat2);
168:       assertNotSame(cSVFormat1, cSVFormat3);
169:       assertNotSame(cSVFormat1, cSVFormat0);
170:       assertNotSame(cSVFormat1, cSVFormat2);
171:       assertNotSame(cSVFormat2, cSVFormat1);
172:       assertNotSame(cSVFormat2, cSVFormat3);
173:       assertNotSame(cSVFormat2, cSVFormat0);
174:       assertNotSame(cSVFormat3, cSVFormat0);
175:       assertNotSame(cSVFormat3, cSVFormat2);
176:       assertNotSame(cSVFormat3, cSVFormat1);
177:       assertFalse(cSVFormat0.getAutoFlush());
178:       assertNull(cSVFormat0.getCommentMarker());
179:       assertNull(cSVFormat0.getQuoteMode());
180:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
181:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
182:       assertTrue(cSVFormat0.isQuoteCharacterSet());
183:       assertEquals('|', cSVFormat0.getDelimiter());
184:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
185:       assertFalse(cSVFormat0.getSkipHeaderRecord());
186:       assertEquals("\n", cSVFormat0.getRecordSeparator());
187:       assertFalse(cSVFormat0.getTrailingDelimiter());
188:       assertFalse(cSVFormat0.isCommentMarkerSet());
189:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
190:       assertNull(cSVFormat0.getNullString());
191:       assertFalse(cSVFormat0.isNullStringSet());
192:       assertFalse(cSVFormat0.getTrim());
193:       assertTrue(cSVFormat0.isEscapeCharacterSet());
194:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
195:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
196:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
197:       assertFalse(cSVFormat1.getTrim());
198:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
199:       assertNull(cSVFormat1.getRecordSeparator());
200:       assertNull(cSVFormat1.getQuoteMode());
201:       assertFalse(cSVFormat1.isCommentMarkerSet());
202:       assertNull(cSVFormat1.getCommentMarker());
203:       assertFalse(cSVFormat1.getSkipHeaderRecord());
204:       assertEquals('|', cSVFormat1.getDelimiter());
205:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
206:       assertTrue(cSVFormat1.isQuoteCharacterSet());
207:       assertFalse(cSVFormat1.isNullStringSet());
208:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
209:       assertTrue(cSVFormat1.isEscapeCharacterSet());
210:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
211:       assertFalse(cSVFormat1.getTrailingDelimiter());
212:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
213:       assertNull(cSVFormat1.getNullString());
214:       assertFalse(cSVFormat1.getAutoFlush());
215:       assertFalse(cSVFormat2.getSkipHeaderRecord());
216:       assertNull(cSVFormat2.getCommentMarker());
217:       assertTrue(cSVFormat2.isEscapeCharacterSet());
218:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
219:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
220:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
221:       assertNull(cSVFormat2.getQuoteMode());
222:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
223:       assertNull(cSVFormat2.getNullString());
224:       assertFalse(cSVFormat2.isNullStringSet());
225:       assertFalse(cSVFormat2.getTrim());
226:       assertFalse(cSVFormat2.getAutoFlush());
227:       assertFalse(cSVFormat2.getTrailingDelimiter());
228:       assertFalse(cSVFormat2.isCommentMarkerSet());
229:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
230:       assertNull(cSVFormat2.getRecordSeparator());
231:       assertEquals('|', cSVFormat2.getDelimiter());
232:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
233:       assertTrue(cSVFormat2.isQuoteCharacterSet());
234:       assertEquals('|', cSVFormat3.getDelimiter());
235:       assertFalse(cSVFormat3.getTrailingDelimiter());
236:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
237:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
238:       assertTrue(cSVFormat3.isCommentMarkerSet());
239:       assertFalse(cSVFormat3.getAutoFlush());
240:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
241:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
242:       assertNull(cSVFormat3.getNullString());
243:       assertFalse(cSVFormat3.isNullStringSet());
244:       assertFalse(cSVFormat3.getTrim());
245:       assertFalse(cSVFormat3.getSkipHeaderRecord());
246:       assertNull(cSVFormat3.getQuoteMode());
247:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
248:       assertTrue(cSVFormat3.isEscapeCharacterSet());
249:       assertTrue(cSVFormat3.isQuoteCharacterSet());
250:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
251:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
252:       assertNull(cSVFormat3.getRecordSeparator());
253:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
254:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
255:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
256:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
257:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
258:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
259:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
260:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
261:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
262:       
263:       Character character0 = Character.valueOf('Q');
264:       assertNotNull(character0);
265:       
266:       CSVFormat cSVFormat4 = cSVFormat3.withCommentMarker(character0);
267:       assertNotNull(cSVFormat4);
268:       assertNotSame(cSVFormat0, cSVFormat4);
269:       assertNotSame(cSVFormat0, cSVFormat1);
270:       assertNotSame(cSVFormat0, cSVFormat3);
271:       assertNotSame(cSVFormat0, cSVFormat2);
272:       assertNotSame(cSVFormat1, cSVFormat3);
273:       assertNotSame(cSVFormat1, cSVFormat4);
274:       assertNotSame(cSVFormat1, cSVFormat0);
275:       assertNotSame(cSVFormat1, cSVFormat2);
276:       assertNotSame(cSVFormat2, cSVFormat1);
277:       assertNotSame(cSVFormat2, cSVFormat4);
278:       assertNotSame(cSVFormat2, cSVFormat3);
279:       assertNotSame(cSVFormat2, cSVFormat0);
280:       assertNotSame(cSVFormat3, cSVFormat0);
281:       assertNotSame(cSVFormat3, cSVFormat2);
282:       assertNotSame(cSVFormat3, cSVFormat4);
283:       assertNotSame(cSVFormat3, cSVFormat1);
284:       assertNotSame(cSVFormat4, cSVFormat3);
285:       assertNotSame(cSVFormat4, cSVFormat2);
286:       assertNotSame(cSVFormat4, cSVFormat0);
287:       assertNotSame(cSVFormat4, cSVFormat1);
288:       assertFalse(cSVFormat0.getAutoFlush());
289:       assertNull(cSVFormat0.getCommentMarker());
290:       assertNull(cSVFormat0.getQuoteMode());
291:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
292:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
293:       assertTrue(cSVFormat0.isQuoteCharacterSet());
294:       assertEquals('|', cSVFormat0.getDelimiter());
295:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
296:       assertFalse(cSVFormat0.getSkipHeaderRecord());
297:       assertEquals("\n", cSVFormat0.getRecordSeparator());
298:       assertFalse(cSVFormat0.getTrailingDelimiter());
299:       assertFalse(cSVFormat0.isCommentMarkerSet());
300:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
301:       assertNull(cSVFormat0.getNullString());
302:       assertFalse(cSVFormat0.isNullStringSet());
303:       assertFalse(cSVFormat0.getTrim());
304:       assertTrue(cSVFormat0.isEscapeCharacterSet());
305:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
306:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
307:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
308:       assertFalse(cSVFormat1.getTrim());
309:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
310:       assertNull(cSVFormat1.getRecordSeparator());
311:       assertNull(cSVFormat1.getQuoteMode());
312:       assertFalse(cSVFormat1.isCommentMarkerSet());
313:       assertNull(cSVFormat1.getCommentMarker());
314:       assertFalse(cSVFormat1.getSkipHeaderRecord());
315:       assertEquals('|', cSVFormat1.getDelimiter());
316:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
317:       assertTrue(cSVFormat1.isQuoteCharacterSet());
318:       assertFalse(cSVFormat1.isNullStringSet());
319:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
320:       assertTrue(cSVFormat1.isEscapeCharacterSet());
321:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
322:       assertFalse(cSVFormat1.getTrailingDelimiter());
323:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
324:       assertNull(cSVFormat1.getNullString());
325:       assertFalse(cSVFormat1.getAutoFlush());
326:       assertFalse(cSVFormat2.getSkipHeaderRecord());
327:       assertNull(cSVFormat2.getCommentMarker());
328:       assertTrue(cSVFormat2.isEscapeCharacterSet());
329:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
330:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
331:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
332:       assertNull(cSVFormat2.getQuoteMode());
333:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
334:       assertNull(cSVFormat2.getNullString());
335:       assertFalse(cSVFormat2.isNullStringSet());
336:       assertFalse(cSVFormat2.getTrim());
337:       assertFalse(cSVFormat2.getAutoFlush());
338:       assertFalse(cSVFormat2.getTrailingDelimiter());
339:       assertFalse(cSVFormat2.isCommentMarkerSet());
340:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
341:       assertNull(cSVFormat2.getRecordSeparator());
342:       assertEquals('|', cSVFormat2.getDelimiter());
343:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
344:       assertTrue(cSVFormat2.isQuoteCharacterSet());
345:       assertEquals('|', cSVFormat3.getDelimiter());
346:       assertFalse(cSVFormat3.getTrailingDelimiter());
347:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
348:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
349:       assertTrue(cSVFormat3.isCommentMarkerSet());
350:       assertFalse(cSVFormat3.getAutoFlush());
351:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
352:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
353:       assertNull(cSVFormat3.getNullString());
354:       assertFalse(cSVFormat3.isNullStringSet());
355:       assertFalse(cSVFormat3.getTrim());
356:       assertFalse(cSVFormat3.getSkipHeaderRecord());
357:       assertNull(cSVFormat3.getQuoteMode());
358:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
359:       assertTrue(cSVFormat3.isEscapeCharacterSet());
360:       assertTrue(cSVFormat3.isQuoteCharacterSet());
361:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
362:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
363:       assertNull(cSVFormat3.getRecordSeparator());
364:       assertNull(cSVFormat4.getQuoteMode());
365:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
366:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
367:       assertNull(cSVFormat4.getRecordSeparator());
368:       assertTrue(cSVFormat4.isCommentMarkerSet());
369:       assertFalse(cSVFormat4.getAutoFlush());
370:       assertTrue(cSVFormat4.isQuoteCharacterSet());
371:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
372:       assertFalse(cSVFormat4.getTrim());
373:       assertFalse(cSVFormat4.getTrailingDelimiter());
374:       assertTrue(cSVFormat4.isEscapeCharacterSet());
375:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
376:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
377:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
378:       assertEquals('|', cSVFormat4.getDelimiter());
379:       assertFalse(cSVFormat4.isNullStringSet());
380:       assertNull(cSVFormat4.getNullString());
381:       assertFalse(cSVFormat4.getSkipHeaderRecord());
382:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
383:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
384:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
385:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
386:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
387:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
388:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
389:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
390:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
391:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
392:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
393:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
394:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
395:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
396:       assertFalse(cSVFormat4.equals((Object)cSVFormat2));
397:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
398:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
399:       
400:       CSVFormat cSVFormat5 = cSVFormat4.withTrim();
401:       assertNotNull(cSVFormat5);
402:       assertNotSame(cSVFormat0, cSVFormat4);
403:       assertNotSame(cSVFormat0, cSVFormat1);
404:       assertNotSame(cSVFormat0, cSVFormat3);
405:       assertNotSame(cSVFormat0, cSVFormat5);
406:       assertNotSame(cSVFormat0, cSVFormat2);
407:       assertNotSame(cSVFormat1, cSVFormat3);
408:       assertNotSame(cSVFormat1, cSVFormat5);
409:       assertNotSame(cSVFormat1, cSVFormat4);
410:       assertNotSame(cSVFormat1, cSVFormat0);
411:       assertNotSame(cSVFormat1, cSVFormat2);
412:       assertNotSame(cSVFormat2, cSVFormat1);
413:       assertNotSame(cSVFormat2, cSVFormat4);
414:       assertNotSame(cSVFormat2, cSVFormat3);
415:       assertNotSame(cSVFormat2, cSVFormat5);
416:       assertNotSame(cSVFormat2, cSVFormat0);
417:       assertNotSame(cSVFormat3, cSVFormat0);
418:       assertNotSame(cSVFormat3, cSVFormat2);
419:       assertNotSame(cSVFormat3, cSVFormat4);
420:       assertNotSame(cSVFormat3, cSVFormat1);
421:       assertNotSame(cSVFormat3, cSVFormat5);
422:       assertNotSame(cSVFormat4, cSVFormat3);
423:       assertNotSame(cSVFormat4, cSVFormat5);
424:       assertNotSame(cSVFormat4, cSVFormat2);
425:       assertNotSame(cSVFormat4, cSVFormat0);
426:       assertNotSame(cSVFormat4, cSVFormat1);
427:       assertNotSame(cSVFormat5, cSVFormat0);
428:       assertNotSame(cSVFormat5, cSVFormat3);
429:       assertNotSame(cSVFormat5, cSVFormat4);
430:       assertNotSame(cSVFormat5, cSVFormat1);
431:       assertNotSame(cSVFormat5, cSVFormat2);
432:       assertFalse(cSVFormat0.getAutoFlush());
433:       assertNull(cSVFormat0.getCommentMarker());
434:       assertNull(cSVFormat0.getQuoteMode());
435:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
436:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
437:       assertTrue(cSVFormat0.isQuoteCharacterSet());
438:       assertEquals('|', cSVFormat0.getDelimiter());
439:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
440:       assertFalse(cSVFormat0.getSkipHeaderRecord());
441:       assertEquals("\n", cSVFormat0.getRecordSeparator());
442:       assertFalse(cSVFormat0.getTrailingDelimiter());
443:       assertFalse(cSVFormat0.isCommentMarkerSet());
444:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
445:       assertNull(cSVFormat0.getNullString());
446:       assertFalse(cSVFormat0.isNullStringSet());
447:       assertFalse(cSVFormat0.getTrim());
448:       assertTrue(cSVFormat0.isEscapeCharacterSet());
449:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
450:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
451:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
452:       assertFalse(cSVFormat1.getTrim());
453:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
454:       assertNull(cSVFormat1.getRecordSeparator());
455:       assertNull(cSVFormat1.getQuoteMode());
456:       assertFalse(cSVFormat1.isCommentMarkerSet());
457:       assertNull(cSVFormat1.getCommentMarker());
458:       assertFalse(cSVFormat1.getSkipHeaderRecord());
459:       assertEquals('|', cSVFormat1.getDelimiter());
460:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
461:       assertTrue(cSVFormat1.isQuoteCharacterSet());
462:       assertFalse(cSVFormat1.isNullStringSet());
463:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
464:       assertTrue(cSVFormat1.isEscapeCharacterSet());
465:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
466:       assertFalse(cSVFormat1.getTrailingDelimiter());
467:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
468:       assertNull(cSVFormat1.getNullString());
469:       assertFalse(cSVFormat1.getAutoFlush());
470:       assertFalse(cSVFormat2.getSkipHeaderRecord());
471:       assertNull(cSVFormat2.getCommentMarker());
472:       assertTrue(cSVFormat2.isEscapeCharacterSet());
473:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
474:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
475:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
476:       assertNull(cSVFormat2.getQuoteMode());
477:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
478:       assertNull(cSVFormat2.getNullString());
479:       assertFalse(cSVFormat2.isNullStringSet());
480:       assertFalse(cSVFormat2.getTrim());
481:       assertFalse(cSVFormat2.getAutoFlush());
482:       assertFalse(cSVFormat2.getTrailingDelimiter());
483:       assertFalse(cSVFormat2.isCommentMarkerSet());
484:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
485:       assertNull(cSVFormat2.getRecordSeparator());
486:       assertEquals('|', cSVFormat2.getDelimiter());
487:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
488:       assertTrue(cSVFormat2.isQuoteCharacterSet());
489:       assertEquals('|', cSVFormat3.getDelimiter());
490:       assertFalse(cSVFormat3.getTrailingDelimiter());
491:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
492:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
493:       assertTrue(cSVFormat3.isCommentMarkerSet());
494:       assertFalse(cSVFormat3.getAutoFlush());
495:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
496:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
497:       assertNull(cSVFormat3.getNullString());
498:       assertFalse(cSVFormat3.isNullStringSet());
499:       assertFalse(cSVFormat3.getTrim());
500:       assertFalse(cSVFormat3.getSkipHeaderRecord());
501:       assertNull(cSVFormat3.getQuoteMode());
502:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
503:       assertTrue(cSVFormat3.isEscapeCharacterSet());
504:       assertTrue(cSVFormat3.isQuoteCharacterSet());
505:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
506:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
507:       assertNull(cSVFormat3.getRecordSeparator());
508:       assertNull(cSVFormat4.getQuoteMode());
509:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
510:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
511:       assertNull(cSVFormat4.getRecordSeparator());
512:       assertTrue(cSVFormat4.isCommentMarkerSet());
513:       assertFalse(cSVFormat4.getAutoFlush());
514:       assertTrue(cSVFormat4.isQuoteCharacterSet());
515:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
516:       assertFalse(cSVFormat4.getTrim());
517:       assertFalse(cSVFormat4.getTrailingDelimiter());
518:       assertTrue(cSVFormat4.isEscapeCharacterSet());
519:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
520:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
521:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
522:       assertEquals('|', cSVFormat4.getDelimiter());
523:       assertFalse(cSVFormat4.isNullStringSet());
524:       assertNull(cSVFormat4.getNullString());
525:       assertFalse(cSVFormat4.getSkipHeaderRecord());
526:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
527:       assertEquals('|', cSVFormat5.getDelimiter());
528:       assertFalse(cSVFormat5.getTrailingDelimiter());
529:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
530:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
531:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
532:       assertTrue(cSVFormat5.isCommentMarkerSet());
533:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
534:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
535:       assertFalse(cSVFormat5.getAutoFlush());
536:       assertNull(cSVFormat5.getNullString());
537:       assertFalse(cSVFormat5.isNullStringSet());
538:       assertFalse(cSVFormat5.getSkipHeaderRecord());
539:       assertNull(cSVFormat5.getQuoteMode());
540:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
541:       assertTrue(cSVFormat5.getTrim());
542:       assertTrue(cSVFormat5.isEscapeCharacterSet());
543:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
544:       assertNull(cSVFormat5.getRecordSeparator());
545:       assertTrue(cSVFormat5.isQuoteCharacterSet());
546:       assertFalse(cSVFormat0.equals((Object)cSVFormat4));
547:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
548:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
549:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
550:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
551:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
552:       assertFalse(cSVFormat1.equals((Object)cSVFormat4));
553:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
554:       assertFalse(cSVFormat2.equals((Object)cSVFormat4));
555:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
556:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
557:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
558:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
559:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
560:       assertFalse(cSVFormat3.equals((Object)cSVFormat4));
561:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
562:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
563:       assertFalse(cSVFormat4.equals((Object)cSVFormat2));
564:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
565:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
566:       assertFalse(cSVFormat5.equals((Object)cSVFormat0));
567:       assertTrue(cSVFormat5.equals((Object)cSVFormat4));
568:       assertFalse(cSVFormat5.equals((Object)cSVFormat3));
569:       assertFalse(cSVFormat5.equals((Object)cSVFormat1));
570:       assertFalse(cSVFormat5.equals((Object)cSVFormat2));
571:       
572:       boolean boolean0 = false;
573:       CSVFormat cSVFormat6 = cSVFormat5.withIgnoreHeaderCase(false);
574:       assertNotNull(cSVFormat6);
575:       assertNotSame(cSVFormat0, cSVFormat6);
576:       assertNotSame(cSVFormat0, cSVFormat4);
577:       assertNotSame(cSVFormat0, cSVFormat1);
578:       assertNotSame(cSVFormat0, cSVFormat3);
579:       assertNotSame(cSVFormat0, cSVFormat5);
580:       assertNotSame(cSVFormat0, cSVFormat2);
581:       assertNotSame(cSVFormat1, cSVFormat3);
582:       assertNotSame(cSVFormat1, cSVFormat5);
583:       assertNotSame(cSVFormat1, cSVFormat6);
584:       assertNotSame(cSVFormat1, cSVFormat4);
585:       assertNotSame(cSVFormat1, cSVFormat0);
586:       assertNotSame(cSVFormat1, cSVFormat2);
587:       assertNotSame(cSVFormat2, cSVFormat1);
588:       assertNotSame(cSVFormat2, cSVFormat6);
589:       assertNotSame(cSVFormat2, cSVFormat4);
590:       assertNotSame(cSVFormat2, cSVFormat3);
591:       assertNotSame(cSVFormat2, cSVFormat5);
592:       assertNotSame(cSVFormat2, cSVFormat0);
593:       assertNotSame(cSVFormat3, cSVFormat0);
594:       assertNotSame(cSVFormat3, cSVFormat6);
595:       assertNotSame(cSVFormat3, cSVFormat4);
596:       assertNotSame(cSVFormat3, cSVFormat2);
597:       assertNotSame(cSVFormat3, cSVFormat1);
598:       assertNotSame(cSVFormat3, cSVFormat5);
599:       assertNotSame(cSVFormat4, cSVFormat3);
600:       assertNotSame(cSVFormat4, cSVFormat5);
601:       assertNotSame(cSVFormat4, cSVFormat0);
602:       assertNotSame(cSVFormat4, cSVFormat1);
603:       assertNotSame(cSVFormat4, cSVFormat2);
604:       assertNotSame(cSVFormat4, cSVFormat6);
605:       assertNotSame(cSVFormat5, cSVFormat0);
606:       assertNotSame(cSVFormat5, cSVFormat6);
607:       assertNotSame(cSVFormat5, cSVFormat3);
608:       assertNotSame(cSVFormat5, cSVFormat4);
609:       assertNotSame(cSVFormat5, cSVFormat1);
610:       assertNotSame(cSVFormat5, cSVFormat2);
611:       assertNotSame(cSVFormat6, cSVFormat3);
612:       assertNotSame(cSVFormat6, cSVFormat5);
613:       assertNotSame(cSVFormat6, cSVFormat2);
614:       assertNotSame(cSVFormat6, cSVFormat4);
615:       assertNotSame(cSVFormat6, cSVFormat0);
616:       assertNotSame(cSVFormat6, cSVFormat1);
617:       assertFalse(cSVFormat0.getAutoFlush());
618:       assertNull(cSVFormat0.getCommentMarker());
619:       assertNull(cSVFormat0.getQuoteMode());
620:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
621:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
622:       assertTrue(cSVFormat0.isQuoteCharacterSet());
623:       assertEquals('|', cSVFormat0.getDelimiter());
624:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
625:       assertFalse(cSVFormat0.getSkipHeaderRecord());
626:       assertEquals("\n", cSVFormat0.getRecordSeparator());
627:       assertFalse(cSVFormat0.getTrailingDelimiter());
628:       assertFalse(cSVFormat0.isCommentMarkerSet());
629:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
630:       assertNull(cSVFormat0.getNullString());
631:       assertFalse(cSVFormat0.isNullStringSet());
632:       assertFalse(cSVFormat0.getTrim());
633:       assertTrue(cSVFormat0.isEscapeCharacterSet());
634:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
635:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
636:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
637:       assertFalse(cSVFormat1.getTrim());
638:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
639:       assertNull(cSVFormat1.getRecordSeparator());
640:       assertNull(cSVFormat1.getQuoteMode());
641:       assertFalse(cSVFormat1.isCommentMarkerSet());
642:       assertNull(cSVFormat1.getCommentMarker());
643:       assertFalse(cSVFormat1.getSkipHeaderRecord());
644:       assertEquals('|', cSVFormat1.getDelimiter());
645:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
646:       assertTrue(cSVFormat1.isQuoteCharacterSet());
647:       assertFalse(cSVFormat1.isNullStringSet());
648:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
649:       assertTrue(cSVFormat1.isEscapeCharacterSet());
650:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
651:       assertFalse(cSVFormat1.getTrailingDelimiter());
652:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
653:       assertNull(cSVFormat1.getNullString());
654:       assertFalse(cSVFormat1.getAutoFlush());
655:       assertFalse(cSVFormat2.getSkipHeaderRecord());
656:       assertNull(cSVFormat2.getCommentMarker());
657:       assertTrue(cSVFormat2.isEscapeCharacterSet());
658:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
659:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
660:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
661:       assertNull(cSVFormat2.getQuoteMode());
662:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
663:       assertNull(cSVFormat2.getNullString());
664:       assertFalse(cSVFormat2.isNullStringSet());
665:       assertFalse(cSVFormat2.getTrim());
666:       assertFalse(cSVFormat2.getAutoFlush());
667:       assertFalse(cSVFormat2.getTrailingDelimiter());
668:       assertFalse(cSVFormat2.isCommentMarkerSet());
669:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
670:       assertNull(cSVFormat2.getRecordSeparator());
671:       assertEquals('|', cSVFormat2.getDelimiter());
672:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
673:       assertTrue(cSVFormat2.isQuoteCharacterSet());
674:       assertEquals('|', cSVFormat3.getDelimiter());
675:       assertFalse(cSVFormat3.getTrailingDelimiter());
676:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
677:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
678:       assertTrue(cSVFormat3.isCommentMarkerSet());
679:       assertFalse(cSVFormat3.getAutoFlush());
680:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
681:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
682:       assertNull(cSVFormat3.getNullString());
683:       assertFalse(cSVFormat3.isNullStringSet());
684:       assertFalse(cSVFormat3.getTrim());
685:       assertFalse(cSVFormat3.getSkipHeaderRecord());
686:       assertNull(cSVFormat3.getQuoteMode());
687:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
688:       assertTrue(cSVFormat3.isEscapeCharacterSet());
689:       assertTrue(cSVFormat3.isQuoteCharacterSet());
690:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
691:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
692:       assertNull(cSVFormat3.getRecordSeparator());
693:       assertNull(cSVFormat4.getQuoteMode());
694:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
695:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
696:       assertNull(cSVFormat4.getRecordSeparator());
697:       assertTrue(cSVFormat4.isCommentMarkerSet());
698:       assertFalse(cSVFormat4.getAutoFlush());
699:       assertTrue(cSVFormat4.isQuoteCharacterSet());
700:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
701:       assertFalse(cSVFormat4.getTrim());
702:       assertFalse(cSVFormat4.getTrailingDelimiter());
703:       assertTrue(cSVFormat4.isEscapeCharacterSet());
704:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
705:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
706:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
707:       assertEquals('|', cSVFormat4.getDelimiter());
708:       assertFalse(cSVFormat4.isNullStringSet());
709:       assertNull(cSVFormat4.getNullString());
710:       assertFalse(cSVFormat4.getSkipHeaderRecord());
711:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
712:       assertEquals('|', cSVFormat5.getDelimiter());
713:       assertFalse(cSVFormat5.getTrailingDelimiter());
714:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
715:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
716:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
717:       assertTrue(cSVFormat5.isCommentMarkerSet());
718:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
719:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
720:       assertFalse(cSVFormat5.getAutoFlush());
721:       assertNull(cSVFormat5.getNullString());
722:       assertFalse(cSVFormat5.isNullStringSet());
723:       assertFalse(cSVFormat5.getSkipHeaderRecord());
724:       assertNull(cSVFormat5.getQuoteMode());
725:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
726:       assertTrue(cSVFormat5.getTrim());
727:       assertTrue(cSVFormat5.isEscapeCharacterSet());
728:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
729:       assertNull(cSVFormat5.getRecordSeparator());
730:       assertTrue(cSVFormat5.isQuoteCharacterSet());
731:       assertFalse(cSVFormat6.isNullStringSet());
732:       assertFalse(cSVFormat6.getAllowMissingColumnNames());
733:       assertNull(cSVFormat6.getNullString());
734:       assertFalse(cSVFormat6.getAutoFlush());
735:       assertFalse(cSVFormat6.getSkipHeaderRecord());
736:       assertEquals('|', cSVFormat6.getDelimiter());
737:       assertNull(cSVFormat6.getQuoteMode());
738:       assertEquals('Q', (char)cSVFormat6.getCommentMarker());
739:       assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
740:       assertTrue(cSVFormat6.getTrim());
741:       assertFalse(cSVFormat6.getIgnoreHeaderCase());
742:       assertTrue(cSVFormat6.isCommentMarkerSet());
743:       assertNull(cSVFormat6.getRecordSeparator());
744:       assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
745:       assertTrue(cSVFormat6.getIgnoreEmptyLines());
746:       assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
747:       assertTrue(cSVFormat6.isQuoteCharacterSet());
748:       assertFalse(cSVFormat6.getTrailingDelimiter());
749:       assertTrue(cSVFormat6.isEscapeCharacterSet());
750:       assertFalse(cSVFormat0.equals((Object)cSVFormat4));
751:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
752:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
753:       assertFalse(cSVFormat0.equals((Object)cSVFormat5));
754:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
755:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
756:       assertFalse(cSVFormat1.equals((Object)cSVFormat5));
757:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
758:       assertFalse(cSVFormat1.equals((Object)cSVFormat4));
759:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
760:       assertFalse(cSVFormat2.equals((Object)cSVFormat4));
761:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
762:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
763:       assertFalse(cSVFormat2.equals((Object)cSVFormat5));
764:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
765:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
766:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
767:       assertFalse(cSVFormat3.equals((Object)cSVFormat4));
768:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
769:       assertFalse(cSVFormat3.equals((Object)cSVFormat5));
770:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
771:       assertFalse(cSVFormat4.equals((Object)cSVFormat2));
772:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
773:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
774:       assertTrue(cSVFormat4.equals((Object)cSVFormat5));
775:       assertFalse(cSVFormat5.equals((Object)cSVFormat0));
776:       assertTrue(cSVFormat5.equals((Object)cSVFormat4));
777:       assertFalse(cSVFormat5.equals((Object)cSVFormat3));
778:       assertFalse(cSVFormat5.equals((Object)cSVFormat1));
779:       assertFalse(cSVFormat5.equals((Object)cSVFormat2));
780:       assertTrue(cSVFormat6.equals((Object)cSVFormat4));
781:       assertFalse(cSVFormat6.equals((Object)cSVFormat3));
782:       assertFalse(cSVFormat6.equals((Object)cSVFormat2));
783:       assertTrue(cSVFormat6.equals((Object)cSVFormat5));
784:       assertFalse(cSVFormat6.equals((Object)cSVFormat0));
785:       assertFalse(cSVFormat6.equals((Object)cSVFormat1));
786:       
787:       CSVFormat cSVFormat7 = cSVFormat6.withIgnoreSurroundingSpaces(false);
788:       assertNotNull(cSVFormat7);
789:       assertNotSame(cSVFormat0, cSVFormat6);
790:       assertNotSame(cSVFormat0, cSVFormat4);
791:       assertNotSame(cSVFormat0, cSVFormat1);
792:       assertNotSame(cSVFormat0, cSVFormat3);
793:       assertNotSame(cSVFormat0, cSVFormat5);
794:       assertNotSame(cSVFormat0, cSVFormat7);
795:       assertNotSame(cSVFormat0, cSVFormat2);
796:       assertNotSame(cSVFormat1, cSVFormat7);
797:       assertNotSame(cSVFormat1, cSVFormat3);
798:       assertNotSame(cSVFormat1, cSVFormat5);
799:       assertNotSame(cSVFormat1, cSVFormat6);
800:       assertNotSame(cSVFormat1, cSVFormat4);
801:       assertNotSame(cSVFormat1, cSVFormat0);
802:       assertNotSame(cSVFormat1, cSVFormat2);
803:       assertNotSame(cSVFormat2, cSVFormat1);
804:       assertNotSame(cSVFormat2, cSVFormat6);
805:       assertNotSame(cSVFormat2, cSVFormat4);
806:       assertNotSame(cSVFormat2, cSVFormat7);
807:       assertNotSame(cSVFormat2, cSVFormat3);
808:       assertNotSame(cSVFormat2, cSVFormat5);
809:       assertNotSame(cSVFormat2, cSVFormat0);
810:       assertNotSame(cSVFormat3, cSVFormat0);
811:       assertNotSame(cSVFormat3, cSVFormat6);
812:       assertNotSame(cSVFormat3, cSVFormat7);
813:       assertNotSame(cSVFormat3, cSVFormat4);
814:       assertNotSame(cSVFormat3, cSVFormat2);
815:       assertNotSame(cSVFormat3, cSVFormat1);
816:       assertNotSame(cSVFormat3, cSVFormat5);
817:       assertNotSame(cSVFormat4, cSVFormat3);
818:       assertNotSame(cSVFormat4, cSVFormat5);
819:       assertNotSame(cSVFormat4, cSVFormat0);
820:       assertNotSame(cSVFormat4, cSVFormat1);
821:       assertNotSame(cSVFormat4, cSVFormat2);
822:       assertNotSame(cSVFormat4, cSVFormat6);
823:       assertNotSame(cSVFormat4, cSVFormat7);
824:       assertNotSame(cSVFormat5, cSVFormat0);
825:       assertNotSame(cSVFormat5, cSVFormat6);
826:       assertNotSame(cSVFormat5, cSVFormat7);
827:       assertNotSame(cSVFormat5, cSVFormat3);
828:       assertNotSame(cSVFormat5, cSVFormat4);
829:       assertNotSame(cSVFormat5, cSVFormat1);
830:       assertNotSame(cSVFormat5, cSVFormat2);
831:       assertNotSame(cSVFormat6, cSVFormat7);
832:       assertNotSame(cSVFormat6, cSVFormat3);
833:       assertNotSame(cSVFormat6, cSVFormat5);
834:       assertNotSame(cSVFormat6, cSVFormat2);
835:       assertNotSame(cSVFormat6, cSVFormat4);
836:       assertNotSame(cSVFormat6, cSVFormat0);
837:       assertNotSame(cSVFormat6, cSVFormat1);
838:       assertNotSame(cSVFormat7, cSVFormat3);
839:       assertNotSame(cSVFormat7, cSVFormat5);
840:       assertNotSame(cSVFormat7, cSVFormat6);
841:       assertNotSame(cSVFormat7, cSVFormat1);
842:       assertNotSame(cSVFormat7, cSVFormat4);
843:       assertNotSame(cSVFormat7, cSVFormat0);
844:       assertNotSame(cSVFormat7, cSVFormat2);
845:       assertFalse(cSVFormat0.getAutoFlush());
846:       assertNull(cSVFormat0.getCommentMarker());
847:       assertNull(cSVFormat0.getQuoteMode());
848:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
849:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
850:       assertTrue(cSVFormat0.isQuoteCharacterSet());
851:       assertEquals('|', cSVFormat0.getDelimiter());
852:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
853:       assertFalse(cSVFormat0.getSkipHeaderRecord());
854:       assertEquals("\n", cSVFormat0.getRecordSeparator());
855:       assertFalse(cSVFormat0.getTrailingDelimiter());
856:       assertFalse(cSVFormat0.isCommentMarkerSet());
857:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
858:       assertNull(cSVFormat0.getNullString());
859:       assertFalse(cSVFormat0.isNullStringSet());
860:       assertFalse(cSVFormat0.getTrim());
861:       assertTrue(cSVFormat0.isEscapeCharacterSet());
862:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
863:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
864:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
865:       assertFalse(cSVFormat1.getTrim());
866:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
867:       assertNull(cSVFormat1.getRecordSeparator());
868:       assertNull(cSVFormat1.getQuoteMode());
869:       assertFalse(cSVFormat1.isCommentMarkerSet());
870:       assertNull(cSVFormat1.getCommentMarker());
871:       assertFalse(cSVFormat1.getSkipHeaderRecord());
872:       assertEquals('|', cSVFormat1.getDelimiter());
873:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
874:       assertTrue(cSVFormat1.isQuoteCharacterSet());
875:       assertFalse(cSVFormat1.isNullStringSet());
876:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
877:       assertTrue(cSVFormat1.isEscapeCharacterSet());
878:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
879:       assertFalse(cSVFormat1.getTrailingDelimiter());
880:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
881:       assertNull(cSVFormat1.getNullString());
882:       assertFalse(cSVFormat1.getAutoFlush());
883:       assertFalse(cSVFormat2.getSkipHeaderRecord());
884:       assertNull(cSVFormat2.getCommentMarker());
885:       assertTrue(cSVFormat2.isEscapeCharacterSet());
886:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
887:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
888:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
889:       assertNull(cSVFormat2.getQuoteMode());
890:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
891:       assertNull(cSVFormat2.getNullString());
892:       assertFalse(cSVFormat2.isNullStringSet());
893:       assertFalse(cSVFormat2.getTrim());
894:       assertFalse(cSVFormat2.getAutoFlush());
895:       assertFalse(cSVFormat2.getTrailingDelimiter());
896:       assertFalse(cSVFormat2.isCommentMarkerSet());
897:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
898:       assertNull(cSVFormat2.getRecordSeparator());
899:       assertEquals('|', cSVFormat2.getDelimiter());
900:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
901:       assertTrue(cSVFormat2.isQuoteCharacterSet());
902:       assertEquals('|', cSVFormat3.getDelimiter());
903:       assertFalse(cSVFormat3.getTrailingDelimiter());
904:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
905:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
906:       assertTrue(cSVFormat3.isCommentMarkerSet());
907:       assertFalse(cSVFormat3.getAutoFlush());
908:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
909:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
910:       assertNull(cSVFormat3.getNullString());
911:       assertFalse(cSVFormat3.isNullStringSet());
912:       assertFalse(cSVFormat3.getTrim());
913:       assertFalse(cSVFormat3.getSkipHeaderRecord());
914:       assertNull(cSVFormat3.getQuoteMode());
915:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
916:       assertTrue(cSVFormat3.isEscapeCharacterSet());
917:       assertTrue(cSVFormat3.isQuoteCharacterSet());
918:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
919:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
920:       assertNull(cSVFormat3.getRecordSeparator());
921:       assertNull(cSVFormat4.getQuoteMode());
922:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
923:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
924:       assertNull(cSVFormat4.getRecordSeparator());
925:       assertTrue(cSVFormat4.isCommentMarkerSet());
926:       assertFalse(cSVFormat4.getAutoFlush());
927:       assertTrue(cSVFormat4.isQuoteCharacterSet());
928:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
929:       assertFalse(cSVFormat4.getTrim());
930:       assertFalse(cSVFormat4.getTrailingDelimiter());
931:       assertTrue(cSVFormat4.isEscapeCharacterSet());
932:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
933:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
934:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
935:       assertEquals('|', cSVFormat4.getDelimiter());
936:       assertFalse(cSVFormat4.isNullStringSet());
937:       assertNull(cSVFormat4.getNullString());
938:       assertFalse(cSVFormat4.getSkipHeaderRecord());
939:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
940:       assertEquals('|', cSVFormat5.getDelimiter());
941:       assertFalse(cSVFormat5.getTrailingDelimiter());
942:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
943:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
944:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
945:       assertTrue(cSVFormat5.isCommentMarkerSet());
946:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
947:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
948:       assertFalse(cSVFormat5.getAutoFlush());
949:       assertNull(cSVFormat5.getNullString());
950:       assertFalse(cSVFormat5.isNullStringSet());
951:       assertFalse(cSVFormat5.getSkipHeaderRecord());
952:       assertNull(cSVFormat5.getQuoteMode());
953:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
954:       assertTrue(cSVFormat5.getTrim());
955:       assertTrue(cSVFormat5.isEscapeCharacterSet());
956:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
957:       assertNull(cSVFormat5.getRecordSeparator());
958:       assertTrue(cSVFormat5.isQuoteCharacterSet());
959:       assertFalse(cSVFormat6.isNullStringSet());
960:       assertFalse(cSVFormat6.getAllowMissingColumnNames());
961:       assertNull(cSVFormat6.getNullString());
962:       assertFalse(cSVFormat6.getAutoFlush());
963:       assertFalse(cSVFormat6.getSkipHeaderRecord());
964:       assertEquals('|', cSVFormat6.getDelimiter());
965:       assertNull(cSVFormat6.getQuoteMode());
966:       assertEquals('Q', (char)cSVFormat6.getCommentMarker());
967:       assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
968:       assertTrue(cSVFormat6.getTrim());
969:       assertFalse(cSVFormat6.getIgnoreHeaderCase());
970:       assertTrue(cSVFormat6.isCommentMarkerSet());
971:       assertNull(cSVFormat6.getRecordSeparator());
972:       assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
973:       assertTrue(cSVFormat6.getIgnoreEmptyLines());
974:       assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
975:       assertTrue(cSVFormat6.isQuoteCharacterSet());
976:       assertFalse(cSVFormat6.getTrailingDelimiter());
977:       assertTrue(cSVFormat6.isEscapeCharacterSet());
978:       assertTrue(cSVFormat7.isCommentMarkerSet());
979:       assertFalse(cSVFormat7.getIgnoreHeaderCase());
980:       assertEquals('\\', (char)cSVFormat7.getEscapeCharacter());
981:       assertNull(cSVFormat7.getRecordSeparator());
982:       assertTrue(cSVFormat7.getIgnoreEmptyLines());
983:       assertTrue(cSVFormat7.getTrim());
984:       assertFalse(cSVFormat7.getSkipHeaderRecord());
985:       assertTrue(cSVFormat7.isQuoteCharacterSet());
986:       assertEquals('\"', (char)cSVFormat7.getQuoteCharacter());
987:       assertTrue(cSVFormat7.isEscapeCharacterSet());
988:       assertFalse(cSVFormat7.getAllowMissingColumnNames());
989:       assertEquals('|', cSVFormat7.getDelimiter());
990:       assertEquals('Q', (char)cSVFormat7.getCommentMarker());
991:       assertFalse(cSVFormat7.getTrailingDelimiter());
992:       assertNull(cSVFormat7.getQuoteMode());
993:       assertFalse(cSVFormat7.getIgnoreSurroundingSpaces());
994:       assertFalse(cSVFormat7.getAutoFlush());
995:       assertNull(cSVFormat7.getNullString());
996:       assertFalse(cSVFormat7.isNullStringSet());
997:       assertFalse(cSVFormat0.equals((Object)cSVFormat6));
998:       assertFalse(cSVFormat0.equals((Object)cSVFormat4));
999:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
1000:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
1001:       assertFalse(cSVFormat0.equals((Object)cSVFormat5));
1002:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
1003:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
1004:       assertFalse(cSVFormat1.equals((Object)cSVFormat5));
1005:       assertFalse(cSVFormat1.equals((Object)cSVFormat6));
1006:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
1007:       assertFalse(cSVFormat1.equals((Object)cSVFormat4));
1008:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
1009:       assertFalse(cSVFormat2.equals((Object)cSVFormat6));
1010:       assertFalse(cSVFormat2.equals((Object)cSVFormat4));
1011:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
1012:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
1013:       assertFalse(cSVFormat2.equals((Object)cSVFormat5));
1014:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
1015:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
1016:       assertFalse(cSVFormat3.equals((Object)cSVFormat6));
1017:       assertFalse(cSVFormat3.equals((Object)cSVFormat4));
1018:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
1019:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
1020:       assertFalse(cSVFormat3.equals((Object)cSVFormat5));
1021:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
1022:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
1023:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
1024:       assertFalse(cSVFormat4.equals((Object)cSVFormat2));
1025:       assertTrue(cSVFormat4.equals((Object)cSVFormat6));
1026:       assertTrue(cSVFormat4.equals((Object)cSVFormat5));
1027:       assertFalse(cSVFormat5.equals((Object)cSVFormat0));
1028:       assertTrue(cSVFormat5.equals((Object)cSVFormat4));
1029:       assertTrue(cSVFormat5.equals((Object)cSVFormat6));
1030:       assertFalse(cSVFormat5.equals((Object)cSVFormat3));
1031:       assertFalse(cSVFormat5.equals((Object)cSVFormat1));
1032:       assertFalse(cSVFormat5.equals((Object)cSVFormat2));
1033:       assertTrue(cSVFormat6.equals((Object)cSVFormat4));
1034:       assertFalse(cSVFormat6.equals((Object)cSVFormat3));
1035:       assertFalse(cSVFormat6.equals((Object)cSVFormat2));
1036:       assertTrue(cSVFormat6.equals((Object)cSVFormat5));
1037:       assertFalse(cSVFormat6.equals((Object)cSVFormat0));
1038:       assertFalse(cSVFormat6.equals((Object)cSVFormat1));
1039:       assertTrue(cSVFormat7.equals((Object)cSVFormat4));
1040:       assertFalse(cSVFormat7.equals((Object)cSVFormat3));
1041:       assertTrue(cSVFormat7.equals((Object)cSVFormat5));
1042:       assertFalse(cSVFormat7.equals((Object)cSVFormat1));
1043:       assertFalse(cSVFormat7.equals((Object)cSVFormat0));
1044:       assertTrue(cSVFormat7.equals((Object)cSVFormat6));
1045:       assertFalse(cSVFormat7.equals((Object)cSVFormat2));
1046:       
1047:       CSVFormat cSVFormat8 = cSVFormat4.withCommentMarker(character0);
1048:       assertNotNull(cSVFormat8);
1049:       assertNotSame(cSVFormat0, cSVFormat6);
1050:       assertNotSame(cSVFormat0, cSVFormat8);
1051:       assertNotSame(cSVFormat0, cSVFormat4);
1052:       assertNotSame(cSVFormat0, cSVFormat1);
1053:       assertNotSame(cSVFormat0, cSVFormat3);
1054:       assertNotSame(cSVFormat0, cSVFormat5);
1055:       assertNotSame(cSVFormat0, cSVFormat7);
1056:       assertNotSame(cSVFormat0, cSVFormat2);
1057:       assertNotSame(cSVFormat1, cSVFormat7);
1058:       assertNotSame(cSVFormat1, cSVFormat3);
1059:       assertNotSame(cSVFormat1, cSVFormat5);
1060:       assertNotSame(cSVFormat1, cSVFormat6);
1061:       assertNotSame(cSVFormat1, cSVFormat4);
1062:       assertNotSame(cSVFormat1, cSVFormat0);
1063:       assertNotSame(cSVFormat1, cSVFormat8);
1064:       assertNotSame(cSVFormat1, cSVFormat2);
1065:       assertNotSame(cSVFormat2, cSVFormat1);
1066:       assertNotSame(cSVFormat2, cSVFormat6);
1067:       assertNotSame(cSVFormat2, cSVFormat4);
1068:       assertNotSame(cSVFormat2, cSVFormat7);
1069:       assertNotSame(cSVFormat2, cSVFormat3);
1070:       assertNotSame(cSVFormat2, cSVFormat5);
1071:       assertNotSame(cSVFormat2, cSVFormat0);
1072:       assertNotSame(cSVFormat2, cSVFormat8);
1073:       assertNotSame(cSVFormat3, cSVFormat0);
1074:       assertNotSame(cSVFormat3, cSVFormat6);
1075:       assertNotSame(cSVFormat3, cSVFormat7);
1076:       assertNotSame(cSVFormat3, cSVFormat4);
1077:       assertNotSame(cSVFormat3, cSVFormat2);
1078:       assertNotSame(cSVFormat3, cSVFormat1);
1079:       assertNotSame(cSVFormat3, cSVFormat5);
1080:       assertNotSame(cSVFormat3, cSVFormat8);
1081:       assertNotSame(cSVFormat4, cSVFormat3);
1082:       assertNotSame(cSVFormat4, cSVFormat5);
1083:       assertNotSame(cSVFormat4, cSVFormat0);
1084:       assertNotSame(cSVFormat4, cSVFormat1);
1085:       assertNotSame(cSVFormat4, cSVFormat2);
1086:       assertNotSame(cSVFormat4, cSVFormat8);
1087:       assertNotSame(cSVFormat4, cSVFormat6);
1088:       assertNotSame(cSVFormat4, cSVFormat7);
1089:       assertNotSame(cSVFormat8, cSVFormat7);
1090:       assertNotSame(cSVFormat8, cSVFormat0);
1091:       assertNotSame(cSVFormat8, cSVFormat6);
1092:       assertNotSame(cSVFormat8, cSVFormat4);
1093:       assertNotSame(cSVFormat8, cSVFormat1);
1094:       assertNotSame(cSVFormat8, cSVFormat3);
1095:       assertNotSame(cSVFormat8, cSVFormat5);
1096:       assertNotSame(cSVFormat8, cSVFormat2);
1097:       assertFalse(cSVFormat0.getAutoFlush());
1098:       assertNull(cSVFormat0.getCommentMarker());
1099:       assertNull(cSVFormat0.getQuoteMode());
1100:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
1101:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
1102:       assertTrue(cSVFormat0.isQuoteCharacterSet());
1103:       assertEquals('|', cSVFormat0.getDelimiter());
1104:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
1105:       assertFalse(cSVFormat0.getSkipHeaderRecord());
1106:       assertEquals("\n", cSVFormat0.getRecordSeparator());
1107:       assertFalse(cSVFormat0.getTrailingDelimiter());
1108:       assertFalse(cSVFormat0.isCommentMarkerSet());
1109:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
1110:       assertNull(cSVFormat0.getNullString());
1111:       assertFalse(cSVFormat0.isNullStringSet());
1112:       assertFalse(cSVFormat0.getTrim());
1113:       assertTrue(cSVFormat0.isEscapeCharacterSet());
1114:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
1115:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
1116:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
1117:       assertFalse(cSVFormat1.getTrim());
1118:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
1119:       assertNull(cSVFormat1.getRecordSeparator());
1120:       assertNull(cSVFormat1.getQuoteMode());
1121:       assertFalse(cSVFormat1.isCommentMarkerSet());
1122:       assertNull(cSVFormat1.getCommentMarker());
1123:       assertFalse(cSVFormat1.getSkipHeaderRecord());
1124:       assertEquals('|', cSVFormat1.getDelimiter());
1125:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
1126:       assertTrue(cSVFormat1.isQuoteCharacterSet());
1127:       assertFalse(cSVFormat1.isNullStringSet());
1128:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
1129:       assertTrue(cSVFormat1.isEscapeCharacterSet());
1130:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
1131:       assertFalse(cSVFormat1.getTrailingDelimiter());
1132:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
1133:       assertNull(cSVFormat1.getNullString());
1134:       assertFalse(cSVFormat1.getAutoFlush());
1135:       assertFalse(cSVFormat2.getSkipHeaderRecord());
1136:       assertNull(cSVFormat2.getCommentMarker());
1137:       assertTrue(cSVFormat2.isEscapeCharacterSet());
1138:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
1139:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
1140:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
1141:       assertNull(cSVFormat2.getQuoteMode());
1142:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
1143:       assertNull(cSVFormat2.getNullString());
1144:       assertFalse(cSVFormat2.isNullStringSet());
1145:       assertFalse(cSVFormat2.getTrim());
1146:       assertFalse(cSVFormat2.getAutoFlush());
1147:       assertFalse(cSVFormat2.getTrailingDelimiter());
1148:       assertFalse(cSVFormat2.isCommentMarkerSet());
1149:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
1150:       assertNull(cSVFormat2.getRecordSeparator());
1151:       assertEquals('|', cSVFormat2.getDelimiter());
1152:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
1153:       assertTrue(cSVFormat2.isQuoteCharacterSet());
1154:       assertEquals('|', cSVFormat3.getDelimiter());
1155:       assertFalse(cSVFormat3.getTrailingDelimiter());
1156:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
1157:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
1158:       assertTrue(cSVFormat3.isCommentMarkerSet());
1159:       assertFalse(cSVFormat3.getAutoFlush());
1160:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
1161:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
1162:       assertNull(cSVFormat3.getNullString());
1163:       assertFalse(cSVFormat3.isNullStringSet());
1164:       assertFalse(cSVFormat3.getTrim());
1165:       assertFalse(cSVFormat3.getSkipHeaderRecord());
1166:       assertNull(cSVFormat3.getQuoteMode());
1167:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
1168:       assertTrue(cSVFormat3.isEscapeCharacterSet());
1169:       assertTrue(cSVFormat3.isQuoteCharacterSet());
1170:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
1171:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
1172:       assertNull(cSVFormat3.getRecordSeparator());
1173:       assertNull(cSVFormat4.getQuoteMode());
1174:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
1175:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
1176:       assertNull(cSVFormat4.getRecordSeparator());
1177:       assertTrue(cSVFormat4.isCommentMarkerSet());
1178:       assertFalse(cSVFormat4.getAutoFlush());
1179:       assertTrue(cSVFormat4.isQuoteCharacterSet());
1180:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
1181:       assertFalse(cSVFormat4.getTrim());
1182:       assertFalse(cSVFormat4.getTrailingDelimiter());
1183:       assertTrue(cSVFormat4.isEscapeCharacterSet());
1184:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
1185:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
1186:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
1187:       assertEquals('|', cSVFormat4.getDelimiter());
1188:       assertFalse(cSVFormat4.isNullStringSet());
1189:       assertNull(cSVFormat4.getNullString());
1190:       assertFalse(cSVFormat4.getSkipHeaderRecord());
1191:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
1192:       assertTrue(cSVFormat8.isEscapeCharacterSet());
1193:       assertFalse(cSVFormat8.getAllowMissingColumnNames());
1194:       assertEquals('Q', (char)cSVFormat8.getCommentMarker());
1195:       assertEquals('\"', (char)cSVFormat8.getQuoteCharacter());
1196:       assertNull(cSVFormat8.getQuoteMode());
1197:       assertFalse(cSVFormat8.getTrailingDelimiter());
1198:       assertEquals('\\', (char)cSVFormat8.getEscapeCharacter());
1199:       assertFalse(cSVFormat8.getIgnoreSurroundingSpaces());
1200:       assertFalse(cSVFormat8.getAutoFlush());
1201:       assertNull(cSVFormat8.getNullString());
1202:       assertFalse(cSVFormat8.isNullStringSet());
1203:       assertTrue(cSVFormat8.isQuoteCharacterSet());
1204:       assertFalse(cSVFormat8.getTrim());
1205:       assertFalse(cSVFormat8.getIgnoreHeaderCase());
1206:       assertTrue(cSVFormat8.isCommentMarkerSet());
1207:       assertNull(cSVFormat8.getRecordSeparator());
1208:       assertFalse(cSVFormat8.getSkipHeaderRecord());
1209:       assertEquals('|', cSVFormat8.getDelimiter());
1210:       assertTrue(cSVFormat8.getIgnoreEmptyLines());
1211:       assertFalse(cSVFormat0.equals((Object)cSVFormat6));
1212:       assertFalse(cSVFormat0.equals((Object)cSVFormat4));
1213:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
1214:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
1215:       assertFalse(cSVFormat0.equals((Object)cSVFormat5));
1216:       assertFalse(cSVFormat0.equals((Object)cSVFormat7));
1217:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
1218:       assertFalse(cSVFormat1.equals((Object)cSVFormat7));
1219:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
1220:       assertFalse(cSVFormat1.equals((Object)cSVFormat5));
1221:       assertFalse(cSVFormat1.equals((Object)cSVFormat6));
1222:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
1223:       assertFalse(cSVFormat1.equals((Object)cSVFormat4));
1224:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
1225:       assertFalse(cSVFormat2.equals((Object)cSVFormat6));
1226:       assertFalse(cSVFormat2.equals((Object)cSVFormat4));
1227:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
1228:       assertFalse(cSVFormat2.equals((Object)cSVFormat7));
1229:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
1230:       assertFalse(cSVFormat2.equals((Object)cSVFormat5));
1231:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
1232:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
1233:       assertFalse(cSVFormat3.equals((Object)cSVFormat6));
1234:       assertFalse(cSVFormat3.equals((Object)cSVFormat7));
1235:       assertFalse(cSVFormat3.equals((Object)cSVFormat4));
1236:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
1237:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
1238:       assertFalse(cSVFormat3.equals((Object)cSVFormat5));
1239:       assertTrue(cSVFormat4.equals((Object)cSVFormat7));
1240:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
1241:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
1242:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
1243:       assertFalse(cSVFormat4.equals((Object)cSVFormat2));
1244:       assertTrue(cSVFormat4.equals((Object)cSVFormat6));
1245:       assertTrue(cSVFormat4.equals((Object)cSVFormat5));
1246:       assertTrue(cSVFormat8.equals((Object)cSVFormat6));
1247:       assertTrue(cSVFormat8.equals((Object)cSVFormat4));
1248:       assertTrue(cSVFormat8.equals((Object)cSVFormat5));
1249:       assertTrue(cSVFormat8.equals((Object)cSVFormat7));
1250:       assertFalse(cSVFormat8.equals((Object)cSVFormat0));
1251:       assertFalse(cSVFormat8.equals((Object)cSVFormat1));
1252:       assertFalse(cSVFormat8.equals((Object)cSVFormat3));
1253:       assertFalse(cSVFormat8.equals((Object)cSVFormat2));
1254:       
1255:       CSVFormat cSVFormat9 = cSVFormat6.withIgnoreSurroundingSpaces();
1256:       assertNotNull(cSVFormat9);
1257:       assertNotSame(cSVFormat0, cSVFormat6);
1258:       assertNotSame(cSVFormat0, cSVFormat9);
1259:       assertNotSame(cSVFormat0, cSVFormat8);
1260:       assertNotSame(cSVFormat0, cSVFormat4);
1261:       assertNotSame(cSVFormat0, cSVFormat1);
1262:       assertNotSame(cSVFormat0, cSVFormat3);
1263:       assertNotSame(cSVFormat0, cSVFormat5);
1264:       assertNotSame(cSVFormat0, cSVFormat7);
1265:       assertNotSame(cSVFormat0, cSVFormat2);
1266:       assertNotSame(cSVFormat1, cSVFormat7);
1267:       assertNotSame(cSVFormat1, cSVFormat3);
1268:       assertNotSame(cSVFormat1, cSVFormat5);
1269:       assertNotSame(cSVFormat1, cSVFormat6);
1270:       assertNotSame(cSVFormat1, cSVFormat4);
1271:       assertNotSame(cSVFormat1, cSVFormat0);
1272:       assertNotSame(cSVFormat1, cSVFormat8);
1273:       assertNotSame(cSVFormat1, cSVFormat2);
1274:       assertNotSame(cSVFormat1, cSVFormat9);
1275:       assertNotSame(cSVFormat2, cSVFormat1);
1276:       assertNotSame(cSVFormat2, cSVFormat6);
1277:       assertNotSame(cSVFormat2, cSVFormat4);
1278:       assertNotSame(cSVFormat2, cSVFormat7);
1279:       assertNotSame(cSVFormat2, cSVFormat3);
1280:       assertNotSame(cSVFormat2, cSVFormat5);
1281:       assertNotSame(cSVFormat2, cSVFormat0);
1282:       assertNotSame(cSVFormat2, cSVFormat9);
1283:       assertNotSame(cSVFormat2, cSVFormat8);
1284:       assertNotSame(cSVFormat3, cSVFormat0);
1285:       assertNotSame(cSVFormat3, cSVFormat9);
1286:       assertNotSame(cSVFormat3, cSVFormat6);
1287:       assertNotSame(cSVFormat3, cSVFormat7);
1288:       assertNotSame(cSVFormat3, cSVFormat4);
1289:       assertNotSame(cSVFormat3, cSVFormat2);
1290:       assertNotSame(cSVFormat3, cSVFormat1);
1291:       assertNotSame(cSVFormat3, cSVFormat5);
1292:       assertNotSame(cSVFormat3, cSVFormat8);
1293:       assertNotSame(cSVFormat4, cSVFormat9);
1294:       assertNotSame(cSVFormat4, cSVFormat3);
1295:       assertNotSame(cSVFormat4, cSVFormat5);
1296:       assertNotSame(cSVFormat4, cSVFormat0);
1297:       assertNotSame(cSVFormat4, cSVFormat1);
1298:       assertNotSame(cSVFormat4, cSVFormat2);
1299:       assertNotSame(cSVFormat4, cSVFormat8);
1300:       assertNotSame(cSVFormat4, cSVFormat6);
1301:       assertNotSame(cSVFormat4, cSVFormat7);
1302:       assertNotSame(cSVFormat5, cSVFormat0);
1303:       assertNotSame(cSVFormat5, cSVFormat9);
1304:       assertNotSame(cSVFormat5, cSVFormat6);
1305:       assertNotSame(cSVFormat5, cSVFormat7);
1306:       assertNotSame(cSVFormat5, cSVFormat3);
1307:       assertNotSame(cSVFormat5, cSVFormat4);
1308:       assertNotSame(cSVFormat5, cSVFormat1);
1309:       assertNotSame(cSVFormat5, cSVFormat8);
1310:       assertNotSame(cSVFormat5, cSVFormat2);
1311:       assertNotSame(cSVFormat6, cSVFormat7);
1312:       assertNotSame(cSVFormat6, cSVFormat3);
1313:       assertNotSame(cSVFormat6, cSVFormat5);
1314:       assertNotSame(cSVFormat6, cSVFormat8);
1315:       assertNotSame(cSVFormat6, cSVFormat9);
1316:       assertNotSame(cSVFormat6, cSVFormat2);
1317:       assertNotSame(cSVFormat6, cSVFormat4);
1318:       assertNotSame(cSVFormat6, cSVFormat0);
1319:       assertNotSame(cSVFormat6, cSVFormat1);
1320:       assertNotSame(cSVFormat9, cSVFormat0);
1321:       assertNotSame(cSVFormat9, cSVFormat6);
1322:       assertNotSame(cSVFormat9, cSVFormat1);
1323:       assertNotSame(cSVFormat9, cSVFormat4);
1324:       assertNotSame(cSVFormat9, cSVFormat7);
1325:       assertNotSame(cSVFormat9, cSVFormat3);
1326:       assertNotSame(cSVFormat9, cSVFormat5);
1327:       assertNotSame(cSVFormat9, cSVFormat8);
1328:       assertNotSame(cSVFormat9, cSVFormat2);
1329:       assertFalse(cSVFormat0.getAutoFlush());
1330:       assertNull(cSVFormat0.getCommentMarker());
1331:       assertNull(cSVFormat0.getQuoteMode());
1332:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
1333:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
1334:       assertTrue(cSVFormat0.isQuoteCharacterSet());
1335:       assertEquals('|', cSVFormat0.getDelimiter());
1336:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
1337:       assertFalse(cSVFormat0.getSkipHeaderRecord());
1338:       assertEquals("\n", cSVFormat0.getRecordSeparator());
1339:       assertFalse(cSVFormat0.getTrailingDelimiter());
1340:       assertFalse(cSVFormat0.isCommentMarkerSet());
1341:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
1342:       assertNull(cSVFormat0.getNullString());
1343:       assertFalse(cSVFormat0.isNullStringSet());
1344:       assertFalse(cSVFormat0.getTrim());
1345:       assertTrue(cSVFormat0.isEscapeCharacterSet());
1346:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
1347:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
1348:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
1349:       assertFalse(cSVFormat1.getTrim());
1350:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
1351:       assertNull(cSVFormat1.getRecordSeparator());
1352:       assertNull(cSVFormat1.getQuoteMode());
1353:       assertFalse(cSVFormat1.isCommentMarkerSet());
1354:       assertNull(cSVFormat1.getCommentMarker());
1355:       assertFalse(cSVFormat1.getSkipHeaderRecord());
1356:       assertEquals('|', cSVFormat1.getDelimiter());
1357:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
1358:       assertTrue(cSVFormat1.isQuoteCharacterSet());
1359:       assertFalse(cSVFormat1.isNullStringSet());
1360:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
1361:       assertTrue(cSVFormat1.isEscapeCharacterSet());
1362:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
1363:       assertFalse(cSVFormat1.getTrailingDelimiter());
1364:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
1365:       assertNull(cSVFormat1.getNullString());
1366:       assertFalse(cSVFormat1.getAutoFlush());
1367:       assertFalse(cSVFormat2.getSkipHeaderRecord());
1368:       assertNull(cSVFormat2.getCommentMarker());
1369:       assertTrue(cSVFormat2.isEscapeCharacterSet());
1370:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
1371:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
1372:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
1373:       assertNull(cSVFormat2.getQuoteMode());
1374:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
1375:       assertNull(cSVFormat2.getNullString());
1376:       assertFalse(cSVFormat2.isNullStringSet());
1377:       assertFalse(cSVFormat2.getTrim());
1378:       assertFalse(cSVFormat2.getAutoFlush());
1379:       assertFalse(cSVFormat2.getTrailingDelimiter());
1380:       assertFalse(cSVFormat2.isCommentMarkerSet());
1381:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
1382:       assertNull(cSVFormat2.getRecordSeparator());
1383:       assertEquals('|', cSVFormat2.getDelimiter());
1384:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
1385:       assertTrue(cSVFormat2.isQuoteCharacterSet());
1386:       assertEquals('|', cSVFormat3.getDelimiter());
1387:       assertFalse(cSVFormat3.getTrailingDelimiter());
1388:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
1389:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
1390:       assertTrue(cSVFormat3.isCommentMarkerSet());
1391:       assertFalse(cSVFormat3.getAutoFlush());
1392:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
1393:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
1394:       assertNull(cSVFormat3.getNullString());
1395:       assertFalse(cSVFormat3.isNullStringSet());
1396:       assertFalse(cSVFormat3.getTrim());
1397:       assertFalse(cSVFormat3.getSkipHeaderRecord());
1398:       assertNull(cSVFormat3.getQuoteMode());
1399:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
1400:       assertTrue(cSVFormat3.isEscapeCharacterSet());
1401:       assertTrue(cSVFormat3.isQuoteCharacterSet());
1402:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
1403:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
1404:       assertNull(cSVFormat3.getRecordSeparator());
1405:       assertNull(cSVFormat4.getQuoteMode());
1406:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
1407:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
1408:       assertNull(cSVFormat4.getRecordSeparator());
1409:       assertTrue(cSVFormat4.isCommentMarkerSet());
1410:       assertFalse(cSVFormat4.getAutoFlush());
1411:       assertTrue(cSVFormat4.isQuoteCharacterSet());
1412:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
1413:       assertFalse(cSVFormat4.getTrim());
1414:       assertFalse(cSVFormat4.getTrailingDelimiter());
1415:       assertTrue(cSVFormat4.isEscapeCharacterSet());
1416:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
1417:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
1418:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
1419:       assertEquals('|', cSVFormat4.getDelimiter());
1420:       assertFalse(cSVFormat4.isNullStringSet());
1421:       assertNull(cSVFormat4.getNullString());
1422:       assertFalse(cSVFormat4.getSkipHeaderRecord());
1423:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
1424:       assertEquals('|', cSVFormat5.getDelimiter());
1425:       assertFalse(cSVFormat5.getTrailingDelimiter());
1426:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
1427:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
1428:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
1429:       assertTrue(cSVFormat5.isCommentMarkerSet());
1430:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
1431:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
1432:       assertFalse(cSVFormat5.getAutoFlush());
1433:       assertNull(cSVFormat5.getNullString());
1434:       assertFalse(cSVFormat5.isNullStringSet());
1435:       assertFalse(cSVFormat5.getSkipHeaderRecord());
1436:       assertNull(cSVFormat5.getQuoteMode());
1437:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
1438:       assertTrue(cSVFormat5.getTrim());
1439:       assertTrue(cSVFormat5.isEscapeCharacterSet());
1440:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
1441:       assertNull(cSVFormat5.getRecordSeparator());
1442:       assertTrue(cSVFormat5.isQuoteCharacterSet());
1443:       assertFalse(cSVFormat6.isNullStringSet());
1444:       assertFalse(cSVFormat6.getAllowMissingColumnNames());
1445:       assertNull(cSVFormat6.getNullString());
1446:       assertFalse(cSVFormat6.getAutoFlush());
1447:       assertFalse(cSVFormat6.getSkipHeaderRecord());
1448:       assertEquals('|', cSVFormat6.getDelimiter());
1449:       assertNull(cSVFormat6.getQuoteMode());
1450:       assertEquals('Q', (char)cSVFormat6.getCommentMarker());
1451:       assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
1452:       assertTrue(cSVFormat6.getTrim());
1453:       assertFalse(cSVFormat6.getIgnoreHeaderCase());
1454:       assertTrue(cSVFormat6.isCommentMarkerSet());
1455:       assertNull(cSVFormat6.getRecordSeparator());
1456:       assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
1457:       assertTrue(cSVFormat6.getIgnoreEmptyLines());
1458:       assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
1459:       assertTrue(cSVFormat6.isQuoteCharacterSet());
1460:       assertFalse(cSVFormat6.getTrailingDelimiter());
1461:       assertTrue(cSVFormat6.isEscapeCharacterSet());
1462:       assertFalse(cSVFormat9.getSkipHeaderRecord());
1463:       assertNull(cSVFormat9.getQuoteMode());
1464:       assertTrue(cSVFormat9.getIgnoreEmptyLines());
1465:       assertTrue(cSVFormat9.getIgnoreSurroundingSpaces());
1466:       assertTrue(cSVFormat9.getTrim());
1467:       assertTrue(cSVFormat9.isEscapeCharacterSet());
1468:       assertFalse(cSVFormat9.getIgnoreHeaderCase());
1469:       assertNull(cSVFormat9.getRecordSeparator());
1470:       assertTrue(cSVFormat9.isQuoteCharacterSet());
1471:       assertEquals('|', cSVFormat9.getDelimiter());
1472:       assertFalse(cSVFormat9.getTrailingDelimiter());
1473:       assertEquals('Q', (char)cSVFormat9.getCommentMarker());
1474:       assertEquals('\"', (char)cSVFormat9.getQuoteCharacter());
1475:       assertFalse(cSVFormat9.getAllowMissingColumnNames());
1476:       assertFalse(cSVFormat9.isNullStringSet());
1477:       assertTrue(cSVFormat9.isCommentMarkerSet());
1478:       assertEquals('\\', (char)cSVFormat9.getEscapeCharacter());
1479:       assertNull(cSVFormat9.getNullString());
1480:       assertFalse(cSVFormat9.getAutoFlush());
1481:       assertFalse(cSVFormat0.equals((Object)cSVFormat6));
1482:       assertFalse(cSVFormat0.equals((Object)cSVFormat8));
1483:       assertFalse(cSVFormat0.equals((Object)cSVFormat4));
1484:       assertFalse(cSVFormat0.equals((Object)cSVFormat1));
1485:       assertFalse(cSVFormat0.equals((Object)cSVFormat3));
1486:       assertFalse(cSVFormat0.equals((Object)cSVFormat5));
1487:       assertFalse(cSVFormat0.equals((Object)cSVFormat7));
1488:       assertFalse(cSVFormat0.equals((Object)cSVFormat2));
1489:       assertFalse(cSVFormat1.equals((Object)cSVFormat7));
1490:       assertFalse(cSVFormat1.equals((Object)cSVFormat3));
1491:       assertFalse(cSVFormat1.equals((Object)cSVFormat5));
1492:       assertFalse(cSVFormat1.equals((Object)cSVFormat6));
1493:       assertTrue(cSVFormat1.equals((Object)cSVFormat2));
1494:       assertFalse(cSVFormat1.equals((Object)cSVFormat4));
1495:       assertFalse(cSVFormat1.equals((Object)cSVFormat0));
1496:       assertFalse(cSVFormat1.equals((Object)cSVFormat8));
1497:       assertFalse(cSVFormat2.equals((Object)cSVFormat6));
1498:       assertFalse(cSVFormat2.equals((Object)cSVFormat4));
1499:       assertTrue(cSVFormat2.equals((Object)cSVFormat1));
1500:       assertFalse(cSVFormat2.equals((Object)cSVFormat7));
1501:       assertFalse(cSVFormat2.equals((Object)cSVFormat3));
1502:       assertFalse(cSVFormat2.equals((Object)cSVFormat5));
1503:       assertFalse(cSVFormat2.equals((Object)cSVFormat0));
1504:       assertFalse(cSVFormat2.equals((Object)cSVFormat8));
1505:       assertFalse(cSVFormat3.equals((Object)cSVFormat0));
1506:       assertFalse(cSVFormat3.equals((Object)cSVFormat6));
1507:       assertFalse(cSVFormat3.equals((Object)cSVFormat7));
1508:       assertFalse(cSVFormat3.equals((Object)cSVFormat4));
1509:       assertFalse(cSVFormat3.equals((Object)cSVFormat2));
1510:       assertFalse(cSVFormat3.equals((Object)cSVFormat1));
1511:       assertFalse(cSVFormat3.equals((Object)cSVFormat5));
1512:       assertFalse(cSVFormat3.equals((Object)cSVFormat8));
1513:       assertTrue(cSVFormat4.equals((Object)cSVFormat8));
1514:       assertTrue(cSVFormat4.equals((Object)cSVFormat7));
1515:       assertFalse(cSVFormat4.equals((Object)cSVFormat3));
1516:       assertFalse(cSVFormat4.equals((Object)cSVFormat0));
1517:       assertFalse(cSVFormat4.equals((Object)cSVFormat1));
1518:       
1519:       Character character1 = cSVFormat5.getQuoteCharacter();
1520:       assertNotNull(character1);
1521:       assertNotSame(cSVFormat0, cSVFormat6);
1522:       assertNotSame(cSVFormat0, cSVFormat9);
1523:       assertNotSame(cSVFormat0, cSVFormat8);
1524:       assertNotSame(cSVFormat0, cSVFormat4);
1525:       assertNotSame(cSVFormat0, cSVFormat1);
1526:       assertNotSame(cSVFormat0, cSVFormat3);
1527:       assertNotSame(cSVFormat0, cSVFormat5);
1528:       assertNotSame(cSVFormat0, cSVFormat7);
1529:       assertNotSame(cSVFormat0, cSVFormat2);
1530:       assertNotSame(cSVFormat1, cSVFormat7);
1531:       assertNotSame(cSVFormat1, cSVFormat3);
1532:       assertNotSame(cSVFormat1, cSVFormat5);
1533:       assertNotSame(cSVFormat1, cSVFormat6);
1534:       assertNotSame(cSVFormat1, cSVFormat4);
1535:       assertNotSame(cSVFormat1, cSVFormat0);
1536:       assertNotSame(cSVFormat1, cSVFormat8);
1537:       assertNotSame(cSVFormat1, cSVFormat2);
1538:       assertNotSame(cSVFormat1, cSVFormat9);
1539:       assertNotSame(cSVFormat2, cSVFormat1);
1540:       assertNotSame(cSVFormat2, cSVFormat6);
1541:       assertNotSame(cSVFormat2, cSVFormat4);
1542:       assertNotSame(cSVFormat2, cSVFormat7);
1543:       assertNotSame(cSVFormat2, cSVFormat3);
1544:       assertNotSame(cSVFormat2, cSVFormat5);
1545:       assertNotSame(cSVFormat2, cSVFormat0);
1546:       assertNotSame(cSVFormat2, cSVFormat9);
1547:       assertNotSame(cSVFormat2, cSVFormat8);
1548:       assertNotSame(cSVFormat3, cSVFormat0);
1549:       assertNotSame(cSVFormat3, cSVFormat9);
1550:       assertNotSame(cSVFormat3, cSVFormat6);
1551:       assertNotSame(cSVFormat3, cSVFormat7);
1552:       assertNotSame(cSVFormat3, cSVFormat4);
1553:       assertNotSame(cSVFormat3, cSVFormat2);
1554:       assertNotSame(cSVFormat3, cSVFormat1);
1555:       assertNotSame(cSVFormat3, cSVFormat5);
1556:       assertNotSame(cSVFormat3, cSVFormat8);
1557:       assertNotSame(cSVFormat4, cSVFormat9);
1558:       assertNotSame(cSVFormat4, cSVFormat3);
1559:       assertNotSame(cSVFormat4, cSVFormat5);
1560:       assertNotSame(cSVFormat4, cSVFormat0);
1561:       assertNotSame(cSVFormat4, cSVFormat1);
1562:       assertNotSame(cSVFormat4, cSVFormat2);
1563:       assertNotSame(cSVFormat4, cSVFormat8);
1564:       assertNotSame(cSVFormat4, cSVFormat6);
1565:       assertNotSame(cSVFormat4, cSVFormat7);
1566:       assertNotSame(cSVFormat5, cSVFormat0);
1567:       assertNotSame(cSVFormat5, cSVFormat9);
1568:       assertNotSame(cSVFormat5, cSVFormat6);
1569:       assertNotSame(cSVFormat5, cSVFormat7);
1570:       assertNotSame(cSVFormat5, cSVFormat3);
1571:       assertNotSame(cSVFormat5, cSVFormat4);
1572:       assertNotSame(cSVFormat5, cSVFormat1);
1573:       assertNotSame(cSVFormat5, cSVFormat8);
1574:       assertNotSame(cSVFormat5, cSVFormat2);
1575:       assertFalse(cSVFormat0.getAutoFlush());
1576:       assertNull(cSVFormat0.getCommentMarker());
1577:       assertNull(cSVFormat0.getQuoteMode());
1578:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
1579:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
1580:       assertTrue(cSVFormat0.isQuoteCharacterSet());
1581:       assertEquals('|', cSVFormat0.getDelimiter());
1582:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
1583:       assertFalse(cSVFormat0.getSkipHeaderRecord());
1584:       assertEquals("\n", cSVFormat0.getRecordSeparator());
1585:       assertFalse(cSVFormat0.getTrailingDelimiter());
1586:       assertFalse(cSVFormat0.isCommentMarkerSet());
1587:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
1588:       assertNull(cSVFormat0.getNullString());
1589:       assertFalse(cSVFormat0.isNullStringSet());
1590:       assertFalse(cSVFormat0.getTrim());
1591:       assertTrue(cSVFormat0.isEscapeCharacterSet());
1592:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
1593:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
1594:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
1595:       assertFalse(cSVFormat1.getTrim());
1596:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
1597:       assertNull(cSVFormat1.getRecordSeparator());
1598:       assertNull(cSVFormat1.getQuoteMode());
1599:       assertFalse(cSVFormat1.isCommentMarkerSet());
1600:       assertNull(cSVFormat1.getCommentMarker());
1601:       assertFalse(cSVFormat1.getSkipHeaderRecord());
1602:       assertEquals('|', cSVFormat1.getDelimiter());
1603:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
1604:       assertTrue(cSVFormat1.isQuoteCharacterSet());
1605:       assertFalse(cSVFormat1.isNullStringSet());
1606:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
1607:       assertTrue(cSVFormat1.isEscapeCharacterSet());
1608:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
1609:       assertFalse(cSVFormat1.getTrailingDelimiter());
1610:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
1611:       assertNull(cSVFormat1.getNullString());
1612:       assertFalse(cSVFormat1.getAutoFlush());
1613:       assertFalse(cSVFormat2.getSkipHeaderRecord());
1614:       assertNull(cSVFormat2.getCommentMarker());
1615:       assertTrue(cSVFormat2.isEscapeCharacterSet());
1616:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
1617:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
1618:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
1619:       assertNull(cSVFormat2.getQuoteMode());
1620:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
1621:       assertNull(cSVFormat2.getNullString());
1622:       assertFalse(cSVFormat2.isNullStringSet());
1623:       assertFalse(cSVFormat2.getTrim());
1624:       assertFalse(cSVFormat2.getAutoFlush());
1625:       assertFalse(cSVFormat2.getTrailingDelimiter());
1626:       assertFalse(cSVFormat2.isCommentMarkerSet());
1627:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
1628:       assertNull(cSVFormat2.getRecordSeparator());
1629:       assertEquals('|', cSVFormat2.getDelimiter());
1630:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
1631:       assertTrue(cSVFormat2.isQuoteCharacterSet());
1632:       assertEquals('|', cSVFormat3.getDelimiter());
1633:       assertFalse(cSVFormat3.getTrailingDelimiter());
1634:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
1635:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
1636:       assertTrue(cSVFormat3.isCommentMarkerSet());
1637:       assertFalse(cSVFormat3.getAutoFlush());
1638:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
1639:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
1640:       assertNull(cSVFormat3.getNullString());
1641:       assertFalse(cSVFormat3.isNullStringSet());
1642:       assertFalse(cSVFormat3.getTrim());
1643:       assertFalse(cSVFormat3.getSkipHeaderRecord());
1644:       assertNull(cSVFormat3.getQuoteMode());
1645:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
1646:       assertTrue(cSVFormat3.isEscapeCharacterSet());
1647:       assertTrue(cSVFormat3.isQuoteCharacterSet());
1648:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
1649:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
1650:       assertNull(cSVFormat3.getRecordSeparator());
1651:       assertNull(cSVFormat4.getQuoteMode());
1652:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
1653:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
1654:       assertNull(cSVFormat4.getRecordSeparator());
1655:       assertTrue(cSVFormat4.isCommentMarkerSet());
1656:       assertFalse(cSVFormat4.getAutoFlush());
1657:       assertTrue(cSVFormat4.isQuoteCharacterSet());
1658:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
1659:       assertFalse(cSVFormat4.getTrim());
1660:       assertFalse(cSVFormat4.getTrailingDelimiter());
1661:       assertTrue(cSVFormat4.isEscapeCharacterSet());
1662:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
1663:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
1664:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
1665:       assertEquals('|', cSVFormat4.getDelimiter());
1666:       assertFalse(cSVFormat4.isNullStringSet());
1667:       assertNull(cSVFormat4.getNullString());
1668:       assertFalse(cSVFormat4.getSkipHeaderRecord());
1669:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
1670:       assertEquals('|', cSVFormat5.getDelimiter());
1671:       assertFalse(cSVFormat5.getTrailingDelimiter());
1672:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
1673:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
1674:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
1675:       assertTrue(cSVFormat5.isCommentMarkerSet());
1676:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
1677:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
1678:       assertFalse(cSVFormat5.getAutoFlush());
1679:       assertNull(cSVFormat5.getNullString());
1680:       assertFalse(cSVFormat5.isNullStringSet());
1681:       assertFalse(cSVFormat5.getSkipHeaderRecord());
1682:       assertNull(cSVFormat5.getQuoteMode());
1683:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
1684:       assertTrue(cSVFormat5.getTrim());
1685:       assertTrue(cSVFormat5.isEscapeCharacterSet());
1686:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
1687:       assertNull(cSVFormat5.getRecordSeparator());
1688:       assertTrue(cSVFormat5.isQuoteCharacterSet());
1689:       
1690:       CSVFormat cSVFormat10 = cSVFormat6.withTrim(false);
1691:       assertNotNull(cSVFormat10);
1692:       assertNotSame(cSVFormat0, cSVFormat6);
1693:       assertNotSame(cSVFormat0, cSVFormat9);
1694:       assertNotSame(cSVFormat0, cSVFormat8);
1695:       assertNotSame(cSVFormat0, cSVFormat4);
1696:       assertNotSame(cSVFormat0, cSVFormat1);
1697:       assertNotSame(cSVFormat0, cSVFormat3);
1698:       assertNotSame(cSVFormat0, cSVFormat5);
1699:       assertNotSame(cSVFormat0, cSVFormat7);
1700:       assertNotSame(cSVFormat0, cSVFormat2);
1701:       assertNotSame(cSVFormat0, cSVFormat10);
1702:       assertNotSame(cSVFormat1, cSVFormat7);
1703:       assertNotSame(cSVFormat1, cSVFormat10);
1704:       assertNotSame(cSVFormat1, cSVFormat3);
1705:       assertNotSame(cSVFormat1, cSVFormat5);
1706:       assertNotSame(cSVFormat1, cSVFormat6);
1707:       assertNotSame(cSVFormat1, cSVFormat4);
1708:       assertNotSame(cSVFormat1, cSVFormat0);
1709:       assertNotSame(cSVFormat1, cSVFormat8);
1710:       assertNotSame(cSVFormat1, cSVFormat2);
1711:       assertNotSame(cSVFormat1, cSVFormat9);
1712:       assertNotSame(cSVFormat2, cSVFormat1);
1713:       assertNotSame(cSVFormat2, cSVFormat6);
1714:       assertNotSame(cSVFormat2, cSVFormat4);
1715:       assertNotSame(cSVFormat2, cSVFormat7);
1716:       assertNotSame(cSVFormat2, cSVFormat10);
1717:       assertNotSame(cSVFormat2, cSVFormat3);
1718:       assertNotSame(cSVFormat2, cSVFormat5);
1719:       assertNotSame(cSVFormat2, cSVFormat0);
1720:       assertNotSame(cSVFormat2, cSVFormat9);
1721:       assertNotSame(cSVFormat2, cSVFormat8);
1722:       assertNotSame(cSVFormat3, cSVFormat0);
1723:       assertNotSame(cSVFormat3, cSVFormat9);
1724:       assertNotSame(cSVFormat3, cSVFormat6);
1725:       assertNotSame(cSVFormat3, cSVFormat7);
1726:       assertNotSame(cSVFormat3, cSVFormat10);
1727:       assertNotSame(cSVFormat3, cSVFormat4);
1728:       assertNotSame(cSVFormat3, cSVFormat2);
1729:       assertNotSame(cSVFormat3, cSVFormat1);
1730:       assertNotSame(cSVFormat3, cSVFormat5);
1731:       assertNotSame(cSVFormat3, cSVFormat8);
1732:       assertNotSame(cSVFormat4, cSVFormat9);
1733:       assertNotSame(cSVFormat4, cSVFormat10);
1734:       assertNotSame(cSVFormat4, cSVFormat3);
1735:       assertNotSame(cSVFormat4, cSVFormat5);
1736:       assertNotSame(cSVFormat4, cSVFormat0);
1737:       assertNotSame(cSVFormat4, cSVFormat1);
1738:       assertNotSame(cSVFormat4, cSVFormat2);
1739:       assertNotSame(cSVFormat4, cSVFormat8);
1740:       assertNotSame(cSVFormat4, cSVFormat6);
1741:       assertNotSame(cSVFormat4, cSVFormat7);
1742:       assertNotSame(cSVFormat5, cSVFormat0);
1743:       assertNotSame(cSVFormat5, cSVFormat9);
1744:       assertNotSame(cSVFormat5, cSVFormat6);
1745:       assertNotSame(cSVFormat5, cSVFormat7);
1746:       assertNotSame(cSVFormat5, cSVFormat3);
1747:       assertNotSame(cSVFormat5, cSVFormat10);
1748:       assertNotSame(cSVFormat5, cSVFormat4);
1749:       assertNotSame(cSVFormat5, cSVFormat1);
1750:       assertNotSame(cSVFormat5, cSVFormat8);
1751:       assertNotSame(cSVFormat5, cSVFormat2);
1752:       assertNotSame(cSVFormat6, cSVFormat7);
1753:       assertNotSame(cSVFormat6, cSVFormat10);
1754:       assertNotSame(cSVFormat6, cSVFormat3);
1755:       assertNotSame(cSVFormat6, cSVFormat5);
1756:       assertNotSame(cSVFormat6, cSVFormat8);
1757:       assertNotSame(cSVFormat6, cSVFormat9);
1758:       assertNotSame(cSVFormat6, cSVFormat2);
1759:       assertNotSame(cSVFormat6, cSVFormat4);
1760:       assertNotSame(cSVFormat6, cSVFormat0);
1761:       assertNotSame(cSVFormat6, cSVFormat1);
1762:       assertNotSame(cSVFormat10, cSVFormat4);
1763:       assertNotSame(cSVFormat10, cSVFormat8);
1764:       assertNotSame(cSVFormat10, cSVFormat1);
1765:       assertNotSame(cSVFormat10, cSVFormat3);
1766:       assertNotSame(cSVFormat10, cSVFormat5);
1767:       assertNotSame(cSVFormat10, cSVFormat0);
1768:       assertNotSame(cSVFormat10, cSVFormat2);
1769:       assertNotSame(cSVFormat10, cSVFormat9);
1770:       assertNotSame(cSVFormat10, cSVFormat6);
1771:       assertNotSame(cSVFormat10, cSVFormat7);
1772:       assertFalse(cSVFormat0.getAutoFlush());
1773:       assertNull(cSVFormat0.getCommentMarker());
1774:       assertNull(cSVFormat0.getQuoteMode());
1775:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
1776:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
1777:       assertTrue(cSVFormat0.isQuoteCharacterSet());
1778:       assertEquals('|', cSVFormat0.getDelimiter());
1779:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
1780:       assertFalse(cSVFormat0.getSkipHeaderRecord());
1781:       assertEquals("\n", cSVFormat0.getRecordSeparator());
1782:       assertFalse(cSVFormat0.getTrailingDelimiter());
1783:       assertFalse(cSVFormat0.isCommentMarkerSet());
1784:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
1785:       assertNull(cSVFormat0.getNullString());
1786:       assertFalse(cSVFormat0.isNullStringSet());
1787:       assertFalse(cSVFormat0.getTrim());
1788:       assertTrue(cSVFormat0.isEscapeCharacterSet());
1789:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
1790:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
1791:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
1792:       assertFalse(cSVFormat1.getTrim());
1793:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
1794:       assertNull(cSVFormat1.getRecordSeparator());
1795:       assertNull(cSVFormat1.getQuoteMode());
1796:       assertFalse(cSVFormat1.isCommentMarkerSet());
1797:       assertNull(cSVFormat1.getCommentMarker());
1798:       assertFalse(cSVFormat1.getSkipHeaderRecord());
1799:       assertEquals('|', cSVFormat1.getDelimiter());
1800:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
1801:       assertTrue(cSVFormat1.isQuoteCharacterSet());
1802:       assertFalse(cSVFormat1.isNullStringSet());
1803:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
1804:       assertTrue(cSVFormat1.isEscapeCharacterSet());
1805:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
1806:       assertFalse(cSVFormat1.getTrailingDelimiter());
1807:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
1808:       assertNull(cSVFormat1.getNullString());
1809:       assertFalse(cSVFormat1.getAutoFlush());
1810:       assertFalse(cSVFormat2.getSkipHeaderRecord());
1811:       assertNull(cSVFormat2.getCommentMarker());
1812:       assertTrue(cSVFormat2.isEscapeCharacterSet());
1813:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
1814:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
1815:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
1816:       assertNull(cSVFormat2.getQuoteMode());
1817:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
1818:       assertNull(cSVFormat2.getNullString());
1819:       assertFalse(cSVFormat2.isNullStringSet());
1820:       assertFalse(cSVFormat2.getTrim());
1821:       assertFalse(cSVFormat2.getAutoFlush());
1822:       assertFalse(cSVFormat2.getTrailingDelimiter());
1823:       assertFalse(cSVFormat2.isCommentMarkerSet());
1824:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
1825:       assertNull(cSVFormat2.getRecordSeparator());
1826:       assertEquals('|', cSVFormat2.getDelimiter());
1827:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
1828:       assertTrue(cSVFormat2.isQuoteCharacterSet());
1829:       assertEquals('|', cSVFormat3.getDelimiter());
1830:       assertFalse(cSVFormat3.getTrailingDelimiter());
1831:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
1832:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
1833:       assertTrue(cSVFormat3.isCommentMarkerSet());
1834:       assertFalse(cSVFormat3.getAutoFlush());
1835:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
1836:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
1837:       assertNull(cSVFormat3.getNullString());
1838:       assertFalse(cSVFormat3.isNullStringSet());
1839:       assertFalse(cSVFormat3.getTrim());
1840:       assertFalse(cSVFormat3.getSkipHeaderRecord());
1841:       assertNull(cSVFormat3.getQuoteMode());
1842:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
1843:       assertTrue(cSVFormat3.isEscapeCharacterSet());
1844:       assertTrue(cSVFormat3.isQuoteCharacterSet());
1845:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
1846:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
1847:       assertNull(cSVFormat3.getRecordSeparator());
1848:       assertNull(cSVFormat4.getQuoteMode());
1849:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
1850:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
1851:       assertNull(cSVFormat4.getRecordSeparator());
1852:       assertTrue(cSVFormat4.isCommentMarkerSet());
1853:       assertFalse(cSVFormat4.getAutoFlush());
1854:       assertTrue(cSVFormat4.isQuoteCharacterSet());
1855:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
1856:       assertFalse(cSVFormat4.getTrim());
1857:       assertFalse(cSVFormat4.getTrailingDelimiter());
1858:       assertTrue(cSVFormat4.isEscapeCharacterSet());
1859:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
1860:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
1861:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
1862:       assertEquals('|', cSVFormat4.getDelimiter());
1863:       assertFalse(cSVFormat4.isNullStringSet());
1864:       assertNull(cSVFormat4.getNullString());
1865:       assertFalse(cSVFormat4.getSkipHeaderRecord());
1866:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
1867:       assertEquals('|', cSVFormat5.getDelimiter());
1868:       assertFalse(cSVFormat5.getTrailingDelimiter());
1869:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
1870:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
1871:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
1872:       assertTrue(cSVFormat5.isCommentMarkerSet());
1873:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
1874:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
1875:       assertFalse(cSVFormat5.getAutoFlush());
1876:       assertNull(cSVFormat5.getNullString());
1877:       assertFalse(cSVFormat5.isNullStringSet());
1878:       assertFalse(cSVFormat5.getSkipHeaderRecord());
1879:       assertNull(cSVFormat5.getQuoteMode());
1880:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
1881:       assertTrue(cSVFormat5.getTrim());
1882:       assertTrue(cSVFormat5.isEscapeCharacterSet());
1883:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
1884:       assertNull(cSVFormat5.getRecordSeparator());
1885:       assertTrue(cSVFormat5.isQuoteCharacterSet());
1886:       assertFalse(cSVFormat6.isNullStringSet());
1887:       assertFalse(cSVFormat6.getAllowMissingColumnNames());
1888:       assertNull(cSVFormat6.getNullString());
1889:       assertFalse(cSVFormat6.getAutoFlush());
1890:       assertFalse(cSVFormat6.getSkipHeaderRecord());
1891:       assertEquals('|', cSVFormat6.getDelimiter());
1892:       assertNull(cSVFormat6.getQuoteMode());
1893:       assertEquals('Q', (char)cSVFormat6.getCommentMarker());
1894:       assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
1895:       assertTrue(cSVFormat6.getTrim());
1896:       assertFalse(cSVFormat6.getIgnoreHeaderCase());
1897:       assertTrue(cSVFormat6.isCommentMarkerSet());
1898:       assertNull(cSVFormat6.getRecordSeparator());
1899:       assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
1900:       assertTrue(cSVFormat6.getIgnoreEmptyLines());
1901:       assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
1902:       assertTrue(cSVFormat6.isQuoteCharacterSet());
1903:       assertFalse(cSVFormat6.getTrailingDelimiter());
1904:       assertTrue(cSVFormat6.isEscapeCharacterSet());
1905:       assertFalse(cSVFormat10.getTrailingDelimiter());
1906:       assertFalse(cSVFormat10.getTrim());
1907:       assertTrue(cSVFormat10.isQuoteCharacterSet());
1908:       assertFalse(cSVFormat10.getIgnoreSurroundingSpaces());
1909:       assertNull(cSVFormat10.getNullString());
1910:       assertNull(cSVFormat10.getRecordSeparator());
1911:       assertTrue(cSVFormat10.isCommentMarkerSet());
1912:       assertFalse(cSVFormat10.getIgnoreHeaderCase());
1913:       assertFalse(cSVFormat10.getAllowMissingColumnNames());
1914:       assertFalse(cSVFormat10.getAutoFlush());
1915:       assertTrue(cSVFormat10.isEscapeCharacterSet());
1916:       assertFalse(cSVFormat10.isNullStringSet());
1917:       assertEquals('\\', (char)cSVFormat10.getEscapeCharacter());
1918:       assertNull(cSVFormat10.getQuoteMode());
1919:       assertTrue(cSVFormat10.getIgnoreEmptyLines());
1920:       assertEquals('\"', (char)cSVFormat10.getQuoteCharacter());
1921:       assertEquals('Q', (char)cSVFormat10.getCommentMarker());
1922:       assertFalse(cSVFormat10.getSkipHeaderRecord());
1923:       assertEquals('|', cSVFormat10.getDelimiter());
1924:       
1925:       CSVFormat cSVFormat11 = cSVFormat10.DEFAULT.withSkipHeaderRecord(true);
1926:       assertNotNull(cSVFormat11);
1927:       assertNotSame(cSVFormat0, cSVFormat6);
1928:       assertNotSame(cSVFormat0, cSVFormat11);
1929:       assertNotSame(cSVFormat0, cSVFormat9);
1930:       assertNotSame(cSVFormat0, cSVFormat8);
1931:       assertNotSame(cSVFormat0, cSVFormat4);
1932:       assertNotSame(cSVFormat0, cSVFormat1);
1933:       assertNotSame(cSVFormat0, cSVFormat3);
1934:       assertNotSame(cSVFormat0, cSVFormat5);
1935:       assertNotSame(cSVFormat0, cSVFormat7);
1936:       assertNotSame(cSVFormat0, cSVFormat2);
1937:       assertNotSame(cSVFormat0, cSVFormat10);
1938:       assertNotSame(cSVFormat1, cSVFormat7);
1939:       assertNotSame(cSVFormat1, cSVFormat10);
1940:       assertNotSame(cSVFormat1, cSVFormat3);
1941:       assertNotSame(cSVFormat1, cSVFormat5);
1942:       assertNotSame(cSVFormat1, cSVFormat6);
1943:       assertNotSame(cSVFormat1, cSVFormat11);
1944:       assertNotSame(cSVFormat1, cSVFormat4);
1945:       assertNotSame(cSVFormat1, cSVFormat0);
1946:       assertNotSame(cSVFormat1, cSVFormat8);
1947:       assertNotSame(cSVFormat1, cSVFormat2);
1948:       assertNotSame(cSVFormat1, cSVFormat9);
1949:       assertNotSame(cSVFormat2, cSVFormat11);
1950:       assertNotSame(cSVFormat2, cSVFormat1);
1951:       assertNotSame(cSVFormat2, cSVFormat6);
1952:       assertNotSame(cSVFormat2, cSVFormat4);
1953:       assertNotSame(cSVFormat2, cSVFormat7);
1954:       assertNotSame(cSVFormat2, cSVFormat10);
1955:       assertNotSame(cSVFormat2, cSVFormat3);
1956:       assertNotSame(cSVFormat2, cSVFormat5);
1957:       assertNotSame(cSVFormat2, cSVFormat0);
1958:       assertNotSame(cSVFormat2, cSVFormat9);
1959:       assertNotSame(cSVFormat2, cSVFormat8);
1960:       assertNotSame(cSVFormat3, cSVFormat0);
1961:       assertNotSame(cSVFormat3, cSVFormat9);
1962:       assertNotSame(cSVFormat3, cSVFormat11);
1963:       assertNotSame(cSVFormat3, cSVFormat6);
1964:       assertNotSame(cSVFormat3, cSVFormat7);
1965:       assertNotSame(cSVFormat3, cSVFormat10);
1966:       assertNotSame(cSVFormat3, cSVFormat4);
1967:       assertNotSame(cSVFormat3, cSVFormat2);
1968:       assertNotSame(cSVFormat3, cSVFormat1);
1969:       assertNotSame(cSVFormat3, cSVFormat5);
1970:       assertNotSame(cSVFormat3, cSVFormat8);
1971:       assertNotSame(cSVFormat4, cSVFormat9);
1972:       assertNotSame(cSVFormat4, cSVFormat10);
1973:       assertNotSame(cSVFormat4, cSVFormat3);
1974:       assertNotSame(cSVFormat4, cSVFormat5);
1975:       assertNotSame(cSVFormat4, cSVFormat0);
1976:       assertNotSame(cSVFormat4, cSVFormat1);
1977:       assertNotSame(cSVFormat4, cSVFormat2);
1978:       assertNotSame(cSVFormat4, cSVFormat8);
1979:       assertNotSame(cSVFormat4, cSVFormat11);
1980:       assertNotSame(cSVFormat4, cSVFormat6);
1981:       assertNotSame(cSVFormat4, cSVFormat7);
1982:       assertNotSame(cSVFormat5, cSVFormat0);
1983:       assertNotSame(cSVFormat5, cSVFormat9);
1984:       assertNotSame(cSVFormat5, cSVFormat6);
1985:       assertNotSame(cSVFormat5, cSVFormat11);
1986:       assertNotSame(cSVFormat5, cSVFormat7);
1987:       assertNotSame(cSVFormat5, cSVFormat3);
1988:       assertNotSame(cSVFormat5, cSVFormat10);
1989:       assertNotSame(cSVFormat5, cSVFormat4);
1990:       assertNotSame(cSVFormat5, cSVFormat1);
1991:       assertNotSame(cSVFormat5, cSVFormat8);
1992:       assertNotSame(cSVFormat5, cSVFormat2);
1993:       assertNotSame(cSVFormat6, cSVFormat7);
1994:       assertNotSame(cSVFormat6, cSVFormat10);
1995:       assertNotSame(cSVFormat6, cSVFormat3);
1996:       assertNotSame(cSVFormat6, cSVFormat5);
1997:       assertNotSame(cSVFormat6, cSVFormat8);
1998:       assertNotSame(cSVFormat6, cSVFormat9);
1999:       assertNotSame(cSVFormat6, cSVFormat2);
2000:       assertNotSame(cSVFormat6, cSVFormat11);
2001:       assertNotSame(cSVFormat6, cSVFormat4);
2002:       assertNotSame(cSVFormat6, cSVFormat0);
2003:       assertNotSame(cSVFormat6, cSVFormat1);
2004:       assertNotSame(cSVFormat10, cSVFormat4);
2005:       assertNotSame(cSVFormat10, cSVFormat8);
2006:       assertNotSame(cSVFormat10, cSVFormat11);
2007:       assertNotSame(cSVFormat10, cSVFormat1);
2008:       assertNotSame(cSVFormat10, cSVFormat3);
2009:       assertNotSame(cSVFormat10, cSVFormat5);
2010:       assertNotSame(cSVFormat10, cSVFormat0);
2011:       assertNotSame(cSVFormat10, cSVFormat2);
2012:       assertNotSame(cSVFormat10, cSVFormat9);
2013:       assertNotSame(cSVFormat10, cSVFormat6);
2014:       assertNotSame(cSVFormat10, cSVFormat7);
2015:       assertNotSame(cSVFormat11, cSVFormat3);
2016:       assertNotSame(cSVFormat11, cSVFormat5);
2017:       assertNotSame(cSVFormat11, cSVFormat4);
2018:       assertNotSame(cSVFormat11, cSVFormat7);
2019:       assertNotSame(cSVFormat11, cSVFormat10);
2020:       assertNotSame(cSVFormat11, cSVFormat6);
2021:       assertNotSame(cSVFormat11, cSVFormat0);
2022:       assertNotSame(cSVFormat11, cSVFormat1);
2023:       assertNotSame(cSVFormat11, cSVFormat2);
2024:       assertNotSame(cSVFormat11, cSVFormat8);
2025:       assertNotSame(cSVFormat11, cSVFormat9);
2026:       assertFalse(cSVFormat0.getAutoFlush());
2027:       assertNull(cSVFormat0.getCommentMarker());
2028:       assertNull(cSVFormat0.getQuoteMode());
2029:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
2030:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
2031:       assertTrue(cSVFormat0.isQuoteCharacterSet());
2032:       assertEquals('|', cSVFormat0.getDelimiter());
2033:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
2034:       assertFalse(cSVFormat0.getSkipHeaderRecord());
2035:       assertEquals("\n", cSVFormat0.getRecordSeparator());
2036:       assertFalse(cSVFormat0.getTrailingDelimiter());
2037:       assertFalse(cSVFormat0.isCommentMarkerSet());
2038:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
2039:       assertNull(cSVFormat0.getNullString());
2040:       assertFalse(cSVFormat0.isNullStringSet());
2041:       assertFalse(cSVFormat0.getTrim());
2042:       assertTrue(cSVFormat0.isEscapeCharacterSet());
2043:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
2044:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
2045:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
2046:       assertFalse(cSVFormat1.getTrim());
2047:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
2048:       assertNull(cSVFormat1.getRecordSeparator());
2049:       assertNull(cSVFormat1.getQuoteMode());
2050:       assertFalse(cSVFormat1.isCommentMarkerSet());
2051:       assertNull(cSVFormat1.getCommentMarker());
2052:       assertFalse(cSVFormat1.getSkipHeaderRecord());
2053:       assertEquals('|', cSVFormat1.getDelimiter());
2054:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
2055:       assertTrue(cSVFormat1.isQuoteCharacterSet());
2056:       assertFalse(cSVFormat1.isNullStringSet());
2057:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
2058:       assertTrue(cSVFormat1.isEscapeCharacterSet());
2059:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
2060:       assertFalse(cSVFormat1.getTrailingDelimiter());
2061:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
2062:       assertNull(cSVFormat1.getNullString());
2063:       assertFalse(cSVFormat1.getAutoFlush());
2064:       assertFalse(cSVFormat2.getSkipHeaderRecord());
2065:       assertNull(cSVFormat2.getCommentMarker());
2066:       assertTrue(cSVFormat2.isEscapeCharacterSet());
2067:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
2068:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
2069:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
2070:       assertNull(cSVFormat2.getQuoteMode());
2071:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
2072:       assertNull(cSVFormat2.getNullString());
2073:       assertFalse(cSVFormat2.isNullStringSet());
2074:       assertFalse(cSVFormat2.getTrim());
2075:       assertFalse(cSVFormat2.getAutoFlush());
2076:       assertFalse(cSVFormat2.getTrailingDelimiter());
2077:       assertFalse(cSVFormat2.isCommentMarkerSet());
2078:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
2079:       assertNull(cSVFormat2.getRecordSeparator());
2080:       assertEquals('|', cSVFormat2.getDelimiter());
2081:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
2082:       assertTrue(cSVFormat2.isQuoteCharacterSet());
2083:       assertEquals('|', cSVFormat3.getDelimiter());
2084:       assertFalse(cSVFormat3.getTrailingDelimiter());
2085:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
2086:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
2087:       assertTrue(cSVFormat3.isCommentMarkerSet());
2088:       assertFalse(cSVFormat3.getAutoFlush());
2089:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
2090:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
2091:       assertNull(cSVFormat3.getNullString());
2092:       assertFalse(cSVFormat3.isNullStringSet());
2093:       assertFalse(cSVFormat3.getTrim());
2094:       assertFalse(cSVFormat3.getSkipHeaderRecord());
2095:       assertNull(cSVFormat3.getQuoteMode());
2096:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
2097:       assertTrue(cSVFormat3.isEscapeCharacterSet());
2098:       assertTrue(cSVFormat3.isQuoteCharacterSet());
2099:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
2100:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
2101:       assertNull(cSVFormat3.getRecordSeparator());
2102:       assertNull(cSVFormat4.getQuoteMode());
2103:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
2104:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
2105:       assertNull(cSVFormat4.getRecordSeparator());
2106:       assertTrue(cSVFormat4.isCommentMarkerSet());
2107:       assertFalse(cSVFormat4.getAutoFlush());
2108:       assertTrue(cSVFormat4.isQuoteCharacterSet());
2109:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
2110:       assertFalse(cSVFormat4.getTrim());
2111:       assertFalse(cSVFormat4.getTrailingDelimiter());
2112:       assertTrue(cSVFormat4.isEscapeCharacterSet());
2113:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
2114:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
2115:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
2116:       assertEquals('|', cSVFormat4.getDelimiter());
2117:       assertFalse(cSVFormat4.isNullStringSet());
2118:       assertNull(cSVFormat4.getNullString());
2119:       assertFalse(cSVFormat4.getSkipHeaderRecord());
2120:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
2121:       assertEquals('|', cSVFormat5.getDelimiter());
2122:       assertFalse(cSVFormat5.getTrailingDelimiter());
2123:       assertEquals('Q', (char)cSVFormat5.getCommentMarker());
2124:       assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
2125:       assertFalse(cSVFormat5.getAllowMissingColumnNames());
2126:       assertTrue(cSVFormat5.isCommentMarkerSet());
2127:       assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
2128:       assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
2129:       assertFalse(cSVFormat5.getAutoFlush());
2130:       assertNull(cSVFormat5.getNullString());
2131:       assertFalse(cSVFormat5.isNullStringSet());
2132:       assertFalse(cSVFormat5.getSkipHeaderRecord());
2133:       assertNull(cSVFormat5.getQuoteMode());
2134:       assertTrue(cSVFormat5.getIgnoreEmptyLines());
2135:       assertTrue(cSVFormat5.getTrim());
2136:       assertTrue(cSVFormat5.isEscapeCharacterSet());
2137:       assertFalse(cSVFormat5.getIgnoreHeaderCase());
2138:       assertNull(cSVFormat5.getRecordSeparator());
2139:       assertTrue(cSVFormat5.isQuoteCharacterSet());
2140:       assertFalse(cSVFormat6.isNullStringSet());
2141:       assertFalse(cSVFormat6.getAllowMissingColumnNames());
2142:       assertNull(cSVFormat6.getNullString());
2143:       assertFalse(cSVFormat6.getAutoFlush());
2144:       assertFalse(cSVFormat6.getSkipHeaderRecord());
2145:       assertEquals('|', cSVFormat6.getDelimiter());
2146:       assertNull(cSVFormat6.getQuoteMode());
2147:       assertEquals('Q', (char)cSVFormat6.getCommentMarker());
2148:       assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
2149:       assertTrue(cSVFormat6.getTrim());
2150:       assertFalse(cSVFormat6.getIgnoreHeaderCase());
2151:       assertTrue(cSVFormat6.isCommentMarkerSet());
2152:       assertNull(cSVFormat6.getRecordSeparator());
2153:       assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
2154:       assertTrue(cSVFormat6.getIgnoreEmptyLines());
2155:       assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
2156:       assertTrue(cSVFormat6.isQuoteCharacterSet());
2157:       assertFalse(cSVFormat6.getTrailingDelimiter());
2158:       assertTrue(cSVFormat6.isEscapeCharacterSet());
2159:       assertFalse(cSVFormat10.getTrailingDelimiter());
2160:       assertFalse(cSVFormat10.getTrim());
2161:       assertTrue(cSVFormat10.isQuoteCharacterSet());
2162:       assertFalse(cSVFormat10.getIgnoreSurroundingSpaces());
2163:       assertNull(cSVFormat10.getNullString());
2164:       assertNull(cSVFormat10.getRecordSeparator());
2165:       assertTrue(cSVFormat10.isCommentMarkerSet());
2166:       assertFalse(cSVFormat10.getIgnoreHeaderCase());
2167:       assertFalse(cSVFormat10.getAllowMissingColumnNames());
2168:       assertFalse(cSVFormat10.getAutoFlush());
2169:       assertTrue(cSVFormat10.isEscapeCharacterSet());
2170:       assertFalse(cSVFormat10.isNullStringSet());
2171:       assertEquals('\\', (char)cSVFormat10.getEscapeCharacter());
2172:       assertNull(cSVFormat10.getQuoteMode());
2173:       assertTrue(cSVFormat10.getIgnoreEmptyLines());
2174:       assertEquals('\"', (char)cSVFormat10.getQuoteCharacter());
2175:       assertEquals('Q', (char)cSVFormat10.getCommentMarker());
2176:       assertFalse(cSVFormat10.getSkipHeaderRecord());
2177:       assertEquals('|', cSVFormat10.getDelimiter());
2178:       assertFalse(cSVFormat11.isNullStringSet());
2179:       assertTrue(cSVFormat11.getSkipHeaderRecord());
2180:       assertFalse(cSVFormat11.getAllowMissingColumnNames());
2181:       assertEquals('\"', (char)cSVFormat11.getQuoteCharacter());
2182:       assertTrue(cSVFormat11.getIgnoreEmptyLines());
2183:       assertFalse(cSVFormat11.isEscapeCharacterSet());
2184:       assertNull(cSVFormat11.getEscapeCharacter());
2185:       assertTrue(cSVFormat11.isQuoteCharacterSet());
2186:       assertFalse(cSVFormat11.getIgnoreSurroundingSpaces());
2187:       assertFalse(cSVFormat11.getTrim());
2188:       assertFalse(cSVFormat11.getIgnoreHeaderCase());
2189:       assertEquals("\r\n", cSVFormat11.getRecordSeparator());
2190:       assertFalse(cSVFormat11.isCommentMarkerSet());
2191:       assertNull(cSVFormat11.getCommentMarker());
2192:       assertNull(cSVFormat11.getNullString());
2193:       assertNull(cSVFormat11.getQuoteMode());
2194:       assertEquals(',', cSVFormat11.getDelimiter());
2195:       assertFalse(cSVFormat11.getAutoFlush());
2196:       assertFalse(cSVFormat11.getTrailingDelimiter());
2197:       
2198:       cSVFormat4.getQuoteMode();
2199:       assertNotSame(cSVFormat0, cSVFormat6);
2200:       assertNotSame(cSVFormat0, cSVFormat11);
2201:       assertNotSame(cSVFormat0, cSVFormat9);
2202:       assertNotSame(cSVFormat0, cSVFormat8);
2203:       assertNotSame(cSVFormat0, cSVFormat4);
2204:       assertNotSame(cSVFormat0, cSVFormat1);
2205:       assertNotSame(cSVFormat0, cSVFormat3);
2206:       assertNotSame(cSVFormat0, cSVFormat5);
2207:       assertNotSame(cSVFormat0, cSVFormat7);
2208:       assertNotSame(cSVFormat0, cSVFormat2);
2209:       assertNotSame(cSVFormat0, cSVFormat10);
2210:       assertNotSame(cSVFormat1, cSVFormat7);
2211:       assertNotSame(cSVFormat1, cSVFormat10);
2212:       assertNotSame(cSVFormat1, cSVFormat3);
2213:       assertNotSame(cSVFormat1, cSVFormat5);
2214:       assertNotSame(cSVFormat1, cSVFormat6);
2215:       assertNotSame(cSVFormat1, cSVFormat11);
2216:       assertNotSame(cSVFormat1, cSVFormat4);
2217:       assertNotSame(cSVFormat1, cSVFormat0);
2218:       assertNotSame(cSVFormat1, cSVFormat8);
2219:       assertNotSame(cSVFormat1, cSVFormat2);
2220:       assertNotSame(cSVFormat1, cSVFormat9);
2221:       assertNotSame(cSVFormat2, cSVFormat11);
2222:       assertNotSame(cSVFormat2, cSVFormat1);
2223:       assertNotSame(cSVFormat2, cSVFormat6);
2224:       assertNotSame(cSVFormat2, cSVFormat4);
2225:       assertNotSame(cSVFormat2, cSVFormat7);
2226:       assertNotSame(cSVFormat2, cSVFormat10);
2227:       assertNotSame(cSVFormat2, cSVFormat3);
2228:       assertNotSame(cSVFormat2, cSVFormat5);
2229:       assertNotSame(cSVFormat2, cSVFormat0);
2230:       assertNotSame(cSVFormat2, cSVFormat9);
2231:       assertNotSame(cSVFormat2, cSVFormat8);
2232:       assertNotSame(cSVFormat3, cSVFormat0);
2233:       assertNotSame(cSVFormat3, cSVFormat9);
2234:       assertNotSame(cSVFormat3, cSVFormat11);
2235:       assertNotSame(cSVFormat3, cSVFormat6);
2236:       assertNotSame(cSVFormat3, cSVFormat7);
2237:       assertNotSame(cSVFormat3, cSVFormat10);
2238:       assertNotSame(cSVFormat3, cSVFormat4);
2239:       assertNotSame(cSVFormat3, cSVFormat2);
2240:       assertNotSame(cSVFormat3, cSVFormat1);
2241:       assertNotSame(cSVFormat3, cSVFormat5);
2242:       assertNotSame(cSVFormat3, cSVFormat8);
2243:       assertNotSame(cSVFormat4, cSVFormat9);
2244:       assertNotSame(cSVFormat4, cSVFormat10);
2245:       assertNotSame(cSVFormat4, cSVFormat3);
2246:       assertNotSame(cSVFormat4, cSVFormat5);
2247:       assertNotSame(cSVFormat4, cSVFormat0);
2248:       assertNotSame(cSVFormat4, cSVFormat1);
2249:       assertNotSame(cSVFormat4, cSVFormat2);
2250:       assertNotSame(cSVFormat4, cSVFormat8);
2251:       assertNotSame(cSVFormat4, cSVFormat11);
2252:       assertNotSame(cSVFormat4, cSVFormat6);
2253:       assertNotSame(cSVFormat4, cSVFormat7);
2254:       assertFalse(cSVFormat0.getAutoFlush());
2255:       assertNull(cSVFormat0.getCommentMarker());
2256:       assertNull(cSVFormat0.getQuoteMode());
2257:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
2258:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
2259:       assertTrue(cSVFormat0.isQuoteCharacterSet());
2260:       assertEquals('|', cSVFormat0.getDelimiter());
2261:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
2262:       assertFalse(cSVFormat0.getSkipHeaderRecord());
2263:       assertEquals("\n", cSVFormat0.getRecordSeparator());
2264:       assertFalse(cSVFormat0.getTrailingDelimiter());
2265:       assertFalse(cSVFormat0.isCommentMarkerSet());
2266:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
2267:       assertNull(cSVFormat0.getNullString());
2268:       assertFalse(cSVFormat0.isNullStringSet());
2269:       assertFalse(cSVFormat0.getTrim());
2270:       assertTrue(cSVFormat0.isEscapeCharacterSet());
2271:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
2272:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
2273:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
2274:       assertFalse(cSVFormat1.getTrim());
2275:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
2276:       assertNull(cSVFormat1.getRecordSeparator());
2277:       assertNull(cSVFormat1.getQuoteMode());
2278:       assertFalse(cSVFormat1.isCommentMarkerSet());
2279:       assertNull(cSVFormat1.getCommentMarker());
2280:       assertFalse(cSVFormat1.getSkipHeaderRecord());
2281:       assertEquals('|', cSVFormat1.getDelimiter());
2282:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
2283:       assertTrue(cSVFormat1.isQuoteCharacterSet());
2284:       assertFalse(cSVFormat1.isNullStringSet());
2285:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
2286:       assertTrue(cSVFormat1.isEscapeCharacterSet());
2287:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
2288:       assertFalse(cSVFormat1.getTrailingDelimiter());
2289:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
2290:       assertNull(cSVFormat1.getNullString());
2291:       assertFalse(cSVFormat1.getAutoFlush());
2292:       assertFalse(cSVFormat2.getSkipHeaderRecord());
2293:       assertNull(cSVFormat2.getCommentMarker());
2294:       assertTrue(cSVFormat2.isEscapeCharacterSet());
2295:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
2296:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
2297:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
2298:       assertNull(cSVFormat2.getQuoteMode());
2299:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
2300:       assertNull(cSVFormat2.getNullString());
2301:       assertFalse(cSVFormat2.isNullStringSet());
2302:       assertFalse(cSVFormat2.getTrim());
2303:       assertFalse(cSVFormat2.getAutoFlush());
2304:       assertFalse(cSVFormat2.getTrailingDelimiter());
2305:       assertFalse(cSVFormat2.isCommentMarkerSet());
2306:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
2307:       assertNull(cSVFormat2.getRecordSeparator());
2308:       assertEquals('|', cSVFormat2.getDelimiter());
2309:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
2310:       assertTrue(cSVFormat2.isQuoteCharacterSet());
2311:       assertEquals('|', cSVFormat3.getDelimiter());
2312:       assertFalse(cSVFormat3.getTrailingDelimiter());
2313:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
2314:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
2315:       assertTrue(cSVFormat3.isCommentMarkerSet());
2316:       assertFalse(cSVFormat3.getAutoFlush());
2317:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
2318:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
2319:       assertNull(cSVFormat3.getNullString());
2320:       assertFalse(cSVFormat3.isNullStringSet());
2321:       assertFalse(cSVFormat3.getTrim());
2322:       assertFalse(cSVFormat3.getSkipHeaderRecord());
2323:       assertNull(cSVFormat3.getQuoteMode());
2324:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
2325:       assertTrue(cSVFormat3.isEscapeCharacterSet());
2326:       assertTrue(cSVFormat3.isQuoteCharacterSet());
2327:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
2328:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
2329:       assertNull(cSVFormat3.getRecordSeparator());
2330:       assertNull(cSVFormat4.getQuoteMode());
2331:       assertTrue(cSVFormat4.getIgnoreEmptyLines());
2332:       assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
2333:       assertNull(cSVFormat4.getRecordSeparator());
2334:       assertTrue(cSVFormat4.isCommentMarkerSet());
2335:       assertFalse(cSVFormat4.getAutoFlush());
2336:       assertTrue(cSVFormat4.isQuoteCharacterSet());
2337:       assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
2338:       assertFalse(cSVFormat4.getTrim());
2339:       assertFalse(cSVFormat4.getTrailingDelimiter());
2340:       assertTrue(cSVFormat4.isEscapeCharacterSet());
2341:       assertFalse(cSVFormat4.getIgnoreHeaderCase());
2342:       assertFalse(cSVFormat4.getAllowMissingColumnNames());
2343:       assertEquals('Q', (char)cSVFormat4.getCommentMarker());
2344:       assertEquals('|', cSVFormat4.getDelimiter());
2345:       assertFalse(cSVFormat4.isNullStringSet());
2346:       assertNull(cSVFormat4.getNullString());
2347:       assertFalse(cSVFormat4.getSkipHeaderRecord());
2348:       assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
2349:       
2350:       CSVFormat.Predefined.valueOf("InformixUnloadCsv");
2351:       CSVFormat cSVFormat12 = cSVFormat3.withTrim();
2352:       assertNotNull(cSVFormat12);
2353:       assertNotSame(cSVFormat0, cSVFormat6);
2354:       assertNotSame(cSVFormat0, cSVFormat11);
2355:       assertNotSame(cSVFormat0, cSVFormat9);
2356:       assertNotSame(cSVFormat0, cSVFormat8);
2357:       assertNotSame(cSVFormat0, cSVFormat4);
2358:       assertNotSame(cSVFormat0, cSVFormat1);
2359:       assertNotSame(cSVFormat0, cSVFormat3);
2360:       assertNotSame(cSVFormat0, cSVFormat5);
2361:       assertNotSame(cSVFormat0, cSVFormat7);
2362:       assertNotSame(cSVFormat0, cSVFormat12);
2363:       assertNotSame(cSVFormat0, cSVFormat2);
2364:       assertNotSame(cSVFormat0, cSVFormat10);
2365:       assertNotSame(cSVFormat12, cSVFormat8);
2366:       assertNotSame(cSVFormat12, cSVFormat4);
2367:       assertNotSame(cSVFormat12, cSVFormat1);
2368:       assertNotSame(cSVFormat12, cSVFormat11);
2369:       assertNotSame(cSVFormat12, cSVFormat10);
2370:       assertNotSame(cSVFormat12, cSVFormat0);
2371:       assertNotSame(cSVFormat12, cSVFormat2);
2372:       assertNotSame(cSVFormat12, cSVFormat3);
2373:       assertNotSame(cSVFormat12, cSVFormat5);
2374:       assertNotSame(cSVFormat12, cSVFormat7);
2375:       assertNotSame(cSVFormat12, cSVFormat6);
2376:       assertNotSame(cSVFormat12, cSVFormat9);
2377:       assertNotSame(cSVFormat1, cSVFormat12);
2378:       assertNotSame(cSVFormat1, cSVFormat7);
2379:       assertNotSame(cSVFormat1, cSVFormat10);
2380:       assertNotSame(cSVFormat1, cSVFormat3);
2381:       assertNotSame(cSVFormat1, cSVFormat5);
2382:       assertNotSame(cSVFormat1, cSVFormat6);
2383:       assertNotSame(cSVFormat1, cSVFormat11);
2384:       assertNotSame(cSVFormat1, cSVFormat4);
2385:       assertNotSame(cSVFormat1, cSVFormat0);
2386:       assertNotSame(cSVFormat1, cSVFormat8);
2387:       assertNotSame(cSVFormat1, cSVFormat2);
2388:       assertNotSame(cSVFormat1, cSVFormat9);
2389:       assertNotSame(cSVFormat2, cSVFormat11);
2390:       assertNotSame(cSVFormat2, cSVFormat1);
2391:       assertNotSame(cSVFormat2, cSVFormat6);
2392:       assertNotSame(cSVFormat2, cSVFormat4);
2393:       assertNotSame(cSVFormat2, cSVFormat7);
2394:       assertNotSame(cSVFormat2, cSVFormat10);
2395:       assertNotSame(cSVFormat2, cSVFormat3);
2396:       assertNotSame(cSVFormat2, cSVFormat5);
2397:       assertNotSame(cSVFormat2, cSVFormat12);
2398:       assertNotSame(cSVFormat2, cSVFormat0);
2399:       assertNotSame(cSVFormat2, cSVFormat9);
2400:       assertNotSame(cSVFormat2, cSVFormat8);
2401:       assertNotSame(cSVFormat3, cSVFormat0);
2402:       assertNotSame(cSVFormat3, cSVFormat9);
2403:       assertNotSame(cSVFormat3, cSVFormat11);
2404:       assertNotSame(cSVFormat3, cSVFormat6);
2405:       assertNotSame(cSVFormat3, cSVFormat7);
2406:       assertNotSame(cSVFormat3, cSVFormat10);
2407:       assertNotSame(cSVFormat3, cSVFormat4);
2408:       assertNotSame(cSVFormat3, cSVFormat2);
2409:       assertNotSame(cSVFormat3, cSVFormat1);
2410:       assertNotSame(cSVFormat3, cSVFormat5);
2411:       assertNotSame(cSVFormat3, cSVFormat8);
2412:       assertNotSame(cSVFormat3, cSVFormat12);
2413:       assertFalse(cSVFormat0.getAutoFlush());
2414:       assertNull(cSVFormat0.getCommentMarker());
2415:       assertNull(cSVFormat0.getQuoteMode());
2416:       assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
2417:       assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
2418:       assertTrue(cSVFormat0.isQuoteCharacterSet());
2419:       assertEquals('|', cSVFormat0.getDelimiter());
2420:       assertTrue(cSVFormat0.getIgnoreEmptyLines());
2421:       assertFalse(cSVFormat0.getSkipHeaderRecord());
2422:       assertEquals("\n", cSVFormat0.getRecordSeparator());
2423:       assertFalse(cSVFormat0.getTrailingDelimiter());
2424:       assertFalse(cSVFormat0.isCommentMarkerSet());
2425:       assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
2426:       assertNull(cSVFormat0.getNullString());
2427:       assertFalse(cSVFormat0.isNullStringSet());
2428:       assertFalse(cSVFormat0.getTrim());
2429:       assertTrue(cSVFormat0.isEscapeCharacterSet());
2430:       assertFalse(cSVFormat0.getIgnoreHeaderCase());
2431:       assertFalse(cSVFormat0.getAllowMissingColumnNames());
2432:       assertFalse(cSVFormat12.getAutoFlush());
2433:       assertEquals('\"', (char)cSVFormat12.getQuoteCharacter());
2434:       assertTrue(cSVFormat12.getTrim());
2435:       assertTrue(cSVFormat12.isEscapeCharacterSet());
2436:       assertEquals('\\', (char)cSVFormat12.getEscapeCharacter());
2437:       assertNull(cSVFormat12.getQuoteMode());
2438:       assertNull(cSVFormat12.getNullString());
2439:       assertFalse(cSVFormat12.isNullStringSet());
2440:       assertFalse(cSVFormat12.getAllowMissingColumnNames());
2441:       assertFalse(cSVFormat12.getTrailingDelimiter());
2442:       assertTrue(cSVFormat12.isCommentMarkerSet());
2443:       assertFalse(cSVFormat12.getIgnoreSurroundingSpaces());
2444:       assertFalse(cSVFormat12.getIgnoreHeaderCase());
2445:       assertNull(cSVFormat12.getRecordSeparator());
2446:       assertEquals('|', cSVFormat12.getDelimiter());
2447:       assertTrue(cSVFormat12.getIgnoreEmptyLines());
2448:       assertFalse(cSVFormat12.getSkipHeaderRecord());
2449:       assertTrue(cSVFormat12.isQuoteCharacterSet());
2450:       assertEquals('\'', (char)cSVFormat12.getCommentMarker());
2451:       assertFalse(cSVFormat1.getIgnoreHeaderCase());
2452:       assertFalse(cSVFormat1.getTrim());
2453:       assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
2454:       assertNull(cSVFormat1.getRecordSeparator());
2455:       assertNull(cSVFormat1.getQuoteMode());
2456:       assertFalse(cSVFormat1.isCommentMarkerSet());
2457:       assertNull(cSVFormat1.getCommentMarker());
2458:       assertFalse(cSVFormat1.getSkipHeaderRecord());
2459:       assertEquals('|', cSVFormat1.getDelimiter());
2460:       assertTrue(cSVFormat1.getIgnoreEmptyLines());
2461:       assertTrue(cSVFormat1.isQuoteCharacterSet());
2462:       assertFalse(cSVFormat1.isNullStringSet());
2463:       assertFalse(cSVFormat1.getAllowMissingColumnNames());
2464:       assertTrue(cSVFormat1.isEscapeCharacterSet());
2465:       assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
2466:       assertFalse(cSVFormat1.getTrailingDelimiter());
2467:       assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
2468:       assertNull(cSVFormat1.getNullString());
2469:       assertFalse(cSVFormat1.getAutoFlush());
2470:       assertFalse(cSVFormat2.getSkipHeaderRecord());
2471:       assertNull(cSVFormat2.getCommentMarker());
2472:       assertTrue(cSVFormat2.isEscapeCharacterSet());
2473:       assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
2474:       assertFalse(cSVFormat2.getAllowMissingColumnNames());
2475:       assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
2476:       assertNull(cSVFormat2.getQuoteMode());
2477:       assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
2478:       assertNull(cSVFormat2.getNullString());
2479:       assertFalse(cSVFormat2.isNullStringSet());
2480:       assertFalse(cSVFormat2.getTrim());
2481:       assertFalse(cSVFormat2.getAutoFlush());
2482:       assertFalse(cSVFormat2.getTrailingDelimiter());
2483:       assertFalse(cSVFormat2.isCommentMarkerSet());
2484:       assertFalse(cSVFormat2.getIgnoreHeaderCase());
2485:       assertNull(cSVFormat2.getRecordSeparator());
2486:       assertEquals('|', cSVFormat2.getDelimiter());
2487:       assertTrue(cSVFormat2.getIgnoreEmptyLines());
2488:       assertTrue(cSVFormat2.isQuoteCharacterSet());
2489:       assertEquals('|', cSVFormat3.getDelimiter());
2490:       assertFalse(cSVFormat3.getTrailingDelimiter());
2491:       assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
2492:       assertFalse(cSVFormat3.getAllowMissingColumnNames());
2493:       assertTrue(cSVFormat3.isCommentMarkerSet());
2494:       assertFalse(cSVFormat3.getAutoFlush());
2495:       assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
2496:       assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
2497:       assertNull(cSVFormat3.getNullString());
2498:       assertFalse(cSVFormat3.isNullStringSet());
2499:       assertFalse(cSVFormat3.getTrim());
2500:       assertFalse(cSVFormat3.getSkipHeaderRecord());
2501:       assertNull(cSVFormat3.getQuoteMode());
2502:       assertTrue(cSVFormat3.getIgnoreEmptyLines());
2503:       assertTrue(cSVFormat3.isEscapeCharacterSet());
2504:       assertTrue(cSVFormat3.isQuoteCharacterSet());
2505:       assertEquals('\'', (char)cSVFormat3.getCommentMarker());
2506:       assertFalse(cSVFormat3.getIgnoreHeaderCase());
2507:       assertNull(cSVFormat3.getRecordSeparator());
2508:       
2509:       String string0 = "(Bj])QnR\"];*";
2510:       MockFile mockFile0 = new MockFile("(Bj])QnR\"];*");
2511:       assertNotNull(mockFile0);
2512:       
2513:       Path path0 = mockFile0.toPath();
2514:       assertNotNull(path0);
2515:       assertFalse(mockFile0.isDirectory());
2516:       assertEquals(0L, mockFile0.lastModified());
2517:       assertEquals("(Bj])QnR\"];*", mockFile0.toString());
2518:       assertEquals(0L, mockFile0.length());
2519:       assertEquals(0L, mockFile0.getTotalSpace());
2520:       assertFalse(mockFile0.canRead());
2521:       assertFalse(mockFile0.canExecute());
2522:       assertFalse(mockFile0.canWrite());
2523:       assertFalse(mockFile0.isAbsolute());
2524:       assertEquals(0L, mockFile0.getFreeSpace());
2525:       assertTrue(mockFile0.isFile());
2526:       assertFalse(mockFile0.isHidden());
2527:       assertEquals("(Bj])QnR\"];*", mockFile0.getName());
2528:       assertFalse(mockFile0.exists());
2529:       assertNull(mockFile0.getParent());
2530:       assertEquals(0L, mockFile0.getUsableSpace());
2531:       
2532:       CSVFormat.Predefined cSVFormat_Predefined0 = CSVFormat.Predefined.InformixUnloadCsv;
2533:       assertSame(cSVFormat_Predefined0, cSVFormat_Predefined1);
2534:       
2535:       MockPrintStream mockPrintStream0 = null;
2536:       try {
2537:         mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "b)sqxb,");
2538:         fail("Expecting exception: NullPointerException");
2539:       
2540:       } catch(NullPointerException e) {
2541:          //
2542:          // Null output stream
2543:          //
2544:          verifyException("java.io.PrintStream", e);
2545:       }
2546:   }
2547: }
RegularFileObject[/tmp/EvoSuite_36_1605594035066/org/apache/commons/csv/CSVFormat_36_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Nov 17 06:20:36 GMT 2020
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class CSVFormat_36_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVFormat"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVFormat_36_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.apache.commons.csv.CSVFormat",
82:       "org.apache.commons.csv.Token",
83:       "org.apache.commons.csv.Lexer",
84:       "org.apache.commons.csv.Constants",
85:       "org.apache.commons.csv.CSVParser",
86:       "org.apache.commons.csv.CSVFormat$Predefined",
87:       "org.apache.commons.csv.Token$Type",
88:       "org.apache.commons.csv.Assertions",
89:       "org.apache.commons.csv.QuoteMode",
90:       "org.apache.commons.csv.CSVFormat$1",
91:       "org.apache.commons.csv.CSVPrinter",
92:       "org.apache.commons.csv.ExtendedBufferedReader"
93:     );
94:   } 
95: 
96:   private static void resetClasses() {
97:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVFormat_36_tmp__ESTest_scaffolding.class.getClassLoader()); 
98: 
99:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
100:       "org.apache.commons.csv.Constants",
101:       "org.apache.commons.csv.QuoteMode",
102:       "org.apache.commons.csv.CSVFormat",
103:       "org.apache.commons.csv.CSVFormat$Predefined",
104:       "org.apache.commons.csv.CSVFormat$1",
105:       "org.apache.commons.csv.CSVPrinter",
106:       "org.apache.commons.csv.Assertions",
107:       "org.apache.commons.csv.CSVParser",
108:       "org.apache.commons.csv.Token",
109:       "org.apache.commons.csv.Token$Type",
110:       "org.apache.commons.csv.Lexer",
111:       "org.apache.commons.csv.ExtendedBufferedReader",
112:       "org.apache.commons.csv.CSVParser$2",
113:       "org.apache.commons.csv.CSVRecord"
114:     );
115:   }
116: }

[MASTER] 06:20:36.837 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CSVFormat cSVFormat0 = CSVFormat.INFORMIX_UNLOAD;
assertNotNull(cSVFormat0);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());

CSVFormat cSVFormat1 = cSVFormat0.withRecordSeparator((String) null);
assertNotNull(cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat1, cSVFormat0);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat1.equals((Object)cSVFormat0));

CSVFormat cSVFormat2 = cSVFormat1.withTrim(false);
assertNotNull(cSVFormat2);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat0);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));

CSVFormat cSVFormat3 = cSVFormat2.withCommentMarker('\'');
assertNotNull(cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));

Character character0 = Character.valueOf('Q');
assertNotNull(character0);

CSVFormat cSVFormat4 = cSVFormat3.withCommentMarker(character0);
assertNotNull(cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat2));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));

CSVFormat cSVFormat5 = cSVFormat4.withTrim();
assertNotNull(cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat2);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat0.equals((Object)cSVFormat4));
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat4));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertFalse(cSVFormat2.equals((Object)cSVFormat4));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat4));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat2));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));
assertFalse(cSVFormat5.equals((Object)cSVFormat0));
assertTrue(cSVFormat5.equals((Object)cSVFormat4));
assertFalse(cSVFormat5.equals((Object)cSVFormat3));
assertFalse(cSVFormat5.equals((Object)cSVFormat1));
assertFalse(cSVFormat5.equals((Object)cSVFormat2));

boolean boolean0 = false;
CSVFormat cSVFormat6 = cSVFormat5.withIgnoreHeaderCase(false);
assertNotNull(cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat3);
assertNotSame(cSVFormat6, cSVFormat5);
assertNotSame(cSVFormat6, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat4);
assertNotSame(cSVFormat6, cSVFormat0);
assertNotSame(cSVFormat6, cSVFormat1);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat6.isNullStringSet());
assertFalse(cSVFormat6.getAllowMissingColumnNames());
assertNull(cSVFormat6.getNullString());
assertFalse(cSVFormat6.getAutoFlush());
assertFalse(cSVFormat6.getSkipHeaderRecord());
assertEquals('|', cSVFormat6.getDelimiter());
assertNull(cSVFormat6.getQuoteMode());
assertEquals('Q', (char)cSVFormat6.getCommentMarker());
assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
assertTrue(cSVFormat6.getTrim());
assertFalse(cSVFormat6.getIgnoreHeaderCase());
assertTrue(cSVFormat6.isCommentMarkerSet());
assertNull(cSVFormat6.getRecordSeparator());
assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
assertTrue(cSVFormat6.getIgnoreEmptyLines());
assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat6.isQuoteCharacterSet());
assertFalse(cSVFormat6.getTrailingDelimiter());
assertTrue(cSVFormat6.isEscapeCharacterSet());
assertFalse(cSVFormat0.equals((Object)cSVFormat4));
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat5));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertFalse(cSVFormat1.equals((Object)cSVFormat5));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat4));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertFalse(cSVFormat2.equals((Object)cSVFormat4));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat5));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat4));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat3.equals((Object)cSVFormat5));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat2));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));
assertTrue(cSVFormat4.equals((Object)cSVFormat5));
assertFalse(cSVFormat5.equals((Object)cSVFormat0));
assertTrue(cSVFormat5.equals((Object)cSVFormat4));
assertFalse(cSVFormat5.equals((Object)cSVFormat3));
assertFalse(cSVFormat5.equals((Object)cSVFormat1));
assertFalse(cSVFormat5.equals((Object)cSVFormat2));
assertTrue(cSVFormat6.equals((Object)cSVFormat4));
assertFalse(cSVFormat6.equals((Object)cSVFormat3));
assertFalse(cSVFormat6.equals((Object)cSVFormat2));
assertTrue(cSVFormat6.equals((Object)cSVFormat5));
assertFalse(cSVFormat6.equals((Object)cSVFormat0));
assertFalse(cSVFormat6.equals((Object)cSVFormat1));

CSVFormat cSVFormat7 = cSVFormat6.withIgnoreSurroundingSpaces(false);
assertNotNull(cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat7);
assertNotSame(cSVFormat6, cSVFormat3);
assertNotSame(cSVFormat6, cSVFormat5);
assertNotSame(cSVFormat6, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat4);
assertNotSame(cSVFormat6, cSVFormat0);
assertNotSame(cSVFormat6, cSVFormat1);
assertNotSame(cSVFormat7, cSVFormat3);
assertNotSame(cSVFormat7, cSVFormat5);
assertNotSame(cSVFormat7, cSVFormat6);
assertNotSame(cSVFormat7, cSVFormat1);
assertNotSame(cSVFormat7, cSVFormat4);
assertNotSame(cSVFormat7, cSVFormat0);
assertNotSame(cSVFormat7, cSVFormat2);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat6.isNullStringSet());
assertFalse(cSVFormat6.getAllowMissingColumnNames());
assertNull(cSVFormat6.getNullString());
assertFalse(cSVFormat6.getAutoFlush());
assertFalse(cSVFormat6.getSkipHeaderRecord());
assertEquals('|', cSVFormat6.getDelimiter());
assertNull(cSVFormat6.getQuoteMode());
assertEquals('Q', (char)cSVFormat6.getCommentMarker());
assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
assertTrue(cSVFormat6.getTrim());
assertFalse(cSVFormat6.getIgnoreHeaderCase());
assertTrue(cSVFormat6.isCommentMarkerSet());
assertNull(cSVFormat6.getRecordSeparator());
assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
assertTrue(cSVFormat6.getIgnoreEmptyLines());
assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat6.isQuoteCharacterSet());
assertFalse(cSVFormat6.getTrailingDelimiter());
assertTrue(cSVFormat6.isEscapeCharacterSet());
assertTrue(cSVFormat7.isCommentMarkerSet());
assertFalse(cSVFormat7.getIgnoreHeaderCase());
assertEquals('\\', (char)cSVFormat7.getEscapeCharacter());
assertNull(cSVFormat7.getRecordSeparator());
assertTrue(cSVFormat7.getIgnoreEmptyLines());
assertTrue(cSVFormat7.getTrim());
assertFalse(cSVFormat7.getSkipHeaderRecord());
assertTrue(cSVFormat7.isQuoteCharacterSet());
assertEquals('\"', (char)cSVFormat7.getQuoteCharacter());
assertTrue(cSVFormat7.isEscapeCharacterSet());
assertFalse(cSVFormat7.getAllowMissingColumnNames());
assertEquals('|', cSVFormat7.getDelimiter());
assertEquals('Q', (char)cSVFormat7.getCommentMarker());
assertFalse(cSVFormat7.getTrailingDelimiter());
assertNull(cSVFormat7.getQuoteMode());
assertFalse(cSVFormat7.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat7.getAutoFlush());
assertNull(cSVFormat7.getNullString());
assertFalse(cSVFormat7.isNullStringSet());
assertFalse(cSVFormat0.equals((Object)cSVFormat6));
assertFalse(cSVFormat0.equals((Object)cSVFormat4));
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat5));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertFalse(cSVFormat1.equals((Object)cSVFormat5));
assertFalse(cSVFormat1.equals((Object)cSVFormat6));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat4));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertFalse(cSVFormat2.equals((Object)cSVFormat6));
assertFalse(cSVFormat2.equals((Object)cSVFormat4));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat5));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat6));
assertFalse(cSVFormat3.equals((Object)cSVFormat4));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat3.equals((Object)cSVFormat5));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));
assertFalse(cSVFormat4.equals((Object)cSVFormat2));
assertTrue(cSVFormat4.equals((Object)cSVFormat6));
assertTrue(cSVFormat4.equals((Object)cSVFormat5));
assertFalse(cSVFormat5.equals((Object)cSVFormat0));
assertTrue(cSVFormat5.equals((Object)cSVFormat4));
assertTrue(cSVFormat5.equals((Object)cSVFormat6));
assertFalse(cSVFormat5.equals((Object)cSVFormat3));
assertFalse(cSVFormat5.equals((Object)cSVFormat1));
assertFalse(cSVFormat5.equals((Object)cSVFormat2));
assertTrue(cSVFormat6.equals((Object)cSVFormat4));
assertFalse(cSVFormat6.equals((Object)cSVFormat3));
assertFalse(cSVFormat6.equals((Object)cSVFormat2));
assertTrue(cSVFormat6.equals((Object)cSVFormat5));
assertFalse(cSVFormat6.equals((Object)cSVFormat0));
assertFalse(cSVFormat6.equals((Object)cSVFormat1));
assertTrue(cSVFormat7.equals((Object)cSVFormat4));
assertFalse(cSVFormat7.equals((Object)cSVFormat3));
assertTrue(cSVFormat7.equals((Object)cSVFormat5));
assertFalse(cSVFormat7.equals((Object)cSVFormat1));
assertFalse(cSVFormat7.equals((Object)cSVFormat0));
assertTrue(cSVFormat7.equals((Object)cSVFormat6));
assertFalse(cSVFormat7.equals((Object)cSVFormat2));

CSVFormat cSVFormat8 = cSVFormat4.withCommentMarker(character0);
assertNotNull(cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat8, cSVFormat7);
assertNotSame(cSVFormat8, cSVFormat0);
assertNotSame(cSVFormat8, cSVFormat6);
assertNotSame(cSVFormat8, cSVFormat4);
assertNotSame(cSVFormat8, cSVFormat1);
assertNotSame(cSVFormat8, cSVFormat3);
assertNotSame(cSVFormat8, cSVFormat5);
assertNotSame(cSVFormat8, cSVFormat2);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertTrue(cSVFormat8.isEscapeCharacterSet());
assertFalse(cSVFormat8.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat8.getCommentMarker());
assertEquals('\"', (char)cSVFormat8.getQuoteCharacter());
assertNull(cSVFormat8.getQuoteMode());
assertFalse(cSVFormat8.getTrailingDelimiter());
assertEquals('\\', (char)cSVFormat8.getEscapeCharacter());
assertFalse(cSVFormat8.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat8.getAutoFlush());
assertNull(cSVFormat8.getNullString());
assertFalse(cSVFormat8.isNullStringSet());
assertTrue(cSVFormat8.isQuoteCharacterSet());
assertFalse(cSVFormat8.getTrim());
assertFalse(cSVFormat8.getIgnoreHeaderCase());
assertTrue(cSVFormat8.isCommentMarkerSet());
assertNull(cSVFormat8.getRecordSeparator());
assertFalse(cSVFormat8.getSkipHeaderRecord());
assertEquals('|', cSVFormat8.getDelimiter());
assertTrue(cSVFormat8.getIgnoreEmptyLines());
assertFalse(cSVFormat0.equals((Object)cSVFormat6));
assertFalse(cSVFormat0.equals((Object)cSVFormat4));
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat5));
assertFalse(cSVFormat0.equals((Object)cSVFormat7));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat7));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertFalse(cSVFormat1.equals((Object)cSVFormat5));
assertFalse(cSVFormat1.equals((Object)cSVFormat6));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat4));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertFalse(cSVFormat2.equals((Object)cSVFormat6));
assertFalse(cSVFormat2.equals((Object)cSVFormat4));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat7));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat5));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat6));
assertFalse(cSVFormat3.equals((Object)cSVFormat7));
assertFalse(cSVFormat3.equals((Object)cSVFormat4));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat3.equals((Object)cSVFormat5));
assertTrue(cSVFormat4.equals((Object)cSVFormat7));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));
assertFalse(cSVFormat4.equals((Object)cSVFormat2));
assertTrue(cSVFormat4.equals((Object)cSVFormat6));
assertTrue(cSVFormat4.equals((Object)cSVFormat5));
assertTrue(cSVFormat8.equals((Object)cSVFormat6));
assertTrue(cSVFormat8.equals((Object)cSVFormat4));
assertTrue(cSVFormat8.equals((Object)cSVFormat5));
assertTrue(cSVFormat8.equals((Object)cSVFormat7));
assertFalse(cSVFormat8.equals((Object)cSVFormat0));
assertFalse(cSVFormat8.equals((Object)cSVFormat1));
assertFalse(cSVFormat8.equals((Object)cSVFormat3));
assertFalse(cSVFormat8.equals((Object)cSVFormat2));

CSVFormat cSVFormat9 = cSVFormat6.withIgnoreSurroundingSpaces();
assertNotNull(cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat9);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat9);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat8);
assertNotSame(cSVFormat5, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat7);
assertNotSame(cSVFormat6, cSVFormat3);
assertNotSame(cSVFormat6, cSVFormat5);
assertNotSame(cSVFormat6, cSVFormat8);
assertNotSame(cSVFormat6, cSVFormat9);
assertNotSame(cSVFormat6, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat4);
assertNotSame(cSVFormat6, cSVFormat0);
assertNotSame(cSVFormat6, cSVFormat1);
assertNotSame(cSVFormat9, cSVFormat0);
assertNotSame(cSVFormat9, cSVFormat6);
assertNotSame(cSVFormat9, cSVFormat1);
assertNotSame(cSVFormat9, cSVFormat4);
assertNotSame(cSVFormat9, cSVFormat7);
assertNotSame(cSVFormat9, cSVFormat3);
assertNotSame(cSVFormat9, cSVFormat5);
assertNotSame(cSVFormat9, cSVFormat8);
assertNotSame(cSVFormat9, cSVFormat2);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat6.isNullStringSet());
assertFalse(cSVFormat6.getAllowMissingColumnNames());
assertNull(cSVFormat6.getNullString());
assertFalse(cSVFormat6.getAutoFlush());
assertFalse(cSVFormat6.getSkipHeaderRecord());
assertEquals('|', cSVFormat6.getDelimiter());
assertNull(cSVFormat6.getQuoteMode());
assertEquals('Q', (char)cSVFormat6.getCommentMarker());
assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
assertTrue(cSVFormat6.getTrim());
assertFalse(cSVFormat6.getIgnoreHeaderCase());
assertTrue(cSVFormat6.isCommentMarkerSet());
assertNull(cSVFormat6.getRecordSeparator());
assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
assertTrue(cSVFormat6.getIgnoreEmptyLines());
assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat6.isQuoteCharacterSet());
assertFalse(cSVFormat6.getTrailingDelimiter());
assertTrue(cSVFormat6.isEscapeCharacterSet());
assertFalse(cSVFormat9.getSkipHeaderRecord());
assertNull(cSVFormat9.getQuoteMode());
assertTrue(cSVFormat9.getIgnoreEmptyLines());
assertTrue(cSVFormat9.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat9.getTrim());
assertTrue(cSVFormat9.isEscapeCharacterSet());
assertFalse(cSVFormat9.getIgnoreHeaderCase());
assertNull(cSVFormat9.getRecordSeparator());
assertTrue(cSVFormat9.isQuoteCharacterSet());
assertEquals('|', cSVFormat9.getDelimiter());
assertFalse(cSVFormat9.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat9.getCommentMarker());
assertEquals('\"', (char)cSVFormat9.getQuoteCharacter());
assertFalse(cSVFormat9.getAllowMissingColumnNames());
assertFalse(cSVFormat9.isNullStringSet());
assertTrue(cSVFormat9.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat9.getEscapeCharacter());
assertNull(cSVFormat9.getNullString());
assertFalse(cSVFormat9.getAutoFlush());
assertFalse(cSVFormat0.equals((Object)cSVFormat6));
assertFalse(cSVFormat0.equals((Object)cSVFormat8));
assertFalse(cSVFormat0.equals((Object)cSVFormat4));
assertFalse(cSVFormat0.equals((Object)cSVFormat1));
assertFalse(cSVFormat0.equals((Object)cSVFormat3));
assertFalse(cSVFormat0.equals((Object)cSVFormat5));
assertFalse(cSVFormat0.equals((Object)cSVFormat7));
assertFalse(cSVFormat0.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat7));
assertFalse(cSVFormat1.equals((Object)cSVFormat3));
assertFalse(cSVFormat1.equals((Object)cSVFormat5));
assertFalse(cSVFormat1.equals((Object)cSVFormat6));
assertTrue(cSVFormat1.equals((Object)cSVFormat2));
assertFalse(cSVFormat1.equals((Object)cSVFormat4));
assertFalse(cSVFormat1.equals((Object)cSVFormat0));
assertFalse(cSVFormat1.equals((Object)cSVFormat8));
assertFalse(cSVFormat2.equals((Object)cSVFormat6));
assertFalse(cSVFormat2.equals((Object)cSVFormat4));
assertTrue(cSVFormat2.equals((Object)cSVFormat1));
assertFalse(cSVFormat2.equals((Object)cSVFormat7));
assertFalse(cSVFormat2.equals((Object)cSVFormat3));
assertFalse(cSVFormat2.equals((Object)cSVFormat5));
assertFalse(cSVFormat2.equals((Object)cSVFormat0));
assertFalse(cSVFormat2.equals((Object)cSVFormat8));
assertFalse(cSVFormat3.equals((Object)cSVFormat0));
assertFalse(cSVFormat3.equals((Object)cSVFormat6));
assertFalse(cSVFormat3.equals((Object)cSVFormat7));
assertFalse(cSVFormat3.equals((Object)cSVFormat4));
assertFalse(cSVFormat3.equals((Object)cSVFormat2));
assertFalse(cSVFormat3.equals((Object)cSVFormat1));
assertFalse(cSVFormat3.equals((Object)cSVFormat5));
assertFalse(cSVFormat3.equals((Object)cSVFormat8));
assertTrue(cSVFormat4.equals((Object)cSVFormat8));
assertTrue(cSVFormat4.equals((Object)cSVFormat7));
assertFalse(cSVFormat4.equals((Object)cSVFormat3));
assertFalse(cSVFormat4.equals((Object)cSVFormat0));
assertFalse(cSVFormat4.equals((Object)cSVFormat1));

Character character1 = cSVFormat5.getQuoteCharacter();
assertNotNull(character1);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat9);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat9);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat8);
assertNotSame(cSVFormat5, cSVFormat2);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());

CSVFormat cSVFormat10 = cSVFormat6.withTrim(false);
assertNotNull(cSVFormat10);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat0, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat10);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat10);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat9);
assertNotSame(cSVFormat4, cSVFormat10);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat9);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat10);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat8);
assertNotSame(cSVFormat5, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat7);
assertNotSame(cSVFormat6, cSVFormat10);
assertNotSame(cSVFormat6, cSVFormat3);
assertNotSame(cSVFormat6, cSVFormat5);
assertNotSame(cSVFormat6, cSVFormat8);
assertNotSame(cSVFormat6, cSVFormat9);
assertNotSame(cSVFormat6, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat4);
assertNotSame(cSVFormat6, cSVFormat0);
assertNotSame(cSVFormat6, cSVFormat1);
assertNotSame(cSVFormat10, cSVFormat4);
assertNotSame(cSVFormat10, cSVFormat8);
assertNotSame(cSVFormat10, cSVFormat1);
assertNotSame(cSVFormat10, cSVFormat3);
assertNotSame(cSVFormat10, cSVFormat5);
assertNotSame(cSVFormat10, cSVFormat0);
assertNotSame(cSVFormat10, cSVFormat2);
assertNotSame(cSVFormat10, cSVFormat9);
assertNotSame(cSVFormat10, cSVFormat6);
assertNotSame(cSVFormat10, cSVFormat7);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat6.isNullStringSet());
assertFalse(cSVFormat6.getAllowMissingColumnNames());
assertNull(cSVFormat6.getNullString());
assertFalse(cSVFormat6.getAutoFlush());
assertFalse(cSVFormat6.getSkipHeaderRecord());
assertEquals('|', cSVFormat6.getDelimiter());
assertNull(cSVFormat6.getQuoteMode());
assertEquals('Q', (char)cSVFormat6.getCommentMarker());
assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
assertTrue(cSVFormat6.getTrim());
assertFalse(cSVFormat6.getIgnoreHeaderCase());
assertTrue(cSVFormat6.isCommentMarkerSet());
assertNull(cSVFormat6.getRecordSeparator());
assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
assertTrue(cSVFormat6.getIgnoreEmptyLines());
assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat6.isQuoteCharacterSet());
assertFalse(cSVFormat6.getTrailingDelimiter());
assertTrue(cSVFormat6.isEscapeCharacterSet());
assertFalse(cSVFormat10.getTrailingDelimiter());
assertFalse(cSVFormat10.getTrim());
assertTrue(cSVFormat10.isQuoteCharacterSet());
assertFalse(cSVFormat10.getIgnoreSurroundingSpaces());
assertNull(cSVFormat10.getNullString());
assertNull(cSVFormat10.getRecordSeparator());
assertTrue(cSVFormat10.isCommentMarkerSet());
assertFalse(cSVFormat10.getIgnoreHeaderCase());
assertFalse(cSVFormat10.getAllowMissingColumnNames());
assertFalse(cSVFormat10.getAutoFlush());
assertTrue(cSVFormat10.isEscapeCharacterSet());
assertFalse(cSVFormat10.isNullStringSet());
assertEquals('\\', (char)cSVFormat10.getEscapeCharacter());
assertNull(cSVFormat10.getQuoteMode());
assertTrue(cSVFormat10.getIgnoreEmptyLines());
assertEquals('\"', (char)cSVFormat10.getQuoteCharacter());
assertEquals('Q', (char)cSVFormat10.getCommentMarker());
assertFalse(cSVFormat10.getSkipHeaderRecord());
assertEquals('|', cSVFormat10.getDelimiter());

CSVFormat cSVFormat11 = cSVFormat10.DEFAULT.withSkipHeaderRecord(true);
assertNotNull(cSVFormat11);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat11);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat0, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat11);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat11);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat10);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat11);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat10);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat9);
assertNotSame(cSVFormat4, cSVFormat10);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat11);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat0);
assertNotSame(cSVFormat5, cSVFormat9);
assertNotSame(cSVFormat5, cSVFormat6);
assertNotSame(cSVFormat5, cSVFormat11);
assertNotSame(cSVFormat5, cSVFormat7);
assertNotSame(cSVFormat5, cSVFormat3);
assertNotSame(cSVFormat5, cSVFormat10);
assertNotSame(cSVFormat5, cSVFormat4);
assertNotSame(cSVFormat5, cSVFormat1);
assertNotSame(cSVFormat5, cSVFormat8);
assertNotSame(cSVFormat5, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat7);
assertNotSame(cSVFormat6, cSVFormat10);
assertNotSame(cSVFormat6, cSVFormat3);
assertNotSame(cSVFormat6, cSVFormat5);
assertNotSame(cSVFormat6, cSVFormat8);
assertNotSame(cSVFormat6, cSVFormat9);
assertNotSame(cSVFormat6, cSVFormat2);
assertNotSame(cSVFormat6, cSVFormat11);
assertNotSame(cSVFormat6, cSVFormat4);
assertNotSame(cSVFormat6, cSVFormat0);
assertNotSame(cSVFormat6, cSVFormat1);
assertNotSame(cSVFormat10, cSVFormat4);
assertNotSame(cSVFormat10, cSVFormat8);
assertNotSame(cSVFormat10, cSVFormat11);
assertNotSame(cSVFormat10, cSVFormat1);
assertNotSame(cSVFormat10, cSVFormat3);
assertNotSame(cSVFormat10, cSVFormat5);
assertNotSame(cSVFormat10, cSVFormat0);
assertNotSame(cSVFormat10, cSVFormat2);
assertNotSame(cSVFormat10, cSVFormat9);
assertNotSame(cSVFormat10, cSVFormat6);
assertNotSame(cSVFormat10, cSVFormat7);
assertNotSame(cSVFormat11, cSVFormat3);
assertNotSame(cSVFormat11, cSVFormat5);
assertNotSame(cSVFormat11, cSVFormat4);
assertNotSame(cSVFormat11, cSVFormat7);
assertNotSame(cSVFormat11, cSVFormat10);
assertNotSame(cSVFormat11, cSVFormat6);
assertNotSame(cSVFormat11, cSVFormat0);
assertNotSame(cSVFormat11, cSVFormat1);
assertNotSame(cSVFormat11, cSVFormat2);
assertNotSame(cSVFormat11, cSVFormat8);
assertNotSame(cSVFormat11, cSVFormat9);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());
assertEquals('|', cSVFormat5.getDelimiter());
assertFalse(cSVFormat5.getTrailingDelimiter());
assertEquals('Q', (char)cSVFormat5.getCommentMarker());
assertEquals('\"', (char)cSVFormat5.getQuoteCharacter());
assertFalse(cSVFormat5.getAllowMissingColumnNames());
assertTrue(cSVFormat5.isCommentMarkerSet());
assertEquals('\\', (char)cSVFormat5.getEscapeCharacter());
assertFalse(cSVFormat5.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat5.getAutoFlush());
assertNull(cSVFormat5.getNullString());
assertFalse(cSVFormat5.isNullStringSet());
assertFalse(cSVFormat5.getSkipHeaderRecord());
assertNull(cSVFormat5.getQuoteMode());
assertTrue(cSVFormat5.getIgnoreEmptyLines());
assertTrue(cSVFormat5.getTrim());
assertTrue(cSVFormat5.isEscapeCharacterSet());
assertFalse(cSVFormat5.getIgnoreHeaderCase());
assertNull(cSVFormat5.getRecordSeparator());
assertTrue(cSVFormat5.isQuoteCharacterSet());
assertFalse(cSVFormat6.isNullStringSet());
assertFalse(cSVFormat6.getAllowMissingColumnNames());
assertNull(cSVFormat6.getNullString());
assertFalse(cSVFormat6.getAutoFlush());
assertFalse(cSVFormat6.getSkipHeaderRecord());
assertEquals('|', cSVFormat6.getDelimiter());
assertNull(cSVFormat6.getQuoteMode());
assertEquals('Q', (char)cSVFormat6.getCommentMarker());
assertEquals('\"', (char)cSVFormat6.getQuoteCharacter());
assertTrue(cSVFormat6.getTrim());
assertFalse(cSVFormat6.getIgnoreHeaderCase());
assertTrue(cSVFormat6.isCommentMarkerSet());
assertNull(cSVFormat6.getRecordSeparator());
assertEquals('\\', (char)cSVFormat6.getEscapeCharacter());
assertTrue(cSVFormat6.getIgnoreEmptyLines());
assertFalse(cSVFormat6.getIgnoreSurroundingSpaces());
assertTrue(cSVFormat6.isQuoteCharacterSet());
assertFalse(cSVFormat6.getTrailingDelimiter());
assertTrue(cSVFormat6.isEscapeCharacterSet());
assertFalse(cSVFormat10.getTrailingDelimiter());
assertFalse(cSVFormat10.getTrim());
assertTrue(cSVFormat10.isQuoteCharacterSet());
assertFalse(cSVFormat10.getIgnoreSurroundingSpaces());
assertNull(cSVFormat10.getNullString());
assertNull(cSVFormat10.getRecordSeparator());
assertTrue(cSVFormat10.isCommentMarkerSet());
assertFalse(cSVFormat10.getIgnoreHeaderCase());
assertFalse(cSVFormat10.getAllowMissingColumnNames());
assertFalse(cSVFormat10.getAutoFlush());
assertTrue(cSVFormat10.isEscapeCharacterSet());
assertFalse(cSVFormat10.isNullStringSet());
assertEquals('\\', (char)cSVFormat10.getEscapeCharacter());
assertNull(cSVFormat10.getQuoteMode());
assertTrue(cSVFormat10.getIgnoreEmptyLines());
assertEquals('\"', (char)cSVFormat10.getQuoteCharacter());
assertEquals('Q', (char)cSVFormat10.getCommentMarker());
assertFalse(cSVFormat10.getSkipHeaderRecord());
assertEquals('|', cSVFormat10.getDelimiter());
assertFalse(cSVFormat11.isNullStringSet());
assertTrue(cSVFormat11.getSkipHeaderRecord());
assertFalse(cSVFormat11.getAllowMissingColumnNames());
assertEquals('\"', (char)cSVFormat11.getQuoteCharacter());
assertTrue(cSVFormat11.getIgnoreEmptyLines());
assertFalse(cSVFormat11.isEscapeCharacterSet());
assertNull(cSVFormat11.getEscapeCharacter());
assertTrue(cSVFormat11.isQuoteCharacterSet());
assertFalse(cSVFormat11.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat11.getTrim());
assertFalse(cSVFormat11.getIgnoreHeaderCase());
assertEquals("\r\n", cSVFormat11.getRecordSeparator());
assertFalse(cSVFormat11.isCommentMarkerSet());
assertNull(cSVFormat11.getCommentMarker());
assertNull(cSVFormat11.getNullString());
assertNull(cSVFormat11.getQuoteMode());
assertEquals(',', cSVFormat11.getDelimiter());
assertFalse(cSVFormat11.getAutoFlush());
assertFalse(cSVFormat11.getTrailingDelimiter());

cSVFormat4.getQuoteMode();
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat11);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat0, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat11);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat11);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat10);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat11);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat10);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat9);
assertNotSame(cSVFormat4, cSVFormat10);
assertNotSame(cSVFormat4, cSVFormat3);
assertNotSame(cSVFormat4, cSVFormat5);
assertNotSame(cSVFormat4, cSVFormat0);
assertNotSame(cSVFormat4, cSVFormat1);
assertNotSame(cSVFormat4, cSVFormat2);
assertNotSame(cSVFormat4, cSVFormat8);
assertNotSame(cSVFormat4, cSVFormat11);
assertNotSame(cSVFormat4, cSVFormat6);
assertNotSame(cSVFormat4, cSVFormat7);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());
assertNull(cSVFormat4.getQuoteMode());
assertTrue(cSVFormat4.getIgnoreEmptyLines());
assertEquals('\\', (char)cSVFormat4.getEscapeCharacter());
assertNull(cSVFormat4.getRecordSeparator());
assertTrue(cSVFormat4.isCommentMarkerSet());
assertFalse(cSVFormat4.getAutoFlush());
assertTrue(cSVFormat4.isQuoteCharacterSet());
assertFalse(cSVFormat4.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat4.getTrim());
assertFalse(cSVFormat4.getTrailingDelimiter());
assertTrue(cSVFormat4.isEscapeCharacterSet());
assertFalse(cSVFormat4.getIgnoreHeaderCase());
assertFalse(cSVFormat4.getAllowMissingColumnNames());
assertEquals('Q', (char)cSVFormat4.getCommentMarker());
assertEquals('|', cSVFormat4.getDelimiter());
assertFalse(cSVFormat4.isNullStringSet());
assertNull(cSVFormat4.getNullString());
assertFalse(cSVFormat4.getSkipHeaderRecord());
assertEquals('\"', (char)cSVFormat4.getQuoteCharacter());

CSVFormat.Predefined.valueOf("InformixUnloadCsv");
CSVFormat cSVFormat12 = cSVFormat3.withTrim();
assertNotNull(cSVFormat12);
assertNotSame(cSVFormat0, cSVFormat6);
assertNotSame(cSVFormat0, cSVFormat11);
assertNotSame(cSVFormat0, cSVFormat9);
assertNotSame(cSVFormat0, cSVFormat8);
assertNotSame(cSVFormat0, cSVFormat4);
assertNotSame(cSVFormat0, cSVFormat1);
assertNotSame(cSVFormat0, cSVFormat3);
assertNotSame(cSVFormat0, cSVFormat5);
assertNotSame(cSVFormat0, cSVFormat7);
assertNotSame(cSVFormat0, cSVFormat12);
assertNotSame(cSVFormat0, cSVFormat2);
assertNotSame(cSVFormat0, cSVFormat10);
assertNotSame(cSVFormat12, cSVFormat8);
assertNotSame(cSVFormat12, cSVFormat4);
assertNotSame(cSVFormat12, cSVFormat1);
assertNotSame(cSVFormat12, cSVFormat11);
assertNotSame(cSVFormat12, cSVFormat10);
assertNotSame(cSVFormat12, cSVFormat0);
assertNotSame(cSVFormat12, cSVFormat2);
assertNotSame(cSVFormat12, cSVFormat3);
assertNotSame(cSVFormat12, cSVFormat5);
assertNotSame(cSVFormat12, cSVFormat7);
assertNotSame(cSVFormat12, cSVFormat6);
assertNotSame(cSVFormat12, cSVFormat9);
assertNotSame(cSVFormat1, cSVFormat12);
assertNotSame(cSVFormat1, cSVFormat7);
assertNotSame(cSVFormat1, cSVFormat10);
assertNotSame(cSVFormat1, cSVFormat3);
assertNotSame(cSVFormat1, cSVFormat5);
assertNotSame(cSVFormat1, cSVFormat6);
assertNotSame(cSVFormat1, cSVFormat11);
assertNotSame(cSVFormat1, cSVFormat4);
assertNotSame(cSVFormat1, cSVFormat0);
assertNotSame(cSVFormat1, cSVFormat8);
assertNotSame(cSVFormat1, cSVFormat2);
assertNotSame(cSVFormat1, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat11);
assertNotSame(cSVFormat2, cSVFormat1);
assertNotSame(cSVFormat2, cSVFormat6);
assertNotSame(cSVFormat2, cSVFormat4);
assertNotSame(cSVFormat2, cSVFormat7);
assertNotSame(cSVFormat2, cSVFormat10);
assertNotSame(cSVFormat2, cSVFormat3);
assertNotSame(cSVFormat2, cSVFormat5);
assertNotSame(cSVFormat2, cSVFormat12);
assertNotSame(cSVFormat2, cSVFormat0);
assertNotSame(cSVFormat2, cSVFormat9);
assertNotSame(cSVFormat2, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat0);
assertNotSame(cSVFormat3, cSVFormat9);
assertNotSame(cSVFormat3, cSVFormat11);
assertNotSame(cSVFormat3, cSVFormat6);
assertNotSame(cSVFormat3, cSVFormat7);
assertNotSame(cSVFormat3, cSVFormat10);
assertNotSame(cSVFormat3, cSVFormat4);
assertNotSame(cSVFormat3, cSVFormat2);
assertNotSame(cSVFormat3, cSVFormat1);
assertNotSame(cSVFormat3, cSVFormat5);
assertNotSame(cSVFormat3, cSVFormat8);
assertNotSame(cSVFormat3, cSVFormat12);
assertFalse(cSVFormat0.getAutoFlush());
assertNull(cSVFormat0.getCommentMarker());
assertNull(cSVFormat0.getQuoteMode());
assertEquals('\\', (char)cSVFormat0.getEscapeCharacter());
assertEquals('\"', (char)cSVFormat0.getQuoteCharacter());
assertTrue(cSVFormat0.isQuoteCharacterSet());
assertEquals('|', cSVFormat0.getDelimiter());
assertTrue(cSVFormat0.getIgnoreEmptyLines());
assertFalse(cSVFormat0.getSkipHeaderRecord());
assertEquals("\n", cSVFormat0.getRecordSeparator());
assertFalse(cSVFormat0.getTrailingDelimiter());
assertFalse(cSVFormat0.isCommentMarkerSet());
assertFalse(cSVFormat0.getIgnoreSurroundingSpaces());
assertNull(cSVFormat0.getNullString());
assertFalse(cSVFormat0.isNullStringSet());
assertFalse(cSVFormat0.getTrim());
assertTrue(cSVFormat0.isEscapeCharacterSet());
assertFalse(cSVFormat0.getIgnoreHeaderCase());
assertFalse(cSVFormat0.getAllowMissingColumnNames());
assertFalse(cSVFormat12.getAutoFlush());
assertEquals('\"', (char)cSVFormat12.getQuoteCharacter());
assertTrue(cSVFormat12.getTrim());
assertTrue(cSVFormat12.isEscapeCharacterSet());
assertEquals('\\', (char)cSVFormat12.getEscapeCharacter());
assertNull(cSVFormat12.getQuoteMode());
assertNull(cSVFormat12.getNullString());
assertFalse(cSVFormat12.isNullStringSet());
assertFalse(cSVFormat12.getAllowMissingColumnNames());
assertFalse(cSVFormat12.getTrailingDelimiter());
assertTrue(cSVFormat12.isCommentMarkerSet());
assertFalse(cSVFormat12.getIgnoreSurroundingSpaces());
assertFalse(cSVFormat12.getIgnoreHeaderCase());
assertNull(cSVFormat12.getRecordSeparator());
assertEquals('|', cSVFormat12.getDelimiter());
assertTrue(cSVFormat12.getIgnoreEmptyLines());
assertFalse(cSVFormat12.getSkipHeaderRecord());
assertTrue(cSVFormat12.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat12.getCommentMarker());
assertFalse(cSVFormat1.getIgnoreHeaderCase());
assertFalse(cSVFormat1.getTrim());
assertEquals('\\', (char)cSVFormat1.getEscapeCharacter());
assertNull(cSVFormat1.getRecordSeparator());
assertNull(cSVFormat1.getQuoteMode());
assertFalse(cSVFormat1.isCommentMarkerSet());
assertNull(cSVFormat1.getCommentMarker());
assertFalse(cSVFormat1.getSkipHeaderRecord());
assertEquals('|', cSVFormat1.getDelimiter());
assertTrue(cSVFormat1.getIgnoreEmptyLines());
assertTrue(cSVFormat1.isQuoteCharacterSet());
assertFalse(cSVFormat1.isNullStringSet());
assertFalse(cSVFormat1.getAllowMissingColumnNames());
assertTrue(cSVFormat1.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat1.getQuoteCharacter());
assertFalse(cSVFormat1.getTrailingDelimiter());
assertFalse(cSVFormat1.getIgnoreSurroundingSpaces());
assertNull(cSVFormat1.getNullString());
assertFalse(cSVFormat1.getAutoFlush());
assertFalse(cSVFormat2.getSkipHeaderRecord());
assertNull(cSVFormat2.getCommentMarker());
assertTrue(cSVFormat2.isEscapeCharacterSet());
assertEquals('\"', (char)cSVFormat2.getQuoteCharacter());
assertFalse(cSVFormat2.getAllowMissingColumnNames());
assertEquals('\\', (char)cSVFormat2.getEscapeCharacter());
assertNull(cSVFormat2.getQuoteMode());
assertFalse(cSVFormat2.getIgnoreSurroundingSpaces());
assertNull(cSVFormat2.getNullString());
assertFalse(cSVFormat2.isNullStringSet());
assertFalse(cSVFormat2.getTrim());
assertFalse(cSVFormat2.getAutoFlush());
assertFalse(cSVFormat2.getTrailingDelimiter());
assertFalse(cSVFormat2.isCommentMarkerSet());
assertFalse(cSVFormat2.getIgnoreHeaderCase());
assertNull(cSVFormat2.getRecordSeparator());
assertEquals('|', cSVFormat2.getDelimiter());
assertTrue(cSVFormat2.getIgnoreEmptyLines());
assertTrue(cSVFormat2.isQuoteCharacterSet());
assertEquals('|', cSVFormat3.getDelimiter());
assertFalse(cSVFormat3.getTrailingDelimiter());
assertEquals('\"', (char)cSVFormat3.getQuoteCharacter());
assertFalse(cSVFormat3.getAllowMissingColumnNames());
assertTrue(cSVFormat3.isCommentMarkerSet());
assertFalse(cSVFormat3.getAutoFlush());
assertEquals('\\', (char)cSVFormat3.getEscapeCharacter());
assertFalse(cSVFormat3.getIgnoreSurroundingSpaces());
assertNull(cSVFormat3.getNullString());
assertFalse(cSVFormat3.isNullStringSet());
assertFalse(cSVFormat3.getTrim());
assertFalse(cSVFormat3.getSkipHeaderRecord());
assertNull(cSVFormat3.getQuoteMode());
assertTrue(cSVFormat3.getIgnoreEmptyLines());
assertTrue(cSVFormat3.isEscapeCharacterSet());
assertTrue(cSVFormat3.isQuoteCharacterSet());
assertEquals('\'', (char)cSVFormat3.getCommentMarker());
assertFalse(cSVFormat3.getIgnoreHeaderCase());
assertNull(cSVFormat3.getRecordSeparator());

String string0 = "(Bj])QnR\"];*";
MockFile mockFile0 = new MockFile("(Bj])QnR\"];*");
assertNotNull(mockFile0);

Path path0 = mockFile0.toPath();
assertNotNull(path0);
assertFalse(mockFile0.isDirectory());
assertEquals(0L, mockFile0.lastModified());
assertEquals("(Bj])QnR\"];*", mockFile0.toString());
assertEquals(0L, mockFile0.length());
assertEquals(0L, mockFile0.getTotalSpace());
assertFalse(mockFile0.canRead());
assertFalse(mockFile0.canExecute());
assertFalse(mockFile0.canWrite());
assertFalse(mockFile0.isAbsolute());
assertEquals(0L, mockFile0.getFreeSpace());
assertTrue(mockFile0.isFile());
assertFalse(mockFile0.isHidden());
assertEquals("(Bj])QnR\"];*", mockFile0.getName());
assertFalse(mockFile0.exists());
assertNull(mockFile0.getParent());
assertEquals(0L, mockFile0.getUsableSpace());

CSVFormat.Predefined cSVFormat_Predefined0 = CSVFormat.Predefined.InformixUnloadCsv;
assertSame(cSVFormat_Predefined0, cSVFormat_Predefined1);

MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "b)sqxb,");

[MASTER] 06:21:15.752 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /experiment/ty/
: 1
         write PostgreSQLText: 18
         write xmx,sGlVW]n:: 1
         and other 64 cases of action/name for this exception class
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 71
* Writing tests to file
* Writing JUnit test case 'CSVFormat_ESTest' to results/Csv-15/org.apache.commons.csv.CSVFormat/BBC-F0/tests/2
* Done!

* Computation finished
