/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 14 01:59:11 GMT 2021
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.NamespaceResolver;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.compiler.NodeTest;
import org.apache.commons.jxpath.ri.compiler.NodeTypeTest;
import org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest;
import org.apache.commons.jxpath.ri.model.NodeIterator;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.beans.NullPointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.apache.html.dom.HTMLAnchorElementImpl;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLButtonElementImpl;
import org.apache.html.dom.HTMLDListElementImpl;
import org.apache.html.dom.HTMLDirectoryElementImpl;
import org.apache.html.dom.HTMLDivElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLHeadingElementImpl;
import org.apache.html.dom.HTMLIsIndexElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLLinkElementImpl;
import org.apache.html.dom.HTMLModElementImpl;
import org.apache.html.dom.HTMLObjectElementImpl;
import org.apache.html.dom.HTMLPreElementImpl;
import org.apache.html.dom.HTMLScriptElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.html.dom.HTMLTextAreaElementImpl;
import org.apache.html.dom.HTMLUListElementImpl;
import org.apache.wml.dom.WMLBElementImpl;
import org.apache.wml.dom.WMLCardElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLHeadElementImpl;
import org.apache.wml.dom.WMLIElementImpl;
import org.apache.wml.dom.WMLInputElementImpl;
import org.apache.wml.dom.WMLMetaElementImpl;
import org.apache.wml.dom.WMLOptgroupElementImpl;
import org.apache.wml.dom.WMLOptionElementImpl;
import org.apache.wml.dom.WMLPrevElementImpl;
import org.apache.wml.dom.WMLSelectElementImpl;
import org.apache.wml.dom.WMLTemplateElementImpl;
import org.apache.wml.dom.WMLTrElementImpl;
import org.apache.wml.dom.WMLWmlElementImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CommentImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.EntityImpl;
import org.apache.xerces.dom.EntityReferenceImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.apache.xerces.dom.ProcessingInstructionImpl;
import org.apache.xerces.dom.TextImpl;
import org.apache.xerces.dom3.UserDataHandler;
import org.apache.xerces.parsers.DOMASBuilderImpl;
import org.apache.xerces.parsers.DTDConfiguration;
import org.apache.xerces.parsers.StandardParserConfiguration;
import org.apache.xerces.parsers.XML11Configuration;
import org.apache.xerces.parsers.XMLGrammarCachingConfiguration;
import org.apache.xerces.util.DOMErrorHandlerWrapper;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.html.HTMLElement;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DOMNodePointer_ESTest extends DOMNodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ITALY;
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "xml");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLButtonElementImpl0, locale0);
      QName qName0 = new QName("xml", (String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      hTMLDocumentImpl0.setReadOnly(true, true);
      String string0 = "9";
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI("9");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // NO_MODIFICATION_ALLOWED_ERR: An attempt is made to modify an object where modifications are not allowed.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(4);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      Locale locale1 = Locale.CHINESE;
      EntityImpl entityImpl0 = new EntityImpl(hTMLDocumentImpl0, "Cjnnpt remove root DOM node");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(entityImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@null, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, "Exception trying to create xpath ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      Element element0 = wMLDocumentImpl0.createElement("`1_@'");
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      Locale.getISOLanguages();
      NodePointer nodePointer0 = NodePointer.verify(dOMNodePointer0);
      dOMNodePointer0.getValuePointer();
      dOMNodePointer0.compareChildNodePointers(nodePointer0, nodePointer0);
      documentTypeImpl0.setReadOnly(true, true);
      dOMNodePointer0.isLeaf();
      DOMNodePointer.getLocalName(documentTypeImpl0);
      dOMNodePointer0.getLength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.html.dom.HTMLDocumentImpl@0000000001");
      QName qName0 = new QName("Exception trying to create xpath ");
      dOMNodePointer0.attributeIterator(qName0);
      dOMNodePointer0.equals(nodePointer0);
      dOMNodePointer0.attributeIterator(qName0);
      wMLDocumentImpl0.getParentNode();
      dOMNodePointer0.getNamespaceURI("9|2[#uvM");
      dOMNodePointer0.getNamespaceResolver();
      DOMNodePointer.getLocalName(documentTypeImpl0);
      dOMNodePointer0.isLeaf();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) wMLDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMANY;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "i");
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "o 0", (String) null, "BVpk{@M[8o");
      QName qName0 = new QName("o 0", "o 0");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, qName0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      dOMNodePointer0.isLanguage("vlink");
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      boolean boolean0 = dOMNodePointer0.isCollection();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1);
      boolean boolean1 = DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("l@Z52Hcq)vh");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      XMLGrammarCachingConfiguration xMLGrammarCachingConfiguration0 = new XMLGrammarCachingConfiguration();
      DOMASBuilderImpl dOMASBuilderImpl0 = new DOMASBuilderImpl(xMLGrammarCachingConfiguration0);
      String string0 = "http://www.w3.org/XML/1998/namespace";
      Document document0 = dOMASBuilderImpl0.parseURI("http://www.w3.org/XML/1998/namespace");
      String string1 = "0^=ip.EjF\\b(70Yx|^";
      Locale locale0 = new Locale(string0, string0, string1);
      String string2 = "^<<|39r^E&DN";
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(document0, locale0, string2);
      dOMNodePointer0.getDefaultNamespaceURI();
      dOMNodePointer0.isCollection();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getNamespaceURI("timer");
      dOMNodePointer0.getPointerByID((JXPathContext) null, "");
      String string0 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "6?JGB$kgTq33TL");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      Element element0 = pSVIDocumentImpl0.createElementNS("", "6q#3.*N#nl)[t^_ve", "http-equiv");
      Locale locale0 = Locale.forLanguageTag("http-equiv");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0, "6?JGB$kgTq33TL");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "fe/xv");
      dOMNodePointer0.setValue(hTMLPreElementImpl0);
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "Factory could not create a child node for path: ");
      hTMLTableRowElementImpl0.hasAttributeNS("fe/xv", "^,n");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((byte) (-72));
      DOMNodePointer.testNode((Node) hTMLTableRowElementImpl0, (NodeTest) nodeTypeTest0);
      dOMNodePointer0.isActual();
      dOMNodePointer0.getNamespaceURI();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.namespacePointer((String) null);
      dOMNodePointer0.getDefaultNamespaceURI();
      String string0 = dOMNodePointer0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.PRC;
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "RkACYg`k11L%9Zp)!i");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLButtonElementImpl0, locale0);
      QName qName0 = new QName("xmlns", "HTMLFrameElementImpl");
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      String string0 = dOMNodePointer0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl0, ":+ciu|cI;K[u~");
      Locale locale0 = Locale.FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAppletElementImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, hTMLAppletElementImpl0);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) variablePointer0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "OWN!Ax:,*;;%eq1-");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      dOMNodePointer1.getName();
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "Cannot remove root DOM node");
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      assertEquals("OWN!AX:,*;;%EQ1-", nodeNameTest0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.JAPANESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "OWN!Ax:,*;;%eq1-");
      Boolean boolean0 = Boolean.FALSE;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "OWN!Ax:,*;;%eq1-", "OWN!Ax:,*;;%eq1-");
      locale0.getExtensionKeys();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      String string0 = dOMNodePointer1.asPath();
      assertEquals("id('OWN!Ax:,*;;%eq1-')/node()[1]", string0);
      
      String string1 = dOMNodePointer1.getNamespaceURI();
      assertEquals("http://www.w3.org/XML/1998/namespace", string1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLHeadingElementImpl hTMLHeadingElementImpl0 = new HTMLHeadingElementImpl(hTMLDocumentImpl0, "I");
      QName qName0 = new QName("I", "I");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "I");
      DOMNodePointer.testNode((Node) hTMLHeadingElementImpl0, (NodeTest) nodeNameTest0);
      Locale locale0 = Locale.ITALY;
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLHeadingElementImpl0);
      String string0 = dOMNodePointer1.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "RkACYg`k11L%9Zp)!i");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLButtonElementImpl0, locale0);
      QName qName0 = new QName("xmlns", "6A8189{*UV9,O$4af]w");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.GERMAN;
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.wml.dom.WMLOptionElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, (String) null);
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(hTMLDocumentImpl0, "iBc");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(cDATASectionImpl0, locale0, "http://www.w3.org/2000/xmlns/");
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      dOMNodePointer0.getName();
      ProcessingInstructionImpl processingInstructionImpl0 = new ProcessingInstructionImpl(hTMLDocumentImpl0, "iBc", "<<unknown namespace>>");
      dOMNodePointer1.setValue(processingInstructionImpl0);
      assertEquals(1, dOMNodePointer1.getLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = "R&z)H6E_Kjc\"F<)?:";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R&z)H6E_Kjc\"F<)?:");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "9}Z");
      dOMNodePointer0.getNode();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.setNamespaceResolver(namespaceResolver0);
      dOMNodePointer0.getNamespaceResolver();
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      BasicVariables basicVariables0 = new BasicVariables();
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, "m");
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, textImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer1.childIterator(processingInstructionTest0, true, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "");
      QName qName0 = new QName("", "java.util.Locale@0000000008");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      String string1 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CANADA;
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl((WMLDocumentImpl) null, "HTMLInputElementImpl");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLInputElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getDefaultNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      String string0 = NodePointer.UNKNOWN_NAMESPACE;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElementNS("org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", "org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(element0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.getImmediateValuePointer();
      String string1 = dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string1);
      
      String string2 = DOMNodePointer.getLocalName(element0);
      assertEquals("org.apache.commons.jxpath.ri.model.beans.LangAttributePointer", string2);
      
      dOMNodePointer0.isCollection();
      boolean boolean0 = dOMNodePointer0.isCollection();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "( q$*qHZpt6g");
      dOMNodePointer0.getNamespaceURI("( q$*qHZpt6g");
      NodePointer nodePointer0 = NodePointer.verify(dOMNodePointer0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "Drq;6a'kRo\"KY`6SDw");
      dOMNodePointer1.compareChildNodePointers(nodePointer0, nodePointer0);
      dOMNodePointer0.setValue(dOMNodePointer1);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "Sx`5&8}[wqA=", "http://www.w3.org/2000/xmlns/", " .LJ_$.fvc$~");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(nodePointer0, pSVIElementNSImpl0);
      dOMNodePointer2.asPath();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer1.getValue();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "id('xmlns')");
      dOMNodePointer2.attributeIterator(qName0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLPreElementImpl0, locale0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) null);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLTemplateElementImpl0, locale0, "xR_1d<PIend<%Qy0");
      Boolean boolean0 = new Boolean("OWN!Ax:,*;;%eq1-");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "br");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getNamespaceURI("h(':3@w6w]!hA^G''s");
      NodePointer nodePointer0 = NodePointer.verify(dOMNodePointer0);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      dOMNodePointer1.setValue(boolean0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(wMLDocumentImpl0, "Sx`5&8}[wqA=", " .LJ_$.fvc$~", "dVmuk:HwkkH~");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer0, pSVIElementNSImpl0);
      dOMNodePointer3.asPath();
      HTMLPreElementImpl hTMLPreElementImpl0 = new HTMLPreElementImpl(hTMLDocumentImpl0, "\": ");
      dOMNodePointer1.setValue(hTMLPreElementImpl0);
      assertFalse(dOMNodePointer1.isCollection());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.ROOT;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "");
      Boolean boolean0 = new Boolean(" WAMU`k{|Qn3");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "T1,p>e");
      dOMNodePointer0.getNamespaceURI("YEnM:fW>)'./I");
      BasicVariables basicVariables0 = new BasicVariables();
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer3.compareChildNodePointers(dOMNodePointer1, variablePointer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such variable: 'null'
         //
         verifyException("org.apache.commons.jxpath.BasicVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      String string0 = "t:*}";
      String string1 = "Factory could not create a child node for path: ";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "t:*}", "Factory could not create a child node for path: ", "Factory could not create a child node for path: ");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, ":'B{Cf'@xk=`F7O%FN");
      DOMNodePointer.getLocalName(wMLTrElementImpl0);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) "Factory could not create a child node for path: ");
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      Boolean boolean0 = new Boolean("img");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "4+B8`!!AgCz");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "k$kDBE~#7O#@AZZa\"C");
      CDATASection cDATASection0 = deferredDocumentImpl0.createCDATASection("xml:lang");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, cDATASection0);
      dOMNodePointer1.getValue();
      dOMNodePointer0.getNamespaceURI("4+B8`!!AgCz");
      dOMNodePointer0.getValue();
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, (String) null);
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "CmUGWZN0T((:7o");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      hTMLDocumentImpl0.createRange();
      dOMNodePointer1.getNamespaceURI("xml");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(commentImpl0, locale1);
      Object object0 = dOMNodePointer2.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.createTreeWalker((Node) hTMLElement0, (short)2, nodeFilter0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((short)2);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale1 = Locale.KOREA;
      String string0 = DOMNodePointer.getLocalName(hTMLElement0);
      assertEquals("HEAD", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((short)2);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale1 = Locale.KOREA;
      assertEquals("kor", locale1.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.namespacePointer("mbxAT6s2");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "/");
      DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest1);
      hTMLDocumentImpl1.getDocumentElement();
      NodeIterator nodeIterator0 = dOMNodePointer0.childIterator(processingInstructionTest0, false, (NodePointer) null);
      assertEquals(0, nodeIterator0.getPosition());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, locale0);
      dOMNodePointer0.getValue();
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-2054419441));
      DOMNodePointer.testNode((Node) text0, (NodeTest) nodeTypeTest0);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", "xlspci");
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, nodeTypeTest0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      Locale.lookup(linkedList0, linkedList1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, (Locale) null);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(coreDocumentImpl0, (Locale) null, "http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = dOMNodePointer2.equals(dOMNodePointer0);
      assertTrue(boolean0);
      
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, hTMLDocumentImpl0);
      String string0 = dOMNodePointer3.getNamespaceURI("LINK");
      assertFalse(dOMNodePointer3.equals((Object)dOMNodePointer2));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.getName();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      Boolean boolean0 = new Boolean("http://www.w3.org/XML/1998/namespace");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer1.setValue(hTMLDocumentImpl0);
      Object object0 = dOMNodePointer1.getNode();
      dOMNodePointer0.setValue(object0);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "w&~D~qY:", "raIV");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "6(");
      String string0 = dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
      
      int int0 = dOMNodePointer1.compareChildNodePointers(nodePointer0, nodePointer0);
      assertEquals(0, int0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, (String) null);
      int int1 = dOMNodePointer2.compareChildNodePointers(nodePointer0, dOMNodePointer1);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.CHINESE;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getDocumentURI();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.VariablePointer$1");
      hTMLButtonElementImpl0.setLang((String) null);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      dOMNodePointer0.getLength();
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer((Variables) null, qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer1.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xmlns", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstruction0);
      Locale locale0 = Locale.ITALY;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "@r!O");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("Cannot remove root DOM node");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "[zC+H9*_:o_-|jqBUDv");
      String string0 = dOMNodePointer2.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      assertNull(string0);
      
      boolean boolean0 = DOMNodePointer.testNode((Node) processingInstruction0, (NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getBody();
      Locale locale0 = Locale.ITALY;
      hTMLDocumentImpl0.getErrorChecking();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0, "LWeVuisK4j}");
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>(2527, 2527);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedList0);
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) list0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale1, "j");
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      
      QName qName0 = dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.childIterator(nodeNameTest0, false, dOMNodePointer1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dOMNodePointer0.setValue(hTMLElement0);
      dOMNodePointer1.getName();
      dOMNodePointer1.attributeIterator(qName0);
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
      dOMNodePointer1.equals(locale0);
      dOMNodePointer1.getLength();
      boolean boolean1 = dOMNodePointer0.isActual();
      assertTrue(boolean1 == boolean0);
      
      QName qName1 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName1);
      assertTrue(dOMNodePointer0.isActual());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace", (String) null);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, qName0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      Boolean boolean0 = new Boolean("http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl0.getPrefix();
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ", "http://www.w3.org/XML/1998/namespace", (String) null);
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.namespacePointer("Mo_~-B$yazJ~W?fUts");
      String string0 = dOMNodePointer1.getNamespaceURI("Cannot remove an object that is not some other object's property or a collection element");
      assertNull(string0);
      
      int int0 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      int int1 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer2, dOMNodePointer1);
      assertTrue(int1 == int0);
      
      String string1 = DOMNodePointer.getLocalName(documentTypeImpl0);
      assertEquals(" ", string1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(dOMNodePointer1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "xmlns";
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.lookup(vector0, list0);
      NodePointer nodePointer0 = null;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.lookupTag(vector0, linkedList1);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xmlns", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstruction0);
      dOMNodePointer0.setValue((Object) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("preserve", "l+E8cB");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(processingInstruction0, (Locale) null);
      linkedList0.add((Locale.LanguageRange) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLBElementImpl wMLBElementImpl0 = new WMLBElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      boolean boolean0 = dOMNodePointer0.equals(wMLBElementImpl0);
      assertFalse(boolean0);
      
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      assertNull(string0);
      
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Object object0 = dOMNodePointer1.getValue();
      assertEquals("l+E8cB", object0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.lookup(vector0, list0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.lookupTag(vector0, linkedList1);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      ProcessingInstruction processingInstruction0 = hTMLDocumentImpl0.createProcessingInstruction("xmlns", "xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, processingInstruction0);
      dOMNodePointer0.setValue((Object) null);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      hTMLButtonElementImpl0.setLang("http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.setValue((Object) null);
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/processing-instruction('xmlns')[1]", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0);
      JXPathContext jXPathContext0 = null;
      QName qName0 = dOMNodePointer0.getName();
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      CommentImpl commentImpl0 = new CommentImpl((CoreDocumentImpl) null, (String) null);
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale1);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "CmUGWZN0T((:7o");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest1 = new NodeNameTest(qName0, "<<unknown namespace>>");
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) nodeNameTest1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      dOMNodePointer0.getLocale();
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.getLength();
      dOMNodePointer0.getNamespaceURI("HQFKX?BA/`FQ,lZM");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLDocumentImpl0, locale0, "org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator");
      dOMNodePointer0.getNamespaceURI("C3969+I|i`80w({L\"1");
      dOMNodePointer1.compareChildNodePointers(nodePointer0, dOMNodePointer0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild((JXPathContext) null, (QName) null, Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      Boolean boolean0 = new Boolean("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Unknown namespace prefix: ", "http://www.w3.org/XML/1998/namespace", (String) null);
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer1.getNamespaceURI("Cannot remove an object that is not some other object's property or a collection element");
      dOMNodePointer2.compareChildNodePointers(dOMNodePointer1, dOMNodePointer0);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) "qV;i1_?g.F,E_H>");
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "FACTORY COULD NOT CREATE A CHILD NODE FOR PATH");
      EntityReferenceImpl entityReferenceImpl0 = new EntityReferenceImpl(hTMLDocumentImpl0, "FACTORY COULD NOT CREATE A CHILD NODE FOR PATH");
      Node node0 = entityReferenceImpl0.cloneNode(false);
      Locale locale0 = Locale.ITALIAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0);
      Object object0 = dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl2, "http://www.w3.org/XML/1998/namespace");
      hTMLDocumentImpl1.getDoctype();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "`2^aB(UY=ne0.o");
      locale0.getDisplayName();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl1, "7/BSld,;-xZ5");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTextAreaElementImpl0);
      String string0 = dOMNodePointer0.asPath();
      assertTrue(string0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      QName qName1 = new QName("s3UpLy\"K");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // DOM002 Illegal character
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "Il/7");
      dOMNodePointer0.getLength();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLOptgroupElementImpl0);
      dOMNodePointer1.getNamespaceURI("spZ6sie;_Mwi2z%O");
      Locale locale1 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLElement0, locale1, "<<unknown namespace>>");
      dOMNodePointer1.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild((JXPathContext) null, qName0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodePointer nodePointer0 = dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      int int0 = dOMNodePointer0.getLength();
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      String string0 = dOMNodePointer1.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
      
      int int1 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, nodePointer0);
      assertTrue(int1 == int0);
      assertEquals(1, int1);
      
      // Undeclared exception!
      try { 
        dOMNodePointer1.createChild((JXPathContext) null, qName0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ">l]YP.b/eu+\")l", "http://www.w3.org/XML/1998/namespace", "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0, ">l]YP.b/eu+\")l");
      String string0 = dOMNodePointer1.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(wMLOptgroupElementImpl0, locale0, (String) null);
      int int0 = dOMNodePointer2.compareChildNodePointers(dOMNodePointer0, dOMNodePointer1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      VariablePointer variablePointer1 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        NodePointer.newNodePointer(qName0, qName0, (Locale) null);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      String string1 = DOMNodePointer.getPrefix(wMLDocumentImpl0);
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.US;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "pAs");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Root element not se");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLSelectElementImpl wMLSelectElementImpl0 = new WMLSelectElementImpl(wMLDocumentImpl0, "pAs");
      hTMLScriptElementImpl0.setUserData((Object) wMLSelectElementImpl0);
      String string0 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "dD", "Index is less than 1: ", "2:vY{Pq;");
      DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      hTMLDocumentImpl1.createComment("http://www.w3.org/2000/xmlns/");
      String string1 = DOMNodePointer.XMLNS_NAMESPACE_URI;
      String string2 = DOMNodePointer.getPrefix(wMLSelectElementImpl0);
      assertNull(string2);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      
      String string0 = dOMNodePointer0.getNamespaceURI("\"mu?x");
      assertNull(string0);
      
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]", "<<unknown namespace>>", "_{X|:T70=mO7[hFiW");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "_{X|:T70=mO7[hFiW");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "u:,z!TbJ}-I[o=");
      hTMLTextAreaElementImpl0.getForm();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = dOMNodePointer1.asPath();
      assertEquals("/text()[1]/HEAD[1]", string1);
      
      String string2 = DOMNodePointer.getPrefix(hTMLTextAreaElementImpl0);
      assertNotNull(string2);
      assertEquals("U", string2);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ",4%<s)&Lw2Gl{HD", (String) null, "xml");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "xml:space");
      Locale locale0 = Locale.US;
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(hTMLDocumentImpl0, "e@k!v@0", "e@k!v@0", ",4%<s)&Lw2Gl{HD");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIAttrNSImpl0, locale0);
      dOMNodePointer0.equals(locale0);
      dOMNodePointer0.asPath();
      String string0 = DOMNodePointer.getPrefix(pSVIDocumentImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, (Locale) null, (String) null);
      Boolean boolean0 = new Boolean("xml:lang");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      dOMNodePointer2.getNamespaceURI("xml");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/2000/xmlns/", "xmlns");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(coreDocumentImpl0, "/text()");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "\"0YW");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl1);
      WMLWmlElementImpl wMLWmlElementImpl0 = new WMLWmlElementImpl(wMLDocumentImpl0, ")@FQ^`9-h\"d-&");
      dOMNodePointer1.setValue(wMLWmlElementImpl0);
      String string0 = DOMNodePointer.findEnclosingAttribute(wMLWmlElementImpl0, "U1 2[lY~BBnoU.$z)2");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown namespace prefix: http
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Boolean boolean0 = new Boolean("pAs");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale1, "xml:space");
      dOMNodePointer0.getNamespaceURI("pAs");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "=5]^;Z{", "Unknown namespace prefix: ", "http://www.w3.org/XML/1998/namespace");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "EdG@x~]o");
      dOMNodePointer0.setValue("");
      // Undeclared exception!
      try { 
        DOMNodePointer.findEnclosingAttribute(hTMLButtonElementImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, locale0, "\"mu?x");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      hTMLTextAreaElementImpl0.getForm();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLTextAreaElementImpl0);
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, hTMLTextAreaElementImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('&quot;mu?x')///WWW.W3.ORG/2000/XMLNS/[1]", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      Node node0 = hTMLDocumentImpl0.importNode(hTMLElement0, true);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, (Locale) null);
      dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      hTMLScriptElementImpl0.setUserData((Object) dOMNodePointer0);
      DOMNodePointer.getPrefix(node0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "rh", "action", "The Element cannot be added as a descendent of itself");
      DOMNodePointer.getNamespaceURI((Node) hTMLScriptElementImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(208);
      hTMLDocumentImpl1.createComment("The Element cannot be added as a descendent of itself");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      hTMLDocumentImpl0.getDoctype();
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "8J1os");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(coreDocumentImpl0, "//www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0, "CmUGWZN0T((:7o");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("size");
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      int int0 = dOMNodePointer2.getLength();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(documentTypeImpl0, locale0, "6S^yr%r)WAj}2");
      String string0 = dOMNodePointer3.getNamespaceURI((String) null);
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "PARAM");
      int int1 = dOMNodePointer4.compareChildNodePointers(dOMNodePointer0, dOMNodePointer2);
      assertTrue(int1 == int0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0);
      dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "Ap5itVbG<RnB{uU");
      hTMLScriptElementImpl0.setUserData((Object) "Ap5itVbG<RnB{uU");
      DOMNodePointer.getPrefix(hTMLScriptElementImpl0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(coreDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "CmUGWZN0T((:7o", "^Rt~}W-q3B");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "Root element not set");
      DOMNodePointer.getNamespaceURI((Node) hTMLLegendElementImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      hTMLDocumentImpl0.createComment("p.Ky");
      PSVIElementNSImpl pSVIElementNSImpl1 = new PSVIElementNSImpl(coreDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "CmUGWZN0T((:7o", "^Rt~}W-q3B");
      DOMNodePointer.testNode((Node) pSVIElementNSImpl1, (NodeTest) null);
      hTMLDocumentImpl0.getDoctype();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " 5^nSaI#x");
      String string0 = DOMNodePointer.getPrefix(pSVIElementNSImpl0);
      assertEquals("CmUGWZN0T((", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      dOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      Locale locale2 = Locale.CANADA;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, (Locale) null);
      String string1 = dOMNodePointer1.getNamespaceURI("node()");
      assertNull(string1);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      dOMNodePointer2.getBaseValue();
      assertEquals(1, dOMNodePointer2.getLength());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "Root element not set");
      hTMLScriptElementImpl0.setUserData((Object) null);
      DOMNodePointer.getPrefix(coreDocumentImpl0);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace", "http://www.w3.org/XML/1998/namespace", (String) null);
      DOMNodePointer.getNamespaceURI((Node) pSVIElementNSImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      hTMLDocumentImpl0.createComment("");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      hTMLDocumentImpl0.getDoctype();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = DOMNodePointer.getPrefix(hTMLScriptElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      NodePointer nodePointer0 = dOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null, "bxUxSr5`@|W3h", "xml:lang");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "ivalue");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(nodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      hTMLDocumentImpl0.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "<<unknown namespace>>");
      wMLOptgroupElementImpl0.lookupPrefix("DIV");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, Integer.MIN_VALUE, (Object) wMLOptgroupElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, (Locale) null);
      dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, (Locale) null);
      dOMNodePointer1.equals(dOMNodePointer0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage("http://www.w3.org/XML/1998/namespace");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl2, "<<unknown namespace>>");
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl2, "http://www.w3.org/XML/1998/namespace");
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableRowElementImpl0, locale0);
      QName qName1 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName1);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      dOMNodePointer0.getNamespaceURI("Cannot setValue of an object that is not some other object's property");
      int int1 = dOMNodePointer0.getLength();
      assertEquals(1, int1);
      
      String string0 = dOMNodePointer0.getNamespaceURI("rX^E8NwyC>Sq");
      assertNull(string0);
      
      dOMNodePointer0.getBaseValue();
      boolean boolean1 = DOMNodePointer.testNode((Node) hTMLDocumentImpl2, (NodeTest) nodeNameTest0);
      assertFalse(boolean1 == boolean0);
      assertEquals("HTTP://WWW.W3.ORG/XML/1998/NAMESPACE", nodeNameTest0.toString());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.lookup(vector0, list0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Text text0 = hTMLDocumentImpl0.createTextNode("xmlns");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(text0, (Locale) null);
      dOMNodePointer0.getValue();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "ivalue");
      dOMNodePointer0.setValue(hTMLDocumentImpl2);
      assertEquals(Integer.MIN_VALUE, NodePointer.WHOLE_COLLECTION);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "xmlns");
      hTMLTableSectionElementImpl0.insertRow(Integer.MIN_VALUE);
      QName qName0 = new QName("onenterbackward");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "xmlns");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest((-1));
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "[");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "onenterbackward", "[", "[");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptionElementImpl wMLOptionElementImpl0 = new WMLOptionElementImpl(wMLDocumentImpl0, "Unknown namespace prefix: ");
      hTMLScriptElementImpl0.setUserData((Object) wMLOptionElementImpl0);
      DOMNodePointer.getPrefix(documentTypeImpl0);
      DOMNodePointer.getNamespaceURI((Node) hTMLDocumentImpl0);
      NodeTypeTest nodeTypeTest1 = new NodeTypeTest((-344));
      hTMLDocumentImpl0.createComment("onenterbackward");
      DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeNameTest0);
      hTMLDocumentImpl0.getDoctype();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = DOMNodePointer.getPrefix(hTMLScriptElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "8J1os", "xmlns", "l:63wz@N*?\"X8!e*zU");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "8J1os");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl1);
      CommentImpl commentImpl0 = new CommentImpl(coreDocumentImpl0, "//www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0, "CmUGWZN0T((:7o");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("size");
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
      
      dOMNodePointer0.getNamespaceURI("/");
      dOMNodePointer1.getLength();
      String string0 = dOMNodePointer1.getNamespaceURI("CmUGWZN0T((:7o");
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(pSVIDocumentImpl0, locale0, "HTMLOptGroupElementImpl");
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer2, dOMNodePointer0);
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.CommentImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(documentImpl0, "{JaR", "KDn", "http://www.w3.org/XML/1998/namespace");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(deferredDocumentImpl0);
      Locale locale2 = Locale.CANADA;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale2);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getPointerByID((JXPathContext) null, "B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, "K1Ol)$o]", "g0W");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("xmlns:");
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) processingInstructionTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentImpl0, locale0);
      locale0.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "K1Ol)$o]");
      hTMLTextAreaElementImpl0.getForm();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer2.getNamespaceResolver();
      dOMNodePointer2.asPath();
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      dOMNodePointer0.getNamespaceURI("\"mu?x");
      dOMNodePointer0.getLength();
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
      
      int int0 = dOMNodePointer0.getLength();
      assertEquals(1, int0);
      
      String string1 = dOMNodePointer0.getNamespaceURI((String) null);
      assertNull(string1);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null, "bxUxSr5`@|W3h", "xml:lang");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "xml:space");
      hTMLButtonElementImpl0.setLang("$ 6zkjhceu!,6");
      String string0 = dOMNodePointer0.asPath();
      assertEquals("/text()[1]", string0);
      
      String string1 = DOMNodePointer.getPrefix(hTMLButtonElementImpl0);
      assertEquals("XML", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.createAttribute((JXPathContext) null, qName0);
      String string0 = DOMNodePointer.findEnclosingAttribute(hTMLDocumentImpl0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl2, "v-");
      HTMLElement hTMLElement0 = hTMLTableSectionElementImpl0.insertRow(Integer.MIN_VALUE);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl2);
      dOMNodePointer1.getImmediateNode();
      dOMNodePointer0.asPath();
      NodeNameTest nodeNameTest0 = new NodeNameTest((QName) null);
      // Undeclared exception!
      try { 
        DOMNodePointer.testNode((Node) hTMLElement0, (NodeTest) nodeNameTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.compiler.NodeNameTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, hTMLDocumentImpl0);
      dOMNodePointer1.getImmediateNode();
      dOMNodePointer1.asPath();
      QName qName0 = new QName("'U:x", "http://www.w3.org/XML/1998/namespace");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLAnchorElementImpl0, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLDocumentImpl0, locale1);
      locale0.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "");
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl1 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "<<unknown namespace>>");
      hTMLTextAreaElementImpl1.getForm();
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(dOMNodePointer3, hTMLDocumentImpl2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer3.getNamespaceResolver();
      dOMNodePointer2.asPath();
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl3);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLModElementImpl hTMLModElementImpl0 = new HTMLModElementImpl(hTMLDocumentImpl0, "org.apache.html.dom.HTMLBodyElementImpl");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLModElementImpl0, locale0, "org.apache.html.dom.HTMLBodyElementImpl");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "http://www.w3.org/2000/xmlns/");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("strong");
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, processingInstructionTest0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>", "*f\"jm0c(_fJ{oQ", "]Rz1xL");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(pSVIDocumentImpl0);
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "[RwM%8h_`^'8+%w");
      assertTrue(nullPointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "e@k!v@0");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0, "<<unknown namespace>>");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(coreDocumentImpl0, "java.util.Locale@0000000005", "http://www.w3.org/XML/1998/namespace", "e@k!v@0");
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl(documentTypeImpl1);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(pSVIDocumentImpl1);
      Locale locale1 = Locale.CANADA;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(commentImpl0, locale1);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "java.util.Locale@0000000005");
      assertFalse(nullPointer0.isDynamicPropertyDeclarationSupported());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      QName qName0 = new QName("java.util.Locale@0000000005");
      QName qName1 = new QName("java.util.Locale@0000000005");
      VariablePointer variablePointer0 = new VariablePointer(qName1);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl1, "6r{[-R6B7p");
      hTMLTableSectionElementImpl0.insertRow(Integer.MIN_VALUE);
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.asPath();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = DOMNodePointer.testNode((Node) hTMLDocumentImpl2, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      locale1.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "&SWw");
      hTMLTextAreaElementImpl0.getForm();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      assertNotNull(namespaceResolver0);
      
      dOMNodePointer0.asPath();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      String string0 = DOMNodePointer.getPrefix(wMLCardElementImpl0);
      assertEquals("http", string0);
      assertNotNull(string0);
      
      boolean boolean1 = dOMNodePointer2.isActual();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xml:lang", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(coreDocumentImpl0, "xmlns");
      Locale locale0 = Locale.US;
      pSVIDocumentImpl0.getFirstChild();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "qsxL0zi~DN#Un");
      dOMNodePointer0.equals(hTMLLIElementImpl0);
      dOMNodePointer0.getValue();
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "<<unknown namespace>>", "<<unknown namespace>>", "V;igO}:WzJp");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(pSVIDocumentImpl0);
      Locale locale0 = Locale.CANADA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentFragmentImpl0, locale0);
      NullPointer nullPointer0 = (NullPointer)dOMNodePointer0.getPointerByID((JXPathContext) null, "<<unknown namespace>>");
      assertTrue(nullPointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("8<Xo=?");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "')");
      dOMNodePointer0.setValue(wMLTemplateElementImpl0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "4|v yiZ@7d*", "]-+");
      wMLTemplateElementImpl0.getLocalName();
      dOMNodePointer0.isContainer();
      hTMLDocumentImpl0.getElementsByTagName("f|VNI&&B{(U@I'Wv");
      documentTypeImpl1.getNodeValue();
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.createComment("<<unknown namespace>>");
      DOMNodePointer.testNode((Node) element0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      Locale locale1 = Locale.UK;
      locale1.getDisplayVariant();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(variablePointer0, wMLDocumentImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer1.asPath();
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer1.createAttribute((JXPathContext) null, qName0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot create an attribute for path /@4|v yiZ@7d*, operation is not allowed for this type of node
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("8<Xo=?");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "')");
      dOMNodePointer0.setValue(wMLTemplateElementImpl0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "4|v yiZ@7d*", "]-+");
      wMLTemplateElementImpl0.getLocalName();
      dOMNodePointer0.isContainer();
      hTMLDocumentImpl0.getElementsByTagName("f|VNI&&B{(U@I'Wv");
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("8<Xo=?");
      DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLTemplateElementImpl0, locale0);
      locale0.getDisplayVariant();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      dOMNodePointer2.getValue();
      String string0 = dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(coreDocumentImpl0, locale0, "\"mu?x");
      QName qName0 = dOMNodePointer0.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      dOMNodePointer0.testNode((NodeTest) nodeNameTest0);
      dOMNodePointer0.getNamespaceURI("~s|XSzt9(BvGSS");
      dOMNodePointer0.getLength();
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl2, "<<unknown namespace>>");
      HTMLElement hTMLElement0 = hTMLTableSectionElementImpl0.insertRow((-2084377906));
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl1, "HhP,v:T");
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLTableSectionElementImpl0, locale0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLElement0, locale1, "{;v[ynT_d]lB{Xt,Rl:");
      QName qName1 = dOMNodePointer1.getName();
      assertEquals("<<UNKNOWN NAMESPACE>>", qName1.toString());
      
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) nodeNameTest0);
      assertFalse(boolean0);
      
      dOMNodePointer1.getNamespaceURI("')");
      int int1 = dOMNodePointer1.getLength();
      assertEquals(1, int1);
      
      String string0 = dOMNodePointer2.getNamespaceURI("4|v yiZ@7d*");
      assertNull(string0);
      assertEquals(1, dOMNodePointer2.getLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      hTMLButtonElementImpl0.getForm();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      dOMNodePointer1.getImmediateNode();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "<<unknown namespace>>");
      dOMNodePointer2.asPath();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("id('<<unknown namespace>>')");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl1, "Y");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(hTMLLegendElementImpl0, locale0, "id('");
      ProcessingInstructionTest processingInstructionTest1 = new ProcessingInstructionTest("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer((Node) null, locale0, "HTMLOptGroupElementImpl");
      // Undeclared exception!
      try { 
        dOMNodePointer4.testNode((NodeTest) processingInstructionTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      dOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getValue();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "<<unknown namespace>>", "http://www.w3.org/XML/1998/namespace", "org.apache.html.dom.HTMLFrameSetElementImpl@0000000005");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/");
      Locale locale2 = Locale.JAPAN;
      Locale locale3 = Locale.TAIWAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale3);
      dOMNodePointer1.setValue(linkedList0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "cO");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl1 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "http://www.w3.org/XML/1998/namespace");
      hTMLButtonElementImpl1.setLang("aHKX}}yvY");
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      dOMNodePointer1.setValue(documentImpl0);
      boolean boolean0 = dOMNodePointer0.isActual();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("8<Xo=?");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "<<unknown namespace>>");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTemplateElementImpl wMLTemplateElementImpl0 = new WMLTemplateElementImpl(wMLDocumentImpl0, "')");
      dOMNodePointer0.setValue(wMLTemplateElementImpl0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, "http://www.w3.org/2000/xmlns/", "4|v yiZ@7d*", "]-+");
      wMLTemplateElementImpl0.getLocalName();
      dOMNodePointer0.isContainer();
      hTMLDocumentImpl0.getElementsByTagName("f|VNI&&B{(U@I'Wv");
      documentTypeImpl0.getNodeValue();
      String string0 = dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      assertNull(string0);
      
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.createComment("8<Xo=?");
      boolean boolean0 = DOMNodePointer.testNode((Node) wMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      assertFalse(boolean0);
      
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(wMLTemplateElementImpl0, locale0);
      locale0.getDisplayVariant();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      NamespaceResolver namespaceResolver0 = dOMNodePointer1.getNamespaceResolver();
      assertNotNull(namespaceResolver0);
      
      dOMNodePointer2.asPath();
      String string1 = DOMNodePointer.getPrefix(documentTypeImpl1);
      assertEquals("http", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl2, "<<unknown namespace>>");
      HTMLElement hTMLElement0 = hTMLTableSectionElementImpl0.insertRow((-2084377906));
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLElement0);
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.asPath();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl2, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl2, locale0);
      locale0.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl2, "Hz(#SBiD(");
      hTMLTextAreaElementImpl0.getForm();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(nodePointer0, hTMLTableSectionElementImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer1.asPath();
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "4|v yiZ@7d*";
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      String string1 = "?<Te[[\"c_";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "?<Te[[\"c_", "xmlns", "pAs");
      dOMNodePointer0.isContainer();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("?<Te[[\"c_");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(coreDocumentImpl0, "<<unknown namespace>>");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = null;
      try {
        hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.CHINA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(coreDocumentImpl0, locale0, "org.apache.xerces.dom.TextImpl@0000000006");
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("R");
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
      
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(documentTypeImpl0, locale0);
      String string0 = dOMNodePointer1.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
      assertNotNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      int int0 = dOMNodePointer2.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, (String) null, "K1Ol)$o]", "g0W");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(hTMLDocumentImpl0, "4|v yiZ@7d*");
      Locale locale0 = Locale.US;
      Locale locale1 = Locale.US;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(element0, locale1);
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl((HTMLDocumentImpl) null, "http://www.w3.org/2000/xmlns/");
      dOMNodePointer0.equals(hTMLIsIndexElementImpl0);
      dOMNodePointer1.getValue();
      String string0 = dOMNodePointer0.getNamespaceURI("v-");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      String string0 = "xmlns";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "e@k!v@0");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "YqnN");
      Locale locale0 = Locale.JAPAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(wMLDocumentImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      String string0 = DOMNodePointer.XML_NAMESPACE_URI;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      dOMNodePointer0.namespacePointer("http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null, "bxUxSr5`@|W3h", "xml:lang");
      documentTypeImpl0.getLocalName();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "xml:space");
      hTMLButtonElementImpl0.setLang("$ 6zkjhceu!,6");
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(textImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.CharacterDataImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(variablePointer0, hTMLDocumentImpl1);
      HTMLDocumentImpl hTMLDocumentImpl2 = (HTMLDocumentImpl)dOMNodePointer1.getImmediateNode();
      dOMNodePointer1.asPath();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl2, locale0);
      locale1.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl3.getDoctype();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = null;
      try {
        hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl4, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "?<Te[[\"c_", "xmlns", "pAs");
      dOMNodePointer0.isContainer();
      dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.testNode((NodeTest) null);
      dOMNodePointer1.namespacePointer((String) null);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(documentImpl0, "*$F#aj");
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "b");
      variablePointer0.getNamespaceURI("<<unknown namespace>>");
      hTMLButtonElementImpl0.setLang("6,6");
      dOMNodePointer0.setValue("?<Te[[\"c_");
      dOMNodePointer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "?<Te[[\"c_", "xmlns", "pAs");
      dOMNodePointer0.isNode();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.isLanguage("4|v yiZ@7d*");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLOptgroupElementImpl wMLOptgroupElementImpl0 = new WMLOptgroupElementImpl(wMLDocumentImpl0, "?<Te[[\"c_");
      wMLOptgroupElementImpl0.lookupPrefix("http://www.w3.org/XML/1998/namespace");
      WMLIElementImpl wMLIElementImpl0 = new WMLIElementImpl(wMLDocumentImpl0, "node()");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild((JXPathContext) null, qName0, 1, (Object) wMLIElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "e@k!v@0");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      boolean boolean0 = DOMNodePointer.testNode((Node) documentTypeImpl0, (NodeTest) null);
      boolean boolean1 = dOMNodePointer0.equals("e@k!v@0");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "Fqu?4[N]x8+,Rbx#/k", "", "<<unknown namespace>>");
      documentTypeImpl0.getUserData((String) null);
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "");
      Locale locale0 = new Locale("org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer", "4|v yiZ@7d*", "4|v yiZ@7d*");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLObjectElementImpl0, locale0);
      dOMNodePointer0.getBaseValue();
      dOMNodePointer1.isLeaf();
      dOMNodePointer1.getName();
      QName qName1 = dOMNodePointer1.getName();
      dOMNodePointer0.attributeIterator(qName1);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "http://www.w3.org/2000/xmlns/");
      VariablePointer variablePointer1 = new VariablePointer(qName1);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("4|v yiZ@7d*");
      dOMNodePointer1.childIterator(processingInstructionTest0, false, dOMNodePointer0);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl0, "");
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      HTMLButtonElementImpl hTMLButtonElementImpl1 = new HTMLButtonElementImpl(hTMLDocumentImpl0, " _mw<x;&[j) QH7");
      hTMLButtonElementImpl1.setLang("pAs");
      assertFalse(hTMLButtonElementImpl1.equals((Object)hTMLButtonElementImpl0));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xmlns");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "e@k!v@0");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      dOMNodePointer0.equals("e@k!v@0");
      Object object0 = dOMNodePointer0.getValue();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.getImmediateNode();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0, "pAs");
      String string0 = dOMNodePointer2.asPath();
      assertEquals("id('pAs')", string0);
      
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(coreDocumentImpl0, locale0, "http://www.w3.org/XML/1998/namespace");
      ProcessingInstructionTest processingInstructionTest1 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) processingInstructionTest1);
      assertFalse(boolean0);
      
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0);
      String string1 = dOMNodePointer4.getNamespaceURI("]Rz1xL");
      assertNull(string1);
      
      int int1 = dOMNodePointer3.getLength();
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ":e<", "xml", "E/TD 743NRXBxdQ!#");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl(wMLDocumentImpl0, "{hfKyMiw)y3");
      WMLInputElementImpl wMLInputElementImpl0 = new WMLInputElementImpl(wMLDocumentImpl0, "sQ$E|r+`_VJ@'^-");
      hTMLDocumentImpl0.setUserData((Object) wMLInputElementImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "z~8bu?g76LL7ERh8[{");
      hTMLScriptElementImpl0.setUserData((Object) documentTypeImpl0);
      DOMNodePointer.getPrefix(wMLInputElementImpl0);
      DOMNodePointer.getNamespaceURI((Node) wMLPrevElementImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(1997);
      hTMLDocumentImpl0.createComment((String) null);
      TextImpl textImpl0 = new TextImpl(hTMLDocumentImpl0, "[<o{<0vEo}Lw");
      DOMNodePointer.testNode((Node) textImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLDocumentImpl0, locale0, "I]-6");
      dOMNodePointer0.getName();
      dOMNodePointer0.getImmediateNode();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(wMLDocumentImpl0, (String) null);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "[<o{<0vEo}Lw");
      hTMLButtonElementImpl0.setLang(":e<");
      dOMNodePointer0.setValue((Object) null);
      Object object0 = dOMNodePointer0.getValue();
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "Lm1j&8");
      documentTypeImpl0.setNodeValue("Lm1j&8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.FRENCH;
      locale0.getDisplayName(locale1);
      String string0 = null;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, wMLDocumentImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(documentTypeImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.ParentNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.namespacePointer("xmlns");
      dOMNodePointer0.getValue();
      hTMLDocumentImpl0.createElementDefinition("classid");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "<<unknown namespace>>");
      dOMNodePointer1.getNamespaceResolver();
      dOMNodePointer0.isCollection();
      dOMNodePointer0.isLeaf();
      dOMNodePointer1.getName();
      dOMNodePointer1.getImmediateNode();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "St217oep)rTNYS2IkhV");
      HTMLButtonElementImpl hTMLButtonElementImpl0 = null;
      try {
        hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.html.dom.HTMLElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "]");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "java.util.concurrent.atomic.Atmi4Long");
      elementDefinitionImpl0.normalize();
      DOMNodePointer.getLocalName(elementDefinitionImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableRowElementImpl0);
      dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      dOMNodePointer0.asPath();
      String string0 = DOMNodePointer.getPrefix(hTMLTableRowElementImpl0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "?<Te[[\"c_", "xmlns", "pAs");
      dOMNodePointer0.isContainer();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.testNode((NodeTest) null);
      Locale locale1 = Locale.CANADA;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0);
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer1, qName0, qName0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "4|v yiZ@7d*";
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      hTMLDocumentImpl0.getUserData();
      dOMNodePointer0.setValue(qName0);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      hTMLButtonElementImpl0.setLang("");
      dOMNodePointer0.setValue(hTMLButtonElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "Lm1j&8");
      documentTypeImpl0.setNodeValue("Lm1j&8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.FRENCH;
      locale0.getDisplayName(locale1);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl((HTMLDocumentImpl) null, "anglais (Royaume-Uni)");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0, (String) null);
      Locale locale2 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLAnchorElementImpl0, locale1);
      int int0 = NodePointer.WHOLE_COLLECTION;
      dOMNodePointer1.getImmediateNode();
      String string0 = dOMNodePointer1.asPath();
      assertEquals("", string0);
      
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("/hx2(h=Sc2d$#");
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) processingInstructionTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.hasChildNodes();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      pSVIDocumentImpl0.setTextContent("]");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.createElement("]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl1, (Locale) null, "]");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      WMLMetaElementImpl wMLMetaElementImpl0 = new WMLMetaElementImpl(wMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(wMLMetaElementImpl0);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl1, "$,Vu");
      HTMLButtonElementImpl hTMLButtonElementImpl1 = new HTMLButtonElementImpl(hTMLDocumentImpl2, "<<unknown namespace>>");
      hTMLButtonElementImpl1.setLang("");
      dOMNodePointer0.setValue(hTMLDocumentImpl1);
      assertNull(hTMLDocumentImpl1.getURL());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("4|v yiZ@7d*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.setValue(element0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "<<unknown namespace>>", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      dOMNodePointer0.isContainer();
      documentImpl0.getElementsByTagName("j2JAv=njM.+2hHMC1");
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("R");
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(77);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      Comment comment0 = hTMLDocumentImpl1.createComment("zlJ9A\"f~r/#]");
      DOMNodePointer.testNode((Node) documentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(comment0, locale0);
      locale0.getDisplayVariant();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, element0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer2.getNamespaceResolver();
      dOMNodePointer1.asPath();
      String string0 = DOMNodePointer.getPrefix(element0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "R", "$='@e\",:dk)e^", "xml");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl(wMLDocumentImpl0, "[<o{<0vEo}Lw");
      hTMLDocumentImpl0.setUserData((Object) wMLPrevElementImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "R");
      hTMLScriptElementImpl0.setUserData((Object) hTMLDocumentImpl0);
      DOMNodePointer.getPrefix(hTMLScriptElementImpl0);
      DOMNodePointer.getNamespaceURI((Node) hTMLScriptElementImpl0);
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0);
      boolean boolean0 = dOMNodePointer0.testNode((NodeTest) null);
      dOMNodePointer0.namespacePointer((String) null);
      String string0 = DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      assertNull(string0);
      
      Node node0 = hTMLDocumentImpl0.adoptNode(hTMLScriptElementImpl0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(node0, locale0, "<<unknown namespace>>");
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(dOMNodePointer1, documentTypeImpl0);
      dOMNodePointer2.getValue();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayVariant();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(wMLPrevElementImpl0, locale1, "[<o{<0vEo}Lw");
      dOMNodePointer1.namespacePointer((String) null);
      dOMNodePointer0.remove();
      DOMNodePointer.getNamespaceURI((Node) hTMLScriptElementImpl0);
      boolean boolean1 = dOMNodePointer0.isLeaf();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.hasChildNodes();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      pSVIDocumentImpl0.setTextContent("]");
      documentTypeImpl0.getUserData("pAs");
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "pAs");
      Locale locale0 = new Locale("E&r7F@?FIt^rf", "]", "WQmKya");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.isLeaf();
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, " _mw<x;&[j) QH7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLObjectElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "Lm1j&8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.FRENCH;
      locale0.getDisplayName(locale1);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl((HTMLDocumentImpl) null, "anglais (Royaume-Uni)");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0, (String) null);
      Locale locale2 = Locale.CANADA;
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLAnchorElementImpl0, locale2);
      dOMNodePointer0.childIterator(processingInstructionTest0, true, dOMNodePointer1);
      locale2.getDisplayScript();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "TxsFv}6");
      hTMLButtonElementImpl0.setLang("h>8");
      HTMLUListElementImpl hTMLUListElementImpl0 = new HTMLUListElementImpl(hTMLDocumentImpl0, "actory could not create a chi}d node for path: ");
      dOMNodePointer0.setValue(hTMLUListElementImpl0);
      assertTrue(dOMNodePointer0.isRoot());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Node node0 = hTMLDocumentImpl0.cloneNode(false);
      Locale locale0 = new Locale("", "");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(node0, locale0, "),/3");
      locale0.getDisplayScript();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLDocumentImpl0);
      dOMNodePointer1.asPath();
      String string0 = DOMNodePointer.findEnclosingAttribute(node0, "Cannot remove root DOM node");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "R", "$='@e\",:dk)e^", "xml");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLPrevElementImpl wMLPrevElementImpl0 = new WMLPrevElementImpl(wMLDocumentImpl0, "[<o{<0vEo}Lw");
      hTMLDocumentImpl0.setUserData((Object) wMLPrevElementImpl0);
      HTMLScriptElementImpl hTMLScriptElementImpl0 = new HTMLScriptElementImpl(hTMLDocumentImpl0, "R");
      hTMLScriptElementImpl0.setUserData((Object) hTMLDocumentImpl0);
      DOMNodePointer.getPrefix(hTMLScriptElementImpl0);
      DOMNodePointer.getNamespaceURI((Node) hTMLScriptElementImpl0);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(77);
      hTMLDocumentImpl0.createComment((String) null);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      locale0.getDisplayVariant();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, (Node) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer1.getNamespaceResolver();
      // Undeclared exception!
      try { 
        dOMNodePointer1.asPath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      String string0 = null;
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayVariant();
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Locale.lookup(linkedList0, list0);
      dOMNodePointer0.namespacePointer("");
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      try { 
        hTMLDocumentImpl0.createElementDefinition("");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "]");
      int int0 = 0;
      HTMLDListElementImpl hTMLDListElementImpl0 = new HTMLDListElementImpl(hTMLDocumentImpl0, "]");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDListElementImpl0, (Locale) null);
      dOMNodePointer0.getNode();
      dOMNodePointer0.getImmediateNode();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "]");
      dOMNodePointer0.equals(hTMLTableRowElementImpl0);
      dOMNodePointer0.getLength();
      DOMNodePointer.getPrefix(hTMLTableRowElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = new NamespaceResolver(namespaceResolver0);
      variablePointer0.setNamespaceResolver(namespaceResolver1);
      variablePointer0.namespacePointer("xml:space");
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      Locale locale0 = Locale.UK;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      dOMNodePointer0.getNode();
      dOMNodePointer0.getImmediateNode();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "xml");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLLinkElementImpl hTMLLinkElementImpl0 = new HTMLLinkElementImpl(hTMLDocumentImpl1, "xml");
      dOMNodePointer0.equals(hTMLLinkElementImpl0);
      dOMNodePointer0.getLength();
      DOMNodePointer.getPrefix(hTMLLinkElementImpl0);
      QName qName0 = dOMNodePointer0.getName();
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NamespaceResolver namespaceResolver0 = dOMNodePointer0.getNamespaceResolver();
      NamespaceResolver namespaceResolver1 = new NamespaceResolver(namespaceResolver0);
      variablePointer0.setNamespaceResolver(namespaceResolver0);
      variablePointer0.namespacePointer((String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers(variablePointer0, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "]");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.hasChildNodes();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      pSVIDocumentImpl0.setTextContent("]");
      documentTypeImpl0.getUserData("pAs");
      HTMLObjectElementImpl hTMLObjectElementImpl0 = new HTMLObjectElementImpl(hTMLDocumentImpl0, "pAs");
      String string0 = "E&r7F@?FIt^rf";
      Locale locale0 = new Locale("E&r7F@?FIt^rf", "]", "WQmKya");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.isLeaf();
      QName qName0 = dOMNodePointer0.getName();
      dOMNodePointer0.attributeIterator(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, " _mw<x;&[j) QH7");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest((String) null);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(processingInstructionTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: null
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "Lm1j&8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.FRENCH;
      locale0.getDisplayName(locale1);
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl((HTMLDocumentImpl) null, "anglais (Royaume-Uni)");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLAnchorElementImpl0, locale0, (String) null);
      Locale locale2 = Locale.CANADA;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLAnchorElementImpl0, locale1);
      int int0 = dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      assertEquals(0, int0);
      
      dOMNodePointer1.getImmediateNode();
      String string0 = dOMNodePointer1.asPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      String string0 = "";
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      QName qName0 = dOMNodePointer0.getName();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDirectoryElementImpl hTMLDirectoryElementImpl0 = new HTMLDirectoryElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      // Undeclared exception!
      try { 
        NodePointer.newChildNodePointer(dOMNodePointer0, qName0, hTMLDocumentImpl0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.commons.jxpath.ri.JXPathContextReferenceImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl((WMLDocumentImpl) null, (String) null);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null);
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl((CoreDocumentImpl) null, (String) null);
      Locale locale0 = Locale.KOREA;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, documentTypeImpl0);
      dOMNodePointer0.getNamespaceResolver();
      Locale locale1 = Locale.GERMAN;
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDivElementImpl hTMLDivElementImpl0 = new HTMLDivElementImpl(hTMLDocumentImpl0, ",{");
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl();
      StandardParserConfiguration standardParserConfiguration0 = new StandardParserConfiguration();
      XML11Configuration xML11Configuration0 = new XML11Configuration(symbolTable0, xMLGrammarPoolImpl0, standardParserConfiguration0);
      DTDConfiguration dTDConfiguration0 = new DTDConfiguration(symbolTable0, xMLGrammarPoolImpl0, xML11Configuration0);
      Locale locale2 = dTDConfiguration0.getLocale();
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDivElementImpl0, locale2);
      dOMNodePointer0.isLanguage("4|v yiZ@7d*");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      String string0 = "S";
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      PSVIElementNSImpl pSVIElementNSImpl0 = null;
      try {
        pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl0, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.ElementNSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) deferredDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "]");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "java.util.concurrent.atomic.Atmi4Long");
      elementDefinitionImpl0.normalize();
      DOMNodePointer.getLocalName(elementDefinitionImpl0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(elementDefinitionImpl0, (Locale) null);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(dOMNodePointer0, hTMLTableRowElementImpl0);
      dOMNodePointer0.compareChildNodePointers(dOMNodePointer1, dOMNodePointer1);
      Object object0 = dOMNodePointer1.getImmediateNode();
      assertSame(object0, hTMLTableRowElementImpl0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      DocumentImpl documentImpl0 = new DocumentImpl();
      String string0 = "a";
      DocumentTypeImpl documentTypeImpl2 = new DocumentTypeImpl((CoreDocumentImpl) null, "", "a", "pAs");
      Locale locale0 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(deferredDocumentImpl0, locale0);
      dOMNodePointer0.isContainer();
      DocumentTypeImpl documentTypeImpl3 = new DocumentTypeImpl((CoreDocumentImpl) null, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      documentTypeImpl3.getNodeValue();
      // Undeclared exception!
      try { 
        dOMNodePointer0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      String string0 = dOMNodePointer0.getDefaultNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.UK;
      Locale locale2 = Locale.FRENCH;
      locale2.getDisplayName(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, (String) null);
      Locale locale3 = Locale.CANADA;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer((Node) null, locale3);
      dOMNodePointer1.compareChildNodePointers(dOMNodePointer0, dOMNodePointer0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      Locale locale1 = locale0.stripExtensions();
      Locale.setDefault(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      deferredDocumentImpl0.getPrefix();
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, "R(K8ra1pUeHdC`ULo", "", "");
      vector0.remove((Object) pSVIAttrNSImpl0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0, locale_FilteringMode0);
      locale0.getDisplayLanguage(locale1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale1, "");
      dOMNodePointer0.getNamespaceResolver();
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(deferredDocumentImpl0, locale1, "xml");
      // Undeclared exception!
      try { 
        dOMNodePointer1.compareChildNodePointers((NodePointer) null, dOMNodePointer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.UK;
      locale0.getDisplayName(locale1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apaZhe.commons.jxpath.ri.model.dom.\"OMNodePointer");
      // Undeclared exception!
      try { 
        dOMNodePointer0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("4|v yiZ@7d*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, element0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue(variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: 4|v yiZ@7d*:4|v yiZ@7d*
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.createElement("4|v yiZ@7d*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl1);
      // Undeclared exception!
      try { 
        dOMNodePointer0.setValue("4|v yiZ@7d*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "]");
      String string0 = "java.util.concurrent.atomic.AtomicLong";
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(hTMLDocumentImpl0, "java.util.concurrent.atomic.AtomicLong");
      elementDefinitionImpl0.normalize();
      elementDefinitionImpl0.getPreviousSibling();
      // Undeclared exception!
      try { 
        DOMNodePointer.getLocalName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "y1;4V>[");
      Locale locale0 = Locale.KOREAN;
      locale0.getDisplayVariant();
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTableCellElementImpl0, locale0);
      dOMNodePointer0.setIndex(1024);
      dOMNodePointer0.namespacePointer("");
      dOMNodePointer0.getValue();
      String string0 = "Y2oc{V'";
      try { 
        hTMLDocumentImpl0.createElementDefinition("Y2oc{V'");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified. 
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "]");
      int int0 = 0;
      hTMLAnchorElementImpl0.item(0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, (Locale) null);
      dOMNodePointer0.getNode();
      dOMNodePointer0.getImmediateNode();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl0, "]");
      dOMNodePointer0.equals(hTMLTableRowElementImpl0);
      dOMNodePointer0.getLength();
      DOMNodePointer.getPrefix(hTMLTableRowElementImpl0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "Tq}R{@CTu%");
      Locale locale0 = new Locale("Tq}R{@CTu%", "http://www.w3.org/2000/xmlns/");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLSelectElementImpl0, locale0);
      Object object0 = dOMNodePointer0.getImmediateNode();
      assertSame(object0, hTMLSelectElementImpl0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, "T%oQ%T81MNtNI", (String) null, "");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLHeadElementImpl wMLHeadElementImpl0 = new WMLHeadElementImpl(wMLDocumentImpl0, "S(");
      DOMNodePointer.getPrefix(wMLHeadElementImpl0);
      Locale locale0 = Locale.GERMANY;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentTypeImpl0, locale0, "T");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) null);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getActualEncoding();
      Comment comment0 = hTMLDocumentImpl0.createComment("org.apache.commons.jxpath.ri.compiler.NodeTypeTest");
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(comment0, locale0);
      dOMNodePointer0.getLanguage();
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayScript(locale1);
      NodeTypeTest nodeTypeTest0 = new NodeTypeTest(Integer.MIN_VALUE);
      DOMNodePointer.testNode((Node) hTMLDocumentImpl0, (NodeTest) nodeTypeTest0);
      locale0.getExtensionKeys();
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.NodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      String string0 = "Lm1j&8";
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(pSVIDocumentImpl0, "Lm1j&8");
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      wMLDocumentImpl0.hasChildNodes();
      pSVIDocumentImpl0.setTextContent("Lm1j&8");
      documentTypeImpl0.getUserData("Lm1j&8");
      wMLDocumentImpl0.getDocumentElement();
      Locale locale0 = new Locale("Lm1j&8", "Lm1j&8", "E&r7F@?FIt^rf");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      dOMNodePointer0.getImmediateNode();
      // Undeclared exception!
      try { 
        dOMNodePointer0.isLeaf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      Locale locale1 = Locale.UK;
      locale0.getDisplayName(locale1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0, "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      // Undeclared exception!
      try { 
        dOMNodePointer0.compareChildNodePointers((NodePointer) null, (NodePointer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = null;
      String string0 = "";
      Locale locale0 = Locale.forLanguageTag("");
      Locale locale1 = locale0.stripExtensions();
      Locale.setDefault(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      deferredDocumentImpl0.getPrefix();
      String string1 = "";
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(deferredDocumentImpl0, "R(K8ra1pUeHdC`ULo", "", "");
      vector0.remove((Object) pSVIAttrNSImpl0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0, locale_FilteringMode0);
      locale0.getDisplayLanguage(locale1);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale1, "");
      dOMNodePointer0.getNamespaceResolver();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getPreviousSibling();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      hTMLLegendElementImpl0.getForm();
      // Undeclared exception!
      try { 
        DOMNodePointer.getPrefix((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTextAreaElementImpl hTMLTextAreaElementImpl0 = new HTMLTextAreaElementImpl(hTMLDocumentImpl0, "J.");
      Locale locale0 = Locale.GERMAN;
      locale0.getUnicodeLocaleAttributes();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLTextAreaElementImpl0, locale0, (String) null);
      NodePointer.verify(dOMNodePointer0);
      QName qName0 = null;
      try {
        qName0 = new QName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("#+Ks7mmma'\"V}", "");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      hTMLButtonElementImpl0.getForm();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(variablePointer0, (Node) null);
      dOMNodePointer0.namespacePointer("#+Ks7mmma'\"V}");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) basicVariables0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "");
      documentTypeImpl0.getNamespaceURI();
      // Undeclared exception!
      try { 
        DOMNodePointer.getNamespaceURI((Node) documentTypeImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xerces.dom.DocumentTypeImpl cannot be cast to org.w3c.dom.Element
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "NtY=fUU:^x%FK!it)A");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl0);
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = locale0.stripExtensions();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(documentImpl0, locale1, "NtY=fUU:^x%FK!it)A");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getForms();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "http://www.w3.org/XML/1998/namespace");
      dOMNodePointer0.setValue(hTMLSelectElementImpl0);
      QName qName0 = new QName("<<unknown namespace>>", "org.apache.wml.dom.WMLMetaElementImpl");
      dOMNodePointer0.attributeIterator(qName0);
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, "9@QH8[%MzApZ#BU");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.childIterator(nodeNameTest0, false, variablePointer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Undefined variable: <<unknown namespace>>:org.apache.wml.dom.WMLMetaElementImpl
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      HTMLButtonElementImpl hTMLButtonElementImpl0 = new HTMLButtonElementImpl(hTMLDocumentImpl0, "");
      hTMLButtonElementImpl0.setLang("");
      dOMNodePointer0.setValue(hTMLButtonElementImpl0);
      assertTrue(dOMNodePointer0.isNode());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "xmlns", "xmlns", "xmlns");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      CommentImpl commentImpl0 = new CommentImpl(pSVIDocumentImpl0, "e@k!v@0");
      Locale locale0 = Locale.US;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(commentImpl0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(commentImpl0, locale0, "<<unknown namespace>>");
      QName qName0 = new QName("vOqFSYaPnSk>", "http://www.w3.org/2000/xmlns/");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0, ")");
      DOMNodePointer.testNode((Node) commentImpl0, (NodeTest) nodeNameTest0);
      Locale locale1 = Locale.CANADA_FRENCH;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(commentImpl0, (Locale) null);
      locale1.getDisplayVariant();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getDoctype();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer1, pSVIDocumentImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dOMNodePointer3.getNamespaceResolver();
      dOMNodePointer0.asPath();
      dOMNodePointer2.isActual();
      // Undeclared exception!
      try { 
        dOMNodePointer3.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer0.namespacePointer("xmlns");
      dOMNodePointer0.getValue();
      ElementDefinitionImpl elementDefinitionImpl0 = hTMLDocumentImpl0.createElementDefinition("classid");
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "<<unknown namespace>>");
      Locale locale1 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      int int0 = NodePointer.WHOLE_COLLECTION;
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(dOMNodePointer2, elementDefinitionImpl0);
      dOMNodePointer3.getImmediateNode();
      dOMNodePointer3.asPath();
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("http://www.w3.org/XML/1998/namespace");
      Locale locale2 = Locale.CANADA;
      DOMNodePointer dOMNodePointer4 = new DOMNodePointer(elementDefinitionImpl0, locale2, "org.apache.wml.dom.WMLBElementImpl");
      dOMNodePointer4.testNode((NodeTest) processingInstructionTest0);
      dOMNodePointer0.getNamespaceURI("<<unknown namespace>>");
      int int1 = dOMNodePointer3.getLength();
      assertEquals(1, int1);
      
      String string0 = dOMNodePointer0.getNamespaceURI("http://www.w3.org/XML/1998/namespace");
      assertNull(string0);
      assertEquals(1, dOMNodePointer0.getLength());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      QName qName0 = new QName("http://www.w3.org/XML/1998/namespace");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("4|v yiZ@7d*");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, hTMLDocumentImpl0);
      dOMNodePointer0.setValue(element0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "<<unknown namespace>>", "http://www.w3.org/2000/xmlns/", "<<unknown namespace>>");
      dOMNodePointer0.isContainer();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("R");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.testNode((NodeTest) null);
      dOMNodePointer1.namespacePointer("?<Te2[[\"c_");
      DOMNodePointer.getPrefix(documentImpl0);
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(documentTypeImpl0, locale0, "target");
      dOMNodePointer2.getValue();
      DOMNodePointer dOMNodePointer3 = new DOMNodePointer(element0, locale0, (String) null);
      dOMNodePointer3.namespacePointer("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      // Undeclared exception!
      try { 
        dOMNodePointer2.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      Locale locale0 = Locale.CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(hTMLElement0, locale0);
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      QName qName0 = dOMNodePointer1.getName();
      dOMNodePointer1.getName();
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      ProcessingInstructionTest processingInstructionTest0 = new ProcessingInstructionTest("<<unknown namespace>>");
      Locale.getISOCountries();
      boolean boolean0 = dOMNodePointer1.testNode((NodeTest) nodeNameTest0);
      assertTrue(boolean0);
      assertEquals("HEAD", nodeNameTest0.toString());
      
      dOMNodePointer1.getNamespaceURI("");
      int int0 = dOMNodePointer1.getLength();
      String string0 = dOMNodePointer1.getNamespaceURI("o57P?+");
      assertNull(string0);
      
      DOMNodePointer dOMNodePointer2 = new DOMNodePointer(hTMLElement0, locale0, "http://www.w3.org/2000/xmlns/");
      int int1 = dOMNodePointer0.compareChildNodePointers(dOMNodePointer2, dOMNodePointer2);
      assertFalse(int1 == int0);
      
      String string1 = dOMNodePointer2.getDefaultNamespaceURI();
      assertNull(string1);
      assertEquals(1, dOMNodePointer2.getLength());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.KOREAN;
      Locale.setDefault(locale0);
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0);
      int int0 = 1024;
      dOMNodePointer0.setIndex(1024);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>(1024);
      Locale.lookup(linkedList0, vector0);
      dOMNodePointer0.getValue();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      dOMNodePointer0.getNamespaceResolver();
      dOMNodePointer0.isCollection();
      dOMNodePointer0.isLeaf();
      dOMNodePointer0.getName();
      dOMNodePointer0.namespaceIterator();
      HTMLIsIndexElementImpl hTMLIsIndexElementImpl0 = new HTMLIsIndexElementImpl(hTMLDocumentImpl0, "xml");
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) hTMLIsIndexElementImpl0);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DocumentType documentType0 = null;
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl((DocumentType) null, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "e\"Qk", "e\"Qk", "e\"Qk");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl(documentTypeImpl0);
      pSVIDocumentImpl0.getTextContent();
      Locale locale0 = Locale.KOREAN;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(pSVIDocumentImpl0, locale0);
      UserDataHandler userDataHandler0 = mock(UserDataHandler.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl0.setUserData((Node) documentTypeImpl0, "pAs", (Object) null, userDataHandler0);
      dOMNodePointer0.getNamespaceURI("pAs");
      // Undeclared exception!
      try { 
        dOMNodePointer0.namespaceIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      QName qName0 = new QName("4|v yiZ@7d*", "4|v yiZ@7d*");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      NodePointer nodePointer0 = variablePointer0.getImmediateValuePointer();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      Element element0 = hTMLDocumentImpl0.createElement("<<unknown namespace>>");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(nodePointer0, element0);
      dOMNodePointer0.setValue(qName0);
      DocumentImpl documentImpl0 = new DocumentImpl();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(documentImpl0, "?<Te[[\"c_", "xmlns", "pAs");
      dOMNodePointer0.isContainer();
      documentTypeImpl0.getNodeValue();
      dOMNodePointer0.getNamespaceURI("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      Locale locale0 = Locale.ENGLISH;
      DOMNodePointer dOMNodePointer1 = new DOMNodePointer(hTMLDocumentImpl0, locale0);
      dOMNodePointer1.testNode((NodeTest) null);
      dOMNodePointer1.namespacePointer((String) null);
      DOMNodePointer.getPrefix(hTMLDocumentImpl0);
      dOMNodePointer1.getValue();
      dOMNodePointer0.namespacePointer("?G3Z/?-yr[K<'0!gb5");
      // Undeclared exception!
      try { 
        dOMNodePointer1.remove();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot remove root DOM node
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DOMErrorHandlerWrapper dOMErrorHandlerWrapper0 = new DOMErrorHandlerWrapper();
      Node node0 = dOMErrorHandlerWrapper0.fCurrentNode;
      dOMErrorHandlerWrapper0.fCurrentNode = null;
      DOMNodePointer.findEnclosingAttribute((Node) null, "");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLAnchorElementImpl hTMLAnchorElementImpl0 = new HTMLAnchorElementImpl(hTMLDocumentImpl0, "ft_sg{?(");
      hTMLAnchorElementImpl0.getAttributeNodeNS("$Tj?,4:,wIRO/R2}6", "$Tj?,4:,wIRO/R2}6");
      // Undeclared exception!
      try { 
        hTMLAnchorElementImpl0.setIdAttributeNode((Attr) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.ElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      WMLDocumentImpl wMLDocumentImpl0 = null;
      String string0 = null;
      WMLCardElementImpl wMLCardElementImpl0 = new WMLCardElementImpl((WMLDocumentImpl) null, (String) null);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(wMLCardElementImpl0, locale0);
      // Undeclared exception!
      try { 
        dOMNodePointer0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      coreDocumentImpl0.getOwnerDocument();
      Locale locale0 = new Locale("nG", "5.G");
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((Node) null, locale0);
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayVariant(locale1);
      dOMNodePointer0.getImmediateNode();
      dOMNodePointer0.getLength();
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "org.apache.commons.jxpath.ri.model.dom.DOMNodePointer");
      // Undeclared exception!
      try { 
        dOMNodePointer0.attributeIterator(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      TextImpl textImpl0 = new TextImpl();
      Locale locale0 = Locale.FRANCE;
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer(textImpl0, locale0, (String) null);
      // Undeclared exception!
      try { 
        JXPathContext.newContext((Object) null);
       //  fail("Expecting exception: ClassCastException");
       // Unstable assertion
      } catch(ClassCastException e) {
         //
         // org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl cannot be cast to org.apache.commons.jxpath.JXPathContextFactory
         //
         verifyException("org.apache.commons.jxpath.JXPathContextFactory", e);
      }
  }
}
