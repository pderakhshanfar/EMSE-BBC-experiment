* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-100
* Going to generate test cases for class: org.apache.commons.csv.CSVParser
* Starting Client-0
* Connecting to master process on port 11532
* Analyzing classpath: 
  - subjects/buggy-versions/Csv-7/target/classes
* Finished analyzing classpath
* Generating tests for class org.apache.commons.csv.CSVParser
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 378
* Using seed 2893408172
* Starting evolution
bbc usage percentage is: 100%
* Initial Number of Goals in DynaMOSA = 152 / 378
[MASTER] 16:16:41.275 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 16:16:41.275 [logback-2] ERROR TestCluster - Failed to check cache for java.util.HashMap<K, V> : Type points to itself
[MASTER] 16:22:31.699 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[MASTER] 16:26:08.931 [logback-2] ERROR TestCluster - Failed to check cache for java.util.function.Predicate<T> : Type points to itself
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 15 TABLESWITCH L452 Case 4 - true: 375040,328729,120511| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 474: 81163,34359,5602| Number of FF evals: 59478
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 473: 81163,34359,5624| Number of FF evals: 59478
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 472: 81163,34359,5700| Number of FF evals: 59478
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.hasNext()Z: I14 Branch 25 IFNONNULL L407 - true: 277692,251207,0| Number of FF evals: 265630
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.hasNext()Z: I5 Branch 24 IFEQ L404 - true: 891,0,0| Number of FF evals: 74839
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.addRecordValue()V: I32 Branch 2 IFLE L251 - true: 47,0,0| Number of FF evals: 24191
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I64 Branch 10 IFNULL L369 - true: 38,0,0| Number of FF evals: 766
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 399: 4445,0,0| Number of FF evals: 6781
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 397: 4445,0,0| Number of FF evals: 6781
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: Line 415: 891,0,0| Number of FF evals: 481
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.hasNext()Z: I5 Branch 24 IFEQ L404 - false: 1132,0,0| Number of FF evals: 4896
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I51 Branch 9 IFEQ L362 - false: 2660,0,0| Number of FF evals: 7032
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.getCurrentLineNumber()J: Line 277: 38,0,0| Number of FF evals: 54
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 14 TABLESWITCH L452 Case 3 - false: 639,0,0| Number of FF evals: 32340
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I159 Branch 20 IF_ACMPEQ L478 - true: 639,0,0| Number of FF evals: 32032
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.remove()V: root-Branch: 530140,462248,0| Number of FF evals: 266033
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I5 Branch 27 IFEQ L415 - true: 891,0,0| Number of FF evals: 59093
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I51 Branch 9 IFEQ L362 - true: 57,0,0| Number of FF evals: 6855
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I37 Branch 8 IFNULL L358 - true: 38,0,0| Number of FF evals: 765
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: root-Branch: 891,0,0| Number of FF evals: 73691
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.getCurrentLineNumber()J: root-Branch: 38,0,0| Number of FF evals: 13744
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.close()V: I4 Branch 3 IFNULL L262 - true: 302211,269233,123| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.addRecordValue()V: I16 Branch 1 IFNONNULL L248 - true: 39,0,0| Number of FF evals: 26796
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I5 Branch 27 IFEQ L415 - false: 254073,231800,0| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I183 Branch 23 IFNONNULL L482 - true: 358882,312727,116709| Number of FF evals: 266042
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.remove()V: Line 433: 530140,462248,0| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I93 Branch 19 IFNONNULL L467 - true: 185852,139541,25819| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 13 TABLESWITCH L452 Case 2 - true: 5860,0,0| Number of FF evals: 9715
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.initializeHeader()Ljava/util/Map;: I28 Branch 7 IFNE L355 - true: 57,0,0| Number of FF evals: 6894
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I93 Branch 19 IFNONNULL L467 - false: 81157,34846,5580| Number of FF evals: 84600
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 17 TABLESWITCH L452 Default-Case - true: 375592,329254,120180| Number of FF evals: 266037
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I26 Branch 28 IFNONNULL L421 - false: 253184,230858,0| Number of FF evals: 265630
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.getNextRecord()Lorg/apache/commons/csv/CSVRecord;: Line 396: 891,0,0| Number of FF evals: 481
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I35 Branch 29 IFNONNULL L424 - true: 253184,230858,0| Number of FF evals: 265630
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.getHeaderMap()Ljava/util/Map;: I4 Branch 4 IFNONNULL L288 - true: 66,0,0| Number of FF evals: 1693
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 12 TABLESWITCH L452 Case 1 - true: 639,0,0| Number of FF evals: 11554
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.next()Lorg/apache/commons/csv/CSVRecord;: I35 Branch 29 IFNONNULL L424 - false: 253184,230858,0| Number of FF evals: 265630
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.addRecordValue()V: I32 Branch 2 IFLE L251 - false: 85,0,0| Number of FF evals: 3113
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser$1.hasNext()Z: Line 404: 891,0,0| Number of FF evals: 481
Number of times BBC is called, activated, and useful for org.apache.commons.csv.CSVParser.nextRecord()Lorg/apache/commons/csv/CSVRecord;: I34 Branch 16 TABLESWITCH L452 Case 5 - true: 81157,34846,5644| Number of FF evals: 84600
* Search finished after 601s and 5390 generations, 2535380 statements, best individual has fitness: 81.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 99
* Number of covered goals: 91
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 70
* Number of covered goals: 59
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 94%
* Total number of goals: 18
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 81%
* Total number of goals: 68
* Number of covered goals: 55
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 58%
* Total number of goals: 45
* Number of covered goals: 26
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 92%
* Total number of goals: 13
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 84%
* Total number of goals: 70
* Number of covered goals: 59
* Generated 39 tests with total length 171
* Resulting test suite's coverage: 80% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 54%
* Compiling and checking tests
[MASTER] 16:26:31.927 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1628267191905/org/apache/commons/csv/CSVParser_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1628267191905/org/apache/commons/csv/CSVParser_16_tmp__ESTest_scaffolding.java]]
[MASTER] 16:26:31.927 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Csv-7/target/classes:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-7/target/classes
[MASTER] 16:26:31.927 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Csv-7/target/classes
[MASTER] 16:26:31.930 [logback-2] ERROR JUnitAnalyzer - Diagnostic: method getRecords in class org.apache.commons.csv.CSVParser cannot be applied to given types;
  required: T
  found: java.util.Collection<java.lang.String>
  reason: inferred type does not conform to upper bound(s)
    inferred: java.util.Collection<java.lang.String>
    upper bound(s): java.util.Collection<org.apache.commons.csv.CSVRecord>: 33
[MASTER] 16:26:31.930 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Some messages have been simplified; recompile with -Xdiags:verbose to get full output: -1
[MASTER] 16:26:31.930 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1628267191905/org/apache/commons/csv/CSVParser_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Fri Aug 06 16:26:31 GMT 2021
4:  */
5: 
6: package org.apache.commons.csv;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.io.StringReader;
12: import java.util.Collection;
13: import java.util.Locale;
14: import java.util.Set;
15: import org.apache.commons.csv.CSVFormat;
16: import org.apache.commons.csv.CSVParser;
17: import org.evosuite.runtime.EvoRunner;
18: import org.evosuite.runtime.EvoRunnerParameters;
19: import org.junit.runner.RunWith;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
22: public class CSVParser_16_tmp__ESTest extends CSVParser_16_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       CSVFormat cSVFormat0 = CSVFormat.MYSQL;
27:       StringReader stringReader0 = new StringReader("K\"\"3 N?w(|q*A#&<r");
28:       CSVParser cSVParser0 = new CSVParser(stringReader0, cSVFormat0);
29:       Locale locale0 = Locale.KOREA;
30:       Set<String> set0 = locale0.getUnicodeLocaleAttributes();
31:       // Undeclared exception!
32:       try { 
33:         cSVParser0.getRecords((Collection<String>) set0);
34:         fail("Expecting exception: UnsupportedOperationException");
35:       
36:       } catch(UnsupportedOperationException e) {
37:          //
38:          // no message in exception (getMessage() returned null)
39:          //
40:          verifyException("java.util.AbstractCollection", e);
41:       }
42:   }
43: }
RegularFileObject[/tmp/EvoSuite_16_1628267191905/org/apache/commons/csv/CSVParser_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Fri Aug 06 16:26:31 GMT 2021
5:  */
6: 
7: package org.apache.commons.csv;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class CSVParser_16_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.csv.CSVParser"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CSVParser_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "org.apache.commons.csv.CSVFormat",
70:       "org.apache.commons.csv.Quote",
71:       "org.apache.commons.csv.Token",
72:       "org.apache.commons.csv.Lexer",
73:       "org.apache.commons.csv.CSVRecord",
74:       "org.apache.commons.csv.Constants",
75:       "org.apache.commons.csv.CSVParser",
76:       "org.apache.commons.csv.Assertions",
77:       "org.apache.commons.csv.Token$Type",
78:       "org.apache.commons.csv.CSVParser$2",
79:       "org.apache.commons.csv.CSVParser$1",
80:       "org.apache.commons.csv.ExtendedBufferedReader"
81:     );
82:   } 
83: 
84:   private static void resetClasses() {
85:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CSVParser_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
86: 
87:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
88:       "org.apache.commons.csv.CSVParser",
89:       "org.apache.commons.csv.CSVParser$1",
90:       "org.apache.commons.csv.Token$Type",
91:       "org.apache.commons.csv.CSVParser$2",
92:       "org.apache.commons.csv.Constants",
93:       "org.apache.commons.csv.CSVFormat",
94:       "org.apache.commons.csv.Token",
95:       "org.apache.commons.csv.Assertions",
96:       "org.apache.commons.csv.Lexer",
97:       "org.apache.commons.csv.ExtendedBufferedReader",
98:       "org.apache.commons.csv.CSVRecord",
99:       "org.apache.commons.csv.CSVPrinter",
100:       "org.apache.commons.csv.CSVPrinter$1"
101:     );
102:   }
103: }

[MASTER] 16:26:31.931 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
CSVFormat cSVFormat0 = CSVFormat.MYSQL;
StringReader stringReader0 = new StringReader("K\"\"3 N?w(|q*A#&<r");
CSVParser cSVParser0 = new CSVParser(stringReader0, cSVFormat0);
Locale locale0 = Locale.KOREA;
Set<String> set0 = locale0.getUnicodeLocaleAttributes();
cSVParser0.getRecords((Collection<String>) set0);

[MASTER] 16:26:32.497 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:26:32.571 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:26:32.618 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 16:26:32.672 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'CSVParser_ESTest' to results/Csv-7/org.apache.commons.csv.CSVParser/BBC-F0-100/tests/28
* Done!

* Computation finished
