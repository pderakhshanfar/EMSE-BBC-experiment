/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 19:52:16 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = 'x';
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "4");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = CharacterReader.rangeEquals((char[]) null, 9, 2789, "f4yFKg}liX??2");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 11);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZM_+<:,a[t8iuYUj%\"7");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("yw(J>8{X1v[)If<8E.");
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesIgnoreCase("Must be true");
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("6,PdU^wB");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matchesIgnoreCase("6,PdU^wB");
      assertEquals(8, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7Y||q/E+@01,pju");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      boolean boolean0 = characterReader0.matchConsume("7");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7Y||q/E+@01,pju");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchConsume("");
      assertEquals(15, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matches('`');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9x#TGO,Cou1[pF]MV");
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("02J@P;3pO");
      characterReader0.consumeDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReCder");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeTo("org.jsoup.parser.CharacterReCder");
      characterReader0.advance();
      characterReader0.consumeDigitSequence();
      assertEquals(33, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f^5mTlZ$z\"f<2");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("f", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FT");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("98^4:pk_J?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?0w+'VM#XeV)jKMc3R");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p9!sV3iYi");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("pZT%ml");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("nzc\"g=");
      characterReader0.consumeLetterSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 9);
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      characterReader0.matchConsumeIgnoreCase("R>`;#:uH4;id4#v");
      characterReader0.consume();
      characterReader0.consumeLetterSequence();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("E@X(#Jx!,m|");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTagName();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rray must not conain any null objects");
      characterReader0.consume();
      characterReader0.consumeData();
      assertEquals(37, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ng9|UnCO9cWe");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consume();
      characterReader0.consumeData();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XK#?|)QiCS4M5-B,B'");
      characterReader0.matchConsumeIgnoreCase("XK#?|)QiCS4M5-B,B'");
      char[] charArray0 = new char[9];
      characterReader0.advance();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(19, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReCder");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      char[] charArray0 = new char[2];
      characterReader0.consumeTo("org.jsoup.parser.CharacterReCder");
      characterReader0.advance();
      characterReader0.consumeToAny(charArray0);
      assertEquals(33, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]:9wFBqlj");
      boolean boolean0 = characterReader0.containsIgnoreCase("C]:9wFBqlj");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      characterReader0.consumeTo('>');
      int int0 = characterReader0.nextIndexOf("a_w!237|");
      assertEquals(25, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]9wFBqlj");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("C", string0);
      
      int int0 = characterReader0.nextIndexOf('w');
      assertEquals(1, characterReader0.pos());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7Y||q/E+@01,pju");
      characterReader0.consumeTo('`');
      characterReader0.unconsume();
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      assertEquals(15, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1434);
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1434);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L]9!C<6M-U@`T");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeTagName();
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(2, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.consumeData();
      characterReader0.advance();
      characterReader0.nextIndexOf('^');
      assertEquals(28, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a");
      characterReader0.consumeTo('`');
      characterReader0.toString();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1825, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7Y||q/E+@01,pju");
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ng9|UnCO9cWe");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      int int0 = characterReader0.pos();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      int int0 = characterReader0.nextIndexOf("Array must not contain any null objects");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rray must not conain any null objects");
      int int0 = characterReader0.nextIndexOf(" must not conain any null objects");
      assertEquals(4, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.matchesIgnoreCase("");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9x#TGO,Cou1[pF]MV");
      boolean boolean0 = characterReader0.matches("H'v^c-nQEc");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7Y||q/E+@01,pju");
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7Y||q/E+@01,pju");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      characterReader0.consumeToEnd();
      assertEquals(15, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]:9wFBqlj");
      String string0 = characterReader0.consumeTo("C]:9wFBqlj");
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeTo('B');
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5/!6\"]&qJ`Gs*");
      char char0 = characterReader0.consume();
      assertEquals(1, characterReader0.pos());
      assertEquals('5', char0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, (-1), 1101, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(1, 32, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(12, 12, "Mark invalid");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeTo('O');
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("Object must not be null");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not containany null objects");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7Y||q/E+@01,pju");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('o');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QwnP^#I!");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("QwnP^#I!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zO&.3H42XKd9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 105);
      stringReader0.close();
      characterReader0.consumeTo('0');
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 48);
      char[] charArray0 = new char[6];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[7];
      stringReader0.close();
      characterReader0.matchConsumeIgnoreCase("Mark invalid");
      // Undeclared exception!
      try { 
        characterReader0.matchesAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]:9wFBqlj");
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches('v');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.matchConsumeIgnoreCase("Mark invalid");
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("Mark invalid");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]9wFBqlj");
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aNwoJoEV'~'[XV$s");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeTagName();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("E@X(#Jx!,m|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5@|IR^y|  Vf'");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?0G{{}&|}]~3mS");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 21);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.mark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.isEmpty();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 512);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2sN#Kj3~SUk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("2sN#Kj3~SUk");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5/!6\"]&qJ`Gs*");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*\"ePVe0PV");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      char[] charArray0 = new char[3];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YGCJHv%71&K");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[6];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1434);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("n3m");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u|#Ce$>\"?J");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('>');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2567);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`xQT5C@RdS~u}D^");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 63);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<}TWbll}");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null, 512);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharacterReader characterReader0 = new CharacterReader("a");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.unconsume();
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(12, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zO&.3H42XKd9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 105);
      boolean boolean0 = characterReader0.isEmpty();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      char[] charArray0 = new char[6];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "4");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("YY|q/E+@0,p&,ju");
      char[] charArray0 = new char[7];
      charArray0[1] = '0';
      charArray0[3] = ':';
      charArray0[5] = 'F';
      charArray0[6] = '@';
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("U&P4");
      boolean boolean0 = characterReader0.containsIgnoreCase("U&P4");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rray must not conain any null objects");
      boolean boolean0 = characterReader0.containsIgnoreCase("rray must not conain any null objects");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.UncheckedIOException");
      assertEquals(30, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0}/EZ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dD.G^s");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z)D7Ny5zo");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("z", string0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("E@X(#Jx!,m|");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(11, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z)D7Ny5zo");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("iH\"(}l-2v5ct");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[9];
      StringReader stringReader1 = new StringReader("Mark invalid");
      stringReader1.read(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C]9wFBqlj");
      char[] charArray0 = new char[5];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("rry must not conain any null objects");
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ng9|UnCO9cWe");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      char[] charArray1 = new char[6];
      characterReader0.matchesAny(charArray1);
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("yw(J>8{X1v[)If<8E.");
      boolean boolean0 = characterReader0.matchesIgnoreCase("Must be true");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z)D7Ny5zo");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("4Wl1StttYL'\"");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZM_+<:,a[t8iuYUj%\"7");
      boolean boolean0 = characterReader0.matches("ZM_+<:,a[t8iuYUj%\"7");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dD.G^s");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.helper.Validate");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("yw(J>8{X1v[)If<8E.");
      boolean boolean0 = characterReader0.matches('y');
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2567);
      boolean boolean0 = characterReader0.matches('&');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("E@X(#Jx!,m|");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matches('|');
      assertEquals(11, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeTo('O');
      characterReader0.consumeDigitSequence();
      assertEquals(23, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("dD.G^s");
      characterReader0.consumeHexSequence();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z)D7Ny5zo");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTo("z)D7Ny5zo");
      characterReader0.consumeHexSequence();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0u\"f?!$<Ljf|(T;;b");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PM~");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7Y||q/E+@01,pju");
      characterReader0.consumeDigitSequence();
      characterReader0.consumeLetterSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kDZ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 94);
      characterReader0.consumeLetterSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      String string0 = characterReader0.consumeTagName();
      assertEquals(1, characterReader0.pos());
      assertEquals("R", string0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f^5mTlZ$z\"f<2");
      characterReader0.consumeTagName();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":&D\"K9t'i/{(T)HZ0k");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" g5Q,P@]_1hBFs");
      String string0 = characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("_kux?pCE2x(E<g");
      characterReader0.consumeData();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YGCJHv%71&K");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2567);
      char[] charArray0 = new char[5];
      charArray0[0] = 'g';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(2, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zO&.3H42XKd9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 105);
      characterReader0.consumeTo('K');
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      String string0 = characterReader0.consumeTo("o");
      assertEquals("N", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.helper.Validate");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2567);
      boolean boolean0 = characterReader0.containsIgnoreCase("org.jsoup.helper.Validate");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" g5Q,P@]_1hBFs");
      int int0 = characterReader0.nextIndexOf(' ');
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      // Undeclared exception!
      try { 
        characterReader0.rewindToMark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H;1kgZ=.8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.unconsume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a");
      characterReader0.consumeTo('`');
      characterReader0.unconsume();
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("R>`;#:uH4;id4#v");
      characterReader0.matchConsumeIgnoreCase("R>`;#:uH4;id4#v");
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.matchConsumeIgnoreCase("Mark invalid");
      char char0 = characterReader0.current();
      assertEquals(12, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('O', char0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.rangeEquals((-1), (-214), "Object must not be null");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a");
      String string0 = characterReader0.toString();
      assertEquals("a", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.advance();
      characterReader0.consumeTo("o");
      assertEquals(1, characterReader0.pos());
  }
}
