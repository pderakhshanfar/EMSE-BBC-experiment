/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 14:05:18 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      boolean boolean0 = characterReader0.matchConsume("?&");
      assertEquals(2, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0`,_(Yws)8>}O9gz");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ak i&$vdlid");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=e4Tl");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[3] = '=';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xIZ:4X<3#Tr~CD,vu6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("wJE<_=;]~ioqGh*o%;");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchConsume("ZIaSz}QAe+# e$");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      boolean boolean0 = characterReader0.matches('V');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("00NVro");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 701);
      characterReader0.consumeDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Fv");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("F", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("9", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("NzY");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IZDdTIw|H>%tp$C$$=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LXUeZ%raaf}/mN*evND");
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0Je,bH=&IY]wy");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      characterReader0.consumeTagName();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      characterReader0.consumeData();
      characterReader0.advance();
      characterReader0.consumeTagName();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeData();
      assertEquals(23, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      characterReader0.consumeData();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Heml=.DpFY3BH3OB");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[5];
      charArray0[3] = 'I';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      characterReader0.consumeData();
      characterReader0.advance();
      char[] charArray0 = new char[8];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[5];
      characterReader0.consume();
      characterReader0.consumeToAny(charArray0);
      assertEquals(17, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      char[] charArray0 = new char[9];
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      characterReader0.consumeTo("5");
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f0KuXC8}_Sb_5[@");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      characterReader0.consumeTo("Y->-");
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      String string0 = characterReader0.consumeTo('x');
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("o$");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      characterReader0.unconsume();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g:\"vHXuVE_?sjs}MkV");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(19, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.matchConsumeIgnoreCase("Array must not contain any null objects");
      characterReader0.advance();
      characterReader0.consumeLetterSequence();
      assertEquals(40, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeToEnd();
      characterReader0.toString();
      assertEquals(39, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 0, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Heml=.DpFY3BH3OB");
      characterReader0.consumeLetterThenDigitSequence();
      int int0 = characterReader0.pos();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      int int0 = characterReader0.nextIndexOf("c3P+j/r5~` {bTE_B2c");
      assertEquals((-1), int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xIZ:4X<3#Tr~CD,vu6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf('r');
      assertEquals(0, characterReader0.pos());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      int int0 = characterReader0.nextIndexOf('O');
      assertEquals(0, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QW:kn$ G");
      char char0 = characterReader0.current();
      assertEquals('Q', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeToEnd();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1027);
      characterReader0.consume();
      int int0 = characterReader0.nextIndexOf('d');
      assertEquals(1, characterReader0.pos());
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 92, 92, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, (-1773), 32, "org.jsoup.parser.CharacterReader");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1773
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(82, 0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(88, 5, "Array");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 88
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g:\"vHXuVE_?sjs}MkV");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 32);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ma+k iNvalid");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("_4ln");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "_4ln", 1, 1);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('b');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@Ti^$\nSr0J'Cl,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 10);
      char[] charArray0 = new char[6];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gz");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 24576);
      characterReader0.consumeLetterSequence();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("gz");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".9EW9J?Ou,a");
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KqNE7|\"4");
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 101);
      stringReader0.close();
      characterReader0.consumeTo("KqNE7|\"4");
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[6];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gz");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 24576);
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[3];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{\"j9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 31);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("4\tQcB|!}is*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~bs/fi ||?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 107);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("}B48lcg");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Must be true");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.mark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.isEmpty();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EqS}]!IKsZuE(m");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{5?RVU\"G P");
      stringReader0.skip(571L);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g:\"vHXuVE_?sjs}MkV");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[9];
      characterReader0.consumeToAny(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Cu.h&webqp9");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("Must be true");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!$VLK':>o}@c");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('y');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2q\"$^uG<V}L(;2Y");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeTo('.');
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r)]*.I'9IG|2iw#AMD|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeTagName();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8RGSUE[[<>]$.?9j6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 46);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Heml");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g:\"vHXuVE_?sjs}MkV");
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, (-3613));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char[] charArray0 = new char[19];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 12, 12, "Mak i$vdl<id");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      String string0 = characterReader0.consumeData();
      assertEquals("9", string0);
      
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~$%39.Yo;Z|cE:z8DnB");
      boolean boolean0 = characterReader0.rangeEquals(17, 17, "<$rX}x{>~4\f.y7(");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6GXpu#==8]O");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("6", string0);
      
      characterReader0.unconsume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C");
      boolean boolean0 = characterReader0.containsIgnoreCase("C");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      boolean boolean0 = characterReader0.containsIgnoreCase("?&");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KqNE7|\"4");
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 101);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("KqNE7|\"4");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{nDs/{@)");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZTM'T1P~");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Q1s{@sAUHT)Fv");
      char[] charArray0 = new char[2];
      charArray0[0] = 'H';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(8, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1sx26fA");
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(4, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[1];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(19, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1sx26fA");
      char[] charArray0 = new char[8];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6GXpu#==8]O");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesIgnoreCase("KB");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matchesIgnoreCase("q-bdhJB4Phzp,gQa4sp");
      assertEquals(19, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZTM'T1P~");
      boolean boolean0 = characterReader0.matchesIgnoreCase("ZTM'T1P~");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      boolean boolean0 = characterReader0.matchConsume("]");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8RGSUE[[<>]$.?9j6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 46);
      boolean boolean0 = characterReader0.matchConsume("Object must not be null");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gz");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 24576);
      boolean boolean0 = characterReader0.matches("gz");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      boolean boolean0 = characterReader0.matches('O');
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZTM'T1P~");
      boolean boolean0 = characterReader0.matches('Y');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      characterReader0.consumeData();
      characterReader0.matches('Z');
      assertEquals(23, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("5", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~$%39.Yo;Z|cE:z8DnB");
      characterReader0.consumeDigitSequence();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      characterReader0.consumeTagName();
      characterReader0.consumeDigitSequence();
      assertEquals(19, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("5", string0);
      
      boolean boolean0 = characterReader0.matches("5");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("f", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Y0\tvuOhS");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EqS}]!IKsZuE(m");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IZDdTIw|H>%tp$C$$=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("w.\u0005kX{<X]]08\"QPXk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Object must not be null");
      characterReader0.consumeTagName();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@Ti^$\nSr0J'Cl,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 10);
      characterReader0.consumeTagName();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xIZ:4X<3#Tr~CD,vu6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      String string0 = characterReader0.consumeData();
      assertEquals("?", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^:J");
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'Q';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@Ti^$\nSr0J'Cl,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 10);
      characterReader0.consumeTo('T');
      characterReader0.mark();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5+iIs}N5?X'/!EUG(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("5+iIs}N5?X'/!EUG(");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("w'e~#~)pGn\"wh2#p");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("w", string0);
      
      int int0 = characterReader0.nextIndexOf("w");
      assertEquals(1, characterReader0.pos());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8RGSUE[[<>]$.?9j6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 46);
      int int0 = characterReader0.nextIndexOf("8RGSUE[[<>]$.?9j6");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[SnXN&2iQ(o<:*.#<W");
      int int0 = characterReader0.nextIndexOf('[');
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      // Undeclared exception!
      try { 
        characterReader0.rewindToMark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("\fgP_,Kq>H50{b");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f");
      // Undeclared exception!
      try { 
        characterReader0.unconsume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objecZs");
      characterReader0.consumeHexSequence();
      characterReader0.unconsume();
      char[] charArray0 = new char[4];
      charArray0[3] = 'a';
      characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      characterReader0.consumeTagName();
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(20, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("?&");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      characterReader0.consumeTagName();
      char char0 = characterReader0.current();
      assertEquals(19, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2q\"$^uG<V}L(;2Y");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Q1s{@sAUHT)Fv");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q-bdhJB4Phzp,gQa4sp");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~bs/fi ||?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 107);
      boolean boolean0 = characterReader0.rangeEquals(107, (-1062), "~bs/fi ||?");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~bs/fi ||?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 107);
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("~bs/fi ||?", string0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mak i$vdl<id");
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vqK\" E5Xh%L\"~8mP");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
}
