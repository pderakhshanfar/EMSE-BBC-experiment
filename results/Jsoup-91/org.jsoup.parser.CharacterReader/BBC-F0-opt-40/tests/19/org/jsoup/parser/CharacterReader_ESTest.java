/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 14:19:30 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '[';
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VzU<<xgX/BKDE#%>pJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 649);
      boolean boolean0 = characterReader0.rangeEquals((-1), (-1), "VzU<<xgX/BKDE#%>pJ");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a$y?]");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z!(!ul3.ekK");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 10);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Kk]SVF+I>|+");
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'r';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aa3(8[&/s:j f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesIgnoreCase(" 22B7kiLO;/");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
      
      boolean boolean0 = characterReader0.matches("Array must not contain any null objects");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".5|[Jw");
      boolean boolean0 = characterReader0.matches('/');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9zJAi_'m0");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("fsH%%tS_Z=");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EaR>Ak4wj~[JeC~5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 229);
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F{>)8@.d0Z2");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9A^nC';b8");
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeHexSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeTo('G');
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VzU<<xgX/BKDE#%>pJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 3002);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeLetterSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeTo('G');
      characterReader0.consume();
      characterReader0.consumeLetterSequence();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeTagName();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeData();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lcvHAEylPGI");
      char[] charArray0 = new char[4];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader("lcvHAEylPGI");
      String string0 = characterReader0.consumeToAnySorted(charArray0);
      assertEquals("l", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u'BI0dj{dh~~ydE,=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      characterReader0.advance();
      char[] charArray0 = new char[2];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u'BI0dj{dh~~ydE,=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      characterReader0.advance();
      char[] charArray0 = new char[4];
      characterReader0.consumeToAny(charArray0);
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      characterReader0.consumeTo(")8@.d0Z2");
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2ehz)Qm(mzg73");
      boolean boolean0 = characterReader0.containsIgnoreCase("2ehz)Qm(mzg73");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VzU<<xgX/BKDE#%>pJ");
      characterReader0.consumeLetterSequence();
      int int0 = characterReader0.nextIndexOf('%');
      assertEquals(3, characterReader0.pos());
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeData();
      characterReader0.consume();
      int int0 = characterReader0.nextIndexOf('6');
      assertEquals(18, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VzU<<xgX/BKDE#%>pJ");
      stringReader0.skip(1617L);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 649);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aa3(8[&/s:j f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      characterReader0.toString();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = CharacterReader.rangeEquals((char[]) null, 0, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      boolean boolean0 = characterReader0.rangeEquals(649, 0, "");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F~*9H`cLlH!&%c#<h>");
      boolean boolean0 = characterReader0.rangeEquals((-427), 47, "");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[");
      characterReader0.consumeData();
      int int0 = characterReader0.pos();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      characterReader0.unconsume();
      int int0 = characterReader0.nextIndexOf('F');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",!7");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesIgnoreCase("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesIgnoreCase("Mark invalid");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sZ2N4");
      characterReader0.consumeLetterSequence();
      char char0 = characterReader0.current();
      assertEquals(2, characterReader0.pos());
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeToEnd();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      char[] charArray0 = new char[5];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeTo('%');
      assertEquals(19, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeLetterSequence();
      char char0 = characterReader0.consume();
      assertEquals(7, characterReader0.pos());
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      characterReader0.consumeData();
      characterReader0.advance();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, (-2491), (-2491), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[9];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 'm', 1, "U");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 109
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(32, 32, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";=Us9!ar5/<=EUE|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(";=Us9!ar5/<=EUE|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[Q,4;@w7lF Us5)fE");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aa3(8[&/s:j f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sQY4;@w7lF Us5)sE");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[7];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('y');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lN9=JaCS+Az?'xN");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      characterReader0.consumeToAny(charArray0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("Must be false");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" >[%nI}");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      char[] charArray0 = new char[5];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      characterReader0.matchConsume("No buffer left to unconsume");
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lcvHAEylPGI");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 12);
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches("No buffer left to unconsume");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 57);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches('Y');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("No buffer left to unconsume");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("D{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".5|[Jw");
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.mark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.isEmpty();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" >[%nI}");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("CV!!P:, D=`:`p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{?3\"4W+bhh!e#Q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.matchConsumeIgnoreCase("{?3\"4W+bhh!e#Q");
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      stringReader0.close();
      characterReader0.consumeTo('&');
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(",!7");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y83r5Xe[t/jV*h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('m');
      char[] charArray0 = new char[2];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-lrc|#zzjH6p");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('L');
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("-lrc|#zzjH6p");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      // Undeclared exception!
      try { 
        characterReader0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1000);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo(']');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[4];
      stringReader0.close();
      characterReader0.consumeToAny(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XJMA{<S:It622TU,-\"n");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4);
      characterReader0.consumeLetterSequence();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EaR>Ak4wj~[JeC~5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",!7");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VzU<ZxgX/BKDE#%>pJ");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, (-859));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[");
      characterReader0.consumeData();
      characterReader0.unconsume();
      characterReader0.consumeData();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";=Us9!ar5/<=EUE|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(16, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("U:py/MXwU}~JT'}}HI");
      boolean boolean0 = characterReader0.isEmpty();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" LA@?Abi-`]LC-");
      char[] charArray0 = new char[3];
      charArray0[1] = '@';
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeData();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p7K'3Y^HWB~:;_E(A ");
      char[] charArray0 = new char[5];
      characterReader0.consumeTagName();
      characterReader0.consumeToAny(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F{>)8@.d0Z2");
      boolean boolean0 = characterReader0.containsIgnoreCase("F{");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",!7");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase(",!7");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsume("u");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9~>b(sP}1");
      boolean boolean0 = characterReader0.matchesDigit();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p7K'3Y^HWB~:;_E(A ");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(17, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lN9=JaCS+Az?'xN");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      characterReader0.consumeToAny(charArray0);
      characterReader0.matchesDigit();
      assertEquals(15, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FZ");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      char[] charArray0 = new char[7];
      charArray0[3] = 'X';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      char[] charArray0 = new char[6];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      char[] charArray0 = new char[5];
      charArray0[0] = 'F';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consumeTo('G');
      char[] charArray0 = new char[4];
      characterReader0.matchesAny(charArray0);
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y83r5Xe[t/jV*h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('m');
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("Must be false");
      assertEquals(14, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("String must not be empty");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("{?3\"4W+bhh!e#Q");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-lrc|#zzjH6p");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matches("-lrc|#zzjH6p");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.matches("4");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matches('>');
      assertEquals(2, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      boolean boolean0 = characterReader0.matches('\'');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      characterReader0.consume();
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" >[%nI}");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2ehz)Qm(mzg73");
      characterReader0.consumeHexSequence();
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(3, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeLetterSequence();
      characterReader0.consumeHexSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lN9=JaCS+Az?'xN");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F{>)8@.d0Z2");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 242);
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("F", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("U:py/MXwU}~JT'}}HI");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("U", string0);
      
      int int0 = characterReader0.nextIndexOf("U");
      assertEquals(1, characterReader0.pos());
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("VzU<<xgX/BKDE#%>pJ");
      characterReader0.consumeTagName();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      characterReader0.consumeTagName();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u'BI0dj{dh~~ydE,=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      characterReader0.matches('>');
      assertEquals(17, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      characterReader0.consumeData();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-Sqk&PL/[");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("XJMA{<S:It622TU,-\"n");
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeTo("org.jsoup.parser.CharacterReader");
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MADcPI6gG_L{J $: ");
      characterReader0.consumeTo('6');
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeTo("org.jsoup.parser.CharacterReader");
      assertEquals(32, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y83r5Xe[t/jV*h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf("y83r5Xe[t/jV*h");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p7K'3Y^HWB~:;_E(A ");
      // Undeclared exception!
      try { 
        characterReader0.rewindToMark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("QE0O/I");
      // Undeclared exception!
      try { 
        characterReader0.unconsume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VzU<<xgX/BKDE#%>pJ");
      stringReader0.skip(1617L);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 649);
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char char0 = characterReader0.current();
      assertEquals('A', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FZ");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p7K'3Y^HWB~:;_E(A ");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p7K'3Y^HWB~:;_E(A ");
      char[] charArray0 = new char[5];
      characterReader0.consumeToAny(charArray0);
      int int0 = characterReader0.nextIndexOf("p7K'3Y^HWB~:;_E(A ");
      assertEquals(18, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",!7");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(1, 1, "A");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FZ");
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("FZ", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Rcu_2j)#APsl64");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y83r5Xe[t/jV*h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('m');
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(14, characterReader0.pos());
      assertFalse(boolean0);
  }
}
