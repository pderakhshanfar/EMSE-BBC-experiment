/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 08:17:57 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("bY{vP Q*O|Qzgl(#");
      boolean boolean0 = characterReader0.rangeEquals(1, 1, "O");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[4];
      charArray0[3] = 'z';
      characterReader0.consumeToAny(charArray0);
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("g");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("g");
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0&8");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("aOjoDy3Zhum");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZP71<bY1");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_u[SG`fMs/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 786);
      char[] charArray0 = new char[7];
      charArray0[3] = '_';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("aOjoDy3Zhum");
      char[] charArray0 = new char[5];
      charArray0[0] = 'f';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/5\"F/zn;N{Q>4St4");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 461);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("-J:;7D!,13hd ");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      characterReader0.matchConsume("F_|ZV )Dh`fQkx");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("F_|ZV )Dh`fQkx");
      assertEquals(14, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8bY%vP Q8*O|Qzgl(#");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.matches("O");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      boolean boolean0 = characterReader0.matches('B');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("uG9^;");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, '8');
      characterReader0.consumeLetterSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2759);
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f)\"MN.&6t^qOf");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("60/'");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-J:I7D!,163hd ");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(15, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A9+^iXekHQnz8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2759);
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2759);
      characterReader0.consume();
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-J:I7D!,163hd ");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(15, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QTm.o:t6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[3];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      char[] charArray0 = new char[2];
      characterReader0.consumeTo("rqO.");
      characterReader0.advance();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(31, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*1|Qzgl(#");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[6];
      characterReader0.consumeToAny(charArray0);
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("G_B7{SguQ1");
      characterReader0.consumeToEnd();
      characterReader0.consume();
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      characterReader0.consume();
      characterReader0.consumeTo('*');
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 3449);
      characterReader0.advance();
      int int0 = characterReader0.nextIndexOf('=');
      assertEquals(1, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2759);
      characterReader0.consume();
      char char0 = characterReader0.current();
      assertEquals(1, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2759);
      characterReader0.consume();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 3449);
      characterReader0.advance();
      characterReader0.mark();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("8bY%vP Q8*O|Qzgl(#", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 786, '\u0000', "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bzyTR6(");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      int int0 = characterReader0.pos();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sX.");
      int int0 = characterReader0.nextIndexOf("sX.");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      int int0 = characterReader0.nextIndexOf("z");
      assertEquals(0, characterReader0.pos());
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      characterReader0.consumeTagName();
      characterReader0.nextIndexOf("F_|ZV");
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~//QL*Sad>8E&pK7");
      int int0 = characterReader0.nextIndexOf('&');
      assertEquals(12, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<<7");
      boolean boolean0 = characterReader0.matchesIgnoreCase("wF(n");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ic`U");
      boolean boolean0 = characterReader0.matches("");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      char char0 = characterReader0.current();
      assertEquals('8', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeToEnd();
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sX.");
      characterReader0.consumeTo("sX.");
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z/6fcLY9j!cx|Gw");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("z", string0);
      
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7#Un/!K4");
      char char0 = characterReader0.consume();
      assertEquals(1, characterReader0.pos());
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      // Undeclared exception!
      try { 
        characterReader0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 26, 3091, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        CharacterReader.rangeEquals(charArray0, 26, 30, "org.jsoup.UncheckedIOException");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1ka],b;K@=&LQ");
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(57, 70, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8bY%vP Q8*O|Qzgl(#");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      // Undeclared exception!
      try { 
        characterReader0.rangeEquals(1, 1, "O");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("sX");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1085);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf(charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.nextIndexOf('!');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesLetter();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase("?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 31);
      // Undeclared exception!
      try { 
        characterReader0.matchesIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QTm.o:t6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[3];
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
      try { 
        characterReader0.matchesDigit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("~//QL*Sad>8E&pK7");
      // Undeclared exception!
      try { 
        characterReader0.matchesAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[1];
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
      try { 
        characterReader0.matchesAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
      try { 
        characterReader0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Must be false");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1051);
      // Undeclared exception!
      try { 
        characterReader0.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches('G');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 8);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase("u^NVSuImw");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L=cTu>,xjVIv/vGLwg'");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 21);
      // Undeclared exception!
      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matchConsume("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      // Undeclared exception!
      try { 
        characterReader0.matchConsume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QTm.o:t6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.mark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.isEmpty();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.current();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      characterReader0.matchConsume("F_|ZV )Dh`fQkx");
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("9pDf\"_FVDNZ5:6d");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(">:F$C");
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 26);
      // Undeclared exception!
      try { 
        characterReader0.containsIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToEnd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4)ACH");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAnySorted((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      char[] charArray0 = new char[9];
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWkE1y9m|&qV-4c");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeToAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("60/'");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeTo("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTo('Z');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1910);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeTagName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QTm.o:t6");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeTagName();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterThenDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeLetterSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sX.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('3');
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeHexSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 8);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consumeDigitSequence();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.consume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QTm.o:t6");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, 97);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",#R&|]r");
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0, (-1956));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      stringReader0.close();
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharacterReader characterReader0 = null;
      try {
        characterReader0 = new CharacterReader((Reader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(10, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = new char[7];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "R");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("=");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeTo("rqOP");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.UncheckedIOException");
      assertEquals(30, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$WK\"Wk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-J:;7D!,13hd ");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(13, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeLetterSequence();
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("BL<]1T:At|");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTo("BL<]1T:At|");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(10, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9,a");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_u[SG`fMs/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 786);
      characterReader0.consume();
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9,a");
      char[] charArray0 = new char[5];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.matchesAnySorted(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f)\"MN.&6t^qOf");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("~&/ac&35_");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9,a");
      boolean boolean0 = characterReader0.matchesIgnoreCase("9,a");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("bY{vP Q*O|Qzgl(#");
      boolean boolean0 = characterReader0.matches("O");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      boolean boolean0 = characterReader0.matches('*');
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.matches('7');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-J:;7D!,13hd ");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matches('e');
      assertEquals(13, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0[@o}%i?%?:ny");
      characterReader0.consumeDigitSequence();
      characterReader0.consumeTagName();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z.V?;3/[e]*ik@3EN");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1910);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9,a");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("9", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      char[] charArray0 = new char[6];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeHexSequence();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("s|.");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LMsY0\"byxWjUch`Z");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("bY{vP Q*O|Qzgl(#");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeData();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(">:F$C");
      String string0 = characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("BL<]1T:At|");
      characterReader0.consumeTagName();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_u[SG`fMs/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<<7");
      String string0 = characterReader0.consumeData();
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWkE1y9m|&qV-4c");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("oPLI&L}mdsx;%_");
      char[] charArray0 = new char[4];
      charArray0[1] = ';';
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeTo(" #5");
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*O|Qzgl(#");
      char[] charArray0 = new char[4];
      charArray0[3] = 'z';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(13, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("*%dp>2mr*+");
      characterReader0.consumeTo('*');
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F_|ZV )Dh`fQkx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("_|ZV )Dh`fQkx");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("RR{,");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.containsIgnoreCase("RR{,");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!_u[SG`fMs/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf('!');
      assertEquals(0, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-J:;7D!,13hd ");
      // Undeclared exception!
      try { 
        characterReader0.rewindToMark();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("G_B7{SguQ1");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B@5p=-Z@q) z7W80");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
      try { 
        characterReader0.unconsume();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RR{,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char char0 = characterReader0.current();
      assertEquals('R', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8bY%vP Q8*1|Qzgl(#");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTo("8");
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("maHZR");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 48);
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[9];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(5, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("maHZR");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 48);
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[9];
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(4, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9,a");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("maHZR");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 48);
      boolean boolean0 = characterReader0.rangeEquals(572, 572, "maHZR");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeData();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">1hPY8c$)");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      characterReader0.consumeToAny(charArray0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        characterReader0.matches("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.jsoup.parser.CharacterReader", e);
      }
  }
}
