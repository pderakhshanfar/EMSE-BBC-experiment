* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.TypeInference
* Starting Client-0
* Connecting to master process on port 7377
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-112/build/classes
  - subjects/buggy-versions/Closure-112/lib/args4j.jar
  - subjects/buggy-versions/Closure-112/lib/guava.jar
  - subjects/buggy-versions/Closure-112/lib/json.jar
  - subjects/buggy-versions/Closure-112/lib/jsr305.jar
  - subjects/buggy-versions/Closure-112/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-112/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-112/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.TypeInference
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2994
* Using seed 2259741543
* Starting evolution
* Initial Number of Goals in DynaMOSA = 886 / 2994
[MASTER] 01:42:58.342 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 302s and 71 generations, 33262 statements, best individual has fitness: 2597.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 6%
* Total number of goals: 603
* Number of covered goals: 37
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 21%
* Total number of goals: 769
* Number of covered goals: 163
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 3%
* Total number of goals: 821
* Number of covered goals: 21
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 21%
* Total number of goals: 769
* Number of covered goals: 163
* Generated 8 tests with total length 53
* Resulting test suite's coverage: 36% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 1%
* Compiling and checking tests
[MASTER] 01:48:04.246 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:48:04.248 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);
ImmutableSortedMap.of();
Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:48:07.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:48:07.856 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);
ImmutableSortedMap.of();
Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscompTypenference$BooleanOutcomePair");

[MASTER] 01:48:10.939 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:48:10.940 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);
ImmutableSortedMap.of();
Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:48:22.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:48:22.214 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);
ImmutableSortedMap.of();
Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "22qS jQwa>}'BNWx;");

[MASTER] 01:48:25.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:48:25.481 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);
Compiler compiler0 = new Compiler();
Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'TypeInference_ESTest' to results/Closure-112/com.google.javascript.jscomp.TypeInference/default/tests/23
* Done!

* Computation finished
