* EvoSuite 1.1.1-SNAPSHOT
* Configuration: default
* Going to generate test cases for class: com.google.javascript.jscomp.TypeInference
* Starting Client-0
* Connecting to master process on port 20909
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-112/build/classes
  - subjects/buggy-versions/Closure-112/lib/args4j.jar
  - subjects/buggy-versions/Closure-112/lib/guava.jar
  - subjects/buggy-versions/Closure-112/lib/json.jar
  - subjects/buggy-versions/Closure-112/lib/jsr305.jar
  - subjects/buggy-versions/Closure-112/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-112/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-112/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.TypeInference
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2994
* Using seed 1261102773
* Starting evolution
* Initial Number of Goals in DynaMOSA = 886 / 2994
[MASTER] 01:42:55.563 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 01:45:01.186 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
* Search finished after 303s and 92 generations, 73800 statements, best individual has fitness: 2286.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 21%
* Total number of goals: 603
* Number of covered goals: 128
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 31%
* Total number of goals: 769
* Number of covered goals: 242
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 12%
* Total number of goals: 821
* Number of covered goals: 99
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 31%
* Total number of goals: 769
* Number of covered goals: 237
* Generated 63 tests with total length 823
* Resulting test suite's coverage: 40% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 01:49:15.380 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:15.380 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, (Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:19.899 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:19.900 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:24.055 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:24.055 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, (Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:27.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:27.328 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("isNull", "isNull");

[MASTER] 01:49:32.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:32.355 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, (Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:36.194 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:36.197 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference", "com.google.javascript.jscomp.TypeInference");

[MASTER] 01:49:39.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:39.198 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager((Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:42.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:42.408 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, (Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

[MASTER] 01:49:45.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 01:49:45.805 [logback-1] WARN  JUnitAnalyzer - Failing test:
 LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, (Logger) null);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseSyntheticCode("com.google.javascript.jscomp.TypeInference$BooleanOutcomePair", "com.google.javascript.jscomp.TypeInference$BooleanOutcomePair");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 7
* Writing tests to file
* Writing JUnit test case 'TypeInference_ESTest' to results/Closure-112/com.google.javascript.jscomp.TypeInference/default/tests/24
* Done!

* Computation finished
