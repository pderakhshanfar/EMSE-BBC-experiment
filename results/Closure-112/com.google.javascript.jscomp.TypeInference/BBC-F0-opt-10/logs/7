* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-opt-10
* Going to generate test cases for class: com.google.javascript.jscomp.TypeInference
* Starting Client-0
* Connecting to master process on port 14764
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-112/build/classes
  - subjects/buggy-versions/Closure-112/lib/args4j.jar
  - subjects/buggy-versions/Closure-112/lib/guava.jar
  - subjects/buggy-versions/Closure-112/lib/json.jar
  - subjects/buggy-versions/Closure-112/lib/jsr305.jar
  - subjects/buggy-versions/Closure-112/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-112/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-112/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.TypeInference
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2994
* Using seed 2558469694
* Starting evolution
bbc usage percentage is: 10%
* Initial Number of Goals in DynaMOSA = 886 / 2994
[MASTER] 10:21:27.703 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 10:27:38.129 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
[MASTER] 10:27:46.489 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C1*
*C2*
* Search finished after 602s and 722 generations, 491526 statements, best individual has fitness: 1883.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 38%
* Total number of goals: 603
* Number of covered goals: 227
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 46%
* Total number of goals: 769
* Number of covered goals: 355
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 21%
* Total number of goals: 821
* Number of covered goals: 172
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 57%
* Total number of goals: 14
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 67%
* Total number of goals: 9
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 45%
* Total number of goals: 769
* Number of covered goals: 348
* Generated 147 tests with total length 1737
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 0%
* Compiling and checking tests
[MASTER] 10:32:29.197 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:32:29.201 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:29.202 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter");

[MASTER] 10:32:31.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:31.253 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:33.040 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:33.040 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:35.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:35.829 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:37.722 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:37.722 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("jv");

[MASTER] 10:32:39.441 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:39.441 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

[MASTER] 10:32:41.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:41.328 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:43.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:43.025 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("v");

[MASTER] 10:32:45.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:45.003 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Tracer.logger;
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("v");

[MASTER] 10:32:46.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:46.812 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("KILL");

[MASTER] 10:32:49.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:49.067 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

[MASTER] 10:32:50.768 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:50.769 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

[MASTER] 10:32:52.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:52.536 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:54.289 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:54.289 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

[MASTER] 10:32:56.204 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:56.205 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseSyntheticCode("jv", "jv");

[MASTER] 10:32:58.033 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:58.033 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:32:59.879 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:32:59.879 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("wL");

[MASTER] 10:33:01.628 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:33:01.629 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Compiler compiler0 = new Compiler();
compiler0.parseSyntheticCode("v", "v");

[MASTER] 10:33:03.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:33:03.491 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

[MASTER] 10:33:05.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:33:05.355 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getGlobal();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("C");

[MASTER] 10:33:07.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:33:07.156 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("com.googe.javascript.jcomp.TypeInference$1");

[MASTER] 10:33:08.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: IllegalArgumentException
[MASTER] 10:33:08.938 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Logger logger0 = Logger.getAnonymousLogger();
LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
Compiler compiler0 = new Compiler(loggerErrorManager0);
compiler0.parseTestCode("8");

* Writing tests to file
* Writing JUnit test case 'TypeInference_ESTest' to results/Closure-112/com.google.javascript.jscomp.TypeInference/BBC-F0-opt-10/tests/7
* Done!

* Computation finished
