/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 02 05:46:03 GMT 2021
 */

package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonNull;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializer;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.internal.Excluder;
import com.google.gson.internal.bind.ArrayTypeAdapter;
import com.google.gson.internal.bind.ObjectTypeAdapter;
import com.google.gson.internal.bind.TreeTypeAdapter;
import com.google.gson.internal.bind.TypeAdapters;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import java.io.File;
import java.io.Reader;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.net.InetAddress;
import java.net.URI;
import java.net.URL;
import java.util.BitSet;
import java.util.Calendar;
import java.util.Currency;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicIntegerArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeAdapters_ESTest extends TypeAdapters_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      Gson gson0 = new Gson();
      ObjectTypeAdapter objectTypeAdapter0 = new ObjectTypeAdapter(gson0);
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactoryForMultipleTypes(class0, (Class<? extends Calendar>) class0, (TypeAdapter<? super Calendar>) objectTypeAdapter0);
      assertNotNull(typeAdapterFactory0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Byte> class0 = Byte.TYPE;
      try { 
        gson0.fromJson("JL929AAItbY", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"JL929AAItbY\"
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$9", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<AtomicInteger> class0 = AtomicInteger.class;
      try { 
        gson0.fromJson("co.google.gson.internal.LinkedTreeMap$EntySet$1", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"co.google.gson.internal.LinkedTreeMap$EntySet$1\"
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactory(class0, class0, (TypeAdapter<? super Boolean>) null);
      assertNotNull(typeAdapterFactory0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TypeAdapter<Character> typeAdapter0 = TypeAdapters.CHARACTER;
      Class<Character> class0 = Character.TYPE;
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactory(class0, typeAdapter0);
      assertNotNull(typeAdapterFactory0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gson gson0 = new Gson();
      Character character0 = Character.valueOf('3');
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
      String string0 = gson0.toJson((JsonElement) jsonPrimitive0);
      assertEquals("\"3\"", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      String string0 = gson0.toJson((JsonElement) jsonNull0);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<JsonArray> class0 = JsonArray.class;
      try { 
        gson0.fromJson("[pxzM2K(AVLQ#$)ka", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException: End of input at line 1 column 18 path $[1]
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Gson gson0 = new Gson();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) locale0);
      assertTrue(jsonPrimitive0.isString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JsonSerializer<Calendar> jsonSerializer0 = (JsonSerializer<Calendar>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      doReturn((JsonElement) null).when(jsonSerializer0).serialize(any(java.util.Calendar.class) , any(java.lang.reflect.Type.class) , any(com.google.gson.JsonSerializationContext.class));
      JsonDeserializer<Calendar> jsonDeserializer0 = (JsonDeserializer<Calendar>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      Gson gson0 = new Gson();
      Class<Calendar> class0 = Calendar.class;
      TypeToken<Calendar> typeToken0 = TypeToken.get(class0);
      Excluder excluder0 = gson0.excluder();
      TreeTypeAdapter<Calendar> treeTypeAdapter0 = new TreeTypeAdapter<Calendar>(jsonSerializer0, jsonDeserializer0, gson0, typeToken0, excluder0);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
      JsonElement jsonElement0 = treeTypeAdapter0.toJsonTree(mockGregorianCalendar0);
      assertFalse(jsonElement0.isJsonPrimitive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Gson gson0 = new Gson();
      BitSet bitSet0 = new BitSet();
      JsonArray jsonArray0 = (JsonArray)gson0.toJsonTree((Object) bitSet0);
      Boolean boolean0 = Boolean.TRUE;
      jsonArray0.add(boolean0);
      Class<Character> class0 = Character.class;
      JsonSerializer<Character> jsonSerializer0 = (JsonSerializer<Character>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      JsonDeserializer<Character> jsonDeserializer0 = (JsonDeserializer<Character>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.google.gson.JsonElement.class) , any(java.lang.reflect.Type.class) , any(com.google.gson.JsonDeserializationContext.class));
      TypeToken<Character> typeToken0 = TypeToken.get(class0);
      Excluder excluder0 = Excluder.DEFAULT;
      TreeTypeAdapter<Character> treeTypeAdapter0 = new TreeTypeAdapter<Character>(jsonSerializer0, jsonDeserializer0, gson0, typeToken0, excluder0);
      treeTypeAdapter0.fromJsonTree(jsonArray0);
      assertEquals(1, jsonArray0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("rQVHz");
      Class<JsonObject> class0 = JsonObject.class;
      try { 
        gson0.fromJson((Reader) stringReader0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected a com.google.gson.JsonObject but was com.google.gson.JsonPrimitive
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$35$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Gson gson0 = new Gson();
      Double double0 = new Double(1381.84727);
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
      Class<JsonPrimitive> class0 = JsonPrimitive.class;
      JsonPrimitive jsonPrimitive1 = gson0.fromJson((JsonElement) jsonPrimitive0, class0);
      assertFalse(jsonPrimitive1.isJsonNull());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale> class0 = Locale.class;
      File file0 = MockFile.createTempFile("Wwj!w)~qw?Z6Wb}@+;", "Wwj!w)~qw?Z6Wb}@+;");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0, true);
      gson0.toJson((Object) null, (Type) class0, (Appendable) mockFileWriter0);
      assertTrue(gson0.htmlSafe());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale> class0 = Locale.class;
      Locale locale0 = gson0.fromJson("fr_CA", class0);
      assertEquals("fr_CA", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale> class0 = Locale.class;
      Locale locale0 = gson0.fromJson("_NkXz<I8Ic*", class0);
      assertEquals("nkxz<i8ic*", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Locale> class0 = Locale.class;
      Locale locale0 = gson0.fromJson("null", class0);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      Gson gson0 = new Gson();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"Expecting character, got: \"");
      gson0.toJson((Object) null, (Type) class0, (Appendable) mockPrintStream0);
      assertTrue(gson0.htmlSafe());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      Gson gson0 = new Gson();
      MockFile mockFile0 = new MockFile("Expecting character, got: ", "5dQ8.Gw1AIp");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(6, 6, 6);
      gson0.toJson((Object) mockGregorianCalendar0, (Type) class0, (Appendable) mockFileWriter0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=-61961932800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=6,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=187,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      Gson gson0 = new Gson();
      JsonNull jsonNull0 = gson0.fromJson("null", (Type) class0);
      assertNull(jsonNull0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<GregorianCalendar> class0 = GregorianCalendar.class;
      try { 
        gson0.fromJson("key == null", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected BEGIN_OBJECT but was STRING at line 1 column 1 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Gson gson0 = new Gson();
      UUID uUID0 = MockUUID.fromString("vXMujy7d</|");
      JsonElement jsonElement0 = gson0.toJsonTree((Object) uUID0);
      assertFalse(jsonElement0.isJsonObject());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("null");
      Class<UUID> class0 = UUID.class;
      UUID uUID0 = gson0.fromJson((Reader) stringReader0, class0);
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("7G~2f,IB@b{ OptBh");
      Class<UUID> class0 = UUID.class;
      try { 
        gson0.fromJson((Reader) stringReader0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 7 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<InetAddress> class0 = InetAddress.class;
      TypeToken<InetAddress> typeToken0 = TypeToken.get(class0);
      Class<? super InetAddress> class1 = typeToken0.getRawType();
      JsonElement jsonElement0 = gson0.toJsonTree((Object) null, (Type) class1);
      assertTrue(jsonElement0.isJsonNull());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Gson gson0 = new Gson();
      InetAddress inetAddress0 = MockInetAddress.getByName("vXMujy7d</|");
      JsonElement jsonElement0 = gson0.toJsonTree((Object) inetAddress0);
      assertFalse(jsonElement0.isJsonArray());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<InetAddress> class0 = InetAddress.class;
      TypeToken<InetAddress> typeToken0 = TypeToken.get(class0);
      Class<? super InetAddress> class1 = typeToken0.getRawType();
      Currency currency0 = gson0.fromJson("null", (Type) class1);
      assertNull(currency0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<InetAddress> class0 = InetAddress.class;
      TypeToken<InetAddress> typeToken0 = TypeToken.get(class0);
      Class<? super InetAddress> class1 = typeToken0.getRawType();
      try { 
        gson0.fromJson("T/4a%:cc4+Z\",i=x:w", (Type) class1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Gson gson0 = new Gson();
      URI uRI0 = MockURI.aFTPURI;
      JsonElement jsonElement0 = gson0.toJsonTree((Object) uRI0);
      assertFalse(jsonElement0.isJsonArray());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonElement jsonElement0 = gson0.toJsonTree((Object) null);
      Class<URI> class0 = URI.class;
      URI uRI0 = gson0.fromJson(jsonElement0, class0);
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Gson gson0 = new Gson();
      Character character0 = new Character('%');
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
      Class<URI> class0 = URI.class;
      // Undeclared exception!
      try { 
        gson0.fromJson((JsonElement) jsonPrimitive0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.URISyntaxException: Malformed escape pair at index 0: %
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$23", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Gson gson0 = new Gson();
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) uRL0);
      assertTrue(jsonPrimitive0.isString());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<URL> class0 = URL.class;
      try { 
        gson0.fromJson("com.google.gson.internal.bind.TypeAdapters$35$1", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.MalformedURLException: no protocol: com.google.gson.internal.bind.TypeAdapters$35$1
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Gson gson0 = new Gson();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = gson0.toJson((Object) stringBuffer0);
      assertEquals("\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Class<StringBuffer> class0 = StringBuffer.class;
      Gson gson0 = new Gson();
      StringBuffer stringBuffer0 = gson0.fromJson("null", class0);
      assertNull(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<StringBuffer> class0 = StringBuffer.class;
      try { 
        gson0.fromJson("JsonReader is closed", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 13 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Gson gson0 = new Gson();
      StringBuilder stringBuilder0 = new StringBuilder();
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) stringBuilder0);
      assertTrue(jsonPrimitive0.isString());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<StringBuilder> class0 = StringBuilder.class;
      StringBuilder stringBuilder0 = gson0.fromJson("null", class0);
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<StringBuilder> class0 = StringBuilder.class;
      StringBuilder stringBuilder0 = gson0.fromJson("com.google.gson.FieldAttributes", class0);
      assertEquals("com.google.gson.FieldAttributes", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<String> class0 = String.class;
      JsonArray jsonArray0 = new JsonArray();
      try { 
        gson0.fromJson((JsonElement) jsonArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected STRING but was BEGIN_ARRAY at path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      Class<String> class0 = String.class;
      String string0 = gson0.fromJson((JsonElement) jsonNull0, class0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Gson gson0 = new Gson();
      Boolean boolean0 = Boolean.valueOf("");
      JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
      Class<String> class0 = String.class;
      String string0 = gson0.fromJson((JsonElement) jsonPrimitive0, class0);
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Character> class0 = Character.TYPE;
      String string0 = gson0.toJson((Object) null, (Type) class0);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Gson gson0 = new Gson();
      Character character0 = new Character('o');
      JsonElement jsonElement0 = gson0.toJsonTree((Object) character0);
      assertFalse(jsonElement0.isJsonObject());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("c");
      Class<Character> class0 = Character.class;
      Character character0 = gson0.fromJson((Reader) stringReader0, class0);
      assertEquals('c', (char)character0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("null");
      JsonReader jsonReader0 = gson0.newJsonReader(stringReader0);
      Class<Character> class0 = Character.TYPE;
      StringBuilder stringBuilder0 = gson0.fromJson(jsonReader0, (Type) class0);
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("pM( )eT~yw#t:gx3D");
      JsonReader jsonReader0 = gson0.newJsonReader(stringReader0);
      Class<Character> class0 = Character.TYPE;
      try { 
        gson0.fromJson(jsonReader0, (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expecting character, got: pM(
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$16", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonElement jsonElement0 = gson0.toJsonTree((Object) null);
      Class<Long> class0 = Long.class;
      Long long0 = gson0.fromJson(jsonElement0, class0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Gson gson0 = new Gson();
      StringReader stringReader0 = new StringReader("txI8TK]");
      Class<Long> class0 = Long.class;
      try { 
        gson0.fromJson((Reader) stringReader0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"txI8TK\"
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$12", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Gson gson0 = new Gson();
      AtomicIntegerArray atomicIntegerArray0 = new AtomicIntegerArray(2423);
      JsonElement jsonElement0 = gson0.toJsonTree((Object) atomicIntegerArray0);
      // Undeclared exception!
      try { 
        jsonElement0.getAsJsonObject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: [java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453,java.lang.Long@0000002453]
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonArray jsonArray0 = new JsonArray();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      jsonArray0.add((JsonElement) jsonNull0);
      Class<AtomicIntegerArray> class0 = AtomicIntegerArray.class;
      try { 
        gson0.fromJson((JsonElement) jsonArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected NUMBER but was NULL at path $[0]
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonArray jsonArray0 = new JsonArray();
      Class<AtomicIntegerArray> class0 = AtomicIntegerArray.class;
      AtomicIntegerArray atomicIntegerArray0 = gson0.fromJson((JsonElement) jsonArray0, class0);
      assertEquals(0, atomicIntegerArray0.length());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Integer> class0 = Integer.TYPE;
      Integer integer0 = gson0.fromJson("null", class0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Integer> class0 = Integer.class;
      try { 
        gson0.fromJson("com.google.gson.JsonPrimitive", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"com.google.gson.JsonPrimitive\"
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$11", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Short> class0 = Short.TYPE;
      Short short0 = gson0.fromJson("null", class0);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Short> class0 = Short.class;
      try { 
        gson0.fromJson("oO", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NumberFormatException: For input string: \"oO\"
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$10", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      Class<Byte> class0 = Byte.class;
      TypeToken<Byte> typeToken0 = TypeToken.get(class0);
      Type type0 = typeToken0.getType();
      URL uRL0 = gson0.fromJson((JsonElement) jsonNull0, type0);
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Byte> class0 = Byte.TYPE;
      try { 
        gson0.fromJson("7;[la!6cY3{!@}jx", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Boolean> class0 = Boolean.TYPE;
      try { 
        gson0.fromJson("5", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected a boolean but was NUMBER at line 1 column 2 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Boolean> class0 = Boolean.TYPE;
      try { 
        gson0.fromJson("`QCl}`+,Tw^n`", (Type) class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 6 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Gson gson0 = new Gson();
      BitSet bitSet0 = new BitSet(10);
      bitSet0.flip(10);
      JsonArray jsonArray0 = (JsonArray)gson0.toJsonTree((Object) bitSet0);
      assertEquals(11, jsonArray0.size());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonArray jsonArray0 = new JsonArray();
      Boolean boolean0 = new Boolean("3EJY0)@S%&|E<Y");
      jsonArray0.add(boolean0);
      Class<BitSet> class0 = BitSet.class;
      BitSet bitSet0 = gson0.fromJson((JsonElement) jsonArray0, class0);
      assertEquals(0, bitSet0.cardinality());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonArray jsonArray0 = new JsonArray();
      jsonArray0.add((Boolean) null);
      Class<BitSet> class0 = BitSet.class;
      try { 
        gson0.fromJson((JsonElement) jsonArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid bitset value type: NULL
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$6", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Gson gson0 = new Gson();
      BitSet bitSet0 = new BitSet();
      JsonArray jsonArray0 = (JsonArray)gson0.toJsonTree((Object) bitSet0);
      jsonArray0.add("hh:mm:ss a");
      Class<BitSet> class0 = BitSet.class;
      try { 
        gson0.fromJson((JsonElement) jsonArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error: Expecting: bitset number value (1, 0), Found: hh:mm:ss a
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$6", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Gson gson0 = new Gson();
      BitSet bitSet0 = new BitSet();
      JsonArray jsonArray0 = (JsonArray)gson0.toJsonTree((Object) bitSet0);
      Byte byte0 = new Byte((byte)9);
      jsonArray0.add((Number) byte0);
      Class<BitSet> class0 = BitSet.class;
      BitSet bitSet1 = gson0.fromJson((JsonElement) jsonArray0, class0);
      assertEquals(1, jsonArray0.size());
      assertEquals("{0}", bitSet1.toString());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonNull jsonNull0 = JsonNull.INSTANCE;
      Class<BitSet> class0 = BitSet.class;
      BitSet bitSet0 = gson0.fromJson((JsonElement) jsonNull0, class0);
      assertNull(bitSet0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      Gson gson0 = new Gson();
      // Undeclared exception!
      try { 
        gson0.toJsonTree((Object) class0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Attempted to serialize java.lang.Class: java.util.Calendar. Forgot to register a type adapter?
         //
         verifyException("com.google.gson.internal.bind.TypeAdapters$5", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<Currency> class0 = Currency.class;
      // Undeclared exception!
      try { 
        gson0.fromJson("com.google.gson.internal.bind.TypeAdapters$34", class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Currency", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Gson gson0 = new Gson();
      Locale locale0 = Locale.PRC;
      Currency currency0 = Currency.getInstance(locale0);
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) currency0);
      assertTrue(jsonPrimitive0.isString());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Gson gson0 = new Gson();
      AtomicInteger atomicInteger0 = new AtomicInteger((-1957));
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) atomicInteger0);
      assertTrue(jsonPrimitive0.isNumber());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Gson gson0 = new Gson();
      AtomicBoolean atomicBoolean0 = new AtomicBoolean();
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) atomicBoolean0);
      assertFalse(jsonPrimitive0.isNumber());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Gson gson0 = new Gson();
      Class<AtomicBoolean> class0 = AtomicBoolean.class;
      try { 
        gson0.fromJson("com.google.gson.Gson$2", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Expected a boolean but was STRING at line 1 column 1 path $
         //
         verifyException("com.google.gson.Gson", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Gson gson0 = new Gson();
      Byte byte0 = new Byte((byte) (-15));
      JsonPrimitive jsonPrimitive0 = (JsonPrimitive)gson0.toJsonTree((Object) byte0);
      assertFalse(jsonPrimitive0.isBoolean());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Gson gson0 = new Gson();
      JsonElement jsonElement0 = gson0.toJsonTree((Object) gson0);
      JsonElement jsonElement1 = gson0.toJsonTree((Object) jsonElement0);
      assertTrue(jsonElement1.equals((Object)jsonElement0));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Gson gson0 = new Gson();
      Short short0 = new Short((short)2);
      JsonElement jsonElement0 = gson0.toJsonTree((Object) short0);
      assertFalse(jsonElement0.isJsonNull());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactory((TypeToken<Long>) null, (TypeAdapter<Long>) null);
      assertNotNull(typeAdapterFactory0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Gson gson0 = new Gson();
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.BYTE_FACTORY;
      Class<JsonPrimitive> class0 = JsonPrimitive.class;
      TypeToken<JsonPrimitive> typeToken0 = TypeToken.get(class0);
      TypeAdapter<JsonPrimitive> typeAdapter0 = gson0.getDelegateAdapter(typeAdapterFactory0, typeToken0);
      ArrayTypeAdapter<JsonPrimitive> arrayTypeAdapter0 = new ArrayTypeAdapter<JsonPrimitive>(gson0, typeAdapter0, class0);
      Class<InetAddress> class1 = InetAddress.class;
      JsonSerializer<InetAddress> jsonSerializer0 = (JsonSerializer<InetAddress>) mock(JsonSerializer.class, new ViolatedAssumptionAnswer());
      JsonDeserializer<InetAddress> jsonDeserializer0 = (JsonDeserializer<InetAddress>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
      TypeToken<InetAddress> typeToken1 = TypeToken.get(class1);
      TreeTypeAdapter<InetAddress> treeTypeAdapter0 = new TreeTypeAdapter<InetAddress>(jsonSerializer0, jsonDeserializer0, gson0, typeToken1, arrayTypeAdapter0.FACTORY);
      TypeAdapterFactory typeAdapterFactory1 = TypeAdapters.newTypeHierarchyFactory(class1, (TypeAdapter<InetAddress>) treeTypeAdapter0);
      assertFalse(typeAdapterFactory1.equals((Object)typeAdapterFactory0));
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Class<Calendar> class0 = Calendar.class;
      TypeAdapter<Calendar> typeAdapter0 = TypeAdapters.CALENDAR;
      Class<GregorianCalendar> class1 = GregorianCalendar.class;
      TypeAdapterFactory typeAdapterFactory0 = TypeAdapters.newFactoryForMultipleTypes(class0, (Class<? extends Calendar>) class1, (TypeAdapter<? super Calendar>) typeAdapter0);
      assertNotNull(typeAdapterFactory0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Gson gson0 = new Gson();
      String string0 = gson0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Gson gson0 = new Gson();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1841, 1841, 1841);
      gson0.toJsonTree((Object) mockGregorianCalendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=1841,MONTH=1841,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=1841,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]", mockGregorianCalendar0.toString());
  }
}
