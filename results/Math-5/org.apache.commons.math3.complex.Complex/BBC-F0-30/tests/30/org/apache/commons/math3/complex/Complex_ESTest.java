/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 19:27:40 GMT 2021
 */

package org.apache.commons.math3.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Complex_ESTest extends Complex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2231.35492));
      complex0.atan();
      Complex complex1 = Complex.valueOf((-5.810785547532491E209));
      complex1.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = complex0.INF.sqrt1z();
      Complex complex2 = complex0.reciprocal();
      complex2.nthRoot(3569);
      Complex complex3 = complex2.atan();
      complex2.nthRoot(137);
      complex1.INF.divide(0.999999598308541);
      Complex complex4 = complex1.cosh();
      Complex complex5 = complex1.add(Double.NaN);
      Complex complex6 = complex1.tan();
      Complex complex7 = complex6.sin();
      complex6.ONE.subtract((double) 3569);
      Complex complex8 = complex3.tanh();
      Complex complex9 = complex0.sinh();
      Complex complex10 = complex7.add(0.999999598308541);
      complex10.INF.nthRoot(137);
      Complex complex11 = complex7.tanh();
      complex11.sqrt();
      complex8.readResolve();
      complex9.sqrt1z();
      complex9.multiply(complex5);
      complex4.sinh();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Complex complex0 = Complex.valueOf(285.77535966, Double.POSITIVE_INFINITY);
      Complex complex1 = new Complex(0.4033359894180144, Double.POSITIVE_INFINITY);
      Complex complex2 = complex0.multiply(complex1);
      complex2.INF.readResolve();
      Complex complex3 = complex2.reciprocal();
      complex3.NaN.conjugate();
      complex0.getField();
      complex1.cos();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      complex0.toString();
      complex0.acos();
      Complex complex1 = Complex.valueOf((-1.287101187097E-312), 20.0);
      complex1.tan();
      complex1.atan();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Complex complex0 = Complex.valueOf(3635.3435);
      Complex complex1 = complex0.multiply(0);
      complex0.acos();
      Complex complex2 = Complex.INF;
      complex2.tan();
      Complex complex3 = Complex.ZERO;
      complex3.readResolve();
      complex1.asin();
      Complex complex4 = complex3.add((double) 0);
      complex4.multiply(complex2);
      try { 
        complex4.nthRoot((-569));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -569
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.ONE;
      complex1.add(Double.NaN);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.multiply(Double.POSITIVE_INFINITY);
      complex1.readResolve();
      Complex complex2 = complex0.divide(complex1);
      Complex complex3 = Complex.valueOf((-2551.7), Double.POSITIVE_INFINITY);
      Complex complex4 = complex3.tanh();
      complex3.I.tan();
      Complex complex5 = complex1.atan();
      Complex complex6 = complex3.add((-604.2728251807));
      Object object0 = new Object();
      complex4.equals(object0);
      Complex complex7 = complex3.sin();
      Complex complex8 = complex2.tan();
      Complex complex9 = complex2.divide(complex1);
      complex3.pow(complex0);
      complex9.sqrt();
      complex6.reciprocal();
      complex4.readResolve();
      complex3.readResolve();
      Complex complex10 = complex5.multiply(complex0);
      complex7.log();
      Complex complex11 = complex5.exp();
      complex3.multiply(2322.03);
      complex6.add(complex8);
      complex6.nthRoot(17);
      complex11.sqrt();
      complex10.multiply(1175);
      Complex.valueOf(40.0);
      complex4.tanh();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Complex.valueOf(2963.4017);
      Complex.valueOf(2.0, 2.0);
      Complex complex0 = Complex.valueOf(20.0);
      complex0.tanh();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Complex complex0 = Complex.valueOf(35.7779399728, (-3431.3260686406106));
      Complex complex1 = complex0.ONE.tan();
      Complex complex2 = complex1.INF.log();
      Complex complex3 = complex0.multiply(4978);
      Complex complex4 = complex0.NaN.conjugate();
      Complex complex5 = complex3.I.pow(complex0);
      Complex complex6 = (Complex)complex0.NaN.readResolve();
      Complex complex7 = complex0.multiply(4978);
      Complex complex8 = complex7.NaN.acos();
      complex8.ONE.getField();
      complex0.INF.sqrt();
      Complex complex9 = complex5.conjugate();
      Complex complex10 = complex9.divide(complex3);
      complex0.reciprocal();
      Complex complex11 = complex2.multiply((-3431.3260686406106));
      Complex complex12 = complex11.NaN.asin();
      Complex complex13 = complex10.INF.atan();
      Complex complex14 = complex12.ONE.sqrt1z();
      complex2.INF.subtract(complex6);
      complex9.ZERO.conjugate();
      complex14.I.divide(complex13);
      complex3.INF.negate();
      Complex complex15 = complex4.sin();
      complex15.divide((-3431.3260686406106));
      complex15.INF.toString();
      complex11.NaN.createComplex(4978, (-3431.3260686406106));
      complex10.pow((-1.5707963267948966));
      complex10.divide((-1.5707963267948966));
      complex11.add((-1.5707963267948966));
      complex2.exp();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.ONE.add(complex1);
      double double0 = 20.0;
      Complex complex3 = complex2.I.add(20.0);
      complex0.INF.getArgument();
      Complex complex4 = complex0.sqrt1z();
      complex4.I.log();
      complex4.INF.toString();
      complex3.I.pow((-1624.446161));
      try { 
        complex1.INF.subtract((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.valueOf(Double.POSITIVE_INFINITY, (-20.0));
      Complex complex2 = Complex.valueOf((-20.0), (-20.0));
      Complex complex3 = Complex.I;
      Complex complex4 = complex2.multiply(complex3);
      complex1.acos();
      complex2.isNaN();
      Complex complex5 = complex4.tan();
      complex5.subtract((-550.0));
      complex0.conjugate();
      Complex complex6 = Complex.valueOf((-20.0), (-550.0));
      complex3.cos();
      complex6.negate();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.valueOf((-20.0));
      complex0.exp();
      Complex complex2 = complex1.atan();
      Complex complex3 = Complex.INF;
      complex3.multiply(0.5438674688339233);
      Complex complex4 = complex1.tanh();
      complex3.atan();
      Complex.valueOf(0.5438674688339233);
      Complex complex5 = complex1.tanh();
      complex4.asin();
      complex2.tan();
      Complex complex6 = Complex.ONE;
      complex5.pow(complex4);
      complex4.getField();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Complex complex0 = Complex.valueOf(Double.POSITIVE_INFINITY);
      complex0.isInfinite();
      complex0.ZERO.readResolve();
      Complex complex1 = Complex.valueOf((-1983.414845875104));
      complex0.ONE.subtract(complex1);
      complex0.multiply(1499);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Complex complex0 = Complex.valueOf(2963.4017);
      Complex complex1 = complex0.exp();
      Complex complex2 = complex1.atan();
      Complex complex3 = complex2.multiply(5.162248481759758E164);
      Complex complex4 = complex2.tanh();
      complex4.atan();
      Complex.valueOf((-2030.749448));
      complex1.tanh();
      Complex complex5 = Complex.valueOf(5.162248481759758E164, 3.8331545111676784E-249);
      Complex complex6 = complex5.asin();
      complex3.tan();
      Complex complex7 = Complex.ONE;
      complex1.pow(complex6);
      complex1.getField();
      complex0.cosh();
      complex4.tanh();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1131.9, 2.4318976402282715);
      complex0.abs();
      Complex complex1 = complex0.cosh();
      complex1.multiply(2.4318976402282715);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1.1800039972549816E259), (-1.1800039972549816E259));
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.ZERO.add(complex1);
      complex0.nthRoot(426);
      Complex complex3 = complex0.multiply(426);
      Complex complex4 = complex3.ONE.multiply(426);
      complex1.I.readResolve();
      Complex complex5 = complex2.sqrt();
      complex2.ZERO.multiply((-1.0));
      Complex complex6 = complex0.I.exp();
      Complex complex7 = complex5.I.exp();
      complex5.I.log();
      Complex complex8 = complex7.NaN.cosh();
      Complex complex9 = complex1.sin();
      complex8.abs();
      complex1.toString();
      complex7.INF.pow(2737.7911);
      Complex complex10 = complex9.asin();
      complex10.sqrt1z();
      complex8.NaN.acos();
      complex7.readResolve();
      Complex complex11 = complex3.multiply(Double.NaN);
      complex11.exp();
      complex8.reciprocal();
      complex1.I.log();
      complex3.ZERO.tanh();
      complex2.sinh();
      complex0.multiply(complex10);
      complex4.reciprocal();
      complex6.subtract(2139.9140910762353);
      Complex.valueOf((-2073.26412), 1134.9051993629216);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.valueOf((double) (-2932), Double.POSITIVE_INFINITY);
      complex1.multiply((-4546));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Complex complex0 = new Complex(1.101130773265179E-192);
      Complex complex1 = complex0.NaN.cos();
      Complex complex2 = complex1.ONE.multiply(662);
      Complex complex3 = complex0.ONE.pow(1.101130773265179E-192);
      Complex complex4 = complex0.atan();
      complex4.ZERO.nthRoot(662);
      complex4.ONE.hashCode();
      Complex complex5 = complex4.acos();
      complex1.ZERO.getArgument();
      complex5.INF.acos();
      Complex complex6 = complex3.I.divide(complex4);
      complex2.INF.abs();
      Complex complex7 = complex3.multiply((-400));
      Complex complex8 = complex7.ZERO.sqrt1z();
      complex8.ZERO.divide(complex2);
      complex1.abs();
      complex7.exp();
      Complex complex9 = Complex.valueOf(3918.301878778);
      complex9.ONE.abs();
      complex3.add(complex5);
      Complex complex10 = Complex.valueOf((-20.0));
      complex10.INF.multiply(complex6);
      complex9.pow(4433.777774458701);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.I.exp();
      Complex complex2 = complex0.atan();
      Complex complex3 = complex0.I.multiply(3.8331545111676784E-249);
      complex0.readResolve();
      Complex complex4 = complex1.I.tanh();
      complex2.ONE.atan();
      complex0.equals(complex2);
      Complex complex5 = complex3.sin();
      complex0.acos();
      Object object0 = complex5.readResolve();
      complex4.equals(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Complex complex0 = new Complex(6.283185307179586);
      Complex complex1 = complex0.pow(6.283185307179586);
      complex0.NaN.getField();
      Complex complex2 = complex0.NaN.multiply(6.283185307179586);
      Complex complex3 = complex0.subtract((-612.02));
      Complex complex4 = complex1.divide(44099.0);
      Complex complex5 = complex1.cos();
      Complex complex6 = complex4.sin();
      Complex complex7 = complex1.subtract(complex4);
      complex7.I.acos();
      Complex complex8 = complex6.pow((-244.49108823));
      complex8.acos();
      Complex complex9 = Complex.valueOf(4840.88270870811, (-20.0));
      complex9.divide(655.9931);
      complex5.multiply(3209);
      complex3.reciprocal();
      complex8.add(complex2);
      complex0.equals("");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.atan();
      Complex complex2 = Complex.valueOf((-1111.2989418962854), 5.8759898326913254E166);
      complex1.readResolve();
      Complex complex3 = complex2.divide(complex1);
      Complex complex4 = new Complex(20.0);
      Complex.valueOf((-2233.139317098558), 20.0);
      Complex complex5 = complex2.tan();
      complex4.multiply(578);
      Complex complex6 = complex5.add(complex3);
      complex6.conjugate();
      complex2.tan();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Complex complex0 = new Complex(210.0, 210.0);
      Complex complex1 = new Complex((-20.0), 0.0);
      complex0.multiply(complex1);
      complex0.exp();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.INF;
      complex0.divide(complex1);
      complex1.tanh();
      Complex.valueOf(3645.62769041812, Double.NaN);
      Complex complex2 = complex0.tan();
      complex2.multiply((-343));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Complex complex0 = Complex.I;
      Complex complex1 = new Complex(Double.NaN, (-2372.9310044856));
      complex1.ZERO.hashCode();
      Complex complex2 = new Complex(Double.NaN, (-2372.9310044856));
      complex2.multiply(complex1);
      complex2.exp();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Complex complex0 = new Complex(210.0, 210.0);
      Complex complex1 = new Complex(210.0, 210.0);
      Complex complex2 = complex0.I.multiply(complex1);
      complex2.ONE.exp();
      complex0.reciprocal();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Complex complex0 = new Complex((-1515.87510991033), 3468.882741756);
      Complex complex1 = new Complex(Double.POSITIVE_INFINITY, (-1764.59859715425));
      Complex complex2 = complex0.multiply(complex1);
      complex2.NaN.negate();
      complex2.NaN.toString();
      Complex complex3 = Complex.valueOf(Double.POSITIVE_INFINITY, (-1515.87510991033));
      complex0.readResolve();
      Complex.valueOf(2924.2464163771, 2924.2464163771);
      complex0.readResolve();
      complex0.getField();
      complex3.getField();
      complex1.asin();
      complex3.divide(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.INF.tanh();
      complex0.I.exp();
      Complex complex2 = complex0.ZERO.conjugate();
      Complex complex3 = complex2.atan();
      Complex complex4 = complex2.I.multiply(3.8331545111676784E-249);
      complex0.readResolve();
      Complex complex5 = complex0.NaN.divide(complex4);
      Complex complex6 = complex5.I.tanh();
      complex3.ONE.atan();
      complex3.abs();
      complex1.equals(complex3);
      complex4.sin();
      Object object0 = new Object();
      Complex complex7 = new Complex((-2216.889), Double.NaN);
      complex7.equals(complex0);
      Complex complex8 = new Complex((-2216.889));
      complex2.divide(Double.NaN);
      complex6.cos();
      Complex.valueOf(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Complex complex0 = Complex.valueOf(4518.092901237322);
      Object object0 = new Object();
      Complex complex1 = complex0.pow((-105.18227560202));
      complex1.multiply((-2057));
      try { 
        complex0.nthRoot((-2057));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,057
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.acos();
      complex0.INF.exp();
      Complex.valueOf((-3709.19), (-3709.19));
      Complex complex2 = Complex.valueOf((-987.128228056), (-987.128228056));
      Complex complex3 = complex2.ONE.sinh();
      Complex complex4 = complex2.I.add(complex1);
      Complex complex5 = complex1.divide((-987.128228056));
      Complex complex6 = complex5.exp();
      complex0.tanh();
      Complex complex7 = complex3.sqrt1z();
      complex5.I.toString();
      Complex complex8 = complex6.createComplex(4.3239378585884645E70, 4.3239378585884645E70);
      complex8.INF.getArgument();
      Complex complex9 = Complex.valueOf(8.237817372646808E-15, 8.237817372646808E-15);
      complex4.subtract(complex9);
      Complex complex10 = complex8.atan();
      complex10.negate();
      complex7.pow((-3709.19));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Complex complex0 = new Complex(2469.971089909926, 2469.971089909926);
      complex0.abs();
      complex0.readResolve();
      Complex complex1 = Complex.ZERO;
      Complex complex2 = complex0.divide(complex1);
      complex2.subtract(complex0);
      Complex complex3 = complex0.multiply(2139054720);
      Complex complex4 = complex2.sin();
      Complex complex5 = complex4.acos();
      complex0.I.hashCode();
      complex5.isInfinite();
      Complex complex6 = complex0.NaN.add((double) 2139054720);
      complex6.ONE.pow(complex5);
      complex3.readResolve();
      complex5.pow(complex0);
      complex2.add((-4.8293856891818295E-8));
      Complex complex7 = complex4.acos();
      Complex complex8 = complex7.cosh();
      complex5.sin();
      complex0.I.abs();
      complex3.add((double) 2139054720);
      Complex complex9 = complex2.cos();
      complex2.multiply((-1074113828));
      complex9.toString();
      complex3.equals(complex8);
      complex9.createComplex((-2182.4070317), Double.POSITIVE_INFINITY);
      complex4.conjugate();
      complex2.add(2065.434370063041);
      complex9.sinh();
      complex9.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1.3548568223001414E-8), 1812.658932808);
      Complex complex1 = Complex.valueOf(2.266777992248535);
      complex1.NaN.negate();
      Complex complex2 = complex0.conjugate();
      complex0.getImaginary();
      complex0.NaN.getField();
      complex0.toString();
      Complex complex3 = complex0.ONE.asin();
      Complex complex4 = complex0.subtract((-2065.43437007659));
      Complex complex5 = complex4.add((-1344.2));
      Complex complex6 = complex2.ZERO.multiply(complex4);
      complex6.I.getArgument();
      Complex complex7 = complex6.INF.divide(complex5);
      complex7.INF.createComplex((-3839.7529173141947), 3216.9045673970118);
      Complex complex8 = complex5.I.sqrt();
      complex2.getImaginary();
      complex4.INF.pow((-232.4));
      Complex complex9 = complex4.log();
      complex9.INF.sin();
      Complex complex10 = complex4.atan();
      complex9.createComplex((-1812.658932808), (-1812.658932808));
      complex10.INF.subtract(Double.POSITIVE_INFINITY);
      complex2.atan();
      complex3.toString();
      complex8.getField();
      complex10.createComplex(2.266777992248535, 4427044.775821);
      Complex.valueOf(1812.658932808, 0.0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Complex complex0 = new Complex((-1515.87510991033), 3468.882741756);
      complex0.ZERO.cos();
      Complex complex1 = new Complex(3216.9045673970118, 3216.9045673970118);
      complex1.pow(Double.POSITIVE_INFINITY);
      complex0.hashCode();
      Complex complex2 = complex0.asin();
      Object object0 = new Object();
      complex2.INF.acos();
      complex2.NaN.sqrt1z();
      complex1.equals(complex0);
      complex2.divide(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      complex0.hashCode();
      Object object0 = new Object();
      complex0.equals(complex0);
      complex0.divide(919.788);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.INF.tanh();
      Complex complex2 = complex0.I.exp();
      Complex complex3 = complex0.ZERO.conjugate();
      Complex complex4 = complex3.atan();
      Complex complex5 = complex0.multiply((-2216.889));
      complex5.readResolve();
      Complex complex6 = complex1.divide(complex0);
      Complex complex7 = complex3.tanh();
      Complex complex8 = complex3.atan();
      complex5.abs();
      Object object0 = complex6.readResolve();
      complex7.equals(object0);
      complex2.sin();
      Complex complex9 = complex0.subtract(68.652116);
      Complex complex10 = new Complex((-2045.937084));
      complex8.getField();
      Complex complex11 = new Complex(6.076014540574561E-209, (-2216.889));
      complex11.acos();
      complex4.toString();
      complex10.isNaN();
      complex9.reciprocal();
      Complex complex12 = Complex.ZERO;
      complex6.pow(complex9);
      Complex complex13 = complex4.sqrt();
      complex13.ZERO.cos();
      complex3.sqrt();
      complex8.sqrt();
      complex4.add((-2045.937084));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = complex0.I.atan();
      Complex complex2 = complex1.ONE.pow(complex0);
      Complex complex3 = Complex.valueOf(1913.05);
      complex3.ZERO.nthRoot(352);
      Complex complex4 = complex0.conjugate();
      Complex complex5 = complex4.subtract(complex2);
      complex5.ONE.sinh();
      Complex complex6 = complex2.sin();
      complex6.NaN.multiply(529.41788489);
      Complex complex7 = complex6.add(1.0074984709952582E-234);
      complex7.NaN.log();
      Complex complex8 = complex2.INF.acos();
      Complex complex9 = complex0.atan();
      complex6.negate();
      complex0.sqrt1z();
      complex8.atan();
      complex9.atan();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Complex complex0 = Complex.valueOf(35.7779399728, (-3431.3260686406106));
      Complex complex1 = complex0.ONE.tan();
      Complex complex2 = complex1.INF.log();
      Complex complex3 = complex0.multiply(4978);
      Complex complex4 = complex0.NaN.conjugate();
      Complex complex5 = complex3.I.pow(complex0);
      complex0.NaN.readResolve();
      Complex complex6 = complex0.multiply(4978);
      Complex complex7 = complex6.NaN.acos();
      complex7.ONE.getField();
      complex0.INF.sqrt();
      Complex complex8 = complex5.conjugate();
      Complex complex9 = complex8.divide(complex3);
      complex0.reciprocal();
      Complex complex10 = complex2.multiply((-3431.3260686406106));
      Complex complex11 = complex10.NaN.asin();
      Complex complex12 = complex9.INF.atan();
      Complex complex13 = complex11.ONE.sqrt1z();
      complex8.ZERO.conjugate();
      complex13.I.divide(complex12);
      complex3.INF.negate();
      Complex complex14 = complex4.sin();
      complex14.divide((-3431.3260686406106));
      complex14.INF.toString();
      complex10.NaN.createComplex(4978, (-3431.3260686406106));
      complex9.pow((-1.5707963267948966));
      complex9.divide((-1.5707963267948966));
      complex10.add((-1.5707963267948966));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Complex complex0 = Complex.INF;
      Complex complex1 = Complex.INF;
      complex0.divide(complex1);
      Complex complex2 = new Complex(1094.12235);
      complex2.subtract(1094.12235);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      Complex complex1 = Complex.valueOf((-1.0074984709952582E-234));
      Complex complex2 = complex0.tanh();
      Complex complex3 = Complex.INF;
      Complex complex4 = Complex.ZERO;
      Complex complex5 = complex1.atan();
      Complex complex6 = complex2.multiply(Double.POSITIVE_INFINITY);
      complex3.readResolve();
      complex6.divide(complex4);
      complex5.tanh();
      Complex complex7 = Complex.valueOf(Double.POSITIVE_INFINITY, 0.0);
      complex7.ONE.tan();
      complex7.atan();
      complex4.abs();
      complex5.equals(complex6);
      complex1.reciprocal();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.INF.tanh();
      complex0.I.exp();
      Complex complex2 = complex0.ZERO.conjugate();
      Complex complex3 = complex2.atan();
      Complex complex4 = complex2.I.multiply(3.8331545111676784E-249);
      Complex complex5 = (Complex)complex0.readResolve();
      Complex complex6 = complex0.NaN.divide(complex4);
      complex6.I.tanh();
      complex3.ONE.atan();
      complex3.abs();
      complex1.equals(complex3);
      Complex complex7 = complex4.sin();
      Complex complex8 = complex7.ZERO.tan();
      Complex complex9 = complex3.divide(complex7);
      Complex complex10 = complex9.NaN.subtract(0.0);
      Complex complex11 = complex2.pow(complex8);
      Complex complex12 = (Complex)complex11.readResolve();
      complex10.add(complex1);
      complex6.sin();
      complex2.isNaN();
      Complex complex13 = Complex.ONE;
      complex13.reciprocal();
      Complex complex14 = Complex.ZERO;
      Complex.valueOf((-2187.7128364187), (-314.9918));
      Complex complex15 = new Complex((-35.7779399728), (-314.9918));
      complex15.pow(complex5);
      complex12.sqrt();
      complex11.sqrt();
      complex13.add(0.0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Complex complex0 = Complex.I;
      complex0.ZERO.acos();
      Complex complex1 = Complex.I;
      Complex complex2 = Complex.NaN;
      complex1.ONE.pow(Double.NaN);
      complex1.divide(51.48547909645045);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double double0 = (-364.8);
      Complex complex0 = new Complex((-364.8), 2588.098868838735);
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.asin();
      complex2.add(complex1);
      complex0.sin();
      try { 
        complex1.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Complex complex0 = new Complex((-1434.389));
      Complex complex1 = complex0.cosh();
      Complex complex2 = complex0.acos();
      Complex complex3 = complex1.log();
      Complex complex4 = complex1.pow(complex2);
      Complex complex5 = complex0.add(complex1);
      complex0.hashCode();
      Complex complex6 = new Complex((-1434.389), (-1434.389));
      complex3.add(complex1);
      complex3.readResolve();
      complex6.tan();
      complex6.pow(complex3);
      Complex complex7 = Complex.valueOf((-1434.389));
      Complex complex8 = complex7.divide(complex0);
      complex4.subtract(complex5);
      Complex complex9 = Complex.ONE;
      complex7.abs();
      Complex complex10 = complex1.add(complex2);
      complex10.sin();
      int int0 = 0;
      int int1 = 944679875;
      // Undeclared exception!
      complex8.nthRoot(944679875);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.subtract((-673.38240236022));
      Complex complex2 = complex0.acos();
      Complex complex3 = complex2.ONE.multiply(1);
      Complex complex4 = complex3.I.sqrt();
      complex4.NaN.toString();
      complex3.nthRoot(1);
      Complex complex5 = complex2.ONE.tanh();
      Complex complex6 = complex4.ZERO.acos();
      Complex complex7 = complex2.divide(complex0);
      Complex complex8 = complex5.subtract((-673.38240236022));
      complex7.getField();
      Complex complex9 = complex6.acos();
      complex9.toString();
      Complex complex10 = Complex.ONE;
      complex10.nthRoot(1);
      complex3.pow((-673.38240236022));
      complex1.toString();
      complex0.isNaN();
      Complex complex11 = new Complex(3980.636370519978);
      complex11.reciprocal();
      Complex complex12 = complex1.pow(complex4);
      complex9.sqrt();
      Complex complex13 = complex12.sqrt();
      complex8.sqrt();
      complex4.add(0.0);
      complex13.conjugate();
      complex9.acos();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Complex complex0 = new Complex((-364.8), 2588.098868838735);
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.acos();
      Complex complex3 = Complex.NaN;
      Complex complex4 = complex2.subtract(2588.098868838735);
      complex0.getField();
      Complex complex5 = complex4.acos();
      complex5.toString();
      complex1.isNaN();
      Complex complex6 = complex0.reciprocal();
      Complex complex7 = Complex.ZERO;
      complex2.pow(complex1);
      complex0.sqrt();
      complex6.sqrt();
      Complex complex8 = complex7.sqrt();
      complex8.add((-364.8));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Complex complex0 = new Complex((-1515.87510991033), 3468.882741756);
      complex0.readResolve();
      Complex complex1 = Complex.NaN;
      Complex complex2 = complex0.divide(complex1);
      complex2.tanh();
      Complex complex3 = complex0.atan();
      complex2.equals("internal error, please fill a bug report at {0}");
      complex1.sin();
      Complex complex4 = Complex.I;
      Complex complex5 = complex4.tan();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex6.divide(complex4);
      Complex complex8 = complex6.pow(complex0);
      Complex complex9 = complex7.reciprocal();
      complex3.readResolve();
      complex9.readResolve();
      Complex complex10 = Complex.INF;
      complex10.multiply(complex8);
      complex0.log();
      Complex complex11 = new Complex((-1764.59859715425), Double.POSITIVE_INFINITY);
      complex11.exp();
      Complex complex12 = complex5.multiply((-1764.59859715425));
      complex3.add(complex11);
      try { 
        complex12.nthRoot((-2878));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,878
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Complex complex0 = new Complex((-364.8), 2588.098868838735);
      Complex complex1 = complex0.tanh();
      Complex complex2 = complex1.asin();
      Object object0 = new Object();
      complex1.getReal();
      complex2.multiply(6.283185307179586);
      complex1.toString();
      complex2.sinh();
      Complex complex3 = Complex.valueOf(428.765, (-364.8));
      complex3.divide(3.8331545111676784E-249);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1319.807384762267), (-1319.807384762267));
      Complex complex1 = complex0.sqrt();
      complex1.ONE.cosh();
      Complex complex2 = Complex.valueOf((-1319.807384762267), (-1319.807384762267));
      complex2.cos();
      complex1.nthRoot(17);
      Complex complex3 = new Complex(17, (-4075.963383));
      Complex complex4 = Complex.INF;
      complex0.subtract(943.3778968873);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 853.703615950131);
      complex0.INF.abs();
      Complex complex1 = (Complex)complex0.readResolve();
      Complex complex2 = complex0.sinh();
      complex0.equals(complex1);
      Complex complex3 = complex0.tanh();
      Complex.valueOf(0.0);
      Complex complex4 = null;
      Complex complex5 = Complex.NaN;
      complex5.pow(complex3);
      Complex complex6 = complex0.divide(complex1);
      complex1.subtract(complex6);
      complex2.exp();
      complex2.abs();
      complex6.add(complex2);
      complex3.sin();
      Complex complex7 = Complex.valueOf(1168.7476867295643);
      try { 
        complex7.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      Complex complex1 = complex0.NaN.cosh();
      Complex complex2 = complex1.ONE.acos();
      Complex complex3 = complex2.INF.log();
      Complex complex4 = complex2.I.pow(complex0);
      Complex complex5 = complex4.ZERO.add(complex1);
      complex5.I.hashCode();
      Complex complex6 = Complex.INF;
      Complex complex7 = complex4.INF.add(complex6);
      Object object0 = complex0.ONE.readResolve();
      Complex complex8 = complex0.I.tan();
      Complex complex9 = complex0.multiply((-3.2552002992257195E223));
      complex2.sqrt();
      Complex complex10 = Complex.valueOf((-3306.0));
      complex4.add(complex10);
      Complex.valueOf((-3.2552002992257195E223));
      complex9.cosh();
      Complex complex11 = complex3.subtract((-947.04040367));
      complex7.getField();
      Complex complex12 = complex8.acos();
      object0.toString();
      complex7.isNaN();
      Complex complex13 = complex6.reciprocal();
      Complex complex14 = Complex.I;
      complex14.pow(complex12);
      complex11.sqrt();
      complex13.sqrt();
      complex12.sqrt();
      complex10.add(1720.382);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double double0 = 1363.0356;
      Complex complex0 = Complex.valueOf(1363.0356);
      Complex complex1 = Complex.INF;
      Complex complex2 = complex0.add(complex1);
      complex1.hashCode();
      Complex complex3 = Complex.INF;
      Complex complex4 = Complex.ONE;
      Complex complex5 = complex4.add(complex2);
      complex3.readResolve();
      Complex complex6 = Complex.I;
      Complex complex7 = Complex.NaN;
      complex7.pow(complex5);
      Complex complex8 = Complex.ZERO;
      complex6.divide(complex8);
      Complex complex9 = complex8.subtract(complex5);
      complex8.I.conjugate();
      complex2.getImaginary();
      complex3.exp();
      complex0.abs();
      Complex complex10 = complex1.add(complex5);
      complex9.sin();
      int int0 = 0;
      try { 
        complex10.nthRoot((-2143163503));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -2,143,163,503
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1100.499017422362));
      Complex complex1 = complex0.I.conjugate();
      Complex complex2 = complex0.cos();
      complex0.tan();
      complex2.sin();
      try { 
        complex1.nthRoot((-3937));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -3,937
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = Complex.valueOf(496.0861);
      complex0.readResolve();
      Complex complex2 = Complex.valueOf(496.0861, 496.0861);
      Object object0 = complex2.readResolve();
      complex1.equals(object0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.INF.tanh();
      Complex complex2 = complex0.I.exp();
      Complex complex3 = complex0.ZERO.conjugate();
      Complex complex4 = complex3.atan();
      Complex complex5 = complex3.I.multiply(3.8331545111676784E-249);
      complex0.readResolve();
      Complex complex6 = complex0.NaN.divide(complex5);
      complex6.I.tanh();
      complex4.ONE.atan();
      complex1.equals(complex4);
      Complex complex7 = complex5.sin();
      Complex complex8 = complex7.ZERO.tan();
      Complex complex9 = complex4.divide(complex7);
      Complex complex10 = complex3.pow(complex8);
      complex9.I.reciprocal();
      complex10.readResolve();
      complex7.readResolve();
      complex5.multiply(complex2);
      Complex complex11 = complex2.log();
      complex11.ONE.exp();
      Complex complex12 = complex9.multiply(3.8331545111676784E-249);
      Complex complex13 = complex12.add(complex7);
      complex13.INF.nthRoot(17);
      complex5.sqrt();
      complex0.multiply(1763);
      complex11.getField();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      complex0.multiply(2588.098868838735);
      complex0.readResolve();
      Complex complex1 = Complex.ZERO;
      Complex complex2 = new Complex((-364.8));
      Complex complex3 = complex1.divide(complex2);
      Complex complex4 = complex1.tanh();
      Complex complex5 = complex2.atan();
      complex4.abs();
      complex0.equals(complex5);
      Complex complex6 = complex5.sin();
      Complex complex7 = complex3.tan();
      complex4.divide(complex5);
      Complex complex8 = complex0.subtract((-364.8));
      Complex complex9 = complex2.pow(complex0);
      complex6.readResolve();
      complex8.readResolve();
      Complex complex10 = Complex.valueOf((-364.8));
      complex10.multiply(complex9);
      Complex complex11 = complex5.log();
      complex0.exp();
      Complex complex12 = complex7.multiply((-364.8));
      Complex complex13 = Complex.INF;
      complex13.add(complex11);
      complex0.nthRoot(17);
      complex12.sqrt();
      complex5.multiply(359);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.I.subtract((-673.38240236022));
      Complex complex2 = complex0.acos();
      Complex complex3 = complex2.ONE.multiply(1);
      Complex complex4 = complex3.I.sqrt();
      complex4.NaN.toString();
      complex3.nthRoot(1);
      Complex complex5 = complex2.ONE.tanh();
      Complex complex6 = complex4.ZERO.acos();
      Complex complex7 = complex2.divide(complex0);
      complex5.subtract((-673.38240236022));
      complex7.getField();
      Complex complex8 = complex6.acos();
      complex8.toString();
      complex5.isNaN();
      Complex complex9 = complex4.reciprocal();
      Complex complex10 = Complex.ZERO;
      complex8.pow(complex10);
      complex1.sqrt();
      complex4.sqrt();
      complex3.sqrt();
      complex9.add(1720.382);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      Complex complex1 = complex0.subtract(2.370927333831787);
      complex0.pow(complex1);
      complex0.hashCode();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 853.703615950131);
      complex0.INF.abs();
      Object object0 = complex0.readResolve();
      Complex complex1 = complex0.sinh();
      complex0.equals(object0);
      Complex complex2 = complex0.tanh();
      Complex complex3 = Complex.valueOf(0.0);
      Complex complex4 = complex2.NaN.multiply(853.703615950131);
      Complex complex5 = complex2.sqrt();
      Complex complex6 = complex4.ONE.add(complex2);
      Complex.valueOf(853.703615950131);
      Complex complex7 = complex5.cosh();
      Complex complex8 = complex1.subtract(0.0);
      complex8.NaN.getField();
      complex5.acos();
      Complex complex9 = complex3.pow(complex0);
      complex9.ONE.getField();
      Complex complex10 = Complex.valueOf(Double.POSITIVE_INFINITY);
      Complex complex11 = complex4.NaN.reciprocal();
      Complex.valueOf(Double.POSITIVE_INFINITY, (-1.0));
      Complex complex12 = Complex.NaN;
      Complex complex13 = complex12.sqrt();
      complex10.getArgument();
      complex13.sqrt();
      Complex complex14 = complex6.multiply(complex7);
      complex14.divide((-159.832));
      complex11.sqrt1z();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1363.0356);
      Complex complex1 = new Complex((-1459.93), 0.0);
      complex0.subtract(complex1);
      Complex complex2 = complex1.reciprocal();
      Complex complex3 = Complex.valueOf(496.0861);
      Object object0 = complex3.readResolve();
      complex2.equals(object0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      
      Complex complex1 = complex0.multiply((-632.3686057223));
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      
      Complex complex2 = complex1.ONE.pow((-632.3686057223));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      
      Complex complex3 = complex2.ZERO.log();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      
      Complex complex4 = Complex.valueOf(1558.54198339498, 0.07490822288864472);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex5 = complex4.cosh();
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      List<Complex> list0 = complex4.INF.nthRoot(1874);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(list0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      
      Complex complex6 = complex5.multiply(0);
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex3.ZERO.cos();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex4);
      
      Complex complex8 = complex3.NaN.add(complex2);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertNotNull(complex8);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertSame(complex8, complex0);
      
      Complex complex9 = complex0.createComplex((-1413.30503078), 0.0);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      
      double double0 = complex0.getImaginary();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      
      Complex complex10 = complex9.ZERO.sqrt();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertNotNull(complex10);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      
      Complex complex11 = complex10.INF.sqrt1z();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertTrue(complex11.equals((Object)complex8));
      assertNotNull(complex11);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      
      Complex complex12 = complex9.sin();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertNotNull(complex12);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      
      Complex complex13 = complex12.divide((-1413.30503078));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      
      Complex complex14 = complex12.conjugate();
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertNotNull(complex14);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      
      Complex complex15 = complex14.cosh();
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertNotNull(complex15);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex0);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      
      Complex complex16 = complex3.add(complex13);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertNotNull(complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex15);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      
      Complex complex17 = complex13.atan();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertNotNull(complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex11);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex17);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      
      Complex complex18 = complex1.reciprocal();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertNotNull(complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex18);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex9);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex0);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      
      Complex complex19 = complex18.subtract(0.0);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex3));
      assertTrue(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex13));
      assertNotNull(complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex18);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex19);
      assertNotSame(complex18, complex9);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex0);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex17);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex6);
      assertSame(complex19, complex1);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex15);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex3);
      assertSame(complex19, complex0);
      assertSame(complex19, complex18);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex13);
      
      Complex complex20 = complex7.cos();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex15));
      assertNotNull(complex20);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex12);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex18);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex12);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex6);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex15);
      
      boolean boolean0 = complex12.isNaN();
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex12);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex20);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex18);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex1);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex19);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex20);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex18);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex15);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex5);
      
      Complex complex21 = complex9.createComplex(0.0, 0.0);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertNotNull(complex21);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex19);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex12);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex15);
      
      Complex complex22 = complex21.NaN.negate();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex8));
      assertTrue(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex9));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex15));
      assertTrue(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex21));
      assertNotNull(complex22);
      
      boolean boolean1 = complex18.equals((Object) null);
      assertFalse(boolean1);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex21));
      assertTrue(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex20));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(boolean1 == boolean0);
      
      Complex complex23 = complex16.atan();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex22));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex13));
      assertTrue(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex22));
      assertFalse(complex12.equals((Object)complex21));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex22));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex20));
      assertNotNull(complex23);
      
      double double1 = complex23.getReal();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex1));
      assertTrue(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex21));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex22));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex18));
      assertFalse(complex16.equals((Object)complex23));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex20));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex20));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex23));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex21));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex23));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex22));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex6));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex9));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex13));
      assertTrue(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex14));
      assertEquals(double1, double0, 0.01);
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex22));
      assertFalse(complex12.equals((Object)complex21));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex23));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex22));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex23));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex20));
      
      Complex complex24 = Complex.valueOf((-1413.30503078), (-2115.25322101595));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex9));
      assertNotNull(complex24);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.reciprocal();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      double double0 = complex0.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex2 = Complex.NaN;
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.multiply((-1363));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.INF.acos();
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex1);
      assertSame(complex3, complex4);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex2.ZERO.multiply(2213.028);
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.I.divide((-1507.6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals((-6.633059166887769E-4), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      
      Complex complex7 = Complex.valueOf(0.0);
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      
      Complex complex8 = complex0.multiply(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertSame(complex2, complex8);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex3);
      assertSame(complex8, complex4);
      assertSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertTrue(complex8.isNaN());
      
      Complex complex9 = complex0.subtract(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertSame(complex2, complex8);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertSame(complex2, complex4);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex9, complex8);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex1);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex0.subtract(0.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertTrue(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertTrue(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex0.tanh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertTrue(complex11.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex1.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex2);
      assertSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex7);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex1);
      assertSame(complex12, complex3);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex9);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      
      ComplexField complexField0 = complex5.getField();
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex10));
      assertTrue(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex0));
      assertNotNull(complexField0);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex10);
      assertSame(complex2, complex3);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertSame(complex2, complex4);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex12);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex7);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      
      Complex complex13 = complex7.add((-1507.6));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertNotNull(complex13);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals((-1507.6), complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, Double.POSITIVE_INFINITY);
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex1 = complex0.tanh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.ONE.sqrt();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = Complex.valueOf(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      
      Complex complex4 = complex2.ONE.multiply(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex4.ONE.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex2.I.add((-1368.2110419685068));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals((-1368.2110419685068), complex6.getReal(), 0.01);
      
      Complex complex7 = Complex.valueOf(1365.5, 1365.5);
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertEquals(1365.5, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1365.5, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = Complex.valueOf(Double.NaN, Double.POSITIVE_INFINITY);
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertNotNull(complex8);
      assertSame(complex8, complex4);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      double double0 = complex6.getArgument();
      assertEquals(3.1408617723212875, double0, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertEquals((-1368.2110419685068), complex6.getReal(), 0.01);
      
      Complex complex9 = complex0.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.NaN.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex1);
      assertSame(complex10, complex8);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex9);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = Complex.ONE;
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex11);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex1.pow(complex11);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertSame(complex1, complex9);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex8);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertSame(complex12, complex4);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      
      Complex complex13 = Complex.valueOf((-1368.2110419685068), 0.0);
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertNotNull(complex13);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertEquals((-1368.2110419685068), complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      
      complex1.hashCode();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex9);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex14 = complex9.ONE.sin();
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertNotNull(complex14);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertEquals(0.8414709848078965, complex14.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex15 = (Complex)complex4.readResolve();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex6));
      assertTrue(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertNotNull(complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex12);
      assertSame(complex4, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      String string0 = complex9.toString();
      assertEquals("(NaN, NaN)", string0);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertNotNull(string0);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex16 = complex5.cos();
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertNotNull(complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex12);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.38535742648327137, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      double double1 = 0.0;
      Complex complex17 = complex16.ONE.add(0.0);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertNotNull(complex17);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex12);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.38535742648327137, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex18 = complex17.INF.pow(complex10);
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex15));
      assertTrue(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertTrue(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex5));
      assertNotNull(complex18);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex9);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex18);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex12);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex1);
      assertSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex17);
      assertSame(complex4, complex18);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex13);
      assertSame(complex4, complex12);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex15);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertSame(complex18, complex4);
      assertNotSame(complex18, complex2);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertSame(complex18, complex10);
      assertSame(complex18, complex12);
      assertNotSame(complex18, complex16);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex11);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex14);
      assertSame(complex9, complex1);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertSame(complex9, complex18);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex12);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex8);
      assertSame(complex9, complex4);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex12);
      assertNotSame(complex10, complex13);
      assertSame(complex10, complex8);
      assertNotSame(complex10, complex16);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertSame(complex10, complex18);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex17);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertEquals(0.38535742648327137, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(1.0, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.1752011936438014, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      complex8.hashCode();
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex15));
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex13);
      assertSame(complex8, complex10);
      assertSame(complex8, complex12);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex1);
      assertSame(complex8, complex4);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex15);
      assertSame(complex8, complex18);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      
      int int0 = (-1413);
      try { 
        complex2.nthRoot((-1413));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -1,413
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.NaN.cosh();
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      
      Complex complex2 = complex1.ONE.acos();
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.INF.log();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(0.7853981633974483, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex2.I.pow(complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex0);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.ZERO.add(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      complex5.I.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex0);
      assertSame(complex4, complex5);
      assertSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex0);
      assertSame(complex5, complex4);
      assertSame(complex5, complex1);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = Complex.INF;
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      
      Complex complex7 = complex4.INF.add(complex6);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex0);
      assertSame(complex4, complex1);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      
      Complex complex8 = (Complex)complex0.ONE.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex0.I.tan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertSame(complex0, complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertSame(complex0, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertTrue(complex0.isNaN());
      assertEquals(Double.NaN, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.7615941559557649, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      
      try { 
        complex0.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      
      double double0 = complex0.abs();
      assertEquals(Double.NaN, double0, 0.01);
      
      Complex complex1 = complex0.INF.createComplex(Double.NaN, Double.NaN);
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ZERO.asin();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex2.I.pow(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex0);
      
      Complex complex4 = complex0.acos();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex4, complex3);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      
      Complex complex5 = new Complex(0.0);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      
      Complex complex6 = complex5.INF.asin();
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertSame(complex6, complex3);
      
      Complex complex7 = complex0.multiply(complex5);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex7.INF.negate();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex3);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      
      Complex complex9 = complex8.acos();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex3);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertSame(complex7, complex4);
      assertSame(complex7, complex3);
      assertSame(complex7, complex9);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex6);
      assertSame(complex9, complex0);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      
      Complex complex10 = complex6.sin();
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      
      Complex complex11 = complex10.ONE.exp();
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex10);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex10.exp();
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertNotNull(complex12);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex10);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex0);
      assertSame(complex10, complex12);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex4);
      assertSame(complex12, complex7);
      assertSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      
      Complex complex13 = complex12.ZERO.sqrt1z();
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertNotNull(complex13);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertSame(complex10, complex12);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex4);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex13);
      assertSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      
      Complex complex14 = complex11.add(complex5);
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertNotNull(complex14);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex12);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      
      Complex complex15 = complex14.INF.divide(3.434477109643361E-8);
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertNotNull(complex15);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      
      Complex complex16 = Complex.valueOf(3.434477109643361E-8);
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex7));
      assertNotNull(complex16);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex7);
      
      Complex complex17 = complex15.I.divide(complex16);
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex5));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex16));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertNotNull(complex17);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex15);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex17);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex0);
      
      Complex complex18 = complex17.INF.sinh();
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex1));
      assertTrue(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertTrue(complex18.equals((Object)complex4));
      assertTrue(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex15));
      assertTrue(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex14));
      assertTrue(complex18.equals((Object)complex0));
      assertTrue(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex12));
      assertTrue(complex18.equals((Object)complex3));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex16));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex17));
      assertTrue(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex12));
      assertTrue(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex16));
      assertTrue(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex0));
      assertNotNull(complex18);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex18);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex17);
      assertNotSame(complex16, complex7);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex15);
      assertNotSame(complex6, complex8);
      assertSame(complex6, complex7);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex17);
      assertSame(complex6, complex4);
      assertSame(complex6, complex12);
      assertSame(complex6, complex3);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertSame(complex6, complex9);
      assertSame(complex10, complex7);
      assertSame(complex10, complex0);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex12);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex17);
      assertSame(complex10, complex6);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex18);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex13);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex0);
      
      Object object0 = complex0.readResolve();
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex18));
      assertTrue(object0.equals((Object)complex18));
      assertFalse(object0.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex11));
      assertFalse(object0.equals((Object)complex16));
      assertTrue(object0.equals((Object)complex6));
      assertFalse(object0.equals((Object)complex17));
      assertTrue(object0.equals((Object)complex4));
      assertTrue(object0.equals((Object)complex3));
      assertTrue(object0.equals((Object)complex1));
      assertFalse(object0.equals((Object)complex13));
      assertTrue(object0.equals((Object)complex10));
      assertTrue(object0.equals((Object)complex12));
      assertFalse(object0.equals((Object)complex14));
      assertTrue(object0.equals((Object)complex0));
      assertFalse(object0.equals((Object)complex8));
      assertTrue(object0.equals((Object)complex7));
      assertTrue(object0.equals((Object)complex9));
      assertFalse(object0.equals((Object)complex5));
      assertFalse(object0.equals((Object)complex15));
      assertNotNull(object0);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex11);
      assertNotSame(object0, complex16);
      assertNotSame(object0, complex17);
      assertNotSame(object0, complex13);
      assertNotSame(object0, complex7);
      assertNotSame(object0, complex14);
      assertNotSame(object0, complex12);
      assertNotSame(object0, complex8);
      assertNotSame(object0, complex3);
      assertNotSame(object0, complex9);
      assertNotSame(object0, complex10);
      assertNotSame(object0, complex5);
      assertNotSame(object0, complex18);
      assertNotSame(object0, complex6);
      assertNotSame(object0, complex0);
      assertNotSame(object0, complex15);
      assertNotSame(object0, complex4);
      
      Complex complex19 = complex2.NaN.createComplex(0.0, (-84.2301));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex11));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex7));
      assertNotNull(complex19);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex3);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex13);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, object0);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex7);
      
      Complex complex20 = Complex.valueOf(Double.NaN);
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex18));
      assertNotNull(complex20);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex3);
      assertSame(complex20, complex9);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex5);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, object0);
      
      Complex complex21 = complex20.ZERO.pow((-84.2301));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex15));
      assertTrue(complex21.equals((Object)complex12));
      assertTrue(complex21.equals((Object)complex10));
      assertTrue(complex21.equals((Object)complex3));
      assertTrue(complex21.equals((Object)complex9));
      assertTrue(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex13));
      assertTrue(complex21.equals((Object)complex20));
      assertTrue(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex17));
      assertTrue(complex21.equals((Object)object0));
      assertTrue(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex11));
      assertTrue(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex19));
      assertTrue(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex16));
      assertTrue(complex21.equals((Object)complex18));
      assertNotNull(complex21);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex21);
      assertSame(complex20, complex3);
      assertSame(complex20, complex9);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex5);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, object0);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, object0);
      
      Complex complex22 = complex20.exp();
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex11));
      assertTrue(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex13));
      assertTrue(complex20.equals((Object)complex21));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex16));
      assertTrue(complex20.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex2));
      assertTrue(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex13));
      assertTrue(complex22.equals((Object)complex21));
      assertFalse(complex22.equals((Object)complex16));
      assertTrue(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex17));
      assertTrue(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex22.equals((Object)complex5));
      assertFalse(complex22.equals((Object)complex15));
      assertNotNull(complex22);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex1);
      assertSame(complex20, complex4);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex6);
      assertSame(complex20, complex10);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex21);
      assertSame(complex20, complex3);
      assertSame(complex20, complex9);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex8);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex5);
      assertSame(complex20, complex22);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, object0);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex2);
      assertNotSame(complex22, complex1);
      assertSame(complex22, complex4);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, object0);
      assertSame(complex22, complex10);
      assertNotSame(complex22, complex17);
      assertNotSame(complex22, complex21);
      assertSame(complex22, complex6);
      assertNotSame(complex22, complex19);
      assertSame(complex22, complex3);
      assertSame(complex22, complex0);
      assertSame(complex22, complex7);
      assertNotSame(complex22, complex8);
      assertSame(complex22, complex12);
      assertNotSame(complex22, complex14);
      assertSame(complex22, complex20);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex5);
      assertNotSame(complex22, complex15);
      assertSame(complex22, complex9);
      
      Complex complex23 = Complex.valueOf(Double.NaN, (-84.2301));
      assertTrue(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex11));
      assertTrue(complex23.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex13));
      assertTrue(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex19));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex8));
      assertFalse(complex23.equals((Object)complex16));
      assertTrue(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex5));
      assertFalse(complex23.equals((Object)complex14));
      assertNotNull(complex23);
      assertSame(complex23, complex4);
      assertNotSame(complex23, complex11);
      assertSame(complex23, complex22);
      assertNotSame(complex23, complex17);
      assertNotSame(complex23, complex1);
      assertNotSame(complex23, complex21);
      assertSame(complex23, complex7);
      assertNotSame(complex23, complex13);
      assertSame(complex23, complex20);
      assertSame(complex23, complex12);
      assertNotSame(complex23, complex15);
      assertNotSame(complex23, complex18);
      assertSame(complex23, complex10);
      assertSame(complex23, complex6);
      assertSame(complex23, complex3);
      assertSame(complex23, complex9);
      assertNotSame(complex23, complex19);
      assertNotSame(complex23, object0);
      assertNotSame(complex23, complex2);
      assertNotSame(complex23, complex8);
      assertNotSame(complex23, complex16);
      assertSame(complex23, complex0);
      assertNotSame(complex23, complex5);
      assertNotSame(complex23, complex14);
      
      Complex complex24 = complex3.add(658.836986897);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex18));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex12));
      assertTrue(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex17));
      assertTrue(complex1.equals((Object)object0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex22));
      assertTrue(complex1.equals((Object)complex23));
      assertTrue(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex19));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertTrue(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex21));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex17));
      assertTrue(complex24.equals((Object)complex21));
      assertTrue(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex16));
      assertTrue(complex24.equals((Object)complex18));
      assertTrue(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex19));
      assertNotNull(complex24);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex24);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex22);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex23);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex22);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex23);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertSame(complex3, complex24);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex20);
      assertSame(complex3, complex9);
      assertSame(complex3, complex12);
      assertSame(complex3, complex6);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex21);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex16);
      assertSame(complex3, complex0);
      assertNotSame(complex3, object0);
      assertSame(complex3, complex22);
      assertSame(complex3, complex23);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex24, complex17);
      assertSame(complex24, complex4);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex14);
      assertSame(complex24, complex9);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex11);
      assertSame(complex24, complex12);
      assertNotSame(complex24, complex5);
      assertSame(complex24, complex0);
      assertSame(complex24, complex20);
      assertNotSame(complex24, complex13);
      assertSame(complex24, complex6);
      assertNotSame(complex24, complex19);
      assertSame(complex24, complex23);
      assertSame(complex24, complex22);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex8);
      assertSame(complex24, complex7);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex2);
      assertSame(complex24, complex3);
      assertSame(complex24, complex10);
      
      Complex complex25 = complex24.reciprocal();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex14));
      assertTrue(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertTrue(complex1.equals((Object)object0));
      assertTrue(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex22));
      assertTrue(complex1.equals((Object)complex18));
      assertTrue(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertTrue(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex22));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex21));
      assertFalse(complex2.equals((Object)complex23));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex15));
      assertTrue(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)object0));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex21));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex17));
      assertTrue(complex24.equals((Object)complex21));
      assertTrue(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex16));
      assertTrue(complex24.equals((Object)complex18));
      assertTrue(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex5));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex11));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)complex8));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex2));
      assertFalse(complex25.equals((Object)complex16));
      assertTrue(complex25.equals((Object)complex18));
      assertTrue(complex25.equals((Object)object0));
      assertFalse(complex25.equals((Object)complex17));
      assertTrue(complex25.equals((Object)complex1));
      assertTrue(complex25.equals((Object)complex21));
      assertFalse(complex25.equals((Object)complex13));
      assertNotNull(complex25);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex24);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex22);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertSame(complex0, complex25);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex23);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, object0);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex25);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex23);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex24);
      assertNotSame(complex1, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex25);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex22);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex23);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, object0);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex13);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex15);
      assertSame(complex3, complex24);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex19);
      assertSame(complex3, complex25);
      assertNotSame(complex3, complex13);
      assertSame(complex3, complex20);
      assertSame(complex3, complex9);
      assertSame(complex3, complex12);
      assertSame(complex3, complex6);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex21);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex16);
      assertSame(complex3, complex0);
      assertNotSame(complex3, object0);
      assertSame(complex3, complex22);
      assertSame(complex3, complex23);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex24, complex17);
      assertSame(complex24, complex4);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex14);
      assertSame(complex24, complex9);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, complex11);
      assertSame(complex24, complex12);
      assertNotSame(complex24, complex5);
      assertSame(complex24, complex0);
      assertSame(complex24, complex20);
      assertNotSame(complex24, complex13);
      assertSame(complex24, complex6);
      assertNotSame(complex24, complex19);
      assertSame(complex24, complex23);
      assertSame(complex24, complex22);
      assertSame(complex24, complex25);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex8);
      assertSame(complex24, complex7);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex2);
      assertSame(complex24, complex3);
      assertSame(complex24, complex10);
      assertSame(complex25, complex12);
      assertSame(complex25, complex6);
      assertSame(complex25, complex10);
      assertSame(complex25, complex9);
      assertNotSame(complex25, complex21);
      assertSame(complex25, complex0);
      assertNotSame(complex25, complex11);
      assertNotSame(complex25, complex8);
      assertSame(complex25, complex4);
      assertNotSame(complex25, complex16);
      assertNotSame(complex25, object0);
      assertSame(complex25, complex22);
      assertSame(complex25, complex23);
      assertNotSame(complex25, complex17);
      assertSame(complex25, complex7);
      assertNotSame(complex25, complex1);
      assertSame(complex25, complex3);
      assertNotSame(complex25, complex18);
      assertNotSame(complex25, complex5);
      assertNotSame(complex25, complex15);
      assertNotSame(complex25, complex14);
      assertSame(complex25, complex24);
      assertNotSame(complex25, complex19);
      assertNotSame(complex25, complex2);
      assertNotSame(complex25, complex13);
      assertSame(complex25, complex20);
      
      Complex complex26 = complex9.multiply(658.836986897);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex21));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex24));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex21));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex23));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex25));
      assertFalse(complex5.equals((Object)complex20));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex22));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex16));
      assertTrue(complex7.equals((Object)complex18));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex17));
      assertTrue(complex7.equals((Object)complex21));
      assertTrue(complex7.equals((Object)object0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex24));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex23));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex25));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)object0));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex1));
      assertTrue(complex9.equals((Object)complex21));
      assertFalse(complex9.equals((Object)complex17));
      assertTrue(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex16));
      assertTrue(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex26.equals((Object)complex15));
      assertFalse(complex26.equals((Object)complex14));
      assertFalse(complex26.equals((Object)complex5));
      assertFalse(complex26.equals((Object)complex13));
      assertTrue(complex26.equals((Object)complex21));
      assertFalse(complex26.equals((Object)complex11));
      assertFalse(complex26.equals((Object)complex16));
      assertTrue(complex26.equals((Object)complex1));
      assertTrue(complex26.equals((Object)complex18));
      assertFalse(complex26.equals((Object)complex2));
      assertFalse(complex26.equals((Object)complex8));
      assertFalse(complex26.equals((Object)complex17));
      assertTrue(complex26.equals((Object)object0));
      assertFalse(complex26.equals((Object)complex19));
      assertNotNull(complex26);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex24);
      assertSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex22);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex2);
      assertSame(complex0, complex12);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex7);
      assertSame(complex0, complex25);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertSame(complex0, complex23);
      assertSame(complex0, complex26);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex6);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex5, complex24);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex21);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex26);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex23);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex25);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, object0);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex22);
      assertNotSame(complex5, complex18);
      assertNotSame(complex7, complex15);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex18);
      assertSame(complex7, complex24);
      assertNotSame(complex7, complex19);
      assertSame(complex7, complex26);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      try { 
        complex0.NaN.pow((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.tanh();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.ZERO.add((double) (-4433));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-4433.0), complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex1.INF.multiply((-4433));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      
      Complex complex4 = complex3.INF.subtract(complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      
      ComplexField complexField0 = complex4.NaN.getField();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex3.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertTrue(complex3.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex0.log();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      
      String string0 = complex1.toString();
      assertEquals("(0.0, 0.0)", string0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(string0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      List<Complex> list0 = complex5.nthRoot(1626);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(list0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertTrue(list0.contains(complex4));
      assertFalse(list0.contains(complex2));
      
      Complex complex6 = complex5.createComplex(0.0, 1626);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1626.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = (Complex)complex6.readResolve();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(1626.0, complex6.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(1626.0, complex7.getImaginary(), 0.01);
      
      try { 
        complex6.add((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1100.499017422362));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.I.conjugate();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.INF.divide(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.NaN.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      
      Complex complex4 = complex3.I.divide((-3451.0));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-2.897710808461316E-4), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex4.ZERO.subtract((-1100.499017422362));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-2.897710808461316E-4), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1100.499017422362, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex3.NaN.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex6, complex2);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex3.ONE.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex7.NaN.exp();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex6);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(-0.0, complex7.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      complex0.hashCode();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex9 = complex0.sqrt();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(33.17377002124362, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.INF.atan();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex5));
      assertNotNull(complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertSame(complex10, complex8);
      assertSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(33.17377002124362, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      complex0.hashCode();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex11 = Complex.valueOf((-1100.499017422362), (-1824.75499));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertNotNull(complex11);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertEquals((-1100.499017422362), complex11.getReal(), 0.01);
      assertEquals((-1824.75499), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex5.reciprocal();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertNotNull(complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex9);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex12);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex11);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals((-2.897710808461316E-4), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1100.499017422362, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(9.086786850044126E-4, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex1.log();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex1));
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex12);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1100.499017422362), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1.0), complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-1.5707963267948966), complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ONE.sinh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.I.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(0.5403023058681398, complex2.getReal(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex1.ONE.exp();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertEquals(2.718281828459045, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex1.ZERO.pow(complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(1.1752011936438014, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = Complex.valueOf(3.3774671482641995E-8, 3.3774671482641995E-8);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertEquals(3.3774671482641995E-8, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(3.3774671482641995E-8, complex5.getReal(), 0.01);
      
      Complex complex6 = complex0.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex6.NaN.conjugate();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex6.INF.add((-656.18));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      
      Complex complex9 = complex6.cos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(6.123233995736766E-17, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex0.log();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex10.getReal(), 0.01);
      
      Complex complex11 = complex8.ZERO.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex0));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex11);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      
      Complex complex12 = complex5.INF.cosh();
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertTrue(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertNotNull(complex12);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertEquals(3.3774671482641995E-8, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(3.3774671482641995E-8, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex9.INF.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertTrue(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(6.123233995736766E-17, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      
      Complex complex14 = Complex.valueOf((-656.18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex0));
      assertNotNull(complex14);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals((-656.18), complex14.getReal(), 0.01);
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      
      Complex complex15 = complex9.divide((-1441.14858583414));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertNotNull(complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(6.123233995736766E-17, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals((-4.248856818738523E-20), complex15.getReal(), 0.01);
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      
      Complex complex16 = complex15.ZERO.multiply((-656.18));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex7));
      assertNotNull(complex16);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex6);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex7);
      assertEquals(-0.0, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertEquals(-0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(6.123233995736766E-17, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals((-4.248856818738523E-20), complex15.getReal(), 0.01);
      assertEquals(-0.0, complex15.getImaginary(), 0.01);
      
      Complex complex17 = complex6.atan();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertNotNull(complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex3);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex17.isInfinite());
      assertEquals(1.0038848218538872, complex17.getReal(), 0.01);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex18 = complex8.NaN.subtract(3.3774671482641995E-8);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex9));
      assertTrue(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex1));
      assertTrue(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex11));
      assertNotNull(complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertSame(complex18, complex11);
      assertNotSame(complex18, complex12);
      assertSame(complex18, complex7);
      assertNotSame(complex18, complex6);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex11);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      
      Complex complex19 = complex8.add((-644.91428));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex7));
      assertTrue(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex11));
      assertNotNull(complex19);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex6);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex11);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex19.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex19.getImaginary(), 0.01);
      assertTrue(complex19.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex19.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isInfinite());
      
      Complex complex20 = complex6.pow(complex5);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex19));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex19));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex16));
      assertNotNull(complex20);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex16);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex20);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex16);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex20);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex16);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1.5252057751019336E-8, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(1.0000000152520574, complex20.getReal(), 0.01);
      assertEquals(3.3774671482641995E-8, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(3.3774671482641995E-8, complex5.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Complex complex0 = new Complex((-364.8), 2588.098868838735);
      assertNotNull(complex0);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.tanh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex1.equals(object0);
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      double double0 = complex0.getReal();
      assertEquals((-364.8), double0, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      
      Complex complex3 = complex2.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertEquals((-2.3012989023072947), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.conjugate();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertEquals((-364.8), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(2588.098868838735, complex0.getImaginary(), 0.01);
      assertEquals((-1.0), complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1.5707963267948966), complex2.getReal(), 0.01);
      assertEquals((-2.3012989023072947), complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-2.3012989023072947), complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1297.726045), (-1297.726045));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.sqrt();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-39.57895790747779), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(16.394141149871157, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.ONE.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-39.57895790747779), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(16.394141149871157, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5430806348152437, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.multiply((-4075.963383));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(5289483.840585411, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(5289483.840585411, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.cos();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(5289483.840585411, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(5289483.840585411, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertTrue(complex4.isInfinite());
      
      Complex complex5 = complex0.exp();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      
      complex0.hashCode();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.isNaN());
      assertEquals((-1297.726045), complex0.getImaginary(), 0.01);
      assertEquals((-1297.726045), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0, 853.703615950131);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      
      double double0 = complex0.INF.abs();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      
      Complex complex1 = (Complex)complex0.readResolve();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(853.703615950131, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex0.sinh();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.equals(complex1);
      assertTrue(boolean0);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertEquals(853.703615950131, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex3 = complex0.tanh();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = Complex.valueOf(0.0);
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex3.NaN.multiply(853.703615950131);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex3.sqrt();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex5.ONE.add(complex3);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals((-1.0495843247543701), complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(1.0, complex7.getReal(), 0.01);
      
      Complex complex8 = Complex.valueOf((-947.04040367));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertEquals((-947.04040367), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex6.cosh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex8);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.5231866096267711), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.9541289603686149, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.subtract(0.0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.7240015401341006), complex10.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex10.NaN.getField();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals((-0.7240015401341006), complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex6.acos();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex10);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.9912191606895681, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(0.7832432052646318, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      
      String string0 = complex2.toString();
      assertEquals("(0.0, -0.7240015401341006)", string0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertNotNull(string0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      
      boolean boolean1 = complex5.isNaN();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex1);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex12 = complex2.reciprocal();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertNotNull(complex12);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.3812125314191717, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      
      Complex complex13 = complex9.pow(complex12);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.3812125314191717, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.23276861739434282, complex13.getImaginary(), 0.01);
      assertEquals(1.985651698754865, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.5231866096267711), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.9541289603686149, complex9.getReal(), 0.01);
      
      Complex complex14 = complex13.sqrt();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex14);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex5);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex4);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(1.3812125314191717, complex12.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertFalse(complex12.isNaN());
      assertEquals(0.23276861739434282, complex13.getImaginary(), 0.01);
      assertEquals(1.985651698754865, complex13.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.4115417159983403, complex14.getReal(), 0.01);
      assertEquals(0.08245190870243345, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-0.7240015401341006), complex2.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertFalse(complex9.isInfinite());
      assertEquals((-0.5231866096267711), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.9541289603686149, complex9.getReal(), 0.01);
      
      Complex complex15 = complex4.sqrt();
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex10));
      assertNotNull(complex15);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex8);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex10);
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      
      Complex complex16 = complex8.sqrt();
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex16);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex6);
      assertEquals(30.77402157128639, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex16.getReal(), 0.01);
      assertEquals((-947.04040367), complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      Complex complex17 = complex6.add(1720.382);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex8));
      assertNotNull(complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex8);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(853.703615950131, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals((-1.0495843247543701), complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(1721.1064254015268, complex17.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals((-0.7244254015267446), complex17.getImaginary(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals((-0.7244254015267446), complex6.getImaginary(), 0.01);
      assertEquals(0.7244254015267445, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = complex0.sin();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.INF.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      Complex complex3 = Complex.valueOf((-721.3379755608843));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-721.3379755608843), complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex2.INF.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex4.sin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      String string0 = complex0.toString();
      assertEquals("(1.0, 0.0)", string0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertNotNull(string0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex6 = complex0.ONE.multiply(0.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex1.add(0.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex6.ZERO.multiply(1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertNotNull(complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex8.INF.createComplex((-721.3379755608843), 0.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals((-721.3379755608843), complex9.getReal(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex7.INF.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertNotNull(complex10);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex7.ZERO.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex12 = complex1.ZERO.multiply((-4133.6476387));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex11));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex0));
      assertNotNull(complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex0);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(-0.0, complex12.getReal(), 0.01);
      assertEquals(-0.0, complex12.getImaginary(), 0.01);
      
      Complex complex13 = complex11.ONE.sqrt();
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex1));
      assertTrue(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertNotNull(complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      
      Complex complex14 = complex10.NaN.exp();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex10));
      assertNotNull(complex14);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex5);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      
      String string1 = complex10.INF.toString();
      assertEquals("(Infinity, Infinity)", string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertNotNull(string1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = complex1.equals(object0);
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex15 = complex6.sqrt();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex1));
      assertTrue(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertTrue(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex10));
      assertTrue(complex6.equals((Object)complex5));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex12));
      assertNotNull(complex15);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex4);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertEquals(0.0, complex15.getReal(), 0.01);
      assertFalse(complex15.isInfinite());
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(0.0, complex6.getReal(), 0.01);
      
      Complex complex16 = complex11.subtract(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex14));
      assertTrue(complex16.equals((Object)complex11));
      assertTrue(complex16.equals((Object)complex13));
      assertTrue(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex7));
      assertTrue(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex9));
      assertTrue(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertNotNull(complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex6);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex16.isInfinite());
      assertEquals(1.0, complex16.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      
      Complex complex17 = complex4.acos();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex13));
      assertTrue(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex12));
      assertTrue(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertTrue(complex4.equals((Object)complex12));
      assertTrue(complex4.equals((Object)complex15));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex9));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex8));
      assertNotNull(complex17);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex6);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex8);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex17.isInfinite());
      assertEquals(1.5707963267948966, complex17.getReal(), 0.01);
      assertEquals(-0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      
      Complex complex18 = (Complex)complex10.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex12));
      assertTrue(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex17));
      assertTrue(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex8));
      assertTrue(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertNotNull(complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex15);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex19 = complex10.tan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex9));
      assertTrue(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex8));
      assertTrue(complex19.equals((Object)complex10));
      assertTrue(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertNotNull(complex19);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex6);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      
      Complex complex20 = complex14.reciprocal();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex19));
      assertTrue(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex17));
      assertTrue(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex15));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex5));
      assertTrue(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex3));
      assertTrue(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex4));
      assertTrue(complex20.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex19));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex16));
      assertTrue(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex13));
      assertTrue(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex12));
      assertTrue(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex16));
      assertTrue(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex3));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex10));
      assertNotNull(complex20);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertSame(complex20, complex19);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex14);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex4);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex19);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex18);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertNotSame(complex10, complex19);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex20);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex18);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex4);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex19);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex20);
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(0.8414709848078965, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertTrue(complex20.isNaN());
      assertFalse(complex20.isInfinite());
      assertEquals(0.8414709848078965, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertTrue(complex14.isNaN());
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1625.2291, 1625.2291);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      
      Complex complex1 = Complex.NaN;
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.INF.subtract(1625.2291);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.INF.divide(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = Complex.I;
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex4.ONE.pow((-249.0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(1.0, complex5.getReal(), 0.01);
      
      complex0.I.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      
      boolean boolean0 = complex0.equals(complex4);
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex6 = complex4.subtract((-91.8));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(91.8, complex6.getReal(), 0.01);
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex1.negate();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex3.atan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      
      Complex complex9 = complex8.NaN.multiply(3126);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex5);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.ZERO.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex5);
      assertNotSame(complex9, complex0);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex10);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      
      Complex complex11 = complex8.sqrt();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex8);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex11.divide(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotNull(complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex12);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex3, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex9);
      assertSame(complex7, complex11);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex12);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex12);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex9);
      assertSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertSame(complex11, complex3);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex12);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertSame(complex12, complex3);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex2);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex1);
      assertSame(complex12, complex7);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex1.sqrt();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertNotNull(complex13);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex11);
      assertNotSame(complex13, complex2);
      assertSame(complex13, complex3);
      assertSame(complex13, complex7);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex11);
      assertSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      Complex complex14 = complex12.tanh();
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotNull(complex14);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertSame(complex14, complex13);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertSame(complex14, complex3);
      assertSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex12);
      assertSame(complex3, complex8);
      assertSame(complex3, complex14);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex13);
      assertSame(complex7, complex8);
      assertSame(complex7, complex9);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertSame(complex7, complex12);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex13);
      assertSame(complex8, complex12);
      assertSame(complex8, complex1);
      assertSame(complex8, complex14);
      assertSame(complex8, complex11);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex3);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex12);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex7);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex14);
      assertSame(complex12, complex1);
      assertSame(complex12, complex13);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex15 = complex1.multiply(1);
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertNotNull(complex15);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex14);
      assertSame(complex15, complex13);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertSame(complex15, complex9);
      assertSame(complex15, complex11);
      assertNotSame(complex15, complex5);
      assertSame(complex15, complex8);
      assertSame(complex15, complex12);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertSame(complex15, complex3);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex11);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex16 = complex13.sqrt1z();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertNotNull(complex16);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertSame(complex16, complex13);
      assertSame(complex16, complex15);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex5);
      assertSame(complex16, complex11);
      assertSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertSame(complex16, complex14);
      assertSame(complex16, complex1);
      assertSame(complex16, complex12);
      assertSame(complex16, complex3);
      assertSame(complex16, complex8);
      assertNotSame(complex16, complex2);
      assertSame(complex16, complex9);
      assertNotSame(complex16, complex10);
      assertNotSame(complex13, complex2);
      assertSame(complex13, complex16);
      assertSame(complex13, complex3);
      assertSame(complex13, complex15);
      assertSame(complex13, complex7);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex11);
      assertSame(complex13, complex14);
      assertSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex16.getReal(), 0.01);
      assertTrue(complex16.isNaN());
      assertEquals(Double.NaN, complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      Complex complex17 = (Complex)complex6.readResolve();
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex16));
      assertTrue(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertNotNull(complex17);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex3);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex10);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertEquals(1.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals(91.8, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(91.8, complex6.getReal(), 0.01);
      assertEquals(1.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex18 = complex14.I.divide((-91.8));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotNull(complex18);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex17);
      assertSame(complex14, complex13);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex1);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertSame(complex14, complex16);
      assertSame(complex14, complex3);
      assertSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex18);
      assertSame(complex3, complex12);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex14);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex4);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex17);
      assertSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertSame(complex7, complex9);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertSame(complex7, complex12);
      assertSame(complex7, complex1);
      assertSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex15);
      assertSame(complex8, complex13);
      assertSame(complex8, complex12);
      assertNotSame(complex8, complex17);
      assertSame(complex8, complex1);
      assertSame(complex8, complex14);
      assertSame(complex8, complex11);
      assertSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex18);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex16);
      assertSame(complex11, complex3);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex15);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex12);
      assertSame(complex12, complex3);
      assertSame(complex12, complex16);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex7);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex18);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex14);
      assertSame(complex12, complex1);
      assertSame(complex12, complex13);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex18.isInfinite());
      assertFalse(complex18.isNaN());
      assertEquals((-0.010893246187363835), complex18.getImaginary(), 0.01);
      assertEquals(-0.0, complex18.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      double double0 = complex12.getArgument();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex18);
      assertSame(complex3, complex12);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex14);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex17);
      assertSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertSame(complex7, complex9);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertSame(complex7, complex12);
      assertSame(complex7, complex1);
      assertSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex15);
      assertSame(complex8, complex13);
      assertSame(complex8, complex12);
      assertNotSame(complex8, complex17);
      assertSame(complex8, complex1);
      assertSame(complex8, complex14);
      assertSame(complex8, complex11);
      assertSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex18);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex16);
      assertSame(complex11, complex3);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex15);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex12);
      assertSame(complex12, complex3);
      assertSame(complex12, complex16);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex7);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex18);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex14);
      assertSame(complex12, complex1);
      assertSame(complex12, complex13);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex19 = complex14.reciprocal();
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertNotNull(complex19);
      assertSame(complex14, complex8);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex17);
      assertSame(complex14, complex13);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex5);
      assertSame(complex14, complex1);
      assertSame(complex14, complex15);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex11);
      assertSame(complex14, complex16);
      assertSame(complex14, complex3);
      assertSame(complex14, complex7);
      assertSame(complex14, complex19);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertSame(complex1, complex3);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertSame(complex3, complex11);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex18);
      assertSame(complex3, complex12);
      assertSame(complex3, complex8);
      assertSame(complex3, complex19);
      assertNotSame(complex3, complex17);
      assertSame(complex3, complex14);
      assertSame(complex3, complex13);
      assertSame(complex3, complex1);
      assertSame(complex3, complex16);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex6);
      assertSame(complex3, complex9);
      assertSame(complex19, complex8);
      assertNotSame(complex19, complex17);
      assertSame(complex19, complex12);
      assertNotSame(complex19, complex5);
      assertSame(complex19, complex7);
      assertSame(complex19, complex15);
      assertNotSame(complex19, complex0);
      assertSame(complex19, complex11);
      assertSame(complex19, complex16);
      assertSame(complex19, complex3);
      assertSame(complex19, complex14);
      assertNotSame(complex19, complex6);
      assertSame(complex19, complex1);
      assertSame(complex19, complex13);
      assertSame(complex19, complex9);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex17);
      assertSame(complex7, complex13);
      assertSame(complex7, complex15);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex18);
      assertSame(complex7, complex9);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex14);
      assertNotSame(complex7, complex10);
      assertSame(complex7, complex19);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex11);
      assertSame(complex7, complex12);
      assertSame(complex7, complex1);
      assertSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex15);
      assertSame(complex8, complex13);
      assertSame(complex8, complex19);
      assertSame(complex8, complex12);
      assertNotSame(complex8, complex17);
      assertSame(complex8, complex1);
      assertSame(complex8, complex14);
      assertSame(complex8, complex11);
      assertSame(complex8, complex16);
      assertNotSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertSame(complex8, complex9);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex10);
      assertSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex18);
      assertSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertSame(complex11, complex19);
      assertSame(complex11, complex16);
      assertSame(complex11, complex3);
      assertSame(complex11, complex14);
      assertNotSame(complex11, complex10);
      assertSame(complex11, complex15);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertSame(complex11, complex12);
      assertSame(complex12, complex3);
      assertSame(complex12, complex16);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex15);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex7);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex18);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex17);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex14);
      assertSame(complex12, complex1);
      assertSame(complex12, complex13);
      assertSame(complex12, complex19);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertTrue(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertTrue(complex19.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertFalse(complex19.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertTrue(complex11.isNaN());
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex20 = complex1.sqrt1z();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex17));
      assertNotNull(complex20);
      assertSame(complex1, complex3);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertSame(complex1, complex20);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertSame(complex20, complex15);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex2);
      assertSame(complex20, complex3);
      assertSame(complex20, complex7);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex6);
      assertSame(complex20, complex9);
      assertSame(complex20, complex19);
      assertNotSame(complex20, complex5);
      assertSame(complex20, complex11);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex18);
      assertSame(complex20, complex8);
      assertSame(complex20, complex16);
      assertNotSame(complex20, complex17);
      assertSame(complex20, complex14);
      assertSame(complex20, complex13);
      assertSame(complex20, complex1);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex20.getImaginary(), 0.01);
      assertFalse(complex20.isInfinite());
      assertTrue(complex20.isNaN());
      assertEquals(Double.NaN, complex20.getReal(), 0.01);
      
      Complex complex21 = complex13.divide(4042.6605423);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex17));
      assertNotNull(complex21);
      assertSame(complex1, complex3);
      assertSame(complex1, complex21);
      assertSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex18);
      assertSame(complex1, complex9);
      assertSame(complex1, complex8);
      assertSame(complex1, complex20);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex13);
      assertSame(complex1, complex15);
      assertNotSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex1, complex14);
      assertSame(complex1, complex16);
      assertSame(complex1, complex11);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex5);
      assertSame(complex21, complex1);
      assertSame(complex21, complex7);
      assertSame(complex21, complex9);
      assertSame(complex21, complex19);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex18);
      assertSame(complex21, complex12);
      assertSame(complex21, complex8);
      assertSame(complex21, complex16);
      assertSame(complex21, complex11);
      assertSame(complex21, complex14);
      assertNotSame(complex21, complex17);
      assertSame(complex21, complex20);
      assertSame(complex21, complex13);
      assertSame(complex21, complex15);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex2);
      assertSame(complex21, complex3);
      assertNotSame(complex13, complex2);
      assertSame(complex13, complex16);
      assertSame(complex13, complex3);
      assertSame(complex13, complex15);
      assertSame(complex13, complex7);
      assertSame(complex13, complex21);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex6);
      assertSame(complex13, complex12);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex11);
      assertSame(complex13, complex14);
      assertSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex20);
      assertNotSame(complex13, complex17);
      assertSame(complex13, complex19);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex21.isInfinite());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      Complex complex22 = complex0.subtract(Double.NaN);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex6));
      assertFalse(complex22.equals((Object)complex5));
      assertNotNull(complex22);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex16);
      assertNotSame(complex22, complex0);
      assertSame(complex22, complex11);
      assertNotSame(complex22, complex18);
      assertSame(complex22, complex12);
      assertSame(complex22, complex8);
      assertNotSame(complex22, complex4);
      assertSame(complex22, complex19);
      assertSame(complex22, complex13);
      assertNotSame(complex22, complex17);
      assertSame(complex22, complex1);
      assertSame(complex22, complex20);
      assertSame(complex22, complex14);
      assertNotSame(complex22, complex5);
      assertSame(complex22, complex3);
      assertSame(complex22, complex16);
      assertNotSame(complex22, complex2);
      assertSame(complex22, complex15);
      assertSame(complex22, complex21);
      assertNotSame(complex22, complex10);
      assertSame(complex22, complex7);
      assertSame(complex22, complex9);
      assertNotSame(complex22, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(1625.2291, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1625.2291, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex22.getReal(), 0.01);
      assertEquals(Double.NaN, complex22.getImaginary(), 0.01);
      assertTrue(complex22.isNaN());
      assertFalse(complex22.isInfinite());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Complex complex0 = new Complex(2.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      double double0 = complex0.I.getArgument();
      assertEquals(1.5707963267948966, double0, 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.I.createComplex((-1.6104730195920897E-7), 2.0);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals((-1.6104730195920897E-7), complex1.getReal(), 0.01);
      assertEquals(2.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      String string0 = complex0.toString();
      assertEquals("(2.0, 0.0)", string0);
      assertFalse(complex0.equals((Object)complex1));
      assertNotNull(string0);
      assertNotSame(complex0, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      boolean boolean0 = complex0.isInfinite();
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      double double1 = complex0.getImaginary();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex2 = complex0.createComplex(0.2689530849456787, 1.5707963267948966);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1.5707963267948966, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.2689530849456787, complex2.getReal(), 0.01);
      
      Complex complex3 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.ONE.exp();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(2.718281828459045, complex4.getReal(), 0.01);
      
      Complex complex5 = complex3.ZERO.asin();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex5.ZERO.exp();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.NaN.add(complex0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      double double2 = complex0.getImaginary();
      assertEquals(0.0, double2, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex8 = complex2.I.acos();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1.5707963267948966, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.2689530849456787, complex2.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      
      Complex complex9 = complex3.ZERO.multiply(1.5707963267948966);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertTrue(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getReal(), 0.01);
      
      double double3 = complex6.NaN.getArgument();
      assertEquals(Double.NaN, double3, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      double double4 = complex3.getReal();
      assertEquals(3.6268604078470186, double4, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex10 = complex6.NaN.sqrt1z();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex11 = complex0.multiply(complex7);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex11.getReal(), 0.01);
      assertEquals(Double.NaN, complex11.getImaginary(), 0.01);
      assertTrue(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex12 = complex2.pow(complex7);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertSame(complex7, complex12);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex2.isInfinite());
      assertEquals(1.5707963267948966, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.2689530849456787, complex2.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(3.6268604078470186, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex13 = complex12.NaN.asin();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex13);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex7);
      assertSame(complex12, complex10);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertSame(complex13, complex11);
      assertSame(complex13, complex12);
      assertSame(complex13, complex10);
      assertSame(complex13, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex13);
      assertSame(complex7, complex12);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(1.5707963267948966, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.2689530849456787, complex2.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex14 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertNotNull(complex14);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      
      Complex complex15 = complex2.multiply(2.0);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertNotNull(complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      
      double double5 = complex7.I.abs();
      assertEquals(1.0, double5, 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double0, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex15));
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertSame(complex7, complex13);
      assertSame(complex7, complex12);
      
      Complex complex16 = Complex.valueOf(0.4980490207672119, (-866.91));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex0));
      assertNotNull(complex16);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex0);
      
      Complex complex17 = complex15.INF.atan();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertNotNull(complex17);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex15);
      assertSame(complex17, complex7);
      assertNotSame(complex17, complex0);
      assertSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertSame(complex17, complex10);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertSame(complex17, complex13);
      assertNotSame(complex17, complex6);
      assertSame(complex17, complex11);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex3);
      
      double double6 = complex5.getArgument();
      assertEquals(-0.0, double6, 0.01);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex16));
      assertEquals(double6, double1, 0.01);
      assertNotEquals(double6, double4, 0.01);
      assertNotEquals(double6, double3, 0.01);
      assertEquals(double6, double2, 0.01);
      assertNotEquals(double6, double0, 0.01);
      assertNotEquals(double6, double5, 0.01);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex16);
      
      boolean boolean1 = complex14.isNaN();
      assertFalse(boolean1);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex6);
      
      Complex complex18 = complex11.pow(complex15);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex16));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex17));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex1));
      assertNotNull(complex18);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertSame(complex11, complex12);
      assertSame(complex11, complex10);
      assertNotSame(complex11, complex5);
      assertSame(complex11, complex17);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex16);
      assertSame(complex11, complex18);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertSame(complex11, complex13);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertSame(complex11, complex7);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex16);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex18);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex17);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex18);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex18);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertSame(complex7, complex17);
      assertSame(complex7, complex13);
      assertSame(complex7, complex12);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex2);
      assertSame(complex18, complex12);
      assertSame(complex18, complex13);
      assertSame(complex18, complex17);
      assertSame(complex18, complex7);
      assertSame(complex18, complex10);
      assertNotSame(complex18, complex8);
      assertSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex1);
      
      Complex complex19 = complex12.conjugate();
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex16));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex14));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex17));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex18));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex15));
      assertFalse(complex5.equals((Object)complex6));
      assertTrue(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex16));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex18));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex15));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex17));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex6));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex3));
      assertNotNull(complex19);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex11);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex18);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex6);
      assertSame(complex12, complex19);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex15);
      assertSame(complex12, complex7);
      assertSame(complex12, complex17);
      assertSame(complex12, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex18);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex9);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex14);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex17);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex18);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex15);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex19);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex16);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex16);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex18);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex19);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex17);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex12);
      assertSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex18);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex19);
      assertSame(complex7, complex11);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex15);
      assertSame(complex7, complex17);
      assertSame(complex7, complex13);
      assertSame(complex7, complex12);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex5);
      assertSame(complex19, complex13);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex3);
      assertSame(complex19, complex11);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex0);
      assertSame(complex19, complex18);
      assertSame(complex19, complex17);
      assertSame(complex19, complex12);
      assertSame(complex19, complex10);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex9);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.sqrt();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      
      Complex complex2 = Complex.valueOf((-666.22519), (-666.22519));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex2.isInfinite());
      assertEquals((-666.22519), complex2.getReal(), 0.01);
      assertEquals((-666.22519), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex2.divide(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-666.22519), complex2.getReal(), 0.01);
      assertEquals((-666.22519), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex4 = complex3.ONE.reciprocal();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-666.22519), complex2.getReal(), 0.01);
      assertEquals((-666.22519), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      
      Complex complex5 = Complex.valueOf((-666.22519), (-666.22519));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertEquals((-666.22519), complex5.getReal(), 0.01);
      assertEquals((-666.22519), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex6.cosh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex6.ZERO.cos();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(1.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex6.ZERO.createComplex(0.0, (-666.22519));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertNotNull(complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-666.22519), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex9.tan();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-666.22519), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      
      Complex complex11 = complex6.INF.multiply((-489));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertNotNull(complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex11);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      
      String string0 = complex5.toString();
      assertEquals("(-666.22519, -666.22519)", string0);
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertNotNull(string0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertEquals((-666.22519), complex5.getReal(), 0.01);
      assertEquals((-666.22519), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      double double0 = complex7.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex11);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex12 = complex6.exp();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex9));
      assertTrue(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex0));
      assertTrue(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertNotNull(complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex11);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex1);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertTrue(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      
      Complex complex13 = complex5.pow(complex11);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex8));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex9));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex8));
      assertTrue(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex9));
      assertTrue(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertTrue(complex13.equals((Object)complex3));
      assertTrue(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex0));
      assertNotNull(complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertSame(complex11, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals((-666.22519), complex5.getReal(), 0.01);
      assertEquals((-666.22519), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getReal(), 0.01);
      assertTrue(complex11.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex11.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isNaN());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      
      double double1 = complex5.getReal();
      assertEquals((-666.22519), double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex10));
      assertFalse(complex5.equals((Object)complex3));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex12));
      assertFalse(complex5.equals((Object)complex13));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)complex8));
      assertFalse(complex5.equals((Object)complex9));
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex10);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex12);
      assertNotSame(complex5, complex13);
      assertNotSame(complex5, complex11);
      assertNotSame(complex5, complex8);
      assertNotSame(complex5, complex9);
      assertEquals((-666.22519), complex5.getReal(), 0.01);
      assertEquals((-666.22519), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex14 = complex3.sqrt1z();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex13));
      assertTrue(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex11));
      assertTrue(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex8));
      assertTrue(complex3.equals((Object)complex13));
      assertNotNull(complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertSame(complex14, complex3);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertSame(complex3, complex12);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertSame(complex3, complex14);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertTrue(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals((-666.22519), complex2.getReal(), 0.01);
      assertEquals((-666.22519), complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertTrue(complex3.isNaN());
      
      Complex complex15 = complex10.pow(complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex10));
      assertTrue(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex9));
      assertTrue(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex4));
      assertTrue(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertTrue(complex1.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex11));
      assertTrue(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex2));
      assertTrue(complex15.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex11));
      assertTrue(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex15);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex8);
      assertSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex13);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex12);
      assertSame(complex15, complex14);
      assertSame(complex15, complex7);
      assertSame(complex15, complex3);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex13);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex8);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertTrue(complex15.isNaN());
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals((-666.22519), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals((-1.0), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = null;
      try { 
        complex0.ZERO.divide((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = new Complex(2238.375, 6.283185307179586);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.NaN.pow(6.283185307179586);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertTrue(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex0.ONE.subtract(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals((-6.283185307179586), complex3.getImaginary(), 0.01);
      assertEquals((-2237.375), complex3.getReal(), 0.01);
      
      double double0 = complex0.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex4 = complex0.conjugate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = Complex.valueOf(0.6461620330810547);
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.6461620330810547, complex5.getReal(), 0.01);
      
      Complex complex6 = complex1.divide(complex4);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex0.atan();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex7.add(complex4);
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertTrue(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      boolean boolean0 = complex1.isNaN();
      assertFalse(boolean0);
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex9 = complex4.asin();
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex6.divide(Double.POSITIVE_INFINITY);
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex6, complex4);
      assertSame(complex6, complex10);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertSame(complex6, complex2);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex8);
      assertSame(complex10, complex6);
      assertNotSame(complex10, complex4);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(2238.375, complex1.getReal(), 0.01);
      assertEquals(6.283185307179586, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.NaN.atan();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.NaN.multiply(7);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      
      boolean boolean0 = complex0.isNaN();
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex3 = complex0.ZERO.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      
      ComplexField complexField0 = complex0.getField();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex4 = complex0.tan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      
      Complex complex5 = complex0.ZERO.multiply(complex3);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex5.tan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      complex6.ZERO.hashCode();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      ComplexField complexField1 = complex0.I.getField();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertNotNull(complexField1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertSame(complexField1, complexField0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex7 = (Complex)complex4.readResolve();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertTrue(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex3));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertSame(complex4, complex1);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = Complex.ZERO;
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex4.divide(complex8);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      
      Complex complex10 = complex9.sqrt();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertNotNull(complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex4);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex2);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex4);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      Complex complex11 = complex10.ZERO.acos();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertTrue(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex3));
      assertNotNull(complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex4);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertSame(complex10, complex2);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex11);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex3);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1.5707963267948966, complex11.getReal(), 0.01);
      assertEquals(-0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex9.I.asin();
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex9));
      assertTrue(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertTrue(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex10));
      assertTrue(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertTrue(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex12);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex3);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex4, complex7);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertSame(complex4, complex2);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex12);
      assertSame(complex4, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex7);
      assertSame(complex9, complex1);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex4);
      assertSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertEquals(0.8813735870195428, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertTrue(complex4.isNaN());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertTrue(complex9.isNaN());
      
      boolean boolean1 = complex0.isNaN();
      assertFalse(boolean1);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(boolean1 == boolean0);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex13 = complex0.add((double) 7);
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex12));
      assertNotNull(complex13);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex12);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex13.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex13.getImaginary(), 0.01);
      assertTrue(complex13.isInfinite());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Complex complex0 = new Complex((-2224.35421126));
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-2224.35421126), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      Complex complex1 = Complex.valueOf((-2224.35421126), (-1458.15));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.conjugate();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      double double0 = complex2.getArgument();
      assertEquals(2.5613337282259536, double0, 0.01);
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.INF.reciprocal();
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex2.NaN.exp();
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      Complex complex5 = complex4.INF.negate();
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex5.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      
      Complex complex6 = complex0.INF.subtract(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-2224.35421126), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      
      Complex complex7 = complex0.cos();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-2224.35421126), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.9943222663835073, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex7.sqrt();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-2224.35421126), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.9943222663835073, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9971570921291727, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex4.cos();
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex9);
      assertNotSame(complex4, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex0);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals((-2224.35421126), complex1.getReal(), 0.01);
      assertEquals((-1458.15), complex1.getImaginary(), 0.01);
      assertEquals(1458.15, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals((-2224.35421126), complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex8.atan();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-2224.35421126), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.9943222663835073, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.9971570921291727, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex10.isInfinite());
      assertFalse(complex10.isNaN());
      assertEquals(0.7839746870160207, complex10.getReal(), 0.01);
      assertEquals((-5.551115123125783E-17), complex10.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-1.0), 501.1);
      assertNotNull(complex0);
      assertEquals((-1.0), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(501.1, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.exp();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals((-1.0), complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(501.1, complex0.getImaginary(), 0.01);
      assertEquals((-0.3678325197208906), complex1.getImaginary(), 0.01);
      assertEquals(0.005875429549686941, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.acos();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex2 = complex1.ZERO.pow((-1585.1696365897205));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      
      Complex complex3 = complex1.NaN.createComplex(0.0, 3493.47);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(3493.47, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.multiply(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      
      Complex complex5 = (Complex)complex4.INF.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertTrue(complex5.equals((Object)complex4));
      assertTrue(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex4);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertTrue(complex5.isInfinite());
      
      Complex complex6 = complex0.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      
      double double0 = complex6.getArgument();
      assertEquals((-2.356194490192345), double0, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      
      Complex complex7 = complex6.INF.divide(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      
      double double1 = complex7.ZERO.getArgument();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex2.ZERO.multiply(0.0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      double double2 = complex1.getImaginary();
      assertEquals(Double.NaN, double2, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      Complex complex9 = complex2.sqrt1z();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertTrue(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex2);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex4);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      
      Complex complex10 = complex1.I.asin();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.8813735870195428, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      
      Complex complex11 = (Complex)complex10.I.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertNotNull(complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertEquals(0.8813735870195428, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(1.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex2.divide(586.48);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex8));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex4));
      assertTrue(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex10));
      assertNotNull(complex12);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex4);
      assertSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex8);
      assertSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      
      double double3 = complex4.getArgument();
      assertEquals(0.7853981633974483, double3, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex1);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      
      Complex complex13 = complex1.subtract(0.7853981633974483);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex12);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex7);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex7);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      
      double double4 = complex4.getArgument();
      assertEquals(0.7853981633974483, double4, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertEquals(double4, double3, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex13));
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex8);
      assertSame(complex4, complex0);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex4.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex4.getReal(), 0.01);
      
      Complex complex14 = complex13.multiply(2885.831304623);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertTrue(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex6));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex8));
      assertTrue(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertNotNull(complex14);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex12);
      assertSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex10);
      assertSame(complex13, complex14);
      assertNotSame(complex13, complex5);
      assertSame(complex13, complex7);
      assertSame(complex13, complex9);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex6);
      assertNotSame(complex1, complex8);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex6);
      assertSame(complex1, complex14);
      assertSame(complex1, complex7);
      assertSame(complex14, complex12);
      assertNotSame(complex14, complex10);
      assertSame(complex14, complex13);
      assertNotSame(complex14, complex8);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex1);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertSame(complex14, complex7);
      assertNotSame(complex14, complex2);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(Double.NaN, complex13.getReal(), 0.01);
      assertTrue(complex13.isNaN());
      assertTrue(complex1.isNaN());
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getReal(), 0.01);
      assertEquals(Double.NaN, complex14.getImaginary(), 0.01);
      assertFalse(complex14.isInfinite());
      assertTrue(complex14.isNaN());
      
      Complex complex15 = complex7.sin();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex3));
      assertTrue(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex11));
      assertFalse(complex6.equals((Object)complex14));
      assertFalse(complex6.equals((Object)complex13));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex12));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex10));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex11));
      assertNotNull(complex15);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex7);
      assertSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex15, complex2);
      assertSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex4);
      assertSame(complex15, complex13);
      assertSame(complex15, complex9);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex11);
      assertSame(complex15, complex14);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex10);
      assertSame(complex15, complex7);
      assertSame(complex15, complex12);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex14);
      assertNotSame(complex6, complex13);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex15);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex12);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex2);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex13);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex12);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex15);
      assertSame(complex7, complex14);
      assertNotSame(complex7, complex11);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex15.getImaginary(), 0.01);
      assertTrue(complex15.isNaN());
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex15.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertTrue(complex7.isNaN());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      
      Complex complex1 = complex0.ZERO.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex0.NaN.subtract(complex2);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = (Complex)complex2.I.readResolve();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(1.0, complex4.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex4.isNaN());
      
      Complex complex5 = complex3.sqrt1z();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      
      Complex complex6 = complex5.NaN.add(complex2);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertTrue(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex3);
      assertNotSame(complex5, complex0);
      assertSame(complex6, complex5);
      assertSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex3.NaN.sqrt1z();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertSame(complex3, complex7);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex7.NaN.acos();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex1));
      assertTrue(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertSame(complex3, complex7);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex8);
      assertNotSame(complex7, complex0);
      assertSame(complex7, complex3);
      assertSame(complex7, complex5);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertSame(complex8, complex7);
      assertSame(complex8, complex5);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex1);
      assertSame(complex8, complex6);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex4);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      
      Complex complex9 = complex1.ONE.multiply(2633);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertNotNull(complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(2633.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = Complex.valueOf((-656.07946286), (-656.07946286));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertNotNull(complex10);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertEquals((-656.07946286), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals((-656.07946286), complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      
      List<Complex> list0 = complex2.nthRoot(1141);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertNotNull(list0);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(complex1));
      assertTrue(list0.contains(complex6));
      
      Complex complex11 = complex3.ZERO.subtract((-656.07946286));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex2));
      assertNotNull(complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertSame(complex3, complex7);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex4);
      assertSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex2);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(656.07946286, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      
      Complex complex12 = complex2.log();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex6));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex9));
      assertTrue(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex10));
      assertTrue(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex0));
      assertNotNull(complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex5);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex10);
      assertSame(complex12, complex7);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex3);
      assertNotSame(complex12, complex0);
      assertSame(complex12, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      assertTrue(complex12.isNaN());
      assertEquals(Double.NaN, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertEquals(Double.NaN, complex12.getReal(), 0.01);
      
      Complex complex13 = complex1.sqrt();
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertTrue(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex5));
      assertNotNull(complex13);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex5);
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertEquals(1.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      
      try { 
        complex13.NaN.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      double double0 = 445.8965702725;
      Complex complex0 = new Complex(445.8965702725);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(445.8965702725, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.exp();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(445.8965702725, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(4.471157504467788E193, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      ComplexField complexField0 = complex1.I.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(445.8965702725, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(4.471157504467788E193, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      int int0 = 0;
      try { 
        complex0.INF.nthRoot(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: 0
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      double double0 = 301.388357;
      Complex complex0 = Complex.valueOf(301.388357, 4446.1937296988);
      assertNotNull(complex0);
      assertEquals(4446.1937296988, complex0.getImaginary(), 0.01);
      assertEquals(301.388357, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      
      try { 
        complex0.I.multiply((Complex) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.I.subtract((-673.38240236022));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(673.38240236022, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.ONE.multiply(1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.I.sqrt();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865476, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.7071067811865475, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      
      String string0 = complex4.NaN.toString();
      assertEquals("(NaN, NaN)", string0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(string0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865476, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.7071067811865475, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      
      List<Complex> list0 = complex3.nthRoot(1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(list0);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(complex4));
      assertTrue(list0.contains(complex3));
      
      Complex complex5 = complex2.ONE.tanh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      assertEquals(0.7615941559557649, complex5.getReal(), 0.01);
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      
      Complex complex6 = complex4.ZERO.acos();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.7071067811865476, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.7071067811865475, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(1.5707963267948966, complex6.getReal(), 0.01);
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex2.divide(complex0);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertTrue(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      
      double double0 = complex0.getReal();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex8 = complex0.multiply((-20.0));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertNotNull(complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      String string1 = complex8.toString();
      assertEquals("(-0.0, -0.0)", string1);
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertTrue(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(-0.0, complex8.getImaginary(), 0.01);
      assertEquals(-0.0, complex8.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertFalse(complex8.isNaN());
      
      Complex complex9 = complex2.sinh();
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(2.3012989023072947, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = Complex.valueOf((-468.869), 4933.9105279548385);
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex4);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      assertEquals(4933.9105279548385, complex10.getImaginary(), 0.01);
      assertEquals((-468.869), complex10.getReal(), 0.01);
      
      Complex complex11 = complex1.divide((-673.38240236022));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertNotNull(complex11);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex11);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isNaN());
      assertEquals(1.0, complex1.getImaginary(), 0.01);
      assertEquals(673.38240236022, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals((-1.0), complex11.getReal(), 0.01);
      assertEquals((-0.0014850402928484293), complex11.getImaginary(), 0.01);
      assertFalse(complex11.isInfinite());
      assertFalse(complex11.isNaN());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Complex complex0 = new Complex(2095.48705499, 0.0);
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.ZERO.cosh();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = new Complex(2095.48705499);
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2095.48705499, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      String string0 = complex2.toString();
      assertEquals("(2095.48705499, 0.0)", string0);
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(string0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2095.48705499, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      Complex complex3 = Complex.valueOf(923.1409210086044, 0.0);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertEquals(923.1409210086044, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      
      Complex complex4 = complex3.NaN.divide(complex0);
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(923.1409210086044, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex0.add(complex2);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2095.48705499, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4190.97410998, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex5.ONE.reciprocal();
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex3));
      assertTrue(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2095.48705499, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4190.97410998, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex6.isNaN());
      assertEquals(-0.0, complex6.getImaginary(), 0.01);
      assertEquals(1.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      
      Complex complex7 = complex5.multiply(642.06055);
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex7);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(2095.48705499, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(2095.48705499, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex5.getImaginary(), 0.01);
      assertEquals(4190.97410998, complex5.getReal(), 0.01);
      assertFalse(complex5.isInfinite());
      assertFalse(complex5.isNaN());
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(2690859.1420895196, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = Complex.valueOf((-1818.9216612466));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex2);
      assertEquals((-1818.9216612466), complex8.getReal(), 0.01);
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Complex complex0 = new Complex(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex1 = (Complex)complex0.readResolve();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      boolean boolean0 = complex0.equals(complex1);
      assertTrue(boolean0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = Complex.INF;
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.negate();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.ONE.negate();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.0), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.NaN.tanh();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex4));
      assertTrue(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.0), complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(-0.0, complex4.getImaginary(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex2.NaN.add(complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      complex6.NaN.hashCode();
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex2));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex6.getImaginary(), 0.01);
      assertFalse(complex6.isInfinite());
      assertTrue(complex6.isNaN());
      assertEquals(Double.NaN, complex6.getReal(), 0.01);
      
      Complex complex7 = complex0.NaN.add(complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      
      Complex complex8 = complex7.I.acos();
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      List<Complex> list0 = complex0.nthRoot(7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertNotNull(list0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(7, list0.size());
      assertFalse(list0.isEmpty());
      assertTrue(list0.contains(complex1));
      assertFalse(list0.contains(complex5));
      
      Complex complex9 = complex0.cos();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      
      Complex complex10 = complex9.I.acos();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex10.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      double double0 = complex10.ZERO.getArgument();
      assertEquals(0.0, double0, 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex4));
      assertTrue(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex7));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex10.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex10.isInfinite());
      
      Complex complex11 = complex9.reciprocal();
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertNotNull(complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      boolean boolean1 = complex11.equals(complex0);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex6));
      assertTrue(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex6));
      assertTrue(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex7));
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
      assertEquals(1.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      
      double double1 = complex0.abs();
      assertEquals(0.0, double1, 0.01);
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      
      Complex complex12 = complex8.cosh();
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex11);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex2);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.77571291870694), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(1.5960680219775756, complex12.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex13 = complex2.ONE.add(complex9);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex10));
      assertTrue(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex8);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isNaN());
      assertEquals(2.0, complex13.getReal(), 0.01);
      assertFalse(complex13.isInfinite());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      assertEquals(1.0, complex9.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertEquals(-0.0, complex9.getImaginary(), 0.01);
      
      Complex complex14 = Complex.valueOf(0.0, 0.10906457901000977);
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex12));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex3));
      assertNotNull(complex14);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex3);
      assertFalse(complex14.isInfinite());
      assertFalse(complex14.isNaN());
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.10906457901000977, complex14.getImaginary(), 0.01);
      
      List<Complex> list1 = complex12.nthRoot(7);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(list1.equals((Object)list0));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertNotNull(list1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(list1, list0);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.77571291870694), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(1.5960680219775756, complex12.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertFalse(list1.isEmpty());
      assertEquals(7, list1.size());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(list1.contains(complex1));
      
      Complex complex15 = complex12.atan();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertNotNull(complex15);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.77571291870694), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(1.5960680219775756, complex12.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(1.2725183358061773, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals((-0.29508434770009256), complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      String string0 = complex12.toString();
      assertEquals("(1.5960680219775756, -1.77571291870694)", string0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertNotNull(string0);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.77571291870694), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(1.5960680219775756, complex12.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex16 = complex12.asin();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex2));
      assertTrue(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertNotNull(complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex16);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex13);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex15);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex15);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex14);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1.77571291870694), complex12.getImaginary(), 0.01);
      assertFalse(complex12.isInfinite());
      assertFalse(complex12.isNaN());
      assertEquals(1.5960680219775756, complex12.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals((-1.5707963267948966), complex16.getImaginary(), 0.01);
      assertFalse(complex16.isInfinite());
      assertFalse(complex16.isNaN());
      assertEquals(0.6894227397753538, complex16.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(1.5707963267948966, complex8.getReal(), 0.01);
      assertEquals((-0.8813735870195429), complex8.getImaginary(), 0.01);
      assertFalse(complex8.isNaN());
      
      Complex complex17 = complex0.add(2069.0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex11));
      assertNotNull(complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex2);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex11);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex17.isInfinite());
      assertEquals(2069.0, complex17.getReal(), 0.01);
      assertEquals(0.0, complex17.getImaginary(), 0.01);
      assertFalse(complex17.isNaN());
      
      Complex complex18 = Complex.valueOf(20.0);
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex6));
      assertNotNull(complex18);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex6);
      assertFalse(complex18.isNaN());
      assertEquals(20.0, complex18.getReal(), 0.01);
      assertEquals(0.0, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
      
      Complex complex19 = complex7.multiply(1);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex8));
      assertNotNull(complex19);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex19);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex18);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex5);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex2);
      assertSame(complex19, complex6);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      
      Complex complex20 = complex3.tanh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex18));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex17));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex19));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex12));
      assertTrue(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex16));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex20.equals((Object)complex8));
      assertTrue(complex20.equals((Object)complex0));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex17));
      assertTrue(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex19));
      assertTrue(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex6));
      assertNotNull(complex20);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex20);
      assertNotSame(complex3, complex18);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex19);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex16);
      assertNotSame(complex20, complex7);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex0);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex20.getImaginary(), 0.01);
      assertEquals(-0.0, complex20.getReal(), 0.01);
      assertFalse(complex20.isInfinite());
      assertFalse(complex20.isNaN());
      
      Complex complex21 = complex19.negate();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex12));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex20));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex18));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex20));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex20));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex16));
      assertNotNull(complex21);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex20);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex18);
      assertNotSame(complex2, complex21);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex20);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex11);
      assertNotSame(complex7, complex17);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex15);
      assertNotSame(complex7, complex8);
      assertSame(complex7, complex21);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex9);
      assertSame(complex7, complex19);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex11);
      assertSame(complex7, complex6);
      assertNotSame(complex7, complex16);
      assertNotSame(complex7, complex2);
      assertSame(complex7, complex5);
      assertNotSame(complex7, complex13);
      assertNotSame(complex7, complex14);
      assertNotSame(complex7, complex20);
      assertNotSame(complex7, complex18);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex4);
      assertSame(complex19, complex5);
      assertSame(complex19, complex7);
      assertNotSame(complex19, complex9);
      assertSame(complex19, complex21);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex0);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex2);
      assertSame(complex19, complex6);
      assertNotSame(complex19, complex20);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex8);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex15);
      assertSame(complex21, complex7);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex11);
      assertSame(complex21, complex6);
      assertSame(complex21, complex19);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex14);
      assertSame(complex21, complex5);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex20);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex16);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex7.getReal(), 0.01);
      assertEquals(Double.NaN, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      assertTrue(complex7.isNaN());
      assertEquals(Double.NaN, complex19.getReal(), 0.01);
      assertEquals(Double.NaN, complex19.getImaginary(), 0.01);
      assertTrue(complex19.isNaN());
      assertFalse(complex19.isInfinite());
      assertEquals(Double.NaN, complex21.getReal(), 0.01);
      assertTrue(complex21.isNaN());
      assertEquals(Double.NaN, complex21.getImaginary(), 0.01);
      assertFalse(complex21.isInfinite());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      double double0 = 0.0;
      Complex complex0 = new Complex((-1080.9446969), 0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = Complex.valueOf(0.0, (-1080.9446969));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.ZERO.divide(complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      int int0 = (-66);
      Complex complex3 = complex2.ZERO.multiply((-66));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getReal(), 0.01);
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      
      int int1 = 227;
      List<Complex> list0 = complex2.INF.nthRoot(227);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(list0);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertFalse(list0.contains(complex1));
      
      Complex complex4 = complex0.atan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.5698712103503758), complex4.getReal(), 0.01);
      assertEquals(1.1102230246251564E-16, complex4.getImaginary(), 0.01);
      
      Complex complex5 = complex4.atan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.5698712103503758), complex4.getReal(), 0.01);
      assertEquals(1.1102230246251564E-16, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1102230246251564E-16, complex5.getImaginary(), 0.01);
      assertEquals((-1.003617906008343), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      
      Complex complex6 = complex5.ZERO.multiply(complex1);
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertNotNull(complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.5698712103503758), complex4.getReal(), 0.01);
      assertEquals(1.1102230246251564E-16, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1102230246251564E-16, complex5.getImaginary(), 0.01);
      assertEquals((-1.003617906008343), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ONE.exp();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex2));
      assertTrue(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertNotNull(complex7);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex0);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals((-1.5698712103503758), complex4.getReal(), 0.01);
      assertEquals(1.1102230246251564E-16, complex4.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.1102230246251564E-16, complex5.getImaginary(), 0.01);
      assertEquals((-1.003617906008343), complex5.getReal(), 0.01);
      assertFalse(complex5.isNaN());
      assertEquals(0.0, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertEquals(2.718281828459045, complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex2.ONE.exp();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertTrue(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex6));
      assertTrue(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex8);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals((-1080.9446969), complex0.getReal(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals((-1080.9446969), complex1.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals(2.718281828459045, complex8.getReal(), 0.01);
      assertFalse(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(0.0, complex8.getImaginary(), 0.01);
      
      try { 
        complex3.nthRoot((-66));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -66
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      assertNotNull(complex0);
      
      Complex complex1 = complex0.multiply((-3193.78));
      assertNotNull(complex1);
      assertSame(complex0, complex1);
      assertSame(complex1, complex0);
      
      Complex complex2 = complex1.NaN.atan();
      assertNotNull(complex2);
      assertSame(complex0, complex1);
      assertSame(complex0, complex2);
      assertSame(complex1, complex0);
      assertSame(complex1, complex2);
      assertSame(complex2, complex1);
      assertSame(complex2, complex0);
      
      Complex complex3 = Complex.valueOf((-1094.1089245353232), 6.591143677421159E-251);
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      
      Complex complex4 = complex2.ONE.sin();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      
      Complex complex5 = complex1.I.divide(complex0);
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      
      Complex complex6 = complex5.INF.atan();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertSame(complex6, complex2);
      assertSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      
      Complex complex7 = complex6.pow((-1094.1089245353232));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex7);
      assertSame(complex6, complex2);
      assertSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertSame(complex6, complex0);
      assertSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex3);
      assertSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertSame(complex7, complex5);
      assertSame(complex7, complex2);
      assertSame(complex7, complex6);
      assertSame(complex7, complex0);
      
      Complex complex8 = complex6.cos();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex4));
      assertNotNull(complex8);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertSame(complex1, complex7);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex8);
      assertSame(complex5, complex7);
      assertSame(complex6, complex2);
      assertSame(complex6, complex1);
      assertSame(complex6, complex5);
      assertSame(complex6, complex0);
      assertSame(complex6, complex7);
      assertNotSame(complex6, complex3);
      assertSame(complex6, complex8);
      assertNotSame(complex6, complex4);
      assertSame(complex8, complex2);
      assertSame(complex8, complex5);
      assertSame(complex8, complex1);
      assertSame(complex8, complex6);
      assertSame(complex8, complex0);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex4);
      assertSame(complex8, complex7);
      
      Complex complex9 = complex0.negate();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertNotNull(complex9);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex0);
      assertSame(complex9, complex1);
      assertSame(complex9, complex6);
      assertSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex2);
      assertSame(complex9, complex8);
      
      Object object0 = complex5.INF.readResolve();
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(object0.equals((Object)complex9));
      assertFalse(object0.equals((Object)complex5));
      assertFalse(object0.equals((Object)complex1));
      assertFalse(object0.equals((Object)complex8));
      assertFalse(object0.equals((Object)complex4));
      assertFalse(object0.equals((Object)complex6));
      assertFalse(object0.equals((Object)complex3));
      assertFalse(object0.equals((Object)complex7));
      assertFalse(object0.equals((Object)complex2));
      assertFalse(object0.equals((Object)complex0));
      assertNotNull(object0);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertSame(complex1, complex7);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertNotSame(complex5, object0);
      assertSame(complex5, complex6);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex9);
      assertSame(complex5, complex8);
      assertSame(complex5, complex7);
      assertNotSame(object0, complex9);
      assertNotSame(object0, complex5);
      assertNotSame(object0, complex1);
      assertNotSame(object0, complex8);
      assertNotSame(object0, complex4);
      assertNotSame(object0, complex6);
      assertNotSame(object0, complex3);
      assertNotSame(object0, complex7);
      assertNotSame(object0, complex2);
      assertNotSame(object0, complex0);
      
      Complex complex10 = complex1.negate();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex4));
      assertNotNull(complex10);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex7);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertSame(complex0, complex6);
      assertSame(complex0, complex5);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex8);
      assertSame(complex1, complex0);
      assertSame(complex1, complex7);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex5);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex8);
      assertSame(complex10, complex9);
      assertSame(complex10, complex0);
      assertNotSame(complex10, object0);
      assertSame(complex10, complex2);
      assertSame(complex10, complex7);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      assertSame(complex10, complex5);
      assertSame(complex10, complex1);
      
      Complex complex11 = Complex.valueOf((-3282.401571966));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertNotNull(complex11);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      
      Complex complex12 = complex2.multiply(complex11);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertNotNull(complex12);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex5);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertSame(complex2, complex12);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertSame(complex12, complex7);
      assertSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertSame(complex12, complex1);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex5);
      
      Complex complex13 = complex10.NaN.subtract(complex5);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex11));
      assertFalse(complex5.equals((Object)object0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)object0));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex11));
      assertNotNull(complex13);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex5);
      assertNotSame(complex0, object0);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex12);
      assertSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex11);
      assertSame(complex5, complex6);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex3);
      assertSame(complex5, complex7);
      assertSame(complex5, complex12);
      assertSame(complex5, complex0);
      assertSame(complex5, complex2);
      assertNotSame(complex5, object0);
      assertSame(complex5, complex10);
      assertSame(complex5, complex9);
      assertSame(complex5, complex13);
      assertSame(complex10, complex8);
      assertSame(complex10, complex12);
      assertSame(complex10, complex2);
      assertSame(complex10, complex5);
      assertSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertSame(complex10, complex0);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex11);
      assertSame(complex10, complex7);
      assertSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      assertNotSame(complex13, complex4);
      assertSame(complex13, complex1);
      assertSame(complex13, complex8);
      assertSame(complex13, complex5);
      assertSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      assertSame(complex13, complex0);
      assertNotSame(complex13, object0);
      assertNotSame(complex13, complex3);
      assertSame(complex13, complex12);
      assertSame(complex13, complex6);
      assertSame(complex13, complex10);
      assertSame(complex13, complex9);
      assertSame(complex13, complex7);
      
      Complex complex14 = Complex.valueOf((-9.204784113858607E-279));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex6));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)object0));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex12));
      assertNotNull(complex14);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, object0);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex12);
      
      Complex complex15 = Complex.valueOf(0.0);
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)object0));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex3));
      assertNotNull(complex15);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, object0);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex3);
      
      Complex complex16 = complex2.INF.multiply(complex0);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertNotNull(complex16);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertSame(complex16, complex8);
      assertSame(complex16, complex5);
      assertSame(complex16, complex0);
      assertNotSame(complex16, object0);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex15);
      assertSame(complex16, complex13);
      assertSame(complex16, complex6);
      assertNotSame(complex16, complex4);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex7);
      assertSame(complex16, complex10);
      assertSame(complex16, complex9);
      assertSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex16);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      
      Complex complex17 = complex4.ONE.negate();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertNotNull(complex17);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, object0);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex6);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex16);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      
      Complex complex18 = complex9.ZERO.reciprocal();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)object0));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex17));
      assertNotNull(complex18);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex18, complex4);
      assertSame(complex18, complex1);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex15);
      assertSame(complex18, complex10);
      assertSame(complex18, complex9);
      assertNotSame(complex18, complex17);
      assertSame(complex18, complex6);
      assertSame(complex18, complex13);
      assertNotSame(complex18, complex14);
      assertSame(complex18, complex0);
      assertNotSame(complex18, object0);
      assertSame(complex18, complex2);
      assertSame(complex18, complex5);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex3);
      assertSame(complex18, complex7);
      assertSame(complex18, complex16);
      assertSame(complex18, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex10);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex15);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex1);
      assertSame(complex9, complex6);
      assertSame(complex9, complex16);
      assertSame(complex9, complex18);
      assertSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertSame(complex9, complex8);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex12);
      
      Complex complex19 = complex11.ZERO.tan();
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex9));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex6));
      assertTrue(complex19.equals((Object)complex15));
      assertFalse(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex14));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)object0));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertNotNull(complex19);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex9);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex6);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex16);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex14);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, object0);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex0);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      
      Complex complex20 = complex10.log();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex19));
      assertNotNull(complex20);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertSame(complex20, complex6);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex15);
      assertSame(complex20, complex10);
      assertSame(complex20, complex9);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex0);
      assertSame(complex20, complex16);
      assertSame(complex20, complex1);
      assertSame(complex20, complex8);
      assertNotSame(complex20, complex3);
      assertSame(complex20, complex5);
      assertSame(complex20, complex18);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex19);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex4);
      assertSame(complex20, complex13);
      assertSame(complex10, complex16);
      assertSame(complex10, complex8);
      assertSame(complex10, complex12);
      assertSame(complex10, complex2);
      assertSame(complex10, complex20);
      assertNotSame(complex10, complex19);
      assertSame(complex10, complex5);
      assertSame(complex10, complex1);
      assertSame(complex10, complex18);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex0);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex7);
      assertSame(complex10, complex13);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      
      boolean boolean0 = complex12.equals(complex4);
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex18));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex13));
      assertFalse(complex11.equals((Object)complex20));
      assertFalse(complex11.equals((Object)complex15));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex16));
      assertFalse(complex11.equals((Object)complex19));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex14));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)object0));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex17));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)object0));
      assertFalse(complex12.equals((Object)complex3));
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex20);
      assertNotSame(complex2, complex19);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex16);
      assertSame(complex2, complex18);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex18);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex20);
      assertNotSame(complex11, complex15);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex16);
      assertNotSame(complex11, complex19);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex14);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, object0);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex17);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex12, complex19);
      assertSame(complex12, complex2);
      assertNotSame(complex12, complex14);
      assertNotSame(complex12, complex4);
      assertSame(complex12, complex10);
      assertSame(complex12, complex9);
      assertSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex15);
      assertSame(complex12, complex13);
      assertNotSame(complex12, complex17);
      assertSame(complex12, complex7);
      assertSame(complex12, complex20);
      assertSame(complex12, complex0);
      assertNotSame(complex12, object0);
      assertSame(complex12, complex1);
      assertSame(complex12, complex8);
      assertNotSame(complex12, complex3);
      assertSame(complex12, complex16);
      assertSame(complex12, complex18);
      assertSame(complex12, complex5);
      
      Complex complex21 = complex2.reciprocal();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)object0));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex19));
      assertNotNull(complex21);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex20);
      assertNotSame(complex2, complex19);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex21);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex16);
      assertSame(complex2, complex18);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex21, object0);
      assertSame(complex21, complex12);
      assertSame(complex21, complex2);
      assertNotSame(complex21, complex14);
      assertSame(complex21, complex0);
      assertSame(complex21, complex10);
      assertSame(complex21, complex9);
      assertNotSame(complex21, complex17);
      assertSame(complex21, complex6);
      assertSame(complex21, complex13);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex15);
      assertSame(complex21, complex7);
      assertSame(complex21, complex8);
      assertNotSame(complex21, complex3);
      assertSame(complex21, complex5);
      assertSame(complex21, complex16);
      assertSame(complex21, complex20);
      assertNotSame(complex21, complex19);
      assertSame(complex21, complex18);
      assertSame(complex21, complex1);
      
      String string0 = complex10.toString();
      assertEquals("(NaN, NaN)", string0);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex19));
      assertNotNull(string0);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertSame(complex10, complex16);
      assertSame(complex10, complex8);
      assertSame(complex10, complex12);
      assertSame(complex10, complex2);
      assertSame(complex10, complex20);
      assertNotSame(complex10, complex19);
      assertSame(complex10, complex5);
      assertSame(complex10, complex1);
      assertSame(complex10, complex18);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex0);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex7);
      assertSame(complex10, complex13);
      assertSame(complex10, complex21);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      
      double double0 = complex2.abs();
      assertEquals(Double.NaN, double0, 0.01);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex20);
      assertNotSame(complex2, complex19);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertSame(complex2, complex21);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertSame(complex2, complex16);
      assertSame(complex2, complex18);
      assertSame(complex2, complex7);
      assertSame(complex2, complex8);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      
      Complex complex22 = complex20.pow((-1094.1089245353232));
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)object0));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex19));
      assertFalse(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)object0));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)object0));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex19));
      assertNotNull(complex22);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex22);
      assertSame(complex1, complex12);
      assertSame(complex20, complex6);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex15);
      assertSame(complex20, complex22);
      assertSame(complex20, complex10);
      assertSame(complex20, complex9);
      assertSame(complex20, complex7);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, object0);
      assertSame(complex20, complex0);
      assertSame(complex20, complex16);
      assertSame(complex20, complex1);
      assertSame(complex20, complex8);
      assertNotSame(complex20, complex3);
      assertSame(complex20, complex5);
      assertSame(complex20, complex18);
      assertSame(complex20, complex12);
      assertNotSame(complex20, complex19);
      assertSame(complex20, complex2);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex4);
      assertSame(complex20, complex21);
      assertSame(complex20, complex13);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex17);
      assertSame(complex22, complex10);
      assertSame(complex22, complex9);
      assertSame(complex22, complex20);
      assertSame(complex22, complex6);
      assertSame(complex22, complex18);
      assertSame(complex22, complex13);
      assertNotSame(complex22, complex4);
      assertSame(complex22, complex2);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, object0);
      assertNotSame(complex22, complex15);
      assertSame(complex22, complex0);
      assertSame(complex22, complex8);
      assertSame(complex22, complex5);
      assertSame(complex22, complex16);
      assertNotSame(complex22, complex19);
      assertSame(complex22, complex21);
      assertSame(complex22, complex1);
      assertSame(complex22, complex12);
      assertNotSame(complex22, complex14);
      assertSame(complex22, complex7);
      assertSame(complex10, complex16);
      assertSame(complex10, complex8);
      assertSame(complex10, complex12);
      assertSame(complex10, complex2);
      assertSame(complex10, complex20);
      assertNotSame(complex10, complex19);
      assertSame(complex10, complex5);
      assertSame(complex10, complex1);
      assertSame(complex10, complex18);
      assertNotSame(complex10, complex3);
      assertSame(complex10, complex22);
      assertSame(complex10, complex9);
      assertNotSame(complex10, complex17);
      assertNotSame(complex10, complex14);
      assertSame(complex10, complex0);
      assertNotSame(complex10, object0);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex15);
      assertSame(complex10, complex7);
      assertSame(complex10, complex13);
      assertSame(complex10, complex21);
      assertNotSame(complex10, complex4);
      assertSame(complex10, complex6);
      
      Complex complex23 = complex9.acos();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)object0));
      assertFalse(complex9.equals((Object)complex19));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)object0));
      assertFalse(complex23.equals((Object)complex14));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex19));
      assertNotNull(complex23);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex18);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex23);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, object0);
      assertSame(complex9, complex0);
      assertSame(complex9, complex23);
      assertSame(complex9, complex20);
      assertSame(complex9, complex10);
      assertSame(complex9, complex2);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex11);
      assertSame(complex9, complex13);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex4);
      assertSame(complex9, complex21);
      assertSame(complex9, complex1);
      assertSame(complex9, complex6);
      assertSame(complex9, complex16);
      assertSame(complex9, complex22);
      assertSame(complex9, complex18);
      assertSame(complex9, complex5);
      assertSame(complex9, complex7);
      assertNotSame(complex9, complex19);
      assertNotSame(complex9, complex3);
      assertSame(complex9, complex8);
      assertSame(complex9, complex12);
      assertNotSame(complex23, complex15);
      assertSame(complex23, complex18);
      assertSame(complex23, complex10);
      assertSame(complex23, complex9);
      assertNotSame(complex23, complex17);
      assertSame(complex23, complex6);
      assertSame(complex23, complex7);
      assertSame(complex23, complex21);
      assertNotSame(complex23, complex11);
      assertNotSame(complex23, object0);
      assertSame(complex23, complex0);
      assertSame(complex23, complex13);
      assertNotSame(complex23, complex4);
      assertSame(complex23, complex5);
      assertSame(complex23, complex12);
      assertSame(complex23, complex16);
      assertSame(complex23, complex2);
      assertNotSame(complex23, complex14);
      assertSame(complex23, complex20);
      assertNotSame(complex23, complex3);
      assertSame(complex23, complex1);
      assertSame(complex23, complex8);
      assertNotSame(complex23, complex19);
      assertSame(complex23, complex22);
      
      double double1 = complex1.getImaginary();
      assertEquals(Double.NaN, double1, 0.01);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertEquals(double1, double0, 0.01);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex18);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex23);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex22);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex6);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex7);
      assertSame(complex1, complex0);
      assertNotSame(complex1, complex15);
      assertSame(complex1, complex18);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex23);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex13);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex16);
      assertSame(complex1, complex8);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex22);
      assertSame(complex1, complex12);
      
      Complex complex24 = complex17.sqrt();
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex23));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex21));
      assertFalse(complex4.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex12));
      assertNotNull(complex24);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex23);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex22);
      assertSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex24);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex1, complex24);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex23);
      assertSame(complex1, complex13);
      assertSame(complex1, complex16);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex18);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex22);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, object0);
      assertNotSame(complex17, complex24);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex21);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex22);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex23);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex6);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex8);
      assertSame(complex2, complex22);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex20);
      assertSame(complex2, complex23);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex21);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertSame(complex2, complex16);
      assertSame(complex2, complex18);
      assertSame(complex2, complex7);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex23);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex22);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex24);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex21);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex5);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex6);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex17);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex0);
      assertNotSame(complex24, complex13);
      assertNotSame(complex24, complex1);
      assertNotSame(complex24, complex18);
      assertNotSame(complex24, complex21);
      assertNotSame(complex24, complex10);
      assertNotSame(complex24, complex9);
      assertNotSame(complex24, complex16);
      assertNotSame(complex24, complex7);
      assertNotSame(complex24, complex12);
      
      Complex complex25 = complex16.add(complex24);
      assertFalse(complex0.equals((Object)object0));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex24));
      assertFalse(complex16.equals((Object)complex19));
      assertFalse(complex16.equals((Object)complex17));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)object0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)object0));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)object0));
      assertFalse(complex17.equals((Object)complex24));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex23));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)object0));
      assertFalse(complex2.equals((Object)complex19));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex24));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertFalse(complex4.equals((Object)complex23));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)object0));
      assertFalse(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex24));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex14));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex23));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)object0));
      assertFalse(complex24.equals((Object)complex6));
      assertFalse(complex24.equals((Object)complex19));
      assertFalse(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex22));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex10));
      assertFalse(complex24.equals((Object)complex9));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex25.equals((Object)complex11));
      assertFalse(complex25.equals((Object)complex19));
      assertFalse(complex25.equals((Object)complex4));
      assertFalse(complex25.equals((Object)complex15));
      assertFalse(complex25.equals((Object)complex17));
      assertFalse(complex25.equals((Object)complex14));
      assertFalse(complex25.equals((Object)object0));
      assertFalse(complex25.equals((Object)complex24));
      assertFalse(complex25.equals((Object)complex3));
      assertNotNull(complex25);
      assertSame(complex0, complex13);
      assertNotSame(complex0, complex19);
      assertSame(complex0, complex2);
      assertNotSame(complex0, complex15);
      assertSame(complex0, complex23);
      assertSame(complex0, complex25);
      assertNotSame(complex0, complex3);
      assertSame(complex0, complex22);
      assertSame(complex0, complex6);
      assertSame(complex0, complex1);
      assertSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex11);
      assertSame(complex0, complex18);
      assertSame(complex0, complex5);
      assertSame(complex0, complex16);
      assertSame(complex0, complex20);
      assertNotSame(complex0, object0);
      assertNotSame(complex0, complex14);
      assertSame(complex0, complex7);
      assertNotSame(complex0, complex24);
      assertNotSame(complex0, complex17);
      assertSame(complex0, complex12);
      assertSame(complex0, complex21);
      assertSame(complex0, complex10);
      assertSame(complex0, complex9);
      assertNotSame(complex16, complex19);
      assertSame(complex16, complex25);
      assertNotSame(complex16, complex17);
      assertSame(complex16, complex0);
      assertSame(complex16, complex2);
      assertNotSame(complex16, complex11);
      assertSame(complex16, complex6);
      assertSame(complex16, complex22);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex3);
      assertSame(complex16, complex23);
      assertSame(complex16, complex8);
      assertSame(complex16, complex5);
      assertSame(complex16, complex20);
      assertNotSame(complex16, object0);
      assertNotSame(complex16, complex15);
      assertSame(complex16, complex13);
      assertSame(complex16, complex18);
      assertSame(complex16, complex1);
      assertNotSame(complex16, complex24);
      assertSame(complex16, complex7);
      assertSame(complex16, complex10);
      assertSame(complex16, complex9);
      assertSame(complex16, complex12);
      assertNotSame(complex16, complex14);
      assertSame(complex16, complex21);
      assertNotSame(complex1, complex24);
      assertSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, object0);
      assertSame(complex1, complex6);
      assertSame(complex1, complex20);
      assertSame(complex1, complex23);
      assertSame(complex1, complex13);
      assertSame(complex1, complex16);
      assertSame(complex1, complex5);
      assertSame(complex1, complex21);
      assertNotSame(complex1, complex14);
      assertSame(complex1, complex12);
      assertNotSame(complex1, complex3);
      assertSame(complex1, complex0);
      assertSame(complex1, complex25);
      assertSame(complex1, complex18);
      assertSame(complex1, complex10);
      assertSame(complex1, complex9);
      assertSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex17);
      assertSame(complex1, complex8);
      assertNotSame(complex1, complex19);
      assertSame(complex1, complex22);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex25);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex18);
      assertNotSame(complex17, object0);
      assertNotSame(complex17, complex24);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex21);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex20);
      assertNotSame(complex17, complex22);
      assertNotSame(complex17, complex19);
      assertNotSame(complex17, complex23);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex6);
      assertNotSame(complex2, complex19);
      assertNotSame(complex2, complex17);
      assertSame(complex2, complex25);
      assertNotSame(complex2, complex11);
      assertSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertSame(complex2, complex8);
      assertSame(complex2, complex22);
      assertNotSame(complex2, object0);
      assertSame(complex2, complex20);
      assertSame(complex2, complex23);
      assertSame(complex2, complex5);
      assertNotSame(complex2, complex24);
      assertNotSame(complex2, complex15);
      assertSame(complex2, complex21);
      assertSame(complex2, complex1);
      assertSame(complex2, complex13);
      assertSame(complex2, complex16);
      assertSame(complex2, complex18);
      assertSame(complex2, complex7);
      assertSame(complex2, complex10);
      assertSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertSame(complex2, complex12);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex25);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex23);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex22);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex20);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, object0);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex24);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex21);
      assertNotSame(complex24, complex14);
      assertNotSame(complex24, complex5);
      assertNotSame(complex24, complex20);
      assertNotSame(complex24, complex23);
      assertNotSame(complex24, complex15);
      assertNotSame(complex24, object0);
      assertNotSame(complex24, complex6);
      assertNotSame(complex24, complex19);
      assertNotSame(complex24, complex4);
      assertNotSame(complex24, complex8);
      assertNotSame(complex24, complex22);
      assertNotSame(complex24, complex2);
      assertNotSame(complex24, complex3);
      assertNotSame(complex24, complex17);
      assertNotSame(complex24, complex11);
      assertNotSame(complex24, complex0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Complex complex0 = new Complex((-1515.87510991033), 3468.882741756);
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      
      Complex complex1 = new Complex(Double.POSITIVE_INFINITY, (-1764.59859715425));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      
      Complex complex2 = complex0.multiply(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex3 = complex0.INF.atan();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      
      Complex complex4 = complex3.NaN.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
      
      String string0 = complex2.NaN.toString();
      assertEquals("(NaN, NaN)", string0);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(string0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      
      Complex complex5 = complex0.NaN.subtract(Double.POSITIVE_INFINITY);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = (Complex)complex0.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex2));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(3468.882741756, complex6.getImaginary(), 0.01);
      assertEquals((-1515.87510991033), complex6.getReal(), 0.01);
      
      Complex complex7 = (Complex)complex0.readResolve();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertNotNull(complex7);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex6);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertFalse(complex7.isInfinite());
      assertEquals(3468.882741756, complex7.getImaginary(), 0.01);
      assertEquals((-1515.87510991033), complex7.getReal(), 0.01);
      
      ComplexField complexField0 = complex0.getField();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      
      ComplexField complexField1 = complex5.getField();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complexField1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex6);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex1);
      assertSame(complexField1, complexField0);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      
      Complex complex8 = complex1.asin();
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertNotNull(complex8);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex6);
      assertSame(complex8, complex5);
      assertNotSame(complex8, complex0);
      assertSame(complex8, complex4);
      assertSame(complex8, complex3);
      assertNotSame(complex8, complex2);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertTrue(complex8.isNaN());
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex1.subtract(6.283185307179586);
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertTrue(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex0));
      assertNotNull(complex9);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex0);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertEquals((-1764.59859715425), complex9.getImaginary(), 0.01);
      assertFalse(complex9.isNaN());
      assertTrue(complex9.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex9.getReal(), 0.01);
      
      Complex complex10 = complex2.pow(complex5);
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex6));
      assertFalse(complex5.equals((Object)complex7));
      assertFalse(complex5.equals((Object)complex9));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex9);
      assertNotSame(complex5, complex0);
      assertSame(complex5, complex3);
      assertSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertSame(complex5, complex8);
      assertNotSame(complex5, complex6);
      assertSame(complex5, complex10);
      assertNotSame(complex5, complex7);
      assertNotSame(complex5, complex9);
      assertNotSame(complex5, complex1);
      assertSame(complex10, complex8);
      assertSame(complex10, complex5);
      assertSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex7);
      assertSame(complex10, complex3);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertTrue(complex1.isInfinite());
      assertEquals((-1764.59859715425), complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex1.getReal(), 0.01);
      assertTrue(complex2.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex2.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertTrue(complex5.isNaN());
      assertEquals(Double.NaN, complex5.getReal(), 0.01);
      assertEquals(Double.NaN, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertTrue(complex10.isNaN());
      assertEquals(Double.NaN, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(Double.NaN, complex10.getReal(), 0.01);
      
      complex4.hashCode();
      assertFalse(complex0.equals((Object)complex2));
      assertTrue(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex9));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex2));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex10);
      assertNotSame(complex3, complex9);
      assertSame(complex3, complex4);
      assertSame(complex3, complex8);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex2);
      assertSame(complex3, complex10);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertSame(complex3, complex5);
      assertNotSame(complex3, complex6);
      assertNotSame(complex4, complex0);
      assertSame(complex4, complex3);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertSame(complex4, complex10);
      assertNotSame(complex4, complex9);
      assertSame(complex4, complex5);
      assertNotSame(complex4, complex2);
      assertSame(complex4, complex8);
      assertFalse(complex0.isInfinite());
      assertEquals(3468.882741756, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals((-1515.87510991033), complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getReal(), 0.01);
      assertEquals(Double.NaN, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      assertTrue(complex3.isNaN());
      assertEquals(Double.NaN, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
      assertEquals(Double.NaN, complex4.getReal(), 0.01);
      assertTrue(complex4.isNaN());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.negate();
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.multiply((-1188));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      double double0 = complex1.getReal();
      assertEquals(-0.0, double0, 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex2));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex3 = complex2.exp();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complex3);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      Complex complex4 = complex3.ZERO.sqrt1z();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      
      Complex complex5 = complex4.INF.conjugate();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertNotNull(complex5);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex5.getReal(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertTrue(complex5.isInfinite());
      
      double double1 = complex4.getArgument();
      assertEquals(0.0, double1, 0.01);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertEquals(1.0, complex4.getReal(), 0.01);
      
      Complex complex6 = complex2.I.multiply((-1438));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals((-1438.0), complex6.getImaginary(), 0.01);
      assertFalse(complex6.isNaN());
      assertFalse(complex6.isInfinite());
      assertEquals(-0.0, complex6.getReal(), 0.01);
      
      Complex complex7 = complex2.INF.conjugate();
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex6));
      assertTrue(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex4));
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex5);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex7.getReal(), 0.01);
      assertFalse(complex7.isNaN());
      assertTrue(complex7.isInfinite());
      assertEquals(Double.NEGATIVE_INFINITY, complex7.getImaginary(), 0.01);
      
      double double2 = complex2.getArgument();
      assertEquals((-3.141592653589793), double2, 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      
      double double3 = complex3.getArgument();
      assertEquals(-0.0, double3, 0.01);
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertEquals(double3, double0, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertEquals(double3, double1, 0.01);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      ComplexField complexField0 = complex3.getField();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertTrue(complex2.equals((Object)complex0));
      assertTrue(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex0));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex1);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex2.isNaN());
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertEquals(-0.0, complex3.getImaginary(), 0.01);
      
      complex1.hashCode();
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex6));
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex3));
      assertTrue(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(-0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Complex complex0 = Complex.ONE;
      assertNotNull(complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.pow(919.788011453353);
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      
      Complex complex2 = complex1.NaN.subtract(complex0);
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(1.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertTrue(complex2.isNaN());
      
      Complex complex3 = complex0.sinh();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex3.sin();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertEquals(1.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(1.1752011936438014, complex3.getReal(), 0.01);
      assertFalse(complex3.isInfinite());
      assertEquals(0.9227673888116062, complex4.getReal(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isInfinite());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Complex complex0 = Complex.valueOf(1.3083870531380308E144);
      assertNotNull(complex0);
      assertEquals(1.3083870531380308E144, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      Complex complex1 = complex0.log();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(1.3083870531380308E144, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(331.8410485125892, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex1.INF.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(1.3083870531380308E144, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(331.8410485125892, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertFalse(complex1.isInfinite());
      assertEquals(Double.NaN, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex2.isNaN());
      assertEquals(Double.NaN, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.tanh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertEquals(1.3083870531380308E144, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.asin();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertEquals(1.3083870531380308E144, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex4.getReal(), 0.01);
      assertEquals((-332.5341956931492), complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Complex complex0 = Complex.I;
      assertNotNull(complex0);
      
      Complex complex1 = Complex.INF;
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex1, complex0);
      
      Complex complex2 = complex0.ONE.divide(complex1);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      double double0 = complex2.INF.getArgument();
      assertEquals(0.7853981633974483, double0, 0.01);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      
      Complex complex3 = complex0.I.asin();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      List<Complex> list0 = complex3.ONE.nthRoot(550);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(list0);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex1);
      
      Complex complex4 = complex0.INF.pow(complex1);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      
      Complex complex5 = complex3.INF.negate();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex1));
      assertNotNull(complex5);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex1);
      
      Complex complex6 = complex4.NaN.cos();
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex1));
      assertNotNull(complex6);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex1);
      
      Complex complex7 = complex0.asin();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      
      Complex complex8 = complex4.I.exp();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      
      Complex complex9 = complex8.INF.tanh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex2));
      assertNotNull(complex9);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex1);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex1);
      assertSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      
      Complex complex10 = complex7.ONE.sinh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertNotNull(complex10);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      
      Complex complex11 = complex10.INF.add(complex2);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex4));
      assertTrue(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex10));
      assertNotNull(complex11);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex11);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex10);
      
      Complex complex12 = complex10.tan();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex11));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertNotNull(complex12);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex9);
      assertNotSame(complex7, complex12);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex8);
      assertNotSame(complex7, complex11);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex10);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex5);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex12);
      assertNotSame(complex12, complex6);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex2);
      
      Complex complex13 = Complex.valueOf(2124.7, 0.0);
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertNotNull(complex13);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex11);
      
      Complex complex14 = complex4.multiply((-1857.34946579746));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertNotNull(complex14);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      
      Complex complex15 = complex1.INF.divide(0.7853981633974483);
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex15);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      
      double double1 = complex15.INF.getArgument();
      assertEquals(0.7853981633974483, double1, 0.01);
      assertFalse(complex15.equals((Object)complex0));
      assertTrue(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex13));
      assertTrue(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex7));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertEquals(double1, double0, 0.01);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex7);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      
      Complex complex16 = complex13.divide(complex3);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex11));
      assertNotNull(complex16);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex12);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex11);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex16);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      
      double double2 = complex4.getReal();
      assertEquals(Double.NaN, double2, 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      
      boolean boolean0 = complex3.isInfinite();
      assertFalse(boolean0);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex8));
      assertFalse(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex13));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex16));
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex8);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex16);
      
      Complex complex17 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex15));
      assertNotNull(complex17);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex13);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex15);
      
      Complex complex18 = Complex.valueOf(0.7853981633974483, 432.023676);
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex3));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex8));
      assertFalse(complex18.equals((Object)complex6));
      assertNotNull(complex18);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex3);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex8);
      assertNotSame(complex18, complex6);
      
      Complex complex19 = complex14.NaN.sinh();
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex12));
      assertFalse(complex19.equals((Object)complex1));
      assertFalse(complex19.equals((Object)complex17));
      assertFalse(complex19.equals((Object)complex11));
      assertFalse(complex19.equals((Object)complex13));
      assertFalse(complex19.equals((Object)complex3));
      assertFalse(complex19.equals((Object)complex10));
      assertFalse(complex19.equals((Object)complex15));
      assertTrue(complex19.equals((Object)complex4));
      assertFalse(complex19.equals((Object)complex7));
      assertFalse(complex19.equals((Object)complex18));
      assertFalse(complex19.equals((Object)complex2));
      assertFalse(complex19.equals((Object)complex16));
      assertFalse(complex19.equals((Object)complex8));
      assertFalse(complex19.equals((Object)complex5));
      assertFalse(complex19.equals((Object)complex0));
      assertNotNull(complex19);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex19);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex18);
      assertSame(complex19, complex9);
      assertNotSame(complex19, complex12);
      assertNotSame(complex19, complex1);
      assertNotSame(complex19, complex17);
      assertNotSame(complex19, complex11);
      assertNotSame(complex19, complex13);
      assertNotSame(complex19, complex3);
      assertNotSame(complex19, complex4);
      assertNotSame(complex19, complex10);
      assertNotSame(complex19, complex15);
      assertNotSame(complex19, complex7);
      assertNotSame(complex19, complex18);
      assertNotSame(complex19, complex2);
      assertNotSame(complex19, complex16);
      assertSame(complex19, complex14);
      assertSame(complex19, complex6);
      assertNotSame(complex19, complex8);
      assertNotSame(complex19, complex5);
      assertNotSame(complex19, complex0);
      
      Complex complex20 = Complex.I;
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertNotNull(complex20);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex7);
      
      Complex complex21 = complex8.subtract(complex20);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex20.equals((Object)complex17));
      assertFalse(complex20.equals((Object)complex11));
      assertFalse(complex20.equals((Object)complex13));
      assertFalse(complex20.equals((Object)complex9));
      assertFalse(complex20.equals((Object)complex8));
      assertFalse(complex20.equals((Object)complex12));
      assertFalse(complex20.equals((Object)complex5));
      assertFalse(complex20.equals((Object)complex6));
      assertFalse(complex20.equals((Object)complex19));
      assertFalse(complex20.equals((Object)complex2));
      assertFalse(complex20.equals((Object)complex16));
      assertFalse(complex20.equals((Object)complex14));
      assertFalse(complex20.equals((Object)complex10));
      assertFalse(complex20.equals((Object)complex18));
      assertFalse(complex20.equals((Object)complex4));
      assertFalse(complex20.equals((Object)complex1));
      assertFalse(complex20.equals((Object)complex15));
      assertFalse(complex20.equals((Object)complex3));
      assertFalse(complex20.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex0));
      assertFalse(complex21.equals((Object)complex13));
      assertFalse(complex21.equals((Object)complex19));
      assertFalse(complex21.equals((Object)complex8));
      assertFalse(complex21.equals((Object)complex12));
      assertFalse(complex21.equals((Object)complex5));
      assertFalse(complex21.equals((Object)complex7));
      assertFalse(complex21.equals((Object)complex2));
      assertFalse(complex21.equals((Object)complex6));
      assertFalse(complex21.equals((Object)complex16));
      assertFalse(complex21.equals((Object)complex15));
      assertFalse(complex21.equals((Object)complex9));
      assertFalse(complex21.equals((Object)complex14));
      assertFalse(complex21.equals((Object)complex4));
      assertFalse(complex21.equals((Object)complex10));
      assertFalse(complex21.equals((Object)complex1));
      assertFalse(complex21.equals((Object)complex3));
      assertFalse(complex21.equals((Object)complex11));
      assertFalse(complex21.equals((Object)complex17));
      assertFalse(complex21.equals((Object)complex18));
      assertFalse(complex21.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex21);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex20);
      assertSame(complex20, complex0);
      assertNotSame(complex20, complex17);
      assertNotSame(complex20, complex11);
      assertNotSame(complex20, complex13);
      assertNotSame(complex20, complex9);
      assertNotSame(complex20, complex8);
      assertNotSame(complex20, complex12);
      assertNotSame(complex20, complex5);
      assertNotSame(complex20, complex6);
      assertNotSame(complex20, complex19);
      assertNotSame(complex20, complex2);
      assertNotSame(complex20, complex16);
      assertNotSame(complex20, complex14);
      assertNotSame(complex20, complex10);
      assertNotSame(complex20, complex18);
      assertNotSame(complex20, complex4);
      assertNotSame(complex20, complex21);
      assertNotSame(complex20, complex1);
      assertNotSame(complex20, complex15);
      assertNotSame(complex20, complex3);
      assertNotSame(complex20, complex7);
      assertNotSame(complex21, complex0);
      assertNotSame(complex21, complex13);
      assertNotSame(complex21, complex19);
      assertNotSame(complex21, complex8);
      assertNotSame(complex21, complex12);
      assertNotSame(complex21, complex5);
      assertNotSame(complex21, complex7);
      assertNotSame(complex21, complex2);
      assertNotSame(complex21, complex6);
      assertNotSame(complex21, complex16);
      assertNotSame(complex21, complex15);
      assertNotSame(complex21, complex9);
      assertNotSame(complex21, complex14);
      assertNotSame(complex21, complex4);
      assertNotSame(complex21, complex10);
      assertNotSame(complex21, complex1);
      assertNotSame(complex21, complex3);
      assertNotSame(complex21, complex11);
      assertNotSame(complex21, complex17);
      assertNotSame(complex21, complex18);
      assertNotSame(complex21, complex20);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex21);
      assertNotSame(complex8, complex10);
      assertNotSame(complex8, complex14);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex19);
      assertNotSame(complex8, complex12);
      assertNotSame(complex8, complex13);
      assertNotSame(complex8, complex9);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex20);
      assertNotSame(complex8, complex11);
      assertNotSame(complex8, complex16);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex15);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex17);
      assertNotSame(complex8, complex18);
      assertNotSame(complex8, complex7);
      
      double double3 = complex13.abs();
      assertEquals(2124.7, double3, 0.01);
      assertNotEquals(double3, double0, 0.01);
      assertNotEquals(double3, double1, 0.01);
      assertNotEquals(double3, double2, 0.01);
      assertFalse(complex13.equals((Object)complex20));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex14));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex21));
      assertFalse(complex13.equals((Object)complex15));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex19));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex18));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex16));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex17));
      assertNotSame(complex13, complex20);
      assertNotSame(complex13, complex5);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex14);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex21);
      assertNotSame(complex13, complex15);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex19);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex18);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex16);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex17);
      
      Complex complex22 = complex14.tan();
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex21));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex21));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex21));
      assertTrue(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex5));
      assertNotNull(complex22);
      assertNotSame(complex14, complex0);
      assertSame(complex14, complex9);
      assertNotSame(complex14, complex15);
      assertSame(complex14, complex22);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex16);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex7);
      assertSame(complex14, complex6);
      assertNotSame(complex14, complex17);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex18);
      assertNotSame(complex14, complex20);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex21);
      assertNotSame(complex14, complex3);
      assertSame(complex14, complex19);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex12);
      assertNotSame(complex14, complex13);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex21);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex8);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex16);
      assertNotSame(complex1, complex18);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex20);
      assertNotSame(complex1, complex17);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex21);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex15);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex19);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex14);
      assertNotSame(complex1, complex22);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex9);
      assertNotSame(complex1, complex0);
      assertNotSame(complex4, complex12);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex13);
      assertNotSame(complex4, complex19);
      assertNotSame(complex4, complex22);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex16);
      assertNotSame(complex4, complex15);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex14);
      assertNotSame(complex4, complex9);
      assertNotSame(complex4, complex5);
      assertNotSame(complex4, complex10);
      assertNotSame(complex4, complex21);
      assertNotSame(complex4, complex11);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex17);
      assertNotSame(complex4, complex18);
      assertNotSame(complex4, complex20);
      assertNotSame(complex22, complex17);
      assertSame(complex22, complex9);
      assertNotSame(complex22, complex11);
      assertNotSame(complex22, complex3);
      assertNotSame(complex22, complex1);
      assertNotSame(complex22, complex15);
      assertSame(complex22, complex14);
      assertNotSame(complex22, complex13);
      assertNotSame(complex22, complex7);
      assertNotSame(complex22, complex10);
      assertNotSame(complex22, complex4);
      assertNotSame(complex22, complex21);
      assertNotSame(complex22, complex16);
      assertNotSame(complex22, complex18);
      assertNotSame(complex22, complex20);
      assertSame(complex22, complex6);
      assertNotSame(complex22, complex2);
      assertSame(complex22, complex19);
      assertNotSame(complex22, complex8);
      assertNotSame(complex22, complex12);
      assertNotSame(complex22, complex0);
      assertNotSame(complex22, complex5);
      
      Complex complex23 = complex9.exp();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertTrue(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex21));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex21));
      assertFalse(complex8.equals((Object)complex10));
      assertFalse(complex8.equals((Object)complex14));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex19));
      assertFalse(complex8.equals((Object)complex22));
      assertFalse(complex8.equals((Object)complex12));
      assertFalse(complex8.equals((Object)complex13));
      assertFalse(complex8.equals((Object)complex9));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex20));
      assertFalse(complex8.equals((Object)complex11));
      assertFalse(complex8.equals((Object)complex16));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex15));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex17));
      assertFalse(complex8.equals((Object)complex18));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex18));
      assertFalse(complex9.equals((Object)complex20));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex17));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex21));
      assertTrue(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex12));
      assertFalse(complex23.equals((Object)complex1));
      assertFalse(complex23.equals((Object)complex11));
      assertFalse(complex23.equals((Object)complex17));
      assertFalse(complex23.equals((Object)complex10));
      assertFalse(complex23.equals((Object)complex21));
      assertFalse(complex23.equals((Object)complex15));
      assertFalse(complex23.equals((Object)complex3));
      assertFalse(complex23.equals((Object)complex7));
      assertFalse(complex23.equals((Object)complex18));
      assertFalse(complex23.equals((Object)complex20));
      assertFalse(complex23.equals((Object)complex5));
      assertTrue(complex23.equals((Object)complex4));
      assertFalse(complex23.equals((Object)complex2));
      assertFalse(complex23.equals((Object)complex16));
      assertFalse(complex23.equals((Object)complex13));
      assertFalse(complex23.equals((Object)complex0));
      assertFalse(complex23.equals((Object)complex8));
      assertNotNull(complex23);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex19);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex22);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex23);
      assertNotSame(complex0, complex1);
      assertSame(complex0, complex20);
      assertNotSame(complex0, complex4);
      
      Complex complex24 = complex4.reciprocal();
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex23));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertTrue(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex21));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex24.equals((Object)complex12));
      assertFalse(complex24.equals((Object)complex1));
      assertFalse(complex24.equals((Object)complex11));
      assertFalse(complex24.equals((Object)complex17));
      assertFalse(complex24.equals((Object)complex8));
      assertFalse(complex24.equals((Object)complex5));
      assertFalse(complex24.equals((Object)complex0));
      assertFalse(complex24.equals((Object)complex20));
      assertTrue(complex24.equals((Object)complex4));
      assertFalse(complex24.equals((Object)complex7));
      assertFalse(complex24.equals((Object)complex18));
      assertFalse(complex24.equals((Object)complex2));
      assertFalse(complex24.equals((Object)complex16));
      assertFalse(complex24.equals((Object)complex13));
      assertFalse(complex24.equals((Object)complex3));
      assertFalse(complex24.equals((Object)complex15));
      assertFalse(complex24.equals((Object)complex21));
      assertFalse(complex24.equals((Object)complex10));
      assertNotNull(complex24);
      
      ComplexField complexField0 = complex22.getField();
      assertFalse(complex14.equals((Object)complex0));
      assertFalse(complex14.equals((Object)complex15));
      assertFalse(complex14.equals((Object)complex5));
      assertFalse(complex14.equals((Object)complex16));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex17));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex18));
      assertFalse(complex14.equals((Object)complex20));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex21));
      assertFalse(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex4));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex23));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex16));
      assertTrue(complex1.equals((Object)complex15));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex18));
      assertFalse(complex1.equals((Object)complex20));
      assertFalse(complex1.equals((Object)complex17));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex21));
      assertFalse(complex1.equals((Object)complex7));
      assertTrue(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex24));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex19));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex14));
      assertFalse(complex1.equals((Object)complex22));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex12));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex0));
      assertTrue(complex4.equals((Object)complex23));
      assertFalse(complex4.equals((Object)complex13));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex16));
      assertTrue(complex4.equals((Object)complex22));
      assertFalse(complex4.equals((Object)complex15));
      assertFalse(complex4.equals((Object)complex2));
      assertTrue(complex4.equals((Object)complex19));
      assertFalse(complex4.equals((Object)complex8));
      assertTrue(complex4.equals((Object)complex6));
      assertTrue(complex4.equals((Object)complex24));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex4.equals((Object)complex10));
      assertFalse(complex4.equals((Object)complex21));
      assertTrue(complex4.equals((Object)complex9));
      assertFalse(complex4.equals((Object)complex11));
      assertFalse(complex4.equals((Object)complex1));
      assertTrue(complex4.equals((Object)complex14));
      assertFalse(complex4.equals((Object)complex17));
      assertFalse(complex4.equals((Object)complex18));
      assertFalse(complex4.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex17));
      assertFalse(complex22.equals((Object)complex11));
      assertFalse(complex22.equals((Object)complex3));
      assertFalse(complex22.equals((Object)complex1));
      assertFalse(complex22.equals((Object)complex15));
      assertFalse(complex22.equals((Object)complex13));
      assertFalse(complex22.equals((Object)complex7));
      assertFalse(complex22.equals((Object)complex10));
      assertFalse(complex22.equals((Object)complex21));
      assertTrue(complex22.equals((Object)complex4));
      assertFalse(complex22.equals((Object)complex16));
      assertFalse(complex22.equals((Object)complex18));
      assertFalse(complex22.equals((Object)complex20));
      assertFalse(complex22.equals((Object)complex2));
      assertFalse(complex22.equals((Object)complex8));
      assertFalse(complex22.equals((Object)complex12));
      assertFalse(complex22.equals((Object)complex0));
      assertFalse(complex22.equals((Object)complex5));
      assertNotNull(complexField0);
      
      double double4 = complex12.abs();
      assertEquals(2.3945753355078105, double4, 0.01);
      assertNotEquals(double4, double2, 0.01);
      assertNotEquals(double4, double0, 0.01);
      assertNotEquals(double4, double3, 0.01);
      assertNotEquals(double4, double1, 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex12));
      assertFalse(complex7.equals((Object)complex24));
      assertFalse(complex7.equals((Object)complex11));
      assertFalse(complex7.equals((Object)complex17));
      assertFalse(complex7.equals((Object)complex19));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex10));
      assertFalse(complex7.equals((Object)complex21));
      assertFalse(complex7.equals((Object)complex15));
      assertFalse(complex7.equals((Object)complex9));
      assertFalse(complex7.equals((Object)complex23));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex8));
      assertFalse(complex7.equals((Object)complex16));
      assertFalse(complex7.equals((Object)complex13));
      assertFalse(complex7.equals((Object)complex18));
      assertFalse(complex7.equals((Object)complex20));
      assertFalse(complex7.equals((Object)complex22));
      assertFalse(complex7.equals((Object)complex14));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex0));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex22));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex20));
      assertFalse(complex10.equals((Object)complex19));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex16));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex21));
      assertFalse(complex10.equals((Object)complex23));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex17));
      assertFalse(complex10.equals((Object)complex18));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex24));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex17));
      assertFalse(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex3));
      assertFalse(complex12.equals((Object)complex13));
      assertFalse(complex12.equals((Object)complex19));
      assertFalse(complex12.equals((Object)complex6));
      assertFalse(complex12.equals((Object)complex20));
      assertFalse(complex12.equals((Object)complex14));
      assertFalse(complex12.equals((Object)complex22));
      assertFalse(complex12.equals((Object)complex5));
      assertFalse(complex12.equals((Object)complex8));
      assertFalse(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex21));
      assertFalse(complex12.equals((Object)complex23));
      assertFalse(complex12.equals((Object)complex15));
      assertFalse(complex12.equals((Object)complex24));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex18));
      assertFalse(complex12.equals((Object)complex16));
      
      double double5 = complex17.getImaginary();
      assertEquals(0.8414709848078965, double5, 0.01);
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex19));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex22));
      assertFalse(complex0.equals((Object)complex16));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex23));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex21));
      assertFalse(complex0.equals((Object)complex18));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex24));
      assertFalse(complex0.equals((Object)complex15));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex8));
      assertNotEquals(double5, double0, 0.01);
      assertNotEquals(double5, double4, 0.01);
      assertNotEquals(double5, double2, 0.01);
      assertNotEquals(double5, double1, 0.01);
      assertNotEquals(double5, double3, 0.01);
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex18));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex19));
      assertFalse(complex17.equals((Object)complex22));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex21));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex23));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex20));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex24));
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Complex complex0 = new Complex(1783.119731426781, (-427.188243961));
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.ZERO.createComplex(1783.119731426781, 0.0);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1783.119731426781, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex1.I.divide(complex0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1783.119731426781, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.27063506990452E-4), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(5.303737864088887E-4, complex2.getImaginary(), 0.01);
      
      Complex complex3 = complex0.ONE.sin();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(0.8414709848078965, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex2.ZERO.log();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertNotNull(complex4);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1783.119731426781, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.27063506990452E-4), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(5.303737864088887E-4, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      
      Complex complex5 = Complex.valueOf(1783.119731426781, (-2.6183651590639875E-8));
      assertFalse(complex5.equals((Object)complex3));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex0));
      assertNotNull(complex5);
      assertNotSame(complex5, complex3);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex0);
      assertEquals(1783.119731426781, complex5.getReal(), 0.01);
      assertEquals((-2.6183651590639875E-8), complex5.getImaginary(), 0.01);
      assertFalse(complex5.isNaN());
      assertFalse(complex5.isInfinite());
      
      Complex complex6 = complex0.cosh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertNotNull(complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      
      Complex complex7 = Complex.valueOf((-1620.6405401));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex5));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex0));
      assertNotNull(complex7);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex0);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertEquals((-1620.6405401), complex7.getReal(), 0.01);
      assertFalse(complex7.isInfinite());
      assertFalse(complex7.isNaN());
      
      Complex complex8 = complex6.add(complex4);
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex6));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex7));
      assertFalse(complex4.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex7));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertNotNull(complex8);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex7);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex8);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex2, complex1);
      assertNotSame(complex4, complex3);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex6);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex8);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex7);
      assertNotSame(complex4, complex5);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex7);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(1783.119731426781, complex1.getReal(), 0.01);
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
      assertFalse(complex2.isInfinite());
      assertEquals((-1.27063506990452E-4), complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(5.303737864088887E-4, complex2.getImaginary(), 0.01);
      assertTrue(complex4.isInfinite());
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(Double.NEGATIVE_INFINITY, complex4.getReal(), 0.01);
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertFalse(complex8.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex8.getImaginary(), 0.01);
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      Complex complex9 = complex6.acos();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex9.equals((Object)complex8));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex7));
      assertNotNull(complex9);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex8);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex7);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertTrue(complex9.isNaN());
      assertEquals(Double.NaN, complex9.getReal(), 0.01);
      assertEquals(Double.NaN, complex9.getImaginary(), 0.01);
      assertFalse(complex9.isInfinite());
      
      Complex complex10 = complex0.sinh();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex3));
      assertTrue(complex10.equals((Object)complex6));
      assertNotNull(complex10);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex0);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex3);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex10.getImaginary(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, complex10.getReal(), 0.01);
      assertFalse(complex10.isNaN());
      assertTrue(complex10.isInfinite());
      
      Complex complex11 = complex6.reciprocal();
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex0.equals((Object)complex7));
      assertFalse(complex6.equals((Object)complex4));
      assertFalse(complex6.equals((Object)complex8));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex9));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex7));
      assertTrue(complex6.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex0));
      assertNotNull(complex11);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex6, complex10);
      assertNotSame(complex6, complex4);
      assertNotSame(complex6, complex8);
      assertNotSame(complex6, complex11);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex9);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex7);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex0);
      assertFalse(complex0.isNaN());
      assertEquals((-427.188243961), complex0.getImaginary(), 0.01);
      assertEquals(1783.119731426781, complex0.getReal(), 0.01);
      assertFalse(complex0.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getImaginary(), 0.01);
      assertTrue(complex6.isInfinite());
      assertEquals(Double.POSITIVE_INFINITY, complex6.getReal(), 0.01);
      assertEquals(0.0, complex11.getReal(), 0.01);
      assertFalse(complex11.isInfinite());
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertFalse(complex11.isNaN());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Complex complex0 = Complex.ZERO;
      assertNotNull(complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      
      double double0 = 2.0760536193847656;
      Complex complex1 = complex0.multiply(2.0760536193847656);
      assertTrue(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      
      Complex complex2 = complex0.cos();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.ZERO.tan();
      assertTrue(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex3);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(-0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertFalse(complex2.isInfinite());
      assertFalse(complex3.isNaN());
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = complex0.ONE.sin();
      assertTrue(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex3);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertEquals(0.0, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertEquals(0.8414709848078965, complex4.getReal(), 0.01);
      assertFalse(complex4.isInfinite());
      
      int int0 = (-3937);
      try { 
        complex4.I.nthRoot((-3937));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot compute nth root for null or negative n: -3,937
         //
         verifyException("org.apache.commons.math3.complex.Complex", e);
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Complex complex0 = Complex.valueOf(4518.092901237322);
      assertNotNull(complex0);
      assertEquals(4518.092901237322, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      
      Complex complex1 = complex0.multiply(0);
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(4518.092901237322, complex0.getReal(), 0.01);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex1.getImaginary(), 0.01);
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      assertFalse(complex1.isNaN());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Complex complex0 = Complex.INF;
      assertNotNull(complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.asin();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
      assertTrue(complex0.isInfinite());
      assertFalse(complex0.isNaN());
      assertEquals(Double.POSITIVE_INFINITY, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getReal(), 0.01);
      assertEquals(Double.NaN, complex1.getImaginary(), 0.01);
      assertTrue(complex1.isNaN());
      assertFalse(complex1.isInfinite());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Complex complex0 = Complex.valueOf(0.0);
      assertNotNull(complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      
      Complex complex1 = complex0.I.sin();
      assertFalse(complex1.equals((Object)complex0));
      assertNotNull(complex1);
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      double double0 = complex1.I.abs();
      assertEquals(1.0, double0, 0.01);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex1.equals((Object)complex0));
      assertNotSame(complex0, complex1);
      assertNotSame(complex1, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex2 = complex0.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertNotNull(complex2);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      
      Complex complex3 = complex2.sqrt1z();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertNotNull(complex3);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex3);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex4 = Complex.valueOf(0.0, 7.515630833946181E-8);
      assertFalse(complex4.equals((Object)complex1));
      assertFalse(complex4.equals((Object)complex0));
      assertFalse(complex4.equals((Object)complex2));
      assertFalse(complex4.equals((Object)complex3));
      assertNotNull(complex4);
      assertNotSame(complex4, complex1);
      assertNotSame(complex4, complex0);
      assertNotSame(complex4, complex2);
      assertNotSame(complex4, complex3);
      assertEquals(0.0, complex4.getReal(), 0.01);
      assertEquals(7.515630833946181E-8, complex4.getImaginary(), 0.01);
      assertFalse(complex4.isNaN());
      assertFalse(complex4.isInfinite());
      
      Complex complex5 = complex3.acos();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex2));
      assertTrue(complex3.equals((Object)complex0));
      assertFalse(complex3.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex0));
      assertFalse(complex5.equals((Object)complex1));
      assertFalse(complex5.equals((Object)complex4));
      assertFalse(complex5.equals((Object)complex2));
      assertFalse(complex5.equals((Object)complex3));
      assertNotNull(complex5);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex1);
      assertNotSame(complex5, complex0);
      assertNotSame(complex5, complex1);
      assertNotSame(complex5, complex4);
      assertNotSame(complex5, complex2);
      assertNotSame(complex5, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      assertFalse(complex5.isNaN());
      assertEquals(-0.0, complex5.getImaginary(), 0.01);
      assertFalse(complex5.isInfinite());
      assertEquals(1.5707963267948966, complex5.getReal(), 0.01);
      
      Complex complex6 = complex2.ONE.tan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertNotNull(complex6);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.557407724654902, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      
      Complex complex7 = complex6.ZERO.sinh();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex5));
      assertFalse(complex6.equals((Object)complex0));
      assertFalse(complex6.equals((Object)complex2));
      assertFalse(complex6.equals((Object)complex3));
      assertFalse(complex6.equals((Object)complex1));
      assertFalse(complex6.equals((Object)complex4));
      assertTrue(complex7.equals((Object)complex0));
      assertTrue(complex7.equals((Object)complex3));
      assertFalse(complex7.equals((Object)complex1));
      assertFalse(complex7.equals((Object)complex4));
      assertFalse(complex7.equals((Object)complex2));
      assertFalse(complex7.equals((Object)complex6));
      assertFalse(complex7.equals((Object)complex5));
      assertNotNull(complex7);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex6, complex5);
      assertNotSame(complex6, complex0);
      assertNotSame(complex6, complex2);
      assertNotSame(complex6, complex3);
      assertNotSame(complex6, complex7);
      assertNotSame(complex6, complex1);
      assertNotSame(complex6, complex4);
      assertNotSame(complex7, complex0);
      assertNotSame(complex7, complex1);
      assertNotSame(complex7, complex4);
      assertNotSame(complex7, complex2);
      assertNotSame(complex7, complex6);
      assertNotSame(complex7, complex3);
      assertNotSame(complex7, complex5);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(1.557407724654902, complex6.getReal(), 0.01);
      assertFalse(complex6.isInfinite());
      assertFalse(complex6.isNaN());
      assertEquals(0.0, complex6.getImaginary(), 0.01);
      assertFalse(complex7.isNaN());
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(0.0, complex7.getImaginary(), 0.01);
      assertFalse(complex7.isInfinite());
      
      Complex complex8 = complex2.NaN.multiply((-2654));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex5));
      assertFalse(complex8.equals((Object)complex4));
      assertFalse(complex8.equals((Object)complex2));
      assertFalse(complex8.equals((Object)complex0));
      assertFalse(complex8.equals((Object)complex6));
      assertFalse(complex8.equals((Object)complex1));
      assertFalse(complex8.equals((Object)complex3));
      assertFalse(complex8.equals((Object)complex7));
      assertNotNull(complex8);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex8, complex5);
      assertNotSame(complex8, complex4);
      assertNotSame(complex8, complex2);
      assertNotSame(complex8, complex0);
      assertNotSame(complex8, complex6);
      assertNotSame(complex8, complex1);
      assertNotSame(complex8, complex3);
      assertNotSame(complex8, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertTrue(complex8.isNaN());
      assertEquals(Double.NaN, complex8.getImaginary(), 0.01);
      assertFalse(complex8.isInfinite());
      assertEquals(Double.NaN, complex8.getReal(), 0.01);
      
      String string0 = complex1.toString();
      assertEquals("(0.0, 1.1752011936438014)", string0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertNotNull(string0);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex9 = complex0.add(1.2216413021087646);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex9);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      
      ComplexField complexField0 = complex9.INF.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complexField0);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      
      Complex complex10 = complex9.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertNotNull(complex10);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      assertEquals(0.8848338063392444, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      
      Complex complex11 = complex10.atan();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertNotNull(complex11);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      assertEquals(0.8848338063392444, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7243725211476845, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      Complex complex12 = complex11.ONE.log();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex8));
      assertTrue(complex12.equals((Object)complex7));
      assertFalse(complex12.equals((Object)complex4));
      assertFalse(complex12.equals((Object)complex5));
      assertTrue(complex12.equals((Object)complex3));
      assertTrue(complex12.equals((Object)complex0));
      assertFalse(complex12.equals((Object)complex9));
      assertFalse(complex12.equals((Object)complex1));
      assertFalse(complex12.equals((Object)complex10));
      assertFalse(complex12.equals((Object)complex2));
      assertFalse(complex12.equals((Object)complex11));
      assertFalse(complex12.equals((Object)complex6));
      assertNotNull(complex12);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex0);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex12, complex8);
      assertNotSame(complex12, complex0);
      assertNotSame(complex12, complex4);
      assertNotSame(complex12, complex5);
      assertNotSame(complex12, complex7);
      assertNotSame(complex12, complex9);
      assertNotSame(complex12, complex1);
      assertNotSame(complex12, complex10);
      assertNotSame(complex12, complex2);
      assertNotSame(complex12, complex3);
      assertNotSame(complex12, complex11);
      assertNotSame(complex12, complex6);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      assertEquals(0.8848338063392444, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7243725211476845, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      assertEquals(0.0, complex12.getImaginary(), 0.01);
      assertFalse(complex12.isNaN());
      assertFalse(complex12.isInfinite());
      assertEquals(0.0, complex12.getReal(), 0.01);
      
      Complex complex13 = complex11.ZERO.subtract(complex2);
      assertFalse(complex13.equals((Object)complex1));
      assertFalse(complex13.equals((Object)complex9));
      assertFalse(complex13.equals((Object)complex12));
      assertFalse(complex13.equals((Object)complex10));
      assertFalse(complex13.equals((Object)complex8));
      assertFalse(complex13.equals((Object)complex7));
      assertFalse(complex13.equals((Object)complex0));
      assertFalse(complex13.equals((Object)complex4));
      assertFalse(complex13.equals((Object)complex2));
      assertFalse(complex13.equals((Object)complex6));
      assertFalse(complex13.equals((Object)complex11));
      assertFalse(complex13.equals((Object)complex3));
      assertFalse(complex13.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex1));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex12));
      assertFalse(complex11.equals((Object)complex7));
      assertFalse(complex11.equals((Object)complex5));
      assertFalse(complex11.equals((Object)complex6));
      assertFalse(complex11.equals((Object)complex9));
      assertFalse(complex11.equals((Object)complex10));
      assertFalse(complex11.equals((Object)complex3));
      assertFalse(complex11.equals((Object)complex2));
      assertFalse(complex11.equals((Object)complex0));
      assertFalse(complex11.equals((Object)complex8));
      assertFalse(complex11.equals((Object)complex1));
      assertFalse(complex11.equals((Object)complex4));
      assertNotNull(complex13);
      assertNotSame(complex13, complex1);
      assertNotSame(complex13, complex9);
      assertNotSame(complex13, complex12);
      assertNotSame(complex13, complex10);
      assertNotSame(complex13, complex8);
      assertNotSame(complex13, complex7);
      assertNotSame(complex13, complex0);
      assertNotSame(complex13, complex4);
      assertNotSame(complex13, complex2);
      assertNotSame(complex13, complex6);
      assertNotSame(complex13, complex11);
      assertNotSame(complex13, complex3);
      assertNotSame(complex13, complex5);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex5);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertNotSame(complex11, complex12);
      assertNotSame(complex11, complex6);
      assertNotSame(complex11, complex9);
      assertNotSame(complex11, complex3);
      assertNotSame(complex11, complex1);
      assertNotSame(complex11, complex4);
      assertNotSame(complex11, complex7);
      assertNotSame(complex11, complex5);
      assertNotSame(complex11, complex13);
      assertNotSame(complex11, complex10);
      assertNotSame(complex11, complex2);
      assertNotSame(complex11, complex0);
      assertNotSame(complex11, complex8);
      assertFalse(complex13.isNaN());
      assertEquals((-1.0), complex13.getReal(), 0.01);
      assertEquals(0.0, complex13.getImaginary(), 0.01);
      assertFalse(complex13.isInfinite());
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      assertEquals(0.8848338063392444, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      assertFalse(complex11.isNaN());
      assertFalse(complex11.isInfinite());
      assertEquals(0.7243725211476845, complex11.getReal(), 0.01);
      assertEquals(0.0, complex11.getImaginary(), 0.01);
      
      ComplexField complexField1 = complex1.getField();
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex1.equals((Object)complex10));
      assertFalse(complex1.equals((Object)complex2));
      assertFalse(complex1.equals((Object)complex13));
      assertFalse(complex1.equals((Object)complex7));
      assertFalse(complex1.equals((Object)complex12));
      assertFalse(complex1.equals((Object)complex8));
      assertFalse(complex1.equals((Object)complex3));
      assertFalse(complex1.equals((Object)complex11));
      assertFalse(complex1.equals((Object)complex0));
      assertFalse(complex1.equals((Object)complex4));
      assertFalse(complex1.equals((Object)complex5));
      assertFalse(complex1.equals((Object)complex6));
      assertFalse(complex1.equals((Object)complex9));
      assertNotNull(complexField1);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertSame(complexField1, complexField0);
      assertNotSame(complex1, complex10);
      assertNotSame(complex1, complex2);
      assertNotSame(complex1, complex13);
      assertNotSame(complex1, complex7);
      assertNotSame(complex1, complex12);
      assertNotSame(complex1, complex8);
      assertNotSame(complex1, complex3);
      assertNotSame(complex1, complex11);
      assertNotSame(complex1, complex0);
      assertNotSame(complex1, complex4);
      assertNotSame(complex1, complex5);
      assertNotSame(complex1, complex6);
      assertNotSame(complex1, complex9);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(1.1752011936438014, complex1.getImaginary(), 0.01);
      assertFalse(complex1.isNaN());
      assertEquals(0.0, complex1.getReal(), 0.01);
      assertFalse(complex1.isInfinite());
      
      Complex complex14 = complex0.multiply(1.0);
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertNotNull(complex14);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      
      Complex complex15 = complex14.ONE.sin();
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex9));
      assertFalse(complex14.equals((Object)complex1));
      assertFalse(complex14.equals((Object)complex10));
      assertFalse(complex14.equals((Object)complex5));
      assertTrue(complex14.equals((Object)complex7));
      assertFalse(complex14.equals((Object)complex11));
      assertFalse(complex14.equals((Object)complex2));
      assertFalse(complex14.equals((Object)complex6));
      assertTrue(complex14.equals((Object)complex0));
      assertTrue(complex14.equals((Object)complex12));
      assertTrue(complex14.equals((Object)complex3));
      assertFalse(complex14.equals((Object)complex8));
      assertFalse(complex14.equals((Object)complex13));
      assertFalse(complex14.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex9));
      assertFalse(complex15.equals((Object)complex10));
      assertFalse(complex15.equals((Object)complex1));
      assertFalse(complex15.equals((Object)complex5));
      assertFalse(complex15.equals((Object)complex6));
      assertFalse(complex15.equals((Object)complex0));
      assertFalse(complex15.equals((Object)complex2));
      assertFalse(complex15.equals((Object)complex14));
      assertFalse(complex15.equals((Object)complex3));
      assertFalse(complex15.equals((Object)complex11));
      assertFalse(complex15.equals((Object)complex4));
      assertFalse(complex15.equals((Object)complex8));
      assertFalse(complex15.equals((Object)complex13));
      assertFalse(complex15.equals((Object)complex12));
      assertFalse(complex15.equals((Object)complex7));
      assertNotNull(complex15);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex14, complex9);
      assertNotSame(complex14, complex1);
      assertNotSame(complex14, complex10);
      assertNotSame(complex14, complex5);
      assertNotSame(complex14, complex0);
      assertNotSame(complex14, complex15);
      assertNotSame(complex14, complex3);
      assertNotSame(complex14, complex11);
      assertNotSame(complex14, complex2);
      assertNotSame(complex14, complex6);
      assertNotSame(complex14, complex7);
      assertNotSame(complex14, complex8);
      assertNotSame(complex14, complex13);
      assertNotSame(complex14, complex4);
      assertNotSame(complex14, complex12);
      assertNotSame(complex15, complex9);
      assertNotSame(complex15, complex10);
      assertNotSame(complex15, complex1);
      assertNotSame(complex15, complex5);
      assertNotSame(complex15, complex6);
      assertNotSame(complex15, complex0);
      assertNotSame(complex15, complex2);
      assertNotSame(complex15, complex14);
      assertNotSame(complex15, complex3);
      assertNotSame(complex15, complex11);
      assertNotSame(complex15, complex4);
      assertNotSame(complex15, complex8);
      assertNotSame(complex15, complex13);
      assertNotSame(complex15, complex12);
      assertNotSame(complex15, complex7);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex14.isNaN());
      assertFalse(complex14.isInfinite());
      assertEquals(0.0, complex14.getImaginary(), 0.01);
      assertEquals(0.0, complex14.getReal(), 0.01);
      assertEquals(0.8414709848078965, complex15.getReal(), 0.01);
      assertFalse(complex15.isNaN());
      assertEquals(0.0, complex15.getImaginary(), 0.01);
      assertFalse(complex15.isInfinite());
      
      Complex complex16 = complex10.add(1.0);
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex9));
      assertFalse(complex16.equals((Object)complex1));
      assertFalse(complex16.equals((Object)complex8));
      assertFalse(complex16.equals((Object)complex5));
      assertFalse(complex16.equals((Object)complex6));
      assertFalse(complex16.equals((Object)complex10));
      assertFalse(complex16.equals((Object)complex14));
      assertFalse(complex16.equals((Object)complex2));
      assertFalse(complex16.equals((Object)complex0));
      assertFalse(complex16.equals((Object)complex11));
      assertFalse(complex16.equals((Object)complex7));
      assertFalse(complex16.equals((Object)complex3));
      assertFalse(complex16.equals((Object)complex15));
      assertFalse(complex16.equals((Object)complex13));
      assertFalse(complex16.equals((Object)complex4));
      assertFalse(complex16.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex8));
      assertFalse(complex10.equals((Object)complex13));
      assertFalse(complex10.equals((Object)complex15));
      assertFalse(complex10.equals((Object)complex7));
      assertFalse(complex10.equals((Object)complex5));
      assertFalse(complex10.equals((Object)complex4));
      assertFalse(complex10.equals((Object)complex1));
      assertFalse(complex10.equals((Object)complex12));
      assertFalse(complex10.equals((Object)complex6));
      assertFalse(complex10.equals((Object)complex3));
      assertFalse(complex10.equals((Object)complex14));
      assertFalse(complex10.equals((Object)complex11));
      assertFalse(complex10.equals((Object)complex9));
      assertFalse(complex10.equals((Object)complex2));
      assertFalse(complex10.equals((Object)complex0));
      assertNotNull(complex16);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex16, complex9);
      assertNotSame(complex16, complex1);
      assertNotSame(complex16, complex8);
      assertNotSame(complex16, complex5);
      assertNotSame(complex16, complex6);
      assertNotSame(complex16, complex10);
      assertNotSame(complex16, complex14);
      assertNotSame(complex16, complex2);
      assertNotSame(complex16, complex0);
      assertNotSame(complex16, complex11);
      assertNotSame(complex16, complex7);
      assertNotSame(complex16, complex3);
      assertNotSame(complex16, complex15);
      assertNotSame(complex16, complex13);
      assertNotSame(complex16, complex4);
      assertNotSame(complex16, complex12);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertNotSame(complex10, complex16);
      assertNotSame(complex10, complex8);
      assertNotSame(complex10, complex13);
      assertNotSame(complex10, complex15);
      assertNotSame(complex10, complex7);
      assertNotSame(complex10, complex5);
      assertNotSame(complex10, complex4);
      assertNotSame(complex10, complex1);
      assertNotSame(complex10, complex12);
      assertNotSame(complex10, complex6);
      assertNotSame(complex10, complex3);
      assertNotSame(complex10, complex14);
      assertNotSame(complex10, complex11);
      assertNotSame(complex10, complex9);
      assertNotSame(complex10, complex2);
      assertNotSame(complex10, complex0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex16.isInfinite());
      assertEquals(0.0, complex16.getImaginary(), 0.01);
      assertEquals(1.8848338063392442, complex16.getReal(), 0.01);
      assertFalse(complex16.isNaN());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      assertEquals(0.8848338063392444, complex10.getReal(), 0.01);
      assertFalse(complex10.isInfinite());
      assertEquals(0.0, complex10.getImaginary(), 0.01);
      assertFalse(complex10.isNaN());
      
      Complex complex17 = complex9.asin();
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex12));
      assertFalse(complex17.equals((Object)complex1));
      assertFalse(complex17.equals((Object)complex4));
      assertFalse(complex17.equals((Object)complex2));
      assertFalse(complex17.equals((Object)complex10));
      assertFalse(complex17.equals((Object)complex14));
      assertFalse(complex17.equals((Object)complex0));
      assertFalse(complex17.equals((Object)complex9));
      assertFalse(complex17.equals((Object)complex11));
      assertFalse(complex17.equals((Object)complex5));
      assertFalse(complex17.equals((Object)complex6));
      assertFalse(complex17.equals((Object)complex15));
      assertFalse(complex17.equals((Object)complex3));
      assertFalse(complex17.equals((Object)complex7));
      assertFalse(complex17.equals((Object)complex16));
      assertFalse(complex17.equals((Object)complex8));
      assertFalse(complex17.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex15));
      assertFalse(complex9.equals((Object)complex7));
      assertFalse(complex9.equals((Object)complex13));
      assertFalse(complex9.equals((Object)complex11));
      assertFalse(complex9.equals((Object)complex4));
      assertFalse(complex9.equals((Object)complex3));
      assertFalse(complex9.equals((Object)complex5));
      assertFalse(complex9.equals((Object)complex16));
      assertFalse(complex9.equals((Object)complex1));
      assertFalse(complex9.equals((Object)complex12));
      assertFalse(complex9.equals((Object)complex14));
      assertFalse(complex9.equals((Object)complex6));
      assertFalse(complex9.equals((Object)complex2));
      assertFalse(complex9.equals((Object)complex0));
      assertFalse(complex9.equals((Object)complex10));
      assertFalse(complex9.equals((Object)complex8));
      assertNotNull(complex17);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex17, complex12);
      assertNotSame(complex17, complex1);
      assertNotSame(complex17, complex4);
      assertNotSame(complex17, complex2);
      assertNotSame(complex17, complex10);
      assertNotSame(complex17, complex14);
      assertNotSame(complex17, complex0);
      assertNotSame(complex17, complex9);
      assertNotSame(complex17, complex11);
      assertNotSame(complex17, complex5);
      assertNotSame(complex17, complex6);
      assertNotSame(complex17, complex15);
      assertNotSame(complex17, complex3);
      assertNotSame(complex17, complex7);
      assertNotSame(complex17, complex16);
      assertNotSame(complex17, complex8);
      assertNotSame(complex17, complex13);
      assertNotSame(complex9, complex15);
      assertNotSame(complex9, complex7);
      assertNotSame(complex9, complex13);
      assertNotSame(complex9, complex11);
      assertNotSame(complex9, complex4);
      assertNotSame(complex9, complex3);
      assertNotSame(complex9, complex5);
      assertNotSame(complex9, complex16);
      assertNotSame(complex9, complex1);
      assertNotSame(complex9, complex12);
      assertNotSame(complex9, complex14);
      assertNotSame(complex9, complex6);
      assertNotSame(complex9, complex2);
      assertNotSame(complex9, complex17);
      assertNotSame(complex9, complex0);
      assertNotSame(complex9, complex10);
      assertNotSame(complex9, complex8);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex17.isNaN());
      assertEquals((-0.6540730416200623), complex17.getImaginary(), 0.01);
      assertEquals(1.5707963267948966, complex17.getReal(), 0.01);
      assertFalse(complex17.isInfinite());
      assertFalse(complex9.isNaN());
      assertFalse(complex9.isInfinite());
      assertEquals(0.0, complex9.getImaginary(), 0.01);
      assertEquals(1.2216413021087646, complex9.getReal(), 0.01);
      
      ComplexField complexField2 = complex3.getField();
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex11));
      assertFalse(complex2.equals((Object)complex0));
      assertFalse(complex2.equals((Object)complex4));
      assertFalse(complex2.equals((Object)complex12));
      assertFalse(complex2.equals((Object)complex8));
      assertFalse(complex2.equals((Object)complex13));
      assertFalse(complex2.equals((Object)complex7));
      assertFalse(complex2.equals((Object)complex9));
      assertFalse(complex2.equals((Object)complex14));
      assertFalse(complex2.equals((Object)complex1));
      assertFalse(complex2.equals((Object)complex17));
      assertFalse(complex2.equals((Object)complex10));
      assertFalse(complex2.equals((Object)complex16));
      assertFalse(complex2.equals((Object)complex6));
      assertFalse(complex2.equals((Object)complex3));
      assertFalse(complex2.equals((Object)complex15));
      assertFalse(complex2.equals((Object)complex5));
      assertFalse(complex3.equals((Object)complex4));
      assertFalse(complex3.equals((Object)complex6));
      assertFalse(complex3.equals((Object)complex11));
      assertFalse(complex3.equals((Object)complex9));
      assertFalse(complex3.equals((Object)complex1));
      assertTrue(complex3.equals((Object)complex0));
      assertTrue(complex3.equals((Object)complex14));
      assertFalse(complex3.equals((Object)complex16));
      assertFalse(complex3.equals((Object)complex15));
      assertFalse(complex3.equals((Object)complex5));
      assertTrue(complex3.equals((Object)complex7));
      assertFalse(complex3.equals((Object)complex2));
      assertFalse(complex3.equals((Object)complex13));
      assertFalse(complex3.equals((Object)complex10));
      assertFalse(complex3.equals((Object)complex17));
      assertTrue(complex3.equals((Object)complex12));
      assertFalse(complex3.equals((Object)complex8));
      assertNotNull(complexField2);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex2, complex11);
      assertNotSame(complex2, complex0);
      assertNotSame(complex2, complex4);
      assertNotSame(complex2, complex12);
      assertNotSame(complex2, complex8);
      assertNotSame(complex2, complex13);
      assertNotSame(complex2, complex7);
      assertNotSame(complex2, complex9);
      assertNotSame(complex2, complex14);
      assertNotSame(complex2, complex1);
      assertNotSame(complex2, complex17);
      assertNotSame(complex2, complex10);
      assertNotSame(complex2, complex16);
      assertNotSame(complex2, complex6);
      assertNotSame(complex2, complex3);
      assertNotSame(complex2, complex15);
      assertNotSame(complex2, complex5);
      assertNotSame(complex3, complex4);
      assertNotSame(complex3, complex0);
      assertNotSame(complex3, complex6);
      assertNotSame(complex3, complex12);
      assertNotSame(complex3, complex11);
      assertNotSame(complex3, complex9);
      assertNotSame(complex3, complex1);
      assertNotSame(complex3, complex16);
      assertNotSame(complex3, complex15);
      assertNotSame(complex3, complex5);
      assertNotSame(complex3, complex2);
      assertNotSame(complex3, complex14);
      assertNotSame(complex3, complex13);
      assertNotSame(complex3, complex10);
      assertNotSame(complex3, complex17);
      assertNotSame(complex3, complex7);
      assertNotSame(complex3, complex8);
      assertSame(complexField2, complexField1);
      assertSame(complexField2, complexField0);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertFalse(complex2.isNaN());
      assertEquals(0.0, complex2.getImaginary(), 0.01);
      assertEquals(1.0, complex2.getReal(), 0.01);
      assertFalse(complex2.isInfinite());
      assertEquals(0.0, complex3.getImaginary(), 0.01);
      assertEquals(0.0, complex3.getReal(), 0.01);
      assertFalse(complex3.isNaN());
      assertFalse(complex3.isInfinite());
      
      Complex complex18 = complex0.reciprocal();
      assertTrue(complex0.equals((Object)complex14));
      assertFalse(complex0.equals((Object)complex1));
      assertFalse(complex0.equals((Object)complex4));
      assertTrue(complex0.equals((Object)complex12));
      assertFalse(complex0.equals((Object)complex13));
      assertFalse(complex0.equals((Object)complex15));
      assertTrue(complex0.equals((Object)complex7));
      assertFalse(complex0.equals((Object)complex8));
      assertFalse(complex0.equals((Object)complex16));
      assertTrue(complex0.equals((Object)complex3));
      assertFalse(complex0.equals((Object)complex10));
      assertFalse(complex0.equals((Object)complex17));
      assertFalse(complex0.equals((Object)complex5));
      assertFalse(complex0.equals((Object)complex6));
      assertFalse(complex0.equals((Object)complex2));
      assertFalse(complex0.equals((Object)complex11));
      assertFalse(complex0.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex2));
      assertFalse(complex18.equals((Object)complex10));
      assertFalse(complex18.equals((Object)complex14));
      assertFalse(complex18.equals((Object)complex16));
      assertFalse(complex18.equals((Object)complex1));
      assertFalse(complex18.equals((Object)complex17));
      assertFalse(complex18.equals((Object)complex7));
      assertFalse(complex18.equals((Object)complex12));
      assertFalse(complex18.equals((Object)complex13));
      assertFalse(complex18.equals((Object)complex0));
      assertFalse(complex18.equals((Object)complex4));
      assertFalse(complex18.equals((Object)complex9));
      assertFalse(complex18.equals((Object)complex11));
      assertFalse(complex18.equals((Object)complex5));
      assertFalse(complex18.equals((Object)complex6));
      assertFalse(complex18.equals((Object)complex15));
      assertFalse(complex18.equals((Object)complex3));
      assertNotNull(complex18);
      assertNotSame(complex0, complex12);
      assertNotSame(complex0, complex1);
      assertNotSame(complex0, complex4);
      assertNotSame(complex0, complex13);
      assertNotSame(complex0, complex15);
      assertNotSame(complex0, complex7);
      assertNotSame(complex0, complex8);
      assertNotSame(complex0, complex16);
      assertNotSame(complex0, complex10);
      assertNotSame(complex0, complex14);
      assertNotSame(complex0, complex17);
      assertNotSame(complex0, complex3);
      assertNotSame(complex0, complex5);
      assertNotSame(complex0, complex6);
      assertNotSame(complex0, complex18);
      assertNotSame(complex0, complex2);
      assertNotSame(complex0, complex11);
      assertNotSame(complex0, complex9);
      assertNotSame(complex18, complex2);
      assertNotSame(complex18, complex10);
      assertNotSame(complex18, complex14);
      assertSame(complex18, complex8);
      assertNotSame(complex18, complex16);
      assertNotSame(complex18, complex1);
      assertNotSame(complex18, complex17);
      assertNotSame(complex18, complex7);
      assertNotSame(complex18, complex12);
      assertNotSame(complex18, complex13);
      assertNotSame(complex18, complex0);
      assertNotSame(complex18, complex4);
      assertNotSame(complex18, complex9);
      assertNotSame(complex18, complex11);
      assertNotSame(complex18, complex5);
      assertNotSame(complex18, complex6);
      assertNotSame(complex18, complex15);
      assertNotSame(complex18, complex3);
      assertEquals(0.0, complex0.getImaginary(), 0.01);
      assertFalse(complex0.isNaN());
      assertFalse(complex0.isInfinite());
      assertEquals(0.0, complex0.getReal(), 0.01);
      assertEquals(Double.NaN, complex18.getReal(), 0.01);
      assertTrue(complex18.isNaN());
      assertEquals(Double.NaN, complex18.getImaginary(), 0.01);
      assertFalse(complex18.isInfinite());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      Complex complex0 = Complex.valueOf((-2216.889));
      Complex complex1 = complex0.INF.tanh();
      Complex complex2 = complex0.I.exp();
      Complex complex3 = complex0.ZERO.conjugate();
      Complex complex4 = complex3.atan();
      Complex complex5 = complex3.I.multiply(3.8331545111676784E-249);
      Object object0 = complex0.readResolve();
      Complex complex6 = complex0.NaN.divide(complex5);
      Complex complex7 = complex6.I.tanh();
      assertEquals(0.0, complex7.getReal(), 0.01);
      assertEquals(1.557407724654902, complex7.getImaginary(), 0.01);
      
      Complex complex8 = complex4.ONE.atan();
      assertEquals(0.7853981633974483, complex8.getReal(), 0.01);
      
      complex4.abs();
      complex1.equals(complex4);
      Complex complex9 = complex5.sin();
      Complex complex10 = complex9.ZERO.tan();
      Complex complex11 = complex4.divide(complex9);
      Complex complex12 = complex11.NaN.subtract(0.0);
      Complex complex13 = complex3.pow(complex10);
      Object object1 = complex13.readResolve();
      assertEquals(0.0, complex10.getReal(), 0.01);
      assertTrue(object1.equals((Object)complex12));
      
      complex9.readResolve();
      Complex complex14 = complex5.multiply(complex2);
      assertEquals(2.0710622211327588E-249, complex14.getImaginary(), 0.01);
      assertEquals((-3.2254883014330976E-249), complex14.getReal(), 0.01);
      
      Complex complex15 = complex2.log();
      Complex complex16 = complex15.ONE.exp();
      assertEquals(2.718281828459045, complex16.getReal(), 0.01);
      
      Complex complex17 = complex11.multiply(3.8331545111676784E-249);
      Complex complex18 = complex17.add(complex9);
      List<Complex> list0 = complex18.INF.nthRoot(17);
      assertEquals(1, list0.size());
      assertTrue(complex11.equals((Object)complex10));
      
      Complex complex19 = complex5.sqrt();
      assertEquals(0.0, complex5.getReal(), 0.01);
      assertTrue(complex5.equals((Object)complex9));
      assertEquals(4.377873063011123E-125, complex19.getReal(), 0.01);
      
      complex0.multiply(1763);
      assertTrue(complex0.equals((Object)object0));
  }
}
